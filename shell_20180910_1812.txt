Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:06:47) [MSC v.1914 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> TG_dist_counts = [ TG_dist[gram] for grams in TG_dist ]
Traceback (most recent call last):
  File "<pyshell#0>", line 1, in <module>
    TG_dist_counts = [ TG_dist[gram] for grams in TG_dist ]
  File "<pyshell#0>", line 1, in <listcomp>
    TG_dist_counts = [ TG_dist[gram] for grams in TG_dist ]
NameError: name 'gram' is not defined
>>> TG_dist_counts = [ TG_dist[gram] for gram in TG_dist ]
>>> TG_dist_counts[:10]
[2, 1, 1, 1, 1, 1, 1, 1, 1, 3]
>>> TG_counts_dist = FreqDist(TG_dist_counts)
>>> TG_counts_dist
FreqDist({1: 117770, 2: 10415, 3: 3414, 4: 1518, 5: 885, 6: 549, 7: 352, 8: 277, 9: 244, 10: 161, ...})
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> TG_counts_dist
FreqDist({1: 117770, 2: 10415, 3: 3414, 4: 1518, 5: 885, 6: 549, 7: 352, 8: 277, 9: 244, 10: 161, ...})
>>> len(TG_counts_dist)
119
>>> FreqDist.plot()
Traceback (most recent call last):
  File "<pyshell#7>", line 1, in <module>
    FreqDist.plot()
TypeError: plot() missing 1 required positional argument: 'self'
>>> TG_counts_dist.plot()
>>> import math
>>> TG_counts_dist_log = [ (count, log(TG_counts_dist),)
			   for count in TG_counts_dist ]
Traceback (most recent call last):
  File "<pyshell#11>", line 2, in <module>
    for count in TG_counts_dist ]
  File "<pyshell#11>", line 2, in <listcomp>
    for count in TG_counts_dist ]
NameError: name 'log' is not defined
>>> from math import log
>>> TG_counts_dist_log = [ (count, log(TG_counts_dist),)
			   for count in TG_counts_dist ]
Traceback (most recent call last):
  File "<pyshell#13>", line 2, in <module>
    for count in TG_counts_dist ]
  File "<pyshell#13>", line 2, in <listcomp>
    for count in TG_counts_dist ]
TypeError: must be real number, not FreqDist
>>> TG_counts_dist_log = [ (count, log(TG_counts_dist[count]),)
			   for count in TG_counts_dist ]
>>> import * from matplotlib.pyplot
SyntaxError: invalid syntax
>>> from matplotlib.pyplot import *
>>> scatter(*zip(*TG_counts_dist_log)
	    )
<matplotlib.collections.PathCollection object at 0x1B15EA90>
>>> show()
>>> TG_counts_dist_log_small = [ (count, log(TG_counts_dist[count]),)
			   for count in TG_counts_dist
				 if count < 100 ]
>>> scatter(*zip(*TG_counts_dist_log_small))
<matplotlib.collections.PathCollection object at 0x1B158DF0>
>>> show()
>>> TG_counts_dist_log_log_small = [ (count, log(log(TG_counts_dist[count])),)
			   for count in TG_counts_dist
				 if count < 100 ]
Traceback (most recent call last):
  File "<pyshell#24>", line 2, in <module>
    for count in TG_counts_dist
  File "<pyshell#24>", line 3, in <listcomp>
    if count < 100 ]
ValueError: math domain error
>>> TG_counts_dist_log_small[:10]
[(2, 9.251002353695073), (1, 11.676488848835595), (3, 8.135639903354386), (4, 7.325148957955575), (55, 1.6094379124341003), (43, 1.791759469228055), (7, 5.863631175598097), (5, 6.785587645007929), (49, 1.791759469228055), (94, 1.0986122886681098)]
>>> log(TG_counts_dist_log_small[[0][1])
	
SyntaxError: invalid syntax
>>> log(TG_counts_dist_log_small[0][1])
	
2.224731908215165
>>> TG_counts_dist_log_log_small = [ (count, log(log(TG_counts_dist[count])),)
				     for count in TG_counts_distif count < 100 ]
	
SyntaxError: invalid syntax
>>> TG_counts_dist_log_log_small = [ (count, log(log(TG_counts_dist[count])),)
				     for count in TG_counts_distif count < 100 ]
	
SyntaxError: invalid syntax
>>> TG_counts_dist_log_log_small = [ (count, log(log(TG_counts_dist[count])),)
				     for count in TG_counts_dist if count < 100 ]
	
Traceback (most recent call last):
  File "<pyshell#30>", line 2, in <module>
    for count in TG_counts_dist if count < 100 ]
  File "<pyshell#30>", line 2, in <listcomp>
    for count in TG_counts_dist if count < 100 ]
ValueError: math domain error
>>> TG_counts_dist_log_log_small = [ (count, log(log(TG_counts_dist[count])),)
				     for count in TG_counts_dist
				     if count < 100 ]
Traceback (most recent call last):
  File "<pyshell#32>", line 2, in <module>
    for count in TG_counts_dist
  File "<pyshell#32>", line 3, in <listcomp>
    if count < 100 ]
ValueError: math domain error
>>> TG_counts_dist_log_log_small = [ (count, log(log(TG_counts_dist[count])),) for count in TG_counts_dist if count < 100 ]
Traceback (most recent call last):
  File "<pyshell#33>", line 1, in <module>
    TG_counts_dist_log_log_small = [ (count, log(log(TG_counts_dist[count])),) for count in TG_counts_dist if count < 100 ]
  File "<pyshell#33>", line 1, in <listcomp>
    TG_counts_dist_log_log_small = [ (count, log(log(TG_counts_dist[count])),) for count in TG_counts_dist if count < 100 ]
ValueError: math domain error
>>> TG_counts_dist[1]
117770
>>> log(TG_counts_dist[1])
11.676488848835595
>>> log(log(TG_counts_dist[1]))
2.4575773199499324
>>> (1, log(log(TG_counts_dist[1])),)
(1, 2.4575773199499324)
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 30, in <module>
    for count in TG_counts_dist
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 31, in <listcomp>
    if count < 100 ]
NameError: name 'log' is not defined
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 28, in <module>
    from matplotlib.pyplot import log
ImportError: cannot import name 'log' from 'matplotlib.pyplot' (C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\pyplot.py)
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 30, in <module>
    for count in TG_counts_dist
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 31, in <listcomp>
    if count < 100 ]
NameError: name 'log' is not defined
>>> from matplotlib.pyplot import *
>>> log(log(TG_counts_dist[1]))
Traceback (most recent call last):
  File "<pyshell#39>", line 1, in <module>
    log(log(TG_counts_dist[1]))
NameError: name 'log' is not defined
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 35, in <module>
    for count in TG_counts_dist
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 36, in <listcomp>
    if count < 100 ]
ValueError: math domain error
>>> ll = [ count, log(log(logN)) for log, logN in TG_counts_dist_log_small ]
SyntaxError: invalid syntax
>>> ll = [ (count, log(log(logN)), ) for log, logN in TG_counts_dist_log_small ]
Traceback (most recent call last):
  File "<pyshell#41>", line 1, in <module>
    ll = [ (count, log(log(logN)), ) for log, logN in TG_counts_dist_log_small ]
  File "<pyshell#41>", line 1, in <listcomp>
    ll = [ (count, log(log(logN)), ) for log, logN in TG_counts_dist_log_small ]
NameError: name 'count' is not defined
>>> ll = [ (count, log(log(logN)), ) for count, logN in TG_counts_dist_log_small ]
Traceback (most recent call last):
  File "<pyshell#42>", line 1, in <module>
    ll = [ (count, log(log(logN)), ) for count, logN in TG_counts_dist_log_small ]
  File "<pyshell#42>", line 1, in <listcomp>
    ll = [ (count, log(log(logN)), ) for count, logN in TG_counts_dist_log_small ]
ValueError: math domain error
>>> ll = [ (count, log(logN), ) for count, logN in TG_counts_dist_log_small ]
Traceback (most recent call last):
  File "<pyshell#43>", line 1, in <module>
    ll = [ (count, log(logN), ) for count, logN in TG_counts_dist_log_small ]
  File "<pyshell#43>", line 1, in <listcomp>
    ll = [ (count, log(logN), ) for count, logN in TG_counts_dist_log_small ]
ValueError: math domain error
>>> TG_counts_dist_log_small[:5]
[(2, 9.251002353695073), (1, 11.676488848835595), (3, 8.135639903354386), (4, 7.325148957955575), (55, 1.6094379124341003)]
>>> for count, logN in TG_counts_dist_log_small:
	if count < 10:
		print(count, logN)

		
2 9.251002353695073
1 11.676488848835595
3 8.135639903354386
4 7.325148957955575
7 5.863631175598097
5 6.785587645007929
6 6.3080984415095305
8 5.6240175061873385
9 5.497168225293202
>>> for count, logN in TG_counts_dist_log_small:
	if count < 10:
		print(count, logN, log(logN))

		
2 9.251002353695073 2.224731908215165
1 11.676488848835595 2.4575773199499324
3 8.135639903354386 2.0962543981003976
4 7.325148957955575 1.9913134902534415
7 5.863631175598097 1.768769066221245
5 6.785587645007929 1.9148008989701926
6 6.3080984415095305 1.8418342747985421
8 5.6240175061873385 1.7270462672679818
9 5.497168225293202 1.7042330915198087
>>> for count, n in TG_counts_dist:
	if count < 10:
		logN = log(n)
		print(count, n, logN, log(logN))

		
Traceback (most recent call last):
  File "<pyshell#52>", line 1, in <module>
    for count, n in TG_counts_dist:
TypeError: cannot unpack non-iterable int object
>>> for count, n in TG_dist_counts:
	if count < 10:
		logN = log(n)
		print(count, n, logN, log(logN))

		
Traceback (most recent call last):
  File "<pyshell#54>", line 1, in <module>
    for count, n in TG_dist_counts:
TypeError: cannot unpack non-iterable int object
>>> for count in TG_counts_dist:
	n = TG_counts_dist[count]
	if count < 10:
		logN = log(n)
		print(count, n, logN, log(logN))

		
2 10415 9.251002353695073 2.224731908215165
1 117770 11.676488848835595 2.4575773199499324
3 3414 8.135639903354386 2.0962543981003976
4 1518 7.325148957955575 1.9913134902534415
7 352 5.863631175598097 1.768769066221245
5 885 6.785587645007929 1.9148008989701926
6 549 6.3080984415095305 1.8418342747985421
8 277 5.6240175061873385 1.7270462672679818
9 244 5.497168225293202 1.7042330915198087
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> scatter(*zip(*TG_counts_dist_log_log_small))
Traceback (most recent call last):
  File "<pyshell#57>", line 1, in <module>
    scatter(*zip(*TG_counts_dist_log_log_small))
TypeError: zip argument #1 must support iteration
>>> len(TG_counts_dist_log_log_small)
18
>>> TG_counts_dist_log_log_small
[2, 2.224731908215165, 1, 2.4575773199499324, 3, 2.0962543981003976, 4, 1.9913134902534415, 7, 1.768769066221245, 5, 1.9148008989701926, 6, 1.8418342747985421, 8, 1.7270462672679818, 9, 1.7042330915198087]
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> scatter(*zip(*TG_counts_dist_log_log_small))
<matplotlib.collections.PathCollection object at 0x1B348BD0>
>>> show()
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 45, in <module>
    TG_counts_dist_log_log_small += [ (count, log(logN), ) ]
ValueError: math domain error
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 45, in <module>
    TG_counts_dist_log_log_large += [ (count, log(logN), ) ]
ValueError: math domain error
>>> TG_counts_dist_log_small
[(2, 9.251002353695073), (1, 11.676488848835595), (3, 8.135639903354386), (4, 7.325148957955575), (55, 1.6094379124341003), (43, 1.791759469228055), (7, 5.863631175598097), (5, 6.785587645007929), (49, 1.791759469228055), (94, 1.0986122886681098), (20, 3.2188758248682006), (6, 6.3080984415095305), (80, 0.0), (16, 3.784189633918261), (8, 5.6240175061873385), (30, 2.6390573296152584), (13, 4.465908118654584), (25, 3.091042453358316), (36, 1.6094379124341003), (9, 5.497168225293202), (44, 1.3862943611198906), (60, 1.3862943611198906), (19, 3.2188758248682006), (15, 3.871201010907891), (42, 0.6931471805599453), (79, 0.0), (11, 4.919980925828125), (47, 1.0986122886681098), (88, 0.6931471805599453), (10, 5.081404364984463), (27, 2.833213344056216), (89, 0.0), (48, 1.6094379124341003), (14, 4.143134726391533), (17, 3.6375861597263857), (21, 3.2188758248682006), (33, 2.1972245773362196), (39, 2.3978952727983707), (29, 2.5649493574615367), (22, 3.4965075614664802), (18, 3.713572066704308), (93, 0.0), (67, 1.0986122886681098), (12, 4.59511985013459), (56, 1.0986122886681098), (78, 1.0986122886681098), (26, 2.9444389791664403), (31, 2.6390573296152584), (35, 1.9459101490553132), (46, 1.6094379124341003), (54, 0.6931471805599453), (63, 0.0), (23, 3.1354942159291497), (57, 0.0), (38, 1.9459101490553132), (41, 1.3862943611198906), (87, 0.0), (51, 1.791759469228055), (37, 1.791759469228055), (28, 2.1972245773362196), (24, 2.6390573296152584), (32, 2.1972245773362196), (90, 0.0), (71, 0.0), (72, 0.0), (62, 1.0986122886681098), (34, 1.791759469228055), (61, 0.0), (45, 1.0986122886681098), (74, 0.0), (81, 0.0), (40, 1.6094379124341003), (50, 1.0986122886681098), (96, 0.0), (97, 0.6931471805599453), (53, 0.0), (58, 0.6931471805599453), (69, 0.0), (66, 0.0), (86, 0.0), (99, 0.0), (83, 0.0), (77, 0.0), (91, 0.0), (65, 0.0), (52, 1.0986122886681098)]
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py", line 45, in <module>
    TG_counts_dist_log_log_many += [ (count, log(logN), ) ]
ValueError: math domain error
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> scatter(*zip(*TG_counts_dist_log_log_many))
<matplotlib.collections.PathCollection object at 0x1A94FE50>
>>> show()
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> scatter(*zip(*TG_counts_dist_log_log_many))
<matplotlib.collections.PathCollection object at 0x1ADCFDF0>
>>> show()
>>> 
=========== RESTART: C:\Users\Alice\NLP\NLP-NLTK\nltk_init_emma.py ===========
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> scatter(*zip(*TG_counts_dist_log_many))
<matplotlib.collections.PathCollection object at 0x1B737C50>
>>> show()
>>> scatter(*zip(*TG_counts_dist_log_many))
<matplotlib.collections.PathCollection object at 0x1B74B6D0>
>>> title("Emma -Log trigram counts distribution, N > 9")
Text(0.5,1,'Emma -Log trigram counts distribution, N > 9')
>>> show()
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> TG_counts_dist_log_log = [ (log(count), log(TG_count_dist[count)), )
			       
SyntaxError: invalid syntax
>>> TG_counts_dist_log_log = [ (log(count), log(TG_count_dist[count]), )
			       for count in TG_counts_dist ]
			       
Traceback (most recent call last):
  File "<pyshell#74>", line 2, in <module>
    for count in TG_counts_dist ]
  File "<pyshell#74>", line 2, in <listcomp>
    for count in TG_counts_dist ]
NameError: name 'TG_count_dist' is not defined
>>> TG_counts_dist_log_log = [ (log(count), log(TG_counts_dist[count]), )
			       for count in TG_counts_dist ]
>>> scatter(*zip(*TG_counts_dist_log_log))
<matplotlib.collections.PathCollection object at 0x1B4F3950>
>>> title("Emma - Log-log trigram counts distribution")
Text(0.5,1,'Emma - Log-log trigram counts distribution')
>>> xlabel("Log c")
Text(0.5,0,'Log c')
>>> ylabel("Log Nc")
Text(0,0.5,'Log Nc')
>>> show()
>>> c, nc = zip(*TG_counts_dist_log_log_many)
>>> c[:10]
(0.6931471805599453, 0.0, 1.0986122886681098, 1.3862943611198906, 1.9459101490553132, 1.6094379124341003, 2.995732273553991, 1.791759469228055, 2.772588722239781, 2.0794415416798357)
>>> nc[:10]
(9.251002353695073, 11.676488848835595, 8.135639903354386, 7.325148957955575, 5.863631175598097, 6.785587645007929, 3.2188758248682006, 6.3080984415095305, 3.784189633918261, 5.6240175061873385)
>>> from scipy.stats import linregress
>>> a, b, r_value, p_value, std_err = stats.linregress(c, nc)
Traceback (most recent call last):
  File "<pyshell#85>", line 1, in <module>
    a, b, r_value, p_value, std_err = stats.linregress(c, nc)
NameError: name 'stats' is not defined
>>> a, b, r_value, p_value, std_err = linregress(c, nc)
>>> plot(c, nc, 'o', label="(log c, log Nc)")
[<matplotlib.lines.Line2D object at 0x1B4E8B30>]
>>> plot(c, b + (a * nc), 'r', label='linear fit')
Traceback (most recent call last):
  File "<pyshell#88>", line 1, in <module>
    plot(c, b + (a * nc), 'r', label='linear fit')
TypeError: can't multiply sequence by non-int of type 'numpy.float64'
>>> c=list(c)
>>> nc=list(nc)
>>> plot(c, b + (a * nc), 'r', label='linear fit')
Traceback (most recent call last):
  File "<pyshell#91>", line 1, in <module>
    plot(c, b + (a * nc), 'r', label='linear fit')
TypeError: can't multiply sequence by non-int of type 'numpy.float64'
>>> b
10.963367218842357
>>> a
-2.513888826408993
>>> a*nc
Traceback (most recent call last):
  File "<pyshell#94>", line 1, in <module>
    a*nc
TypeError: can't multiply sequence by non-int of type 'numpy.float64'
>>> type(nc[0])
<class 'float'>
>>> type a
SyntaxError: invalid syntax
>>> type(a)
<class 'numpy.float64'>
>>> a*nc[0]
-23.25599145003734
>>> *nc
SyntaxError: can't use starred expression here
>>> nc[:10]
[9.251002353695073, 11.676488848835595, 8.135639903354386, 7.325148957955575, 5.863631175598097, 6.785587645007929, 3.2188758248682006, 6.3080984415095305, 3.784189633918261, 5.6240175061873385]
>>> plot(c, b + a*nc, 'r', label='linear fit')
Traceback (most recent call last):
  File "<pyshell#101>", line 1, in <module>
    plot(c, b + a*nc, 'r', label='linear fit')
TypeError: can't multiply sequence by non-int of type 'numpy.float64'
>>> af = float(a)
>>> af
-2.513888826408993
>>> a
-2.513888826408993
>>> plot(c, b + float(a)*nc, 'r', label='linear fit')
Traceback (most recent call last):
  File "<pyshell#105>", line 1, in <module>
    plot(c, b + float(a)*nc, 'r', label='linear fit')
TypeError: can't multiply sequence by non-int of type 'float'
>>> a*(*nc)
SyntaxError: can't use starred expression here
>>> nc[-10:]
[3.2188758248682006, 2.3978952727983707, 2.5649493574615367, 3.4965075614664802, 3.713572066704308, 4.59511985013459, 2.9444389791664403, 2.6390573296152584, 3.1354942159291497, 2.6390573296152584]
>>> math.max(nc)
Traceback (most recent call last):
  File "<pyshell#108>", line 1, in <module>
    math.max(nc)
NameError: name 'math' is not defined
>>> nc.max()
Traceback (most recent call last):
  File "<pyshell#109>", line 1, in <module>
    nc.max()
AttributeError: 'list' object has no attribute 'max'
>>> max(nc)
11.676488848835595
>>> min(nc)
2.3978952727983707
>>> len(nc)
31
>>> min(nc) + 0.01 * range(int(max(nc)*100))
Traceback (most recent call last):
  File "<pyshell#113>", line 1, in <module>
    min(nc) + 0.01 * range(int(max(nc)*100))
TypeError: unsupported operand type(s) for *: 'float' and 'range'
>>> min(nc) + 0.01 * list(range(int(max(nc)*100)))
Traceback (most recent call last):
  File "<pyshell#114>", line 1, in <module>
    min(nc) + 0.01 * list(range(int(max(nc)*100)))
TypeError: can't multiply sequence by non-int of type 'float'
>>> [ (x, b + a * float(x),) for x in c ]
[(0.6931471805599453, 9.220872266575814), (0.0, 10.963367218842357), (1.0986122886681098, 8.201578061803986), (1.3862943611198906, 7.478377314309271), (1.9459101490553132, 6.071565437936347), (1.6094379124341003, 6.917419233975258), (2.995732273553991, 3.4324293294421713), (1.791759469228055, 6.459083109537442), (2.772588722239781, 3.993387409776185), (2.0794415416798357, 5.735882362042728), (3.4011973816621555, 2.413135124670342), (2.5649493574615367, 4.515369688814874), (3.2188758248682006, 2.8714712491081578), (2.1972245773362196, 5.439788904765613), (2.9444389791664403, 3.561374969072742), (2.70805020110221, 4.155630076936886), (2.3978952727983707, 4.93532508565559), (2.302585092994046, 5.174924281708714), (3.295836866004329, 2.6779997477272417), (2.6390573296152584, 4.329070485669805), (2.833213344056216, 3.8409838503865776), (3.044522437723423, 3.3097762808979754), (3.6635616461296463, 1.7535805317765032), (3.367295829986474, 2.4983598566257648), (3.091042453358316, 3.1928301333890463), (2.8903717578961645, 3.697293952499071), (2.4849066497880004, 4.716588157270899), (3.258096538021482, 2.7728747365483315), (3.4339872044851463, 2.3307051554556946), (3.1354942159291497, 3.081083344148042), (3.1780538303479458, 2.9740932050043556)]
>>> estimated = [ (x, b + a * float(x),) for x in c ]
>>> nc_estimated = [ b + a * float(x) for x in c ]
>>> plot(c, nc_estimated, 'r', label='Fitted line')
[<matplotlib.lines.Line2D object at 0x1B4FCAD0>]
>>> legend()
<matplotlib.legend.Legend object at 0x1B4FCAB0>
>>> show()
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 38, in <module>
    nc_estimated = [ b + a * float(x) for x in c ]
NameError: name 'c' is not defined
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> a
-2.513888826408993
>>> b
10.963367218842357
>>> r_value**2
0.986739017871126
>>> p_value
8.852300518780468e-29
>>> std_err
0.05411700617329989
>>> type(a)
<class 'numpy.float64'>
>>> type(b)
<class 'numpy.float64'>
>>> type logc[0]
SyntaxError: invalid syntax
>>> type log_c[0]
SyntaxError: invalid syntax
>>> log_c[:10]
(0.6931471805599453, 0.0, 1.0986122886681098, 1.3862943611198906, 1.9459101490553132, 1.6094379124341003, 2.995732273553991, 1.791759469228055, 2.772588722239781, 2.0794415416798357)
>>> log_c[0]
0.6931471805599453
>>> type(log_c[0])
<class 'float'>
>>> est = [ b * a * x for x in log_c ]
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> TG_counts_dist[:10]
Traceback (most recent call last):
  File "<pyshell#134>", line 1, in <module>
    TG_counts_dist[:10]
TypeError: unhashable type: 'slice'
>>> TG_counts_dist
FreqDist({1: 117770, 2: 10415, 3: 3414, 4: 1518, 5: 885, 6: 549, 7: 352, 8: 277, 9: 244, 10: 161, ...})
>>> [count for count in range(20] if count in TG_counts_dist ]
SyntaxError: invalid syntax
>>> [count for count in range(20) if count in TG_counts_dist ]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
>>> [count for count in range(50) if count not in TG_counts_dist ]
[0]
>>> [count for count in range(100) if count not in TG_counts_dist ]
[0, 59, 64, 68, 70, 73, 75, 76, 82, 84, 85, 92, 95, 98]
>>> [ TG_dist[gram] for gram in TG_dist if TG_dist(gram) == 0 ]
Traceback (most recent call last):
  File "<pyshell#140>", line 1, in <module>
    [ TG_dist[gram] for gram in TG_dist if TG_dist(gram) == 0 ]
  File "<pyshell#140>", line 1, in <listcomp>
    [ TG_dist[gram] for gram in TG_dist if TG_dist(gram) == 0 ]
TypeError: 'FreqDist' object is not callable
>>> [ TG_dist[gram] for gram in TG_dist if TG_dist[gram] == 0 ]
[]
>>> c = [ exp(lc) for lc in log_c ]
Traceback (most recent call last):
  File "<pyshell#142>", line 1, in <module>
    c = [ exp(lc) for lc in log_c ]
  File "<pyshell#142>", line 1, in <listcomp>
    c = [ exp(lc) for lc in log_c ]
NameError: name 'exp' is not defined
>>> from math import exp
>>> c = [ exp(lc) for lc in log_c ]
>>> c[:10]
[2.0, 1.0, 3.0000000000000004, 4.0, 6.999999999999999, 4.999999999999999, 19.999999999999996, 6.0, 15.999999999999998, 7.999999999999998]
>>> from math import round
Traceback (most recent call last):
  File "<pyshell#146>", line 1, in <module>
    from math import round
ImportError: cannot import name 'round' from 'math' (unknown location)
>>> round(3.2)
3
>>> round(3.5)
4
>>> c = [ round(exp(lc)) for lc in log_c ]
>>> c[:10]
[2, 1, 3, 4, 7, 5, 20, 6, 16, 8]
>>> log_c[:10]
(0.6931471805599453, 0.0, 1.0986122886681098, 1.3862943611198906, 1.9459101490553132, 1.6094379124341003, 2.995732273553991, 1.791759469228055, 2.772588722239781, 2.0794415416798357)
>>> TG_counts_dist[58:60]
Traceback (most recent call last):
  File "<pyshell#152>", line 1, in <module>
    TG_counts_dist[58:60]
TypeError: unhashable type: 'slice'
>>> [ TG_counts_dist[count] for count in range(57,65) ]
[1, 2, 0, 4, 1, 3, 1, 0]
>>> [ ( count, TG_counts_dist[count], ) for count in range(57,66) ]
[(57, 1), (58, 2), (59, 0), (60, 4), (61, 1), (62, 3), (63, 1), (64, 0), (65, 1)]
>>> c[:10]
[2, 1, 3, 4, 7, 5, 20, 6, 16, 8]
>>> log_c[:10]
(0.6931471805599453, 0.0, 1.0986122886681098, 1.3862943611198906, 1.9459101490553132, 1.6094379124341003, 2.995732273553991, 1.791759469228055, 2.772588722239781, 2.0794415416798357)
>>> exp(4.0)
54.598150033144236
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 39, in <module>
    c_star = (c + 1) * (n_c_plus_one / n_c)
NameError: name 'c' is not defined
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 37, in <module>
    log_n_c_plus_one = b + a * (log(ccount + 1))   # estimate Nc+1
NameError: name 'ccount' is not defined
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 38, in <module>
    n_c_plus_one = rount(exp(log_n_c_plus_one))
NameError: name 'rount' is not defined
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 38, in <module>
    n_c_plus_one = round(exp(log_n_c_plus_one))
NameError: name 'exp' is not defined
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> TG_dist_GT[:10]
[(('', '', '['), 0.983389342294767), (('', '[', 'Emma'), 0.17687017067164812), (('[', 'Emma', 'by'), 0.17687017067164812), (('Emma', 'by', 'Jane'), 0.17687017067164812), (('by', 'Jane', 'Austen'), 0.17687017067164812), (('Jane', 'Austen', '1816'), 0.17687017067164812), (('Austen', '1816', ']'), 0.17687017067164812), (('1816', ']', ''), 0.17687017067164812), ((']', '', ''), 0.17687017067164812), (('', '', 'VOLUME'), 1.7785588752196837)]
>>> TG_dist
FreqDist({('.', '', ''): 5143, ('', '', '"'): 1555, ('."', '', ''): 1157, ('', '', 'I'): 650, ('!', '', ''): 549, ('', '', 'She'): 460, ('', '', 'He'): 358, ('', '', 'It'): 295, ('', '', 'The'): 289, ('Mr', '.', 'Knightley'): 277, ...})
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
>>> TG_c_c_star[:10]
[(2, 0.983389342294767), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (3, 1.7785588752196837)]
>>> TG_c_c_star[-10:]
[(1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812)]
>>> TG_counts_dist[1]
117770
>>> TG_counts_dist.sum()
Traceback (most recent call last):
  File "<pyshell#163>", line 1, in <module>
    TG_counts_dist.sum()
AttributeError: 'FreqDist' object has no attribute 'sum'
>>> sum(TG_counts_dist)
18393
>>> len(trigrams)
207988
>>> sum([ count for count in TG_dist ])
Traceback (most recent call last):
  File "<pyshell#166>", line 1, in <module>
    sum([ count for count in TG_dist ])
TypeError: unsupported operand type(s) for +: 'int' and 'tuple'
>>> sum([ TG_dist[count] for count in TG_dist ])
207988
>>> sum([ TG_dist[count] for count in TG_dist if count == 1])
0
>>> sum([ TG_dist[count] for count in TG_dist if TG_dist[count] == 1])
117770
>>> 117770.0 / 207988.0
0.5662345904571418
>>> sum([ TG_counts_dist[count] for count in TG_counts_dist ])
136599
>>> sum([ count * TG_counts_dist[count] for count in TG_counts_dist ])
207988
>>> len(trigrams)
207988
>>> sum([ count * TG_counts_dist[count] for count in TG_counts_dist ])
207988
>>> sum([ TG_dist[count] for count in TG_dist ])
207988
>>> [ gram for gram in TG_dist][:10]
[('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME')]
>>> sum([ TG_dist[gram] for gram in TG_dist])
207988
>>> sum([ count * TG_counts_dist[count] for count in TG_counts_dist ])
207988
>>> len(trigrams)
207988
>>> sum([ TG_dist[count] for count in TG_dist if TG_dist[count] == 1])
117770
>>> TG_counts_dist[1]
117770
>>> sum([c_star for gram, c_start in TG_dist_GT])
24160.288443553753
>>> sum([ TG_dist[gram] for gram in TG_dist if TG_dist[gram] == 1])
117770
>>> sum([ TG_dist[gram] for gram in TG_dist])
207988
>>> sum([ count * TG_counts_dist[count] for count in TG_counts_dist ])
207988
>>> len(trigrams)
207988
>>> sum([c_star for gram, c_start in TG_dist_GT])
24160.288443553753
>>> sum([ TG_dist[count] for count in TG_dist if TG_dist[count] == 1])
117770
>>> sum([ TG_dist[gram] for gram in TG_dist])
207988
>>> TG_counts_dist[1]
117770
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> len(words)
192427
>>> len(words)++3
192430
>>> len(words)**3
7125215883358483
>>> len(TG_dist_GT)
136599
>>> len(TG_counts_dist)
119
>>> TG_dist_DT_d = dict(TG_dist_GT)
>>> c_pairs = [ (TG_counts_dist[count], TG_dist_TG_d[count], }
		
SyntaxError: invalid syntax
>>> c_pairs = [ (TG_counts_dist[count], TG_dist_TG_d[count], } for coun
		
SyntaxError: invalid syntax
>>> c_pairs = [ (TG_counts_dist[count], TG_dist_TG_d[count], } for count in TG_counts_dist ]
		
SyntaxError: invalid syntax
>>> c_pairs = [ (TG_counts_dist[count], TG_dist_TG_d[count], ) for count in TG_counts_dist ]
		
Traceback (most recent call last):
  File "<pyshell#200>", line 1, in <module>
    c_pairs = [ (TG_counts_dist[count], TG_dist_TG_d[count], ) for count in TG_counts_dist ]
  File "<pyshell#200>", line 1, in <listcomp>
    c_pairs = [ (TG_counts_dist[count], TG_dist_TG_d[count], ) for count in TG_counts_dist ]
NameError: name 'TG_dist_TG_d' is not defined
>>> c_pairs = [ (TG_counts_dist[count], TG_dist_DT_d[count], ) for count in TG_counts_dist ]
		
Traceback (most recent call last):
  File "<pyshell#201>", line 1, in <module>
    c_pairs = [ (TG_counts_dist[count], TG_dist_DT_d[count], ) for count in TG_counts_dist ]
  File "<pyshell#201>", line 1, in <listcomp>
    c_pairs = [ (TG_counts_dist[count], TG_dist_DT_d[count], ) for count in TG_counts_dist ]
KeyError: 2
>>> TG_dist_GT_d = dict(TG_dist_GT)
		
>>> c_s = [ c for c in TG_counts_dist  ]
		
>>> c_start_s = [ TG_dist_GT_d[c] for c in c_s ]
		
Traceback (most recent call last):
  File "<pyshell#204>", line 1, in <module>
    c_start_s = [ TG_dist_GT_d[c] for c in c_s ]
  File "<pyshell#204>", line 1, in <listcomp>
    c_start_s = [ TG_dist_GT_d[c] for c in c_s ]
KeyError: 2
>>> TG_c_c_star[:10]
		
[(2, 0.983389342294767), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (1, 0.17687017067164812), (3, 1.7785588752196837)]
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 41, in <module>
    TG_counts_dist_GT += [ ( gram, c_star, ) ]
NameError: name 'TG_counts_dist_GT' is not defined
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 41, in <module>
    TG_counts_dist_GT += [ ( gram, c_star, ) ]
NameError: name 'gram' is not defined
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> len(TG_counts_dist_GT)
		
119
>>> len(TG_counts_dist)
		
119
>>> TG_counts_dist[:10]
		
Traceback (most recent call last):
  File "<pyshell#208>", line 1, in <module>
    TG_counts_dist[:10]
TypeError: unhashable type: 'slice'
>>> TG_counts_dist_TG[:10]
		
Traceback (most recent call last):
  File "<pyshell#209>", line 1, in <module>
    TG_counts_dist_TG[:10]
NameError: name 'TG_counts_dist_TG' is not defined
>>> TG_counts_dist_GT[:10]
		
[(2, 0.983389342294767), (1, 0.17687017067164812), (3, 1.7785588752196837), (4, 2.9150197628458496), (55, 33.6), (212, 0.0), (43, 29.333333333333332), (7, 6.295454545454546), (5, 3.7220338983050847), (49, 25.0)]
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> [ TG_dist_GT[gram] for gram in TG_dist ][:10]
		
[0.983389342294767, 0.17687017067164812, 0.17687017067164812, 0.17687017067164812, 0.17687017067164812, 0.17687017067164812, 0.17687017067164812, 0.17687017067164812, 0.17687017067164812, 1.7785588752196837]
>>> [ (gram, TG_dist[gram], TG_dist_GT[gram],) for gram in TG_dist ][:10]
		
[(('', '', '['), 2, 0.983389342294767), (('', '[', 'Emma'), 1, 0.17687017067164812), (('[', 'Emma', 'by'), 1, 0.17687017067164812), (('Emma', 'by', 'Jane'), 1, 0.17687017067164812), (('by', 'Jane', 'Austen'), 1, 0.17687017067164812), (('Jane', 'Austen', '1816'), 1, 0.17687017067164812), (('Austen', '1816', ']'), 1, 0.17687017067164812), (('1816', ']', ''), 1, 0.17687017067164812), ((']', '', ''), 1, 0.17687017067164812), (('', '', 'VOLUME'), 3, 1.7785588752196837)]
>>> Trint("Trigram/tc/tNc/tc*")
		
Traceback (most recent call last):
  File "<pyshell#213>", line 1, in <module>
    Trint("Trigram/tc/tNc/tc*")
NameError: name 'Trint' is not defined
>>> print"Trigram\tc\tNc\tc*")
		
SyntaxError: invalid syntax
>>> print"Trigram\tc\tNc\tc*")
SyntaxError: invalid syntax
>>> print("Trigram\tc\tNc\tc*")
Trigram	c	Nc	c*
>>> print("Trigram\t\tc\tNc\tc*")
Trigram		c	Nc	c*
>>> print((gram, TG_dist[gram), TG_counts_dist[gram], TG_dist_GT[gram],)
	  
SyntaxError: invalid syntax
>>> print((gram, TG_dist[gram), TG_counts_dist[gram], TG_dist_GT[gram],),
	  
SyntaxError: invalid syntax
>>> print((gram, TG_dist[gram], TG_counts_dist[gram], TG_dist_GT[gram],),
	  for gram in TG_dist)
	  
SyntaxError: invalid syntax
>>> emmaGT = [(gram, TG_dist[gram], TG_counts_dist[gram], TG_dist_GT[gram],)
	  for gram in TG_dist ]
	  
>>> for line in emmaGT:
	  print(line)

	  
(('', '', '['), 2, 0, 0.983389342294767)
(('', '[', 'Emma'), 1, 0, 0.17687017067164812)
(('[', 'Emma', 'by'), 1, 0, 0.17687017067164812)
(('Emma', 'by', 'Jane'), 1, 0, 0.17687017067164812)
(('by', 'Jane', 'Austen'), 1, 0, 0.17687017067164812)
(('Jane', 'Austen', '1816'), 1, 0, 0.17687017067164812)
(('Austen', '1816', ']'), 1, 0, 0.17687017067164812)
(('1816', ']', ''), 1, 0, 0.17687017067164812)
((']', '', ''), 1, 0, 0.17687017067164812)
(('', '', 'VOLUME'), 3, 0, 1.7785588752196837)
(('', 'VOLUME', 'I'), 1, 0, 0.17687017067164812)
(('VOLUME', 'I', ''), 1, 0, 0.17687017067164812)
(('I', '', ''), 4, 0, 2.9150197628458496)
(('', '', 'CHAPTER'), 55, 0, 33.6)
(('', 'CHAPTER', 'I'), 3, 0, 1.7785588752196837)
(('CHAPTER', 'I', ''), 3, 0, 1.7785588752196837)
(('', '', 'Emma'), 212, 0, 0.0)
(('', 'Emma', 'Woodhouse'), 1, 0, 0.17687017067164812)
(('Emma', 'Woodhouse', ','), 4, 0, 2.9150197628458496)
(('Woodhouse', ',', 'handsome'), 1, 0, 0.17687017067164812)
((',', 'handsome', ','), 2, 0, 0.983389342294767)
(('handsome', ',', 'clever'), 1, 0, 0.17687017067164812)
((',', 'clever', ','), 1, 0, 0.17687017067164812)
(('clever', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'rich'), 1, 0, 0.17687017067164812)
(('and', 'rich', ','), 1, 0, 0.17687017067164812)
(('rich', ',', 'with'), 1, 0, 0.17687017067164812)
((',', 'with', 'a'), 43, 0, 29.333333333333332)
(('with', 'a', 'comfortable'), 1, 0, 0.17687017067164812)
(('a', 'comfortable', 'home'), 2, 0, 0.983389342294767)
(('comfortable', 'home', 'and'), 1, 0, 0.17687017067164812)
(('home', 'and', 'happy'), 1, 0, 0.17687017067164812)
(('and', 'happy', 'disposition'), 1, 0, 0.17687017067164812)
(('happy', 'disposition', ','), 1, 0, 0.17687017067164812)
(('disposition', ',', 'seemed'), 1, 0, 0.17687017067164812)
((',', 'seemed', 'to'), 4, 0, 2.9150197628458496)
(('seemed', 'to', 'unite'), 1, 0, 0.17687017067164812)
(('to', 'unite', 'some'), 1, 0, 0.17687017067164812)
(('unite', 'some', 'of'), 1, 0, 0.17687017067164812)
(('some', 'of', 'the'), 7, 0, 6.295454545454546)
(('of', 'the', 'best'), 3, 0, 1.7785588752196837)
(('the', 'best', 'blessings'), 2, 0, 0.983389342294767)
(('best', 'blessings', 'of'), 2, 0, 0.983389342294767)
(('blessings', 'of', 'existence'), 2, 0, 0.983389342294767)
(('of', 'existence', ';'), 2, 0, 0.983389342294767)
(('existence', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'had'), 5, 0, 3.7220338983050847)
(('and', 'had', 'lived'), 2, 0, 0.983389342294767)
(('had', 'lived', 'nearly'), 1, 0, 0.17687017067164812)
(('lived', 'nearly', 'twenty'), 1, 0, 0.17687017067164812)
(('nearly', 'twenty', '-'), 1, 0, 0.17687017067164812)
(('twenty', '-', 'one'), 1, 0, 0.17687017067164812)
(('-', 'one', 'years'), 1, 0, 0.17687017067164812)
(('one', 'years', 'in'), 1, 0, 0.17687017067164812)
(('years', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'world'), 49, 0, 25.0)
(('the', 'world', 'with'), 1, 0, 0.17687017067164812)
(('world', 'with', 'very'), 1, 0, 0.17687017067164812)
(('with', 'very', 'little'), 2, 0, 0.983389342294767)
(('very', 'little', 'to'), 3, 0, 1.7785588752196837)
(('little', 'to', 'distress'), 1, 0, 0.17687017067164812)
(('to', 'distress', 'or'), 1, 0, 0.17687017067164812)
(('distress', 'or', 'vex'), 1, 0, 0.17687017067164812)
(('or', 'vex', 'her'), 1, 0, 0.17687017067164812)
(('vex', 'her', '.'), 1, 0, 0.17687017067164812)
(('her', '.', ''), 110, 0, 0.0)
(('.', '', ''), 5143, 0, 0.0)
(('', '', 'She'), 460, 0, 0.0)
(('', 'She', 'was'), 94, 0, 31.666666666666664)
(('She', 'was', 'the'), 3, 0, 1.7785588752196837)
(('was', 'the', 'youngest'), 2, 0, 0.983389342294767)
(('the', 'youngest', 'of'), 2, 0, 0.983389342294767)
(('youngest', 'of', 'the'), 2, 0, 0.983389342294767)
(('of', 'the', 'two'), 20, 0, 21.0)
(('the', 'two', 'daughters'), 2, 0, 0.983389342294767)
(('two', 'daughters', 'of'), 2, 0, 0.983389342294767)
(('daughters', 'of', 'a'), 2, 0, 0.983389342294767)
(('of', 'a', 'most'), 1, 0, 0.17687017067164812)
(('a', 'most', 'affectionate'), 1, 0, 0.17687017067164812)
(('most', 'affectionate', ','), 1, 0, 0.17687017067164812)
(('affectionate', ',', 'indulgent'), 1, 0, 0.17687017067164812)
((',', 'indulgent', 'father'), 1, 0, 0.17687017067164812)
(('indulgent', 'father', ';'), 1, 0, 0.17687017067164812)
(('father', ';', 'and'), 3, 0, 1.7785588752196837)
(('and', 'had', ','), 1, 0, 0.17687017067164812)
(('had', ',', 'in'), 3, 0, 1.7785588752196837)
((',', 'in', 'consequence'), 1, 0, 0.17687017067164812)
(('in', 'consequence', 'of'), 1, 0, 0.17687017067164812)
(('consequence', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'sister'), 2, 0, 0.983389342294767)
(('her', 'sister', "'"), 4, 0, 2.9150197628458496)
(('sister', "'", 's'), 6, 0, 4.48816029143898)
(("'", 's', 'marriage'), 7, 0, 6.295454545454546)
(('s', 'marriage', ','), 3, 0, 1.7785588752196837)
(('marriage', ',', 'been'), 1, 0, 0.17687017067164812)
((',', 'been', 'mistress'), 1, 0, 0.17687017067164812)
(('been', 'mistress', 'of'), 2, 0, 0.983389342294767)
(('mistress', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'house'), 2, 0, 0.983389342294767)
(('his', 'house', 'from'), 1, 0, 0.17687017067164812)
(('house', 'from', 'a'), 1, 0, 0.17687017067164812)
(('from', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'early'), 2, 0, 0.983389342294767)
(('very', 'early', 'period'), 1, 0, 0.17687017067164812)
(('early', 'period', '.'), 1, 0, 0.17687017067164812)
(('period', '.', ''), 2, 0, 0.983389342294767)
(('', '', 'Her'), 80, 0, 81.0)
(('', 'Her', 'mother'), 1, 0, 0.17687017067164812)
(('Her', 'mother', 'had'), 1, 0, 0.17687017067164812)
(('mother', 'had', 'died'), 2, 0, 0.983389342294767)
(('had', 'died', 'too'), 1, 0, 0.17687017067164812)
(('died', 'too', 'long'), 1, 0, 0.17687017067164812)
(('too', 'long', 'ago'), 1, 0, 0.17687017067164812)
(('long', 'ago', 'for'), 1, 0, 0.17687017067164812)
(('ago', 'for', 'her'), 1, 0, 0.17687017067164812)
(('for', 'her', 'to'), 16, 0, 14.681818181818182)
(('her', 'to', 'have'), 3, 0, 1.7785588752196837)
(('to', 'have', 'more'), 2, 0, 0.983389342294767)
(('have', 'more', 'than'), 2, 0, 0.983389342294767)
(('more', 'than', 'an'), 3, 0, 1.7785588752196837)
(('than', 'an', 'indistinct'), 1, 0, 0.17687017067164812)
(('an', 'indistinct', 'remembrance'), 1, 0, 0.17687017067164812)
(('indistinct', 'remembrance', 'of'), 1, 0, 0.17687017067164812)
(('remembrance', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'caresses'), 1, 0, 0.17687017067164812)
(('her', 'caresses', ';'), 1, 0, 0.17687017067164812)
(('caresses', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'her'), 8, 0, 7.927797833935018)
(('and', 'her', 'place'), 1, 0, 0.17687017067164812)
(('her', 'place', 'had'), 1, 0, 0.17687017067164812)
(('place', 'had', 'been'), 1, 0, 0.17687017067164812)
(('had', 'been', 'supplied'), 1, 0, 0.17687017067164812)
(('been', 'supplied', 'by'), 1, 0, 0.17687017067164812)
(('supplied', 'by', 'an'), 1, 0, 0.17687017067164812)
(('by', 'an', 'excellent'), 1, 0, 0.17687017067164812)
(('an', 'excellent', 'woman'), 1, 0, 0.17687017067164812)
(('excellent', 'woman', 'as'), 1, 0, 0.17687017067164812)
(('woman', 'as', 'governess'), 1, 0, 0.17687017067164812)
(('as', 'governess', ','), 2, 0, 0.983389342294767)
(('governess', ',', 'who'), 1, 0, 0.17687017067164812)
((',', 'who', 'had'), 30, 0, 31.0)
(('who', 'had', 'fallen'), 1, 0, 0.17687017067164812)
(('had', 'fallen', 'little'), 1, 0, 0.17687017067164812)
(('fallen', 'little', 'short'), 1, 0, 0.17687017067164812)
(('little', 'short', 'of'), 1, 0, 0.17687017067164812)
(('short', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'mother'), 1, 0, 0.17687017067164812)
(('a', 'mother', 'in'), 1, 0, 0.17687017067164812)
(('mother', 'in', 'affection'), 1, 0, 0.17687017067164812)
(('in', 'affection', '.'), 1, 0, 0.17687017067164812)
(('affection', '.', ''), 5, 0, 3.7220338983050847)
(('', '', 'Sixteen'), 2, 0, 0.983389342294767)
(('', 'Sixteen', 'years'), 1, 0, 0.17687017067164812)
(('Sixteen', 'years', 'had'), 1, 0, 0.17687017067164812)
(('years', 'had', 'Miss'), 1, 0, 0.17687017067164812)
(('had', 'Miss', 'Taylor'), 2, 0, 0.983389342294767)
(('Miss', 'Taylor', 'been'), 1, 0, 0.17687017067164812)
(('Taylor', 'been', 'in'), 1, 0, 0.17687017067164812)
(('been', 'in', 'Mr'), 1, 0, 0.17687017067164812)
(('in', 'Mr', '.'), 13, 0, 10.137931034482758)
(('Mr', '.', 'Woodhouse'), 132, 0, 133.0)
(('.', 'Woodhouse', "'"), 25, 0, 22.454545454545453)
(('Woodhouse', "'", 's'), 36, 0, 44.4)
(("'", 's', 'family'), 7, 0, 6.295454545454546)
(('s', 'family', ','), 3, 0, 1.7785588752196837)
(('family', ',', 'less'), 1, 0, 0.17687017067164812)
((',', 'less', 'as'), 1, 0, 0.17687017067164812)
(('less', 'as', 'a'), 1, 0, 0.17687017067164812)
(('as', 'a', 'governess'), 1, 0, 0.17687017067164812)
(('a', 'governess', 'than'), 1, 0, 0.17687017067164812)
(('governess', 'than', 'a'), 1, 0, 0.17687017067164812)
(('than', 'a', 'friend'), 1, 0, 0.17687017067164812)
(('a', 'friend', ','), 7, 0, 6.295454545454546)
(('friend', ',', 'very'), 1, 0, 0.17687017067164812)
((',', 'very', 'fond'), 1, 0, 0.17687017067164812)
(('very', 'fond', 'of'), 9, 0, 6.5983606557377055)
(('fond', 'of', 'both'), 1, 0, 0.17687017067164812)
(('of', 'both', 'daughters'), 1, 0, 0.17687017067164812)
(('both', 'daughters', ','), 1, 0, 0.17687017067164812)
(('daughters', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'particularly'), 4, 0, 2.9150197628458496)
(('but', 'particularly', 'of'), 1, 0, 0.17687017067164812)
(('particularly', 'of', 'Emma'), 1, 0, 0.17687017067164812)
(('of', 'Emma', '.'), 2, 0, 0.983389342294767)
(('Emma', '.', ''), 44, 0, 33.75)
(('', '', 'Between'), 1, 0, 0.17687017067164812)
(('', 'Between', '_them_'), 1, 0, 0.17687017067164812)
(('Between', '_them_', 'it'), 1, 0, 0.17687017067164812)
(('_them_', 'it', 'was'), 1, 0, 0.17687017067164812)
(('it', 'was', 'more'), 3, 0, 1.7785588752196837)
(('was', 'more', 'the'), 1, 0, 0.17687017067164812)
(('more', 'the', 'intimacy'), 1, 0, 0.17687017067164812)
(('the', 'intimacy', 'of'), 1, 0, 0.17687017067164812)
(('intimacy', 'of', 'sisters'), 1, 0, 0.17687017067164812)
(('of', 'sisters', '.'), 1, 0, 0.17687017067164812)
(('sisters', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Even'), 8, 0, 7.927797833935018)
(('', 'Even', 'before'), 1, 0, 0.17687017067164812)
(('Even', 'before', 'Miss'), 1, 0, 0.17687017067164812)
(('before', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', 'had'), 4, 0, 2.9150197628458496)
(('Taylor', 'had', 'ceased'), 1, 0, 0.17687017067164812)
(('had', 'ceased', 'to'), 1, 0, 0.17687017067164812)
(('ceased', 'to', 'hold'), 1, 0, 0.17687017067164812)
(('to', 'hold', 'the'), 1, 0, 0.17687017067164812)
(('hold', 'the', 'nominal'), 1, 0, 0.17687017067164812)
(('the', 'nominal', 'office'), 1, 0, 0.17687017067164812)
(('nominal', 'office', 'of'), 1, 0, 0.17687017067164812)
(('office', 'of', 'governess'), 1, 0, 0.17687017067164812)
(('of', 'governess', ','), 1, 0, 0.17687017067164812)
(('governess', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'mildness'), 1, 0, 0.17687017067164812)
(('the', 'mildness', 'of'), 1, 0, 0.17687017067164812)
(('mildness', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'temper'), 2, 0, 0.983389342294767)
(('her', 'temper', 'had'), 1, 0, 0.17687017067164812)
(('temper', 'had', 'hardly'), 1, 0, 0.17687017067164812)
(('had', 'hardly', 'allowed'), 1, 0, 0.17687017067164812)
(('hardly', 'allowed', 'her'), 1, 0, 0.17687017067164812)
(('allowed', 'her', 'to'), 2, 0, 0.983389342294767)
(('her', 'to', 'impose'), 1, 0, 0.17687017067164812)
(('to', 'impose', 'any'), 1, 0, 0.17687017067164812)
(('impose', 'any', 'restraint'), 1, 0, 0.17687017067164812)
(('any', 'restraint', ';'), 1, 0, 0.17687017067164812)
(('restraint', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'the'), 60, 0, 15.25)
(('and', 'the', 'shadow'), 1, 0, 0.17687017067164812)
(('the', 'shadow', 'of'), 1, 0, 0.17687017067164812)
(('shadow', 'of', 'authority'), 1, 0, 0.17687017067164812)
(('of', 'authority', 'being'), 1, 0, 0.17687017067164812)
(('authority', 'being', 'now'), 1, 0, 0.17687017067164812)
(('being', 'now', 'long'), 1, 0, 0.17687017067164812)
(('now', 'long', 'passed'), 1, 0, 0.17687017067164812)
(('long', 'passed', 'away'), 2, 0, 0.983389342294767)
(('passed', 'away', ','), 2, 0, 0.983389342294767)
(('away', ',', 'they'), 1, 0, 0.17687017067164812)
((',', 'they', 'had'), 6, 0, 4.48816029143898)
(('they', 'had', 'been'), 6, 0, 4.48816029143898)
(('had', 'been', 'living'), 1, 0, 0.17687017067164812)
(('been', 'living', 'together'), 1, 0, 0.17687017067164812)
(('living', 'together', 'as'), 1, 0, 0.17687017067164812)
(('together', 'as', 'friend'), 1, 0, 0.17687017067164812)
(('as', 'friend', 'and'), 1, 0, 0.17687017067164812)
(('friend', 'and', 'friend'), 1, 0, 0.17687017067164812)
(('and', 'friend', 'very'), 1, 0, 0.17687017067164812)
(('friend', 'very', 'mutually'), 1, 0, 0.17687017067164812)
(('very', 'mutually', 'attached'), 1, 0, 0.17687017067164812)
(('mutually', 'attached', ','), 1, 0, 0.17687017067164812)
(('attached', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'Emma'), 19, 0, 20.0)
(('and', 'Emma', 'doing'), 1, 0, 0.17687017067164812)
(('Emma', 'doing', 'just'), 1, 0, 0.17687017067164812)
(('doing', 'just', 'what'), 2, 0, 0.983389342294767)
(('just', 'what', 'she'), 2, 0, 0.983389342294767)
(('what', 'she', 'liked'), 2, 0, 0.983389342294767)
(('she', 'liked', ';'), 1, 0, 0.17687017067164812)
(('liked', ';', 'highly'), 1, 0, 0.17687017067164812)
((';', 'highly', 'esteeming'), 1, 0, 0.17687017067164812)
(('highly', 'esteeming', 'Miss'), 1, 0, 0.17687017067164812)
(('esteeming', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', "'"), 8, 0, 7.927797833935018)
(('Taylor', "'", 's'), 8, 0, 7.927797833935018)
(("'", 's', 'judgment'), 2, 0, 0.983389342294767)
(('s', 'judgment', ','), 1, 0, 0.17687017067164812)
(('judgment', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'directed'), 1, 0, 0.17687017067164812)
(('but', 'directed', 'chiefly'), 1, 0, 0.17687017067164812)
(('directed', 'chiefly', 'by'), 1, 0, 0.17687017067164812)
(('chiefly', 'by', 'her'), 1, 0, 0.17687017067164812)
(('by', 'her', 'own'), 4, 0, 2.9150197628458496)
(('her', 'own', '.'), 8, 0, 7.927797833935018)
(('own', '.', ''), 15, 0, 14.666666666666666)
(('', '', 'The'), 289, 0, 0.0)
(('', 'The', 'real'), 1, 0, 0.17687017067164812)
(('The', 'real', 'evils'), 1, 0, 0.17687017067164812)
(('real', 'evils', ','), 1, 0, 0.17687017067164812)
(('evils', ',', 'indeed'), 1, 0, 0.17687017067164812)
((',', 'indeed', ','), 42, 0, 129.0)
(('indeed', ',', 'of'), 2, 0, 0.983389342294767)
((',', 'of', 'Emma'), 2, 0, 0.983389342294767)
(('of', 'Emma', "'"), 7, 0, 6.295454545454546)
(('Emma', "'", 's'), 79, 0, 80.0)
(("'", 's', 'situation'), 8, 0, 7.927797833935018)
(('s', 'situation', 'were'), 1, 0, 0.17687017067164812)
(('situation', 'were', 'the'), 1, 0, 0.17687017067164812)
(('were', 'the', 'power'), 1, 0, 0.17687017067164812)
(('the', 'power', 'of'), 11, 0, 8.671532846715328)
(('power', 'of', 'having'), 1, 0, 0.17687017067164812)
(('of', 'having', 'rather'), 1, 0, 0.17687017067164812)
(('having', 'rather', 'too'), 1, 0, 0.17687017067164812)
(('rather', 'too', 'much'), 4, 0, 2.9150197628458496)
(('too', 'much', 'her'), 1, 0, 0.17687017067164812)
(('much', 'her', 'own'), 1, 0, 0.17687017067164812)
(('her', 'own', 'way'), 2, 0, 0.983389342294767)
(('own', 'way', ','), 4, 0, 2.9150197628458496)
(('way', ',', 'and'), 7, 0, 6.295454545454546)
((',', 'and', 'a'), 47, 0, 80.0)
(('and', 'a', 'disposition'), 2, 0, 0.983389342294767)
(('a', 'disposition', 'to'), 2, 0, 0.983389342294767)
(('disposition', 'to', 'think'), 1, 0, 0.17687017067164812)
(('to', 'think', 'a'), 1, 0, 0.17687017067164812)
(('think', 'a', 'little'), 1, 0, 0.17687017067164812)
(('a', 'little', 'too'), 4, 0, 2.9150197628458496)
(('little', 'too', 'well'), 1, 0, 0.17687017067164812)
(('too', 'well', 'of'), 1, 0, 0.17687017067164812)
(('well', 'of', 'herself'), 1, 0, 0.17687017067164812)
(('of', 'herself', ';'), 2, 0, 0.983389342294767)
(('herself', ';', 'these'), 1, 0, 0.17687017067164812)
((';', 'these', 'were'), 1, 0, 0.17687017067164812)
(('these', 'were', 'the'), 1, 0, 0.17687017067164812)
(('were', 'the', 'disadvantages'), 1, 0, 0.17687017067164812)
(('the', 'disadvantages', 'which'), 1, 0, 0.17687017067164812)
(('disadvantages', 'which', 'threatened'), 1, 0, 0.17687017067164812)
(('which', 'threatened', 'alloy'), 1, 0, 0.17687017067164812)
(('threatened', 'alloy', 'to'), 1, 0, 0.17687017067164812)
(('alloy', 'to', 'her'), 1, 0, 0.17687017067164812)
(('to', 'her', 'many'), 1, 0, 0.17687017067164812)
(('her', 'many', 'enjoyments'), 1, 0, 0.17687017067164812)
(('many', 'enjoyments', '.'), 1, 0, 0.17687017067164812)
(('enjoyments', '.', ''), 1, 0, 0.17687017067164812)
(('', 'The', 'danger'), 2, 0, 0.983389342294767)
(('The', 'danger', ','), 1, 0, 0.17687017067164812)
(('danger', ',', 'however'), 1, 0, 0.17687017067164812)
((',', 'however', ','), 88, 0, 44.5)
(('however', ',', 'was'), 10, 0, 9.36024844720497)
((',', 'was', 'at'), 1, 0, 0.17687017067164812)
(('was', 'at', 'present'), 1, 0, 0.17687017067164812)
(('at', 'present', 'so'), 2, 0, 0.983389342294767)
(('present', 'so', 'unperceived'), 1, 0, 0.17687017067164812)
(('so', 'unperceived', ','), 1, 0, 0.17687017067164812)
(('unperceived', ',', 'that'), 1, 0, 0.17687017067164812)
((',', 'that', 'they'), 7, 0, 6.295454545454546)
(('that', 'they', 'did'), 1, 0, 0.17687017067164812)
(('they', 'did', 'not'), 2, 0, 0.983389342294767)
(('did', 'not', 'by'), 2, 0, 0.983389342294767)
(('not', 'by', 'any'), 4, 0, 2.9150197628458496)
(('by', 'any', 'means'), 7, 0, 6.295454545454546)
(('any', 'means', 'rank'), 1, 0, 0.17687017067164812)
(('means', 'rank', 'as'), 1, 0, 0.17687017067164812)
(('rank', 'as', 'misfortunes'), 1, 0, 0.17687017067164812)
(('as', 'misfortunes', 'with'), 1, 0, 0.17687017067164812)
(('misfortunes', 'with', 'her'), 1, 0, 0.17687017067164812)
(('with', 'her', '.'), 11, 0, 8.671532846715328)
(('', '', 'Sorrow'), 1, 0, 0.17687017067164812)
(('', 'Sorrow', 'came'), 1, 0, 0.17687017067164812)
(('Sorrow', 'came', '--'), 1, 0, 0.17687017067164812)
(('came', '--', 'a'), 1, 0, 0.17687017067164812)
(('--', 'a', 'gentle'), 1, 0, 0.17687017067164812)
(('a', 'gentle', 'sorrow'), 1, 0, 0.17687017067164812)
(('gentle', 'sorrow', '--'), 1, 0, 0.17687017067164812)
(('sorrow', '--', 'but'), 1, 0, 0.17687017067164812)
(('--', 'but', 'not'), 6, 0, 4.48816029143898)
(('but', 'not', 'at'), 4, 0, 2.9150197628458496)
(('not', 'at', 'all'), 27, 0, 14.823529411764707)
(('at', 'all', 'in'), 6, 0, 4.48816029143898)
(('all', 'in', 'the'), 4, 0, 2.9150197628458496)
(('in', 'the', 'shape'), 2, 0, 0.983389342294767)
(('the', 'shape', 'of'), 2, 0, 0.983389342294767)
(('shape', 'of', 'any'), 1, 0, 0.17687017067164812)
(('of', 'any', 'disagreeable'), 1, 0, 0.17687017067164812)
(('any', 'disagreeable', 'consciousness'), 1, 0, 0.17687017067164812)
(('disagreeable', 'consciousness', '.--'), 1, 0, 0.17687017067164812)
(('consciousness', '.--', 'Miss'), 1, 0, 0.17687017067164812)
(('.--', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', 'married'), 1, 0, 0.17687017067164812)
(('Taylor', 'married', '.'), 1, 0, 0.17687017067164812)
(('married', '.', ''), 7, 0, 6.295454545454546)
(('', '', 'It'), 295, 0, 0.0)
(('', 'It', 'was'), 133, 0, 0.0)
(('It', 'was', 'Miss'), 1, 0, 0.17687017067164812)
(('was', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(("'", 's', 'loss'), 3, 0, 1.7785588752196837)
(('s', 'loss', 'which'), 1, 0, 0.17687017067164812)
(('loss', 'which', 'first'), 1, 0, 0.17687017067164812)
(('which', 'first', 'brought'), 1, 0, 0.17687017067164812)
(('first', 'brought', 'grief'), 1, 0, 0.17687017067164812)
(('brought', 'grief', '.'), 1, 0, 0.17687017067164812)
(('grief', '.', ''), 1, 0, 0.17687017067164812)
(('It', 'was', 'on'), 1, 0, 0.17687017067164812)
(('was', 'on', 'the'), 5, 0, 3.7220338983050847)
(('on', 'the', 'wedding'), 1, 0, 0.17687017067164812)
(('the', 'wedding', '-'), 2, 0, 0.983389342294767)
(('wedding', '-', 'day'), 4, 0, 2.9150197628458496)
(('-', 'day', 'of'), 1, 0, 0.17687017067164812)
(('day', 'of', 'this'), 2, 0, 0.983389342294767)
(('of', 'this', 'beloved'), 1, 0, 0.17687017067164812)
(('this', 'beloved', 'friend'), 1, 0, 0.17687017067164812)
(('beloved', 'friend', 'that'), 1, 0, 0.17687017067164812)
(('friend', 'that', 'Emma'), 1, 0, 0.17687017067164812)
(('that', 'Emma', 'first'), 1, 0, 0.17687017067164812)
(('Emma', 'first', 'sat'), 1, 0, 0.17687017067164812)
(('first', 'sat', 'in'), 1, 0, 0.17687017067164812)
(('sat', 'in', 'mournful'), 1, 0, 0.17687017067164812)
(('in', 'mournful', 'thought'), 1, 0, 0.17687017067164812)
(('mournful', 'thought', 'of'), 1, 0, 0.17687017067164812)
(('thought', 'of', 'any'), 1, 0, 0.17687017067164812)
(('of', 'any', 'continuance'), 1, 0, 0.17687017067164812)
(('any', 'continuance', '.'), 1, 0, 0.17687017067164812)
(('continuance', '.', ''), 1, 0, 0.17687017067164812)
(('', 'The', 'wedding'), 3, 0, 1.7785588752196837)
(('The', 'wedding', 'over'), 1, 0, 0.17687017067164812)
(('wedding', 'over', ','), 1, 0, 0.17687017067164812)
(('over', ',', 'and'), 7, 0, 6.295454545454546)
((',', 'and', 'the'), 89, 0, 90.0)
(('and', 'the', 'bride'), 1, 0, 0.17687017067164812)
(('the', 'bride', '-'), 1, 0, 0.17687017067164812)
(('bride', '-', 'people'), 1, 0, 0.17687017067164812)
(('-', 'people', 'gone'), 1, 0, 0.17687017067164812)
(('people', 'gone', ','), 1, 0, 0.17687017067164812)
(('gone', ',', 'her'), 1, 0, 0.17687017067164812)
((',', 'her', 'father'), 1, 0, 0.17687017067164812)
(('her', 'father', 'and'), 8, 0, 7.927797833935018)
(('father', 'and', 'herself'), 3, 0, 1.7785588752196837)
(('and', 'herself', 'were'), 1, 0, 0.17687017067164812)
(('herself', 'were', 'left'), 1, 0, 0.17687017067164812)
(('were', 'left', 'to'), 3, 0, 1.7785588752196837)
(('left', 'to', 'dine'), 1, 0, 0.17687017067164812)
(('to', 'dine', 'together'), 1, 0, 0.17687017067164812)
(('dine', 'together', ','), 1, 0, 0.17687017067164812)
(('together', ',', 'with'), 1, 0, 0.17687017067164812)
((',', 'with', 'no'), 3, 0, 1.7785588752196837)
(('with', 'no', 'prospect'), 1, 0, 0.17687017067164812)
(('no', 'prospect', 'of'), 1, 0, 0.17687017067164812)
(('prospect', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'third'), 1, 0, 0.17687017067164812)
(('a', 'third', 'to'), 1, 0, 0.17687017067164812)
(('third', 'to', 'cheer'), 1, 0, 0.17687017067164812)
(('to', 'cheer', 'a'), 1, 0, 0.17687017067164812)
(('cheer', 'a', 'long'), 1, 0, 0.17687017067164812)
(('a', 'long', 'evening'), 1, 0, 0.17687017067164812)
(('long', 'evening', '.'), 1, 0, 0.17687017067164812)
(('evening', '.', ''), 7, 0, 6.295454545454546)
(('', 'Her', 'father'), 8, 0, 7.927797833935018)
(('Her', 'father', 'composed'), 1, 0, 0.17687017067164812)
(('father', 'composed', 'himself'), 1, 0, 0.17687017067164812)
(('composed', 'himself', 'to'), 1, 0, 0.17687017067164812)
(('himself', 'to', 'sleep'), 1, 0, 0.17687017067164812)
(('to', 'sleep', 'after'), 1, 0, 0.17687017067164812)
(('sleep', 'after', 'dinner'), 1, 0, 0.17687017067164812)
(('after', 'dinner', ','), 7, 0, 6.295454545454546)
(('dinner', ',', 'as'), 4, 0, 2.9150197628458496)
((',', 'as', 'usual'), 4, 0, 2.9150197628458496)
(('as', 'usual', ','), 7, 0, 6.295454545454546)
(('usual', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'she'), 48, 0, 58.8)
(('and', 'she', 'had'), 14, 0, 11.428571428571427)
(('she', 'had', 'then'), 3, 0, 1.7785588752196837)
(('had', 'then', 'only'), 1, 0, 0.17687017067164812)
(('then', 'only', 'to'), 1, 0, 0.17687017067164812)
(('only', 'to', 'sit'), 1, 0, 0.17687017067164812)
(('to', 'sit', 'and'), 4, 0, 2.9150197628458496)
(('sit', 'and', 'think'), 1, 0, 0.17687017067164812)
(('and', 'think', 'of'), 1, 0, 0.17687017067164812)
(('think', 'of', 'what'), 1, 0, 0.17687017067164812)
(('of', 'what', 'she'), 7, 0, 6.295454545454546)
(('what', 'she', 'had'), 17, 0, 19.42105263157895)
(('she', 'had', 'lost'), 1, 0, 0.17687017067164812)
(('had', 'lost', '.'), 1, 0, 0.17687017067164812)
(('lost', '.', ''), 2, 0, 0.983389342294767)
(('', 'The', 'event'), 4, 0, 2.9150197628458496)
(('The', 'event', 'had'), 1, 0, 0.17687017067164812)
(('event', 'had', 'every'), 1, 0, 0.17687017067164812)
(('had', 'every', 'promise'), 1, 0, 0.17687017067164812)
(('every', 'promise', 'of'), 1, 0, 0.17687017067164812)
(('promise', 'of', 'happiness'), 1, 0, 0.17687017067164812)
(('of', 'happiness', 'for'), 1, 0, 0.17687017067164812)
(('happiness', 'for', 'her'), 1, 0, 0.17687017067164812)
(('for', 'her', 'friend'), 5, 0, 3.7220338983050847)
(('her', 'friend', '.'), 6, 0, 4.48816029143898)
(('friend', '.', ''), 21, 0, 29.040000000000003)
(('', '', 'Mr'), 185, 0, 0.0)
(('', 'Mr', '.'), 185, 0, 0.0)
(('Mr', '.', 'Weston'), 162, 0, 0.0)
(('.', 'Weston', 'was'), 33, 0, 22.666666666666664)
(('Weston', 'was', 'a'), 4, 0, 2.9150197628458496)
(('was', 'a', 'man'), 1, 0, 0.17687017067164812)
(('a', 'man', 'of'), 10, 0, 9.36024844720497)
(('man', 'of', 'unexceptionable'), 1, 0, 0.17687017067164812)
(('of', 'unexceptionable', 'character'), 1, 0, 0.17687017067164812)
(('unexceptionable', 'character', ','), 1, 0, 0.17687017067164812)
(('character', ',', 'easy'), 1, 0, 0.17687017067164812)
((',', 'easy', 'fortune'), 1, 0, 0.17687017067164812)
(('easy', 'fortune', ','), 1, 0, 0.17687017067164812)
(('fortune', ',', 'suitable'), 1, 0, 0.17687017067164812)
((',', 'suitable', 'age'), 1, 0, 0.17687017067164812)
(('suitable', 'age', ','), 1, 0, 0.17687017067164812)
(('age', ',', 'and'), 5, 0, 3.7220338983050847)
((',', 'and', 'pleasant'), 1, 0, 0.17687017067164812)
(('and', 'pleasant', 'manners'), 1, 0, 0.17687017067164812)
(('pleasant', 'manners', ';'), 1, 0, 0.17687017067164812)
(('manners', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'there'), 14, 0, 11.428571428571427)
(('and', 'there', 'was'), 13, 0, 10.137931034482758)
(('there', 'was', 'some'), 1, 0, 0.17687017067164812)
(('was', 'some', 'satisfaction'), 1, 0, 0.17687017067164812)
(('some', 'satisfaction', 'in'), 1, 0, 0.17687017067164812)
(('satisfaction', 'in', 'considering'), 1, 0, 0.17687017067164812)
(('in', 'considering', 'with'), 1, 0, 0.17687017067164812)
(('considering', 'with', 'what'), 1, 0, 0.17687017067164812)
(('with', 'what', 'self'), 1, 0, 0.17687017067164812)
(('what', 'self', '-'), 1, 0, 0.17687017067164812)
(('self', '-', 'denying'), 1, 0, 0.17687017067164812)
(('-', 'denying', ','), 1, 0, 0.17687017067164812)
(('denying', ',', 'generous'), 1, 0, 0.17687017067164812)
((',', 'generous', 'friendship'), 1, 0, 0.17687017067164812)
(('generous', 'friendship', 'she'), 1, 0, 0.17687017067164812)
(('friendship', 'she', 'had'), 1, 0, 0.17687017067164812)
(('she', 'had', 'always'), 5, 0, 3.7220338983050847)
(('had', 'always', 'wished'), 1, 0, 0.17687017067164812)
(('always', 'wished', 'and'), 1, 0, 0.17687017067164812)
(('wished', 'and', 'promoted'), 1, 0, 0.17687017067164812)
(('and', 'promoted', 'the'), 1, 0, 0.17687017067164812)
(('promoted', 'the', 'match'), 1, 0, 0.17687017067164812)
(('the', 'match', ';'), 1, 0, 0.17687017067164812)
(('match', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'it'), 39, 0, 18.18181818181818)
(('but', 'it', 'was'), 29, 0, 32.30769230769231)
(('it', 'was', 'a'), 22, 0, 16.03030303030303)
(('was', 'a', 'black'), 1, 0, 0.17687017067164812)
(('a', 'black', 'morning'), 1, 0, 0.17687017067164812)
(('black', 'morning', "'"), 1, 0, 0.17687017067164812)
(('morning', "'", 's'), 3, 0, 1.7785588752196837)
(("'", 's', 'work'), 1, 0, 0.17687017067164812)
(('s', 'work', 'for'), 1, 0, 0.17687017067164812)
(('work', 'for', 'her'), 1, 0, 0.17687017067164812)
(('for', 'her', '.'), 18, 0, 11.585365853658537)
(('', 'The', 'want'), 2, 0, 0.983389342294767)
(('The', 'want', 'of'), 2, 0, 0.983389342294767)
(('want', 'of', 'Miss'), 1, 0, 0.17687017067164812)
(('of', 'Miss', 'Taylor'), 4, 0, 2.9150197628458496)
(('Miss', 'Taylor', 'would'), 1, 0, 0.17687017067164812)
(('Taylor', 'would', 'be'), 1, 0, 0.17687017067164812)
(('would', 'be', 'felt'), 1, 0, 0.17687017067164812)
(('be', 'felt', 'every'), 1, 0, 0.17687017067164812)
(('felt', 'every', 'hour'), 1, 0, 0.17687017067164812)
(('every', 'hour', 'of'), 3, 0, 1.7785588752196837)
(('hour', 'of', 'every'), 1, 0, 0.17687017067164812)
(('of', 'every', 'day'), 2, 0, 0.983389342294767)
(('every', 'day', '.'), 2, 0, 0.983389342294767)
(('day', '.', ''), 18, 0, 11.585365853658537)
(('', 'She', 'recalled'), 1, 0, 0.17687017067164812)
(('She', 'recalled', 'her'), 1, 0, 0.17687017067164812)
(('recalled', 'her', 'past'), 1, 0, 0.17687017067164812)
(('her', 'past', 'kindness'), 1, 0, 0.17687017067164812)
(('past', 'kindness', '--'), 1, 0, 0.17687017067164812)
(('kindness', '--', 'the'), 1, 0, 0.17687017067164812)
(('--', 'the', 'kindness'), 1, 0, 0.17687017067164812)
(('the', 'kindness', ','), 1, 0, 0.17687017067164812)
(('kindness', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'affection'), 1, 0, 0.17687017067164812)
(('the', 'affection', 'of'), 1, 0, 0.17687017067164812)
(('affection', 'of', 'sixteen'), 1, 0, 0.17687017067164812)
(('of', 'sixteen', 'years'), 1, 0, 0.17687017067164812)
(('sixteen', 'years', '--'), 1, 0, 0.17687017067164812)
(('years', '--', 'how'), 1, 0, 0.17687017067164812)
(('--', 'how', 'she'), 2, 0, 0.983389342294767)
(('how', 'she', 'had'), 3, 0, 1.7785588752196837)
(('she', 'had', 'taught'), 1, 0, 0.17687017067164812)
(('had', 'taught', 'and'), 1, 0, 0.17687017067164812)
(('taught', 'and', 'how'), 1, 0, 0.17687017067164812)
(('and', 'how', 'she'), 2, 0, 0.983389342294767)
(('she', 'had', 'played'), 1, 0, 0.17687017067164812)
(('had', 'played', 'with'), 1, 0, 0.17687017067164812)
(('played', 'with', 'her'), 1, 0, 0.17687017067164812)
(('with', 'her', 'from'), 1, 0, 0.17687017067164812)
(('her', 'from', 'five'), 1, 0, 0.17687017067164812)
(('from', 'five', 'years'), 1, 0, 0.17687017067164812)
(('five', 'years', 'old'), 1, 0, 0.17687017067164812)
(('years', 'old', '--'), 1, 0, 0.17687017067164812)
(('old', '--', 'how'), 1, 0, 0.17687017067164812)
(('she', 'had', 'devoted'), 1, 0, 0.17687017067164812)
(('had', 'devoted', 'all'), 1, 0, 0.17687017067164812)
(('devoted', 'all', 'her'), 1, 0, 0.17687017067164812)
(('all', 'her', 'powers'), 1, 0, 0.17687017067164812)
(('her', 'powers', 'to'), 1, 0, 0.17687017067164812)
(('powers', 'to', 'attach'), 1, 0, 0.17687017067164812)
(('to', 'attach', 'and'), 1, 0, 0.17687017067164812)
(('attach', 'and', 'amuse'), 1, 0, 0.17687017067164812)
(('and', 'amuse', 'her'), 2, 0, 0.983389342294767)
(('amuse', 'her', 'in'), 1, 0, 0.17687017067164812)
(('her', 'in', 'health'), 1, 0, 0.17687017067164812)
(('in', 'health', '--'), 1, 0, 0.17687017067164812)
(('health', '--', 'and'), 1, 0, 0.17687017067164812)
(('--', 'and', 'how'), 3, 0, 1.7785588752196837)
(('and', 'how', 'nursed'), 1, 0, 0.17687017067164812)
(('how', 'nursed', 'her'), 1, 0, 0.17687017067164812)
(('nursed', 'her', 'through'), 1, 0, 0.17687017067164812)
(('her', 'through', 'the'), 2, 0, 0.983389342294767)
(('through', 'the', 'various'), 1, 0, 0.17687017067164812)
(('the', 'various', 'illnesses'), 1, 0, 0.17687017067164812)
(('various', 'illnesses', 'of'), 1, 0, 0.17687017067164812)
(('illnesses', 'of', 'childhood'), 1, 0, 0.17687017067164812)
(('of', 'childhood', '.'), 1, 0, 0.17687017067164812)
(('childhood', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'A'), 93, 0, 282.0)
(('', 'A', 'large'), 2, 0, 0.983389342294767)
(('A', 'large', 'debt'), 1, 0, 0.17687017067164812)
(('large', 'debt', 'of'), 1, 0, 0.17687017067164812)
(('debt', 'of', 'gratitude'), 1, 0, 0.17687017067164812)
(('of', 'gratitude', 'was'), 1, 0, 0.17687017067164812)
(('gratitude', 'was', 'owing'), 1, 0, 0.17687017067164812)
(('was', 'owing', 'here'), 1, 0, 0.17687017067164812)
(('owing', 'here', ';'), 1, 0, 0.17687017067164812)
(('here', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'the'), 18, 0, 11.585365853658537)
(('but', 'the', 'intercourse'), 1, 0, 0.17687017067164812)
(('the', 'intercourse', 'of'), 1, 0, 0.17687017067164812)
(('intercourse', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'last'), 2, 0, 0.983389342294767)
(('the', 'last', 'seven'), 1, 0, 0.17687017067164812)
(('last', 'seven', 'years'), 1, 0, 0.17687017067164812)
(('seven', 'years', ','), 1, 0, 0.17687017067164812)
(('years', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'equal'), 1, 0, 0.17687017067164812)
(('the', 'equal', 'footing'), 1, 0, 0.17687017067164812)
(('equal', 'footing', 'and'), 1, 0, 0.17687017067164812)
(('footing', 'and', 'perfect'), 1, 0, 0.17687017067164812)
(('and', 'perfect', 'unreserve'), 1, 0, 0.17687017067164812)
(('perfect', 'unreserve', 'which'), 1, 0, 0.17687017067164812)
(('unreserve', 'which', 'had'), 1, 0, 0.17687017067164812)
(('which', 'had', 'soon'), 1, 0, 0.17687017067164812)
(('had', 'soon', 'followed'), 1, 0, 0.17687017067164812)
(('soon', 'followed', 'Isabella'), 1, 0, 0.17687017067164812)
(('followed', 'Isabella', "'"), 1, 0, 0.17687017067164812)
(('Isabella', "'", 's'), 13, 0, 10.137931034482758)
(('marriage', ',', 'on'), 1, 0, 0.17687017067164812)
((',', 'on', 'their'), 1, 0, 0.17687017067164812)
(('on', 'their', 'being'), 1, 0, 0.17687017067164812)
(('their', 'being', 'left'), 1, 0, 0.17687017067164812)
(('being', 'left', 'to'), 1, 0, 0.17687017067164812)
(('left', 'to', 'each'), 1, 0, 0.17687017067164812)
(('to', 'each', 'other'), 4, 0, 2.9150197628458496)
(('each', 'other', ','), 6, 0, 4.48816029143898)
(('other', ',', 'was'), 2, 0, 0.983389342294767)
((',', 'was', 'yet'), 2, 0, 0.983389342294767)
(('was', 'yet', 'a'), 1, 0, 0.17687017067164812)
(('yet', 'a', 'dearer'), 1, 0, 0.17687017067164812)
(('a', 'dearer', ','), 1, 0, 0.17687017067164812)
(('dearer', ',', 'tenderer'), 1, 0, 0.17687017067164812)
((',', 'tenderer', 'recollection'), 1, 0, 0.17687017067164812)
(('tenderer', 'recollection', '.'), 1, 0, 0.17687017067164812)
(('recollection', '.', ''), 1, 0, 0.17687017067164812)
(('', 'She', 'had'), 67, 0, 22.666666666666664)
(('She', 'had', 'been'), 7, 0, 6.295454545454546)
(('had', 'been', 'a'), 17, 0, 19.42105263157895)
(('been', 'a', 'friend'), 1, 0, 0.17687017067164812)
(('a', 'friend', 'and'), 2, 0, 0.983389342294767)
(('friend', 'and', 'companion'), 1, 0, 0.17687017067164812)
(('and', 'companion', 'such'), 1, 0, 0.17687017067164812)
(('companion', 'such', 'as'), 1, 0, 0.17687017067164812)
(('such', 'as', 'few'), 1, 0, 0.17687017067164812)
(('as', 'few', 'possessed'), 1, 0, 0.17687017067164812)
(('few', 'possessed', ':'), 1, 0, 0.17687017067164812)
(('possessed', ':', 'intelligent'), 1, 0, 0.17687017067164812)
((':', 'intelligent', ','), 1, 0, 0.17687017067164812)
(('intelligent', ',', 'well'), 1, 0, 0.17687017067164812)
((',', 'well', '-'), 6, 0, 4.48816029143898)
(('well', '-', 'informed'), 3, 0, 1.7785588752196837)
(('-', 'informed', ','), 1, 0, 0.17687017067164812)
(('informed', ',', 'useful'), 1, 0, 0.17687017067164812)
((',', 'useful', ','), 2, 0, 0.983389342294767)
(('useful', ',', 'gentle'), 1, 0, 0.17687017067164812)
((',', 'gentle', ','), 1, 0, 0.17687017067164812)
(('gentle', ',', 'knowing'), 1, 0, 0.17687017067164812)
((',', 'knowing', 'all'), 1, 0, 0.17687017067164812)
(('knowing', 'all', 'the'), 1, 0, 0.17687017067164812)
(('all', 'the', 'ways'), 1, 0, 0.17687017067164812)
(('the', 'ways', 'of'), 3, 0, 1.7785588752196837)
(('ways', 'of', 'the'), 2, 0, 0.983389342294767)
(('of', 'the', 'family'), 7, 0, 6.295454545454546)
(('the', 'family', ','), 6, 0, 4.48816029143898)
(('family', ',', 'interested'), 1, 0, 0.17687017067164812)
((',', 'interested', 'in'), 1, 0, 0.17687017067164812)
(('interested', 'in', 'all'), 1, 0, 0.17687017067164812)
(('in', 'all', 'its'), 1, 0, 0.17687017067164812)
(('all', 'its', 'concerns'), 1, 0, 0.17687017067164812)
(('its', 'concerns', ','), 1, 0, 0.17687017067164812)
(('concerns', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'peculiarly'), 1, 0, 0.17687017067164812)
(('and', 'peculiarly', 'interested'), 1, 0, 0.17687017067164812)
(('peculiarly', 'interested', 'in'), 1, 0, 0.17687017067164812)
(('interested', 'in', 'herself'), 1, 0, 0.17687017067164812)
(('in', 'herself', ','), 3, 0, 1.7785588752196837)
(('herself', ',', 'in'), 7, 0, 6.295454545454546)
((',', 'in', 'every'), 4, 0, 2.9150197628458496)
(('in', 'every', 'pleasure'), 1, 0, 0.17687017067164812)
(('every', 'pleasure', ','), 1, 0, 0.17687017067164812)
(('pleasure', ',', 'every'), 1, 0, 0.17687017067164812)
((',', 'every', 'scheme'), 1, 0, 0.17687017067164812)
(('every', 'scheme', 'of'), 1, 0, 0.17687017067164812)
(('scheme', 'of', 'hers'), 1, 0, 0.17687017067164812)
(('of', 'hers', '--'), 1, 0, 0.17687017067164812)
(('hers', '--', 'one'), 1, 0, 0.17687017067164812)
(('--', 'one', 'to'), 1, 0, 0.17687017067164812)
(('one', 'to', 'whom'), 2, 0, 0.983389342294767)
(('to', 'whom', 'she'), 7, 0, 6.295454545454546)
(('whom', 'she', 'could'), 3, 0, 1.7785588752196837)
(('she', 'could', 'speak'), 3, 0, 1.7785588752196837)
(('could', 'speak', 'every'), 1, 0, 0.17687017067164812)
(('speak', 'every', 'thought'), 1, 0, 0.17687017067164812)
(('every', 'thought', 'as'), 1, 0, 0.17687017067164812)
(('thought', 'as', 'it'), 1, 0, 0.17687017067164812)
(('as', 'it', 'arose'), 1, 0, 0.17687017067164812)
(('it', 'arose', ','), 1, 0, 0.17687017067164812)
(('arose', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'who'), 12, 0, 11.424242424242424)
(('and', 'who', 'had'), 2, 0, 0.983389342294767)
(('who', 'had', 'such'), 1, 0, 0.17687017067164812)
(('had', 'such', 'an'), 4, 0, 2.9150197628458496)
(('such', 'an', 'affection'), 2, 0, 0.983389342294767)
(('an', 'affection', 'for'), 1, 0, 0.17687017067164812)
(('affection', 'for', 'her'), 1, 0, 0.17687017067164812)
(('for', 'her', 'as'), 3, 0, 1.7785588752196837)
(('her', 'as', 'could'), 1, 0, 0.17687017067164812)
(('as', 'could', 'never'), 1, 0, 0.17687017067164812)
(('could', 'never', 'find'), 1, 0, 0.17687017067164812)
(('never', 'find', 'fault'), 1, 0, 0.17687017067164812)
(('find', 'fault', '.'), 1, 0, 0.17687017067164812)
(('fault', '.', ''), 3, 0, 1.7785588752196837)
(('', '', 'How'), 56, 0, 19.0)
(('', 'How', 'was'), 1, 0, 0.17687017067164812)
(('How', 'was', 'she'), 1, 0, 0.17687017067164812)
(('was', 'she', 'to'), 2, 0, 0.983389342294767)
(('she', 'to', 'bear'), 1, 0, 0.17687017067164812)
(('to', 'bear', 'the'), 1, 0, 0.17687017067164812)
(('bear', 'the', 'change'), 1, 0, 0.17687017067164812)
(('the', 'change', '?--'), 1, 0, 0.17687017067164812)
(('change', '?--', 'It'), 1, 0, 0.17687017067164812)
(('?--', 'It', 'was'), 3, 0, 1.7785588752196837)
(('It', 'was', 'true'), 2, 0, 0.983389342294767)
(('was', 'true', 'that'), 2, 0, 0.983389342294767)
(('true', 'that', 'her'), 1, 0, 0.17687017067164812)
(('that', 'her', 'friend'), 3, 0, 1.7785588752196837)
(('her', 'friend', 'was'), 3, 0, 1.7785588752196837)
(('friend', 'was', 'going'), 1, 0, 0.17687017067164812)
(('was', 'going', 'only'), 1, 0, 0.17687017067164812)
(('going', 'only', 'half'), 1, 0, 0.17687017067164812)
(('only', 'half', 'a'), 4, 0, 2.9150197628458496)
(('half', 'a', 'mile'), 6, 0, 4.48816029143898)
(('a', 'mile', 'from'), 3, 0, 1.7785588752196837)
(('mile', 'from', 'them'), 2, 0, 0.983389342294767)
(('from', 'them', ';'), 1, 0, 0.17687017067164812)
(('them', ';', 'but'), 3, 0, 1.7785588752196837)
((';', 'but', 'Emma'), 9, 0, 6.5983606557377055)
(('but', 'Emma', 'was'), 2, 0, 0.983389342294767)
(('Emma', 'was', 'aware'), 1, 0, 0.17687017067164812)
(('was', 'aware', 'that'), 1, 0, 0.17687017067164812)
(('aware', 'that', 'great'), 1, 0, 0.17687017067164812)
(('that', 'great', 'must'), 1, 0, 0.17687017067164812)
(('great', 'must', 'be'), 1, 0, 0.17687017067164812)
(('must', 'be', 'the'), 9, 0, 6.5983606557377055)
(('be', 'the', 'difference'), 1, 0, 0.17687017067164812)
(('the', 'difference', 'between'), 2, 0, 0.983389342294767)
(('difference', 'between', 'a'), 1, 0, 0.17687017067164812)
(('between', 'a', 'Mrs'), 1, 0, 0.17687017067164812)
(('a', 'Mrs', '.'), 3, 0, 1.7785588752196837)
(('Mrs', '.', 'Weston'), 249, 0, 0.0)
(('.', 'Weston', ','), 104, 0, 0.0)
(('Weston', ',', 'only'), 1, 0, 0.17687017067164812)
((',', 'only', 'half'), 1, 0, 0.17687017067164812)
(('from', 'them', ','), 1, 0, 0.17687017067164812)
(('them', ',', 'and'), 20, 0, 21.0)
(('and', 'a', 'Miss'), 1, 0, 0.17687017067164812)
(('a', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', 'in'), 1, 0, 0.17687017067164812)
(('Taylor', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'house'), 5, 0, 3.7220338983050847)
(('the', 'house', ';'), 5, 0, 3.7220338983050847)
(('house', ';', 'and'), 3, 0, 1.7785588752196837)
((';', 'and', 'with'), 13, 0, 10.137931034482758)
(('and', 'with', 'all'), 4, 0, 2.9150197628458496)
(('with', 'all', 'her'), 7, 0, 6.295454545454546)
(('all', 'her', 'advantages'), 1, 0, 0.17687017067164812)
(('her', 'advantages', ','), 1, 0, 0.17687017067164812)
(('advantages', ',', 'natural'), 1, 0, 0.17687017067164812)
((',', 'natural', 'and'), 1, 0, 0.17687017067164812)
(('natural', 'and', 'domestic'), 1, 0, 0.17687017067164812)
(('and', 'domestic', ','), 1, 0, 0.17687017067164812)
(('domestic', ',', 'she'), 1, 0, 0.17687017067164812)
((',', 'she', 'was'), 39, 0, 18.18181818181818)
(('she', 'was', 'now'), 4, 0, 2.9150197628458496)
(('was', 'now', 'in'), 5, 0, 3.7220338983050847)
(('now', 'in', 'great'), 1, 0, 0.17687017067164812)
(('in', 'great', 'danger'), 1, 0, 0.17687017067164812)
(('great', 'danger', 'of'), 1, 0, 0.17687017067164812)
(('danger', 'of', 'suffering'), 1, 0, 0.17687017067164812)
(('of', 'suffering', 'from'), 1, 0, 0.17687017067164812)
(('suffering', 'from', 'intellectual'), 1, 0, 0.17687017067164812)
(('from', 'intellectual', 'solitude'), 1, 0, 0.17687017067164812)
(('intellectual', 'solitude', '.'), 1, 0, 0.17687017067164812)
(('solitude', '.', ''), 1, 0, 0.17687017067164812)
(('', 'She', 'dearly'), 1, 0, 0.17687017067164812)
(('She', 'dearly', 'loved'), 1, 0, 0.17687017067164812)
(('dearly', 'loved', 'her'), 1, 0, 0.17687017067164812)
(('loved', 'her', 'father'), 1, 0, 0.17687017067164812)
(('her', 'father', ','), 25, 0, 22.454545454545453)
(('father', ',', 'but'), 3, 0, 1.7785588752196837)
((',', 'but', 'he'), 16, 0, 14.681818181818182)
(('but', 'he', 'was'), 7, 0, 6.295454545454546)
(('he', 'was', 'no'), 2, 0, 0.983389342294767)
(('was', 'no', 'companion'), 1, 0, 0.17687017067164812)
(('no', 'companion', 'for'), 1, 0, 0.17687017067164812)
(('companion', 'for', 'her'), 1, 0, 0.17687017067164812)
(('', '', 'He'), 358, 0, 0.0)
(('', 'He', 'could'), 11, 0, 8.671532846715328)
(('He', 'could', 'not'), 9, 0, 6.5983606557377055)
(('could', 'not', 'meet'), 1, 0, 0.17687017067164812)
(('not', 'meet', 'her'), 1, 0, 0.17687017067164812)
(('meet', 'her', 'in'), 1, 0, 0.17687017067164812)
(('her', 'in', 'conversation'), 1, 0, 0.17687017067164812)
(('in', 'conversation', ','), 1, 0, 0.17687017067164812)
(('conversation', ',', 'rational'), 1, 0, 0.17687017067164812)
((',', 'rational', 'or'), 1, 0, 0.17687017067164812)
(('rational', 'or', 'playful'), 1, 0, 0.17687017067164812)
(('or', 'playful', '.'), 1, 0, 0.17687017067164812)
(('playful', '.', ''), 1, 0, 0.17687017067164812)
(('', 'The', 'evil'), 2, 0, 0.983389342294767)
(('The', 'evil', 'of'), 2, 0, 0.983389342294767)
(('evil', 'of', 'the'), 3, 0, 1.7785588752196837)
(('of', 'the', 'actual'), 1, 0, 0.17687017067164812)
(('the', 'actual', 'disparity'), 1, 0, 0.17687017067164812)
(('actual', 'disparity', 'in'), 1, 0, 0.17687017067164812)
(('disparity', 'in', 'their'), 1, 0, 0.17687017067164812)
(('in', 'their', 'ages'), 1, 0, 0.17687017067164812)
(('their', 'ages', '('), 1, 0, 0.17687017067164812)
(('ages', '(', 'and'), 1, 0, 0.17687017067164812)
(('(', 'and', 'Mr'), 1, 0, 0.17687017067164812)
(('and', 'Mr', '.'), 78, 0, 26.333333333333332)
(('.', 'Woodhouse', 'had'), 8, 0, 7.927797833935018)
(('Woodhouse', 'had', 'not'), 1, 0, 0.17687017067164812)
(('had', 'not', 'married'), 2, 0, 0.983389342294767)
(('not', 'married', 'early'), 1, 0, 0.17687017067164812)
(('married', 'early', ')'), 1, 0, 0.17687017067164812)
(('early', ')', 'was'), 1, 0, 0.17687017067164812)
((')', 'was', 'much'), 1, 0, 0.17687017067164812)
(('was', 'much', 'increased'), 1, 0, 0.17687017067164812)
(('much', 'increased', 'by'), 2, 0, 0.983389342294767)
(('increased', 'by', 'his'), 1, 0, 0.17687017067164812)
(('by', 'his', 'constitution'), 1, 0, 0.17687017067164812)
(('his', 'constitution', 'and'), 1, 0, 0.17687017067164812)
(('constitution', 'and', 'habits'), 1, 0, 0.17687017067164812)
(('and', 'habits', ';'), 2, 0, 0.983389342294767)
(('habits', ';', 'for'), 1, 0, 0.17687017067164812)
((';', 'for', 'having'), 1, 0, 0.17687017067164812)
(('for', 'having', 'been'), 1, 0, 0.17687017067164812)
(('having', 'been', 'a'), 1, 0, 0.17687017067164812)
(('been', 'a', 'valetudinarian'), 1, 0, 0.17687017067164812)
(('a', 'valetudinarian', 'all'), 1, 0, 0.17687017067164812)
(('valetudinarian', 'all', 'his'), 1, 0, 0.17687017067164812)
(('all', 'his', 'life'), 3, 0, 1.7785588752196837)
(('his', 'life', ','), 3, 0, 1.7785588752196837)
(('life', ',', 'without'), 1, 0, 0.17687017067164812)
((',', 'without', 'activity'), 1, 0, 0.17687017067164812)
(('without', 'activity', 'of'), 1, 0, 0.17687017067164812)
(('activity', 'of', 'mind'), 1, 0, 0.17687017067164812)
(('of', 'mind', 'or'), 3, 0, 1.7785588752196837)
(('mind', 'or', 'body'), 1, 0, 0.17687017067164812)
(('or', 'body', ','), 1, 0, 0.17687017067164812)
(('body', ',', 'he'), 2, 0, 0.983389342294767)
((',', 'he', 'was'), 27, 0, 14.823529411764707)
(('he', 'was', 'a'), 2, 0, 0.983389342294767)
(('was', 'a', 'much'), 1, 0, 0.17687017067164812)
(('a', 'much', 'older'), 1, 0, 0.17687017067164812)
(('much', 'older', 'man'), 1, 0, 0.17687017067164812)
(('older', 'man', 'in'), 1, 0, 0.17687017067164812)
(('man', 'in', 'ways'), 1, 0, 0.17687017067164812)
(('in', 'ways', 'than'), 1, 0, 0.17687017067164812)
(('ways', 'than', 'in'), 1, 0, 0.17687017067164812)
(('than', 'in', 'years'), 1, 0, 0.17687017067164812)
(('in', 'years', ';'), 1, 0, 0.17687017067164812)
(('years', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'though'), 27, 0, 14.823529411764707)
(('and', 'though', 'everywhere'), 1, 0, 0.17687017067164812)
(('though', 'everywhere', 'beloved'), 1, 0, 0.17687017067164812)
(('everywhere', 'beloved', 'for'), 1, 0, 0.17687017067164812)
(('beloved', 'for', 'the'), 1, 0, 0.17687017067164812)
(('for', 'the', 'friendliness'), 1, 0, 0.17687017067164812)
(('the', 'friendliness', 'of'), 1, 0, 0.17687017067164812)
(('friendliness', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'heart'), 1, 0, 0.17687017067164812)
(('his', 'heart', 'and'), 1, 0, 0.17687017067164812)
(('heart', 'and', 'his'), 1, 0, 0.17687017067164812)
(('and', 'his', 'amiable'), 1, 0, 0.17687017067164812)
(('his', 'amiable', 'temper'), 1, 0, 0.17687017067164812)
(('amiable', 'temper', ','), 1, 0, 0.17687017067164812)
(('temper', ',', 'his'), 1, 0, 0.17687017067164812)
((',', 'his', 'talents'), 1, 0, 0.17687017067164812)
(('his', 'talents', 'could'), 1, 0, 0.17687017067164812)
(('talents', 'could', 'not'), 1, 0, 0.17687017067164812)
(('could', 'not', 'have'), 25, 0, 22.454545454545453)
(('not', 'have', 'recommended'), 1, 0, 0.17687017067164812)
(('have', 'recommended', 'him'), 1, 0, 0.17687017067164812)
(('recommended', 'him', 'at'), 1, 0, 0.17687017067164812)
(('him', 'at', 'any'), 1, 0, 0.17687017067164812)
(('at', 'any', 'time'), 12, 0, 11.424242424242424)
(('any', 'time', '.'), 2, 0, 0.983389342294767)
(('time', '.', ''), 26, 0, 24.157894736842106)
(('', 'Her', 'sister'), 1, 0, 0.17687017067164812)
(('Her', 'sister', ','), 1, 0, 0.17687017067164812)
(('sister', ',', 'though'), 1, 0, 0.17687017067164812)
((',', 'though', 'comparatively'), 1, 0, 0.17687017067164812)
(('though', 'comparatively', 'but'), 1, 0, 0.17687017067164812)
(('comparatively', 'but', 'little'), 1, 0, 0.17687017067164812)
(('but', 'little', 'removed'), 1, 0, 0.17687017067164812)
(('little', 'removed', 'by'), 1, 0, 0.17687017067164812)
(('removed', 'by', 'matrimony'), 1, 0, 0.17687017067164812)
(('by', 'matrimony', ','), 1, 0, 0.17687017067164812)
(('matrimony', ',', 'being'), 1, 0, 0.17687017067164812)
((',', 'being', 'settled'), 1, 0, 0.17687017067164812)
(('being', 'settled', 'in'), 1, 0, 0.17687017067164812)
(('settled', 'in', 'London'), 1, 0, 0.17687017067164812)
(('in', 'London', ','), 9, 0, 6.5983606557377055)
(('London', ',', 'only'), 1, 0, 0.17687017067164812)
((',', 'only', 'sixteen'), 1, 0, 0.17687017067164812)
(('only', 'sixteen', 'miles'), 1, 0, 0.17687017067164812)
(('sixteen', 'miles', 'off'), 1, 0, 0.17687017067164812)
(('miles', 'off', ','), 1, 0, 0.17687017067164812)
(('off', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'much'), 1, 0, 0.17687017067164812)
(('was', 'much', 'beyond'), 1, 0, 0.17687017067164812)
(('much', 'beyond', 'her'), 1, 0, 0.17687017067164812)
(('beyond', 'her', 'daily'), 1, 0, 0.17687017067164812)
(('her', 'daily', 'reach'), 1, 0, 0.17687017067164812)
(('daily', 'reach', ';'), 1, 0, 0.17687017067164812)
(('reach', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'many'), 1, 0, 0.17687017067164812)
(('and', 'many', 'a'), 1, 0, 0.17687017067164812)
(('many', 'a', 'long'), 1, 0, 0.17687017067164812)
(('a', 'long', 'October'), 1, 0, 0.17687017067164812)
(('long', 'October', 'and'), 1, 0, 0.17687017067164812)
(('October', 'and', 'November'), 1, 0, 0.17687017067164812)
(('and', 'November', 'evening'), 1, 0, 0.17687017067164812)
(('November', 'evening', 'must'), 1, 0, 0.17687017067164812)
(('evening', 'must', 'be'), 1, 0, 0.17687017067164812)
(('must', 'be', 'struggled'), 1, 0, 0.17687017067164812)
(('be', 'struggled', 'through'), 1, 0, 0.17687017067164812)
(('struggled', 'through', 'at'), 1, 0, 0.17687017067164812)
(('through', 'at', 'Hartfield'), 1, 0, 0.17687017067164812)
(('at', 'Hartfield', ','), 27, 0, 14.823529411764707)
(('Hartfield', ',', 'before'), 2, 0, 0.983389342294767)
((',', 'before', 'Christmas'), 1, 0, 0.17687017067164812)
(('before', 'Christmas', 'brought'), 1, 0, 0.17687017067164812)
(('Christmas', 'brought', 'the'), 1, 0, 0.17687017067164812)
(('brought', 'the', 'next'), 1, 0, 0.17687017067164812)
(('the', 'next', 'visit'), 1, 0, 0.17687017067164812)
(('next', 'visit', 'from'), 1, 0, 0.17687017067164812)
(('visit', 'from', 'Isabella'), 1, 0, 0.17687017067164812)
(('from', 'Isabella', 'and'), 1, 0, 0.17687017067164812)
(('Isabella', 'and', 'her'), 1, 0, 0.17687017067164812)
(('and', 'her', 'husband'), 2, 0, 0.983389342294767)
(('her', 'husband', ','), 6, 0, 4.48816029143898)
(('husband', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'their'), 6, 0, 4.48816029143898)
(('and', 'their', 'little'), 1, 0, 0.17687017067164812)
(('their', 'little', 'children'), 1, 0, 0.17687017067164812)
(('little', 'children', ','), 1, 0, 0.17687017067164812)
(('children', ',', 'to'), 1, 0, 0.17687017067164812)
((',', 'to', 'fill'), 1, 0, 0.17687017067164812)
(('to', 'fill', 'the'), 1, 0, 0.17687017067164812)
(('fill', 'the', 'house'), 1, 0, 0.17687017067164812)
(('the', 'house', ','), 9, 0, 6.5983606557377055)
(('house', ',', 'and'), 7, 0, 6.295454545454546)
((',', 'and', 'give'), 4, 0, 2.9150197628458496)
(('and', 'give', 'her'), 1, 0, 0.17687017067164812)
(('give', 'her', 'pleasant'), 1, 0, 0.17687017067164812)
(('her', 'pleasant', 'society'), 1, 0, 0.17687017067164812)
(('pleasant', 'society', 'again'), 1, 0, 0.17687017067164812)
(('society', 'again', '.'), 1, 0, 0.17687017067164812)
(('again', '.', ''), 48, 0, 58.8)
(('', '', 'Highbury'), 2, 0, 0.983389342294767)
(('', 'Highbury', ','), 2, 0, 0.983389342294767)
(('Highbury', ',', 'the'), 2, 0, 0.983389342294767)
((',', 'the', 'large'), 1, 0, 0.17687017067164812)
(('the', 'large', 'and'), 1, 0, 0.17687017067164812)
(('large', 'and', 'populous'), 1, 0, 0.17687017067164812)
(('and', 'populous', 'village'), 1, 0, 0.17687017067164812)
(('populous', 'village', ','), 1, 0, 0.17687017067164812)
(('village', ',', 'almost'), 1, 0, 0.17687017067164812)
((',', 'almost', 'amounting'), 1, 0, 0.17687017067164812)
(('almost', 'amounting', 'to'), 1, 0, 0.17687017067164812)
(('amounting', 'to', 'a'), 1, 0, 0.17687017067164812)
(('to', 'a', 'town'), 1, 0, 0.17687017067164812)
(('a', 'town', ','), 1, 0, 0.17687017067164812)
(('town', ',', 'to'), 1, 0, 0.17687017067164812)
((',', 'to', 'which'), 3, 0, 1.7785588752196837)
(('to', 'which', 'Hartfield'), 1, 0, 0.17687017067164812)
(('which', 'Hartfield', ','), 1, 0, 0.17687017067164812)
(('Hartfield', ',', 'in'), 2, 0, 0.983389342294767)
((',', 'in', 'spite'), 14, 0, 11.428571428571427)
(('in', 'spite', 'of'), 20, 0, 21.0)
(('spite', 'of', 'its'), 1, 0, 0.17687017067164812)
(('of', 'its', 'separate'), 1, 0, 0.17687017067164812)
(('its', 'separate', 'lawn'), 1, 0, 0.17687017067164812)
(('separate', 'lawn', ','), 1, 0, 0.17687017067164812)
(('lawn', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'shrubberies'), 1, 0, 0.17687017067164812)
(('and', 'shrubberies', ','), 1, 0, 0.17687017067164812)
(('shrubberies', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'name'), 1, 0, 0.17687017067164812)
(('and', 'name', ','), 1, 0, 0.17687017067164812)
(('name', ',', 'did'), 1, 0, 0.17687017067164812)
((',', 'did', 'really'), 1, 0, 0.17687017067164812)
(('did', 'really', 'belong'), 1, 0, 0.17687017067164812)
(('really', 'belong', ','), 1, 0, 0.17687017067164812)
(('belong', ',', 'afforded'), 1, 0, 0.17687017067164812)
((',', 'afforded', 'her'), 1, 0, 0.17687017067164812)
(('afforded', 'her', 'no'), 1, 0, 0.17687017067164812)
(('her', 'no', 'equals'), 1, 0, 0.17687017067164812)
(('no', 'equals', '.'), 1, 0, 0.17687017067164812)
(('equals', '.', ''), 1, 0, 0.17687017067164812)
(('', 'The', 'Woodhouses'), 1, 0, 0.17687017067164812)
(('The', 'Woodhouses', 'were'), 1, 0, 0.17687017067164812)
(('Woodhouses', 'were', 'first'), 1, 0, 0.17687017067164812)
(('were', 'first', 'in'), 1, 0, 0.17687017067164812)
(('first', 'in', 'consequence'), 1, 0, 0.17687017067164812)
(('in', 'consequence', 'there'), 1, 0, 0.17687017067164812)
(('consequence', 'there', '.'), 1, 0, 0.17687017067164812)
(('there', '.', ''), 12, 0, 11.424242424242424)
(('', '', 'All'), 10, 0, 9.36024844720497)
(('', 'All', 'looked'), 1, 0, 0.17687017067164812)
(('All', 'looked', 'up'), 1, 0, 0.17687017067164812)
(('looked', 'up', 'to'), 3, 0, 1.7785588752196837)
(('up', 'to', 'them'), 1, 0, 0.17687017067164812)
(('to', 'them', '.'), 2, 0, 0.983389342294767)
(('them', '.', ''), 47, 0, 80.0)
(('She', 'had', 'many'), 1, 0, 0.17687017067164812)
(('had', 'many', 'acquaintance'), 1, 0, 0.17687017067164812)
(('many', 'acquaintance', 'in'), 1, 0, 0.17687017067164812)
(('acquaintance', 'in', 'the'), 2, 0, 0.983389342294767)
(('in', 'the', 'place'), 6, 0, 4.48816029143898)
(('the', 'place', ','), 8, 0, 7.927797833935018)
(('place', ',', 'for'), 1, 0, 0.17687017067164812)
((',', 'for', 'her'), 3, 0, 1.7785588752196837)
(('for', 'her', 'father'), 5, 0, 3.7220338983050847)
(('her', 'father', 'was'), 4, 0, 2.9150197628458496)
(('father', 'was', 'universally'), 1, 0, 0.17687017067164812)
(('was', 'universally', 'civil'), 1, 0, 0.17687017067164812)
(('universally', 'civil', ','), 1, 0, 0.17687017067164812)
(('civil', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'not'), 16, 0, 14.681818181818182)
(('but', 'not', 'one'), 1, 0, 0.17687017067164812)
(('not', 'one', 'among'), 2, 0, 0.983389342294767)
(('one', 'among', 'them'), 1, 0, 0.17687017067164812)
(('among', 'them', 'who'), 1, 0, 0.17687017067164812)
(('them', 'who', 'could'), 1, 0, 0.17687017067164812)
(('who', 'could', 'be'), 4, 0, 2.9150197628458496)
(('could', 'be', 'accepted'), 1, 0, 0.17687017067164812)
(('be', 'accepted', 'in'), 1, 0, 0.17687017067164812)
(('accepted', 'in', 'lieu'), 1, 0, 0.17687017067164812)
(('in', 'lieu', 'of'), 1, 0, 0.17687017067164812)
(('lieu', 'of', 'Miss'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', 'for'), 1, 0, 0.17687017067164812)
(('Taylor', 'for', 'even'), 1, 0, 0.17687017067164812)
(('for', 'even', 'half'), 1, 0, 0.17687017067164812)
(('even', 'half', 'a'), 2, 0, 0.983389342294767)
(('half', 'a', 'day'), 4, 0, 2.9150197628458496)
(('a', 'day', '.'), 3, 0, 1.7785588752196837)
(('It', 'was', 'a'), 31, 0, 20.571428571428573)
(('was', 'a', 'melancholy'), 1, 0, 0.17687017067164812)
(('a', 'melancholy', 'change'), 2, 0, 0.983389342294767)
(('melancholy', 'change', ';'), 1, 0, 0.17687017067164812)
(('change', ';', 'and'), 3, 0, 1.7785588752196837)
((';', 'and', 'Emma'), 26, 0, 24.157894736842106)
(('and', 'Emma', 'could'), 8, 0, 7.927797833935018)
(('Emma', 'could', 'not'), 35, 0, 25.714285714285715)
(('could', 'not', 'but'), 20, 0, 21.0)
(('not', 'but', 'sigh'), 1, 0, 0.17687017067164812)
(('but', 'sigh', 'over'), 1, 0, 0.17687017067164812)
(('sigh', 'over', 'it'), 1, 0, 0.17687017067164812)
(('over', 'it', ','), 3, 0, 1.7785588752196837)
(('it', ',', 'and'), 31, 0, 20.571428571428573)
((',', 'and', 'wish'), 3, 0, 1.7785588752196837)
(('and', 'wish', 'for'), 1, 0, 0.17687017067164812)
(('wish', 'for', 'impossible'), 1, 0, 0.17687017067164812)
(('for', 'impossible', 'things'), 1, 0, 0.17687017067164812)
(('impossible', 'things', ','), 1, 0, 0.17687017067164812)
(('things', ',', 'till'), 1, 0, 0.17687017067164812)
((',', 'till', 'her'), 3, 0, 1.7785588752196837)
(('till', 'her', 'father'), 1, 0, 0.17687017067164812)
(('her', 'father', 'awoke'), 1, 0, 0.17687017067164812)
(('father', 'awoke', ','), 1, 0, 0.17687017067164812)
(('awoke', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'made'), 7, 0, 6.295454545454546)
(('and', 'made', 'it'), 4, 0, 2.9150197628458496)
(('made', 'it', 'necessary'), 1, 0, 0.17687017067164812)
(('it', 'necessary', 'to'), 3, 0, 1.7785588752196837)
(('necessary', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'cheerful'), 1, 0, 0.17687017067164812)
(('be', 'cheerful', '.'), 1, 0, 0.17687017067164812)
(('cheerful', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'His'), 46, 0, 28.2)
(('', 'His', 'spirits'), 1, 0, 0.17687017067164812)
(('His', 'spirits', 'required'), 1, 0, 0.17687017067164812)
(('spirits', 'required', 'support'), 1, 0, 0.17687017067164812)
(('required', 'support', '.'), 1, 0, 0.17687017067164812)
(('support', '.', ''), 1, 0, 0.17687017067164812)
(('', 'He', 'was'), 54, 0, 137.5)
(('He', 'was', 'a'), 3, 0, 1.7785588752196837)
(('was', 'a', 'nervous'), 1, 0, 0.17687017067164812)
(('a', 'nervous', 'man'), 1, 0, 0.17687017067164812)
(('nervous', 'man', ','), 1, 0, 0.17687017067164812)
(('man', ',', 'easily'), 1, 0, 0.17687017067164812)
((',', 'easily', 'depressed'), 1, 0, 0.17687017067164812)
(('easily', 'depressed', ';'), 1, 0, 0.17687017067164812)
(('depressed', ';', 'fond'), 1, 0, 0.17687017067164812)
((';', 'fond', 'of'), 1, 0, 0.17687017067164812)
(('fond', 'of', 'every'), 1, 0, 0.17687017067164812)
(('of', 'every', 'body'), 8, 0, 7.927797833935018)
(('every', 'body', 'that'), 2, 0, 0.983389342294767)
(('body', 'that', 'he'), 1, 0, 0.17687017067164812)
(('that', 'he', 'was'), 19, 0, 20.0)
(('he', 'was', 'used'), 2, 0, 0.983389342294767)
(('was', 'used', 'to'), 2, 0, 0.983389342294767)
(('used', 'to', ','), 3, 0, 1.7785588752196837)
(('to', ',', 'and'), 4, 0, 2.9150197628458496)
((',', 'and', 'hating'), 1, 0, 0.17687017067164812)
(('and', 'hating', 'to'), 1, 0, 0.17687017067164812)
(('hating', 'to', 'part'), 1, 0, 0.17687017067164812)
(('to', 'part', 'with'), 7, 0, 6.295454545454546)
(('part', 'with', 'them'), 2, 0, 0.983389342294767)
(('with', 'them', ';'), 3, 0, 1.7785588752196837)
(('them', ';', 'hating'), 1, 0, 0.17687017067164812)
((';', 'hating', 'change'), 1, 0, 0.17687017067164812)
(('hating', 'change', 'of'), 1, 0, 0.17687017067164812)
(('change', 'of', 'every'), 1, 0, 0.17687017067164812)
(('of', 'every', 'kind'), 2, 0, 0.983389342294767)
(('every', 'kind', '.'), 1, 0, 0.17687017067164812)
(('kind', '.', ''), 3, 0, 1.7785588752196837)
(('', '', 'Matrimony'), 1, 0, 0.17687017067164812)
(('', 'Matrimony', ','), 1, 0, 0.17687017067164812)
(('Matrimony', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'the'), 14, 0, 11.428571428571427)
(('as', 'the', 'origin'), 1, 0, 0.17687017067164812)
(('the', 'origin', 'of'), 1, 0, 0.17687017067164812)
(('origin', 'of', 'change'), 1, 0, 0.17687017067164812)
(('of', 'change', ','), 2, 0, 0.983389342294767)
(('change', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'always'), 2, 0, 0.983389342294767)
(('was', 'always', 'disagreeable'), 1, 0, 0.17687017067164812)
(('always', 'disagreeable', ';'), 1, 0, 0.17687017067164812)
(('disagreeable', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'he'), 22, 0, 16.03030303030303)
(('and', 'he', 'was'), 11, 0, 8.671532846715328)
(('he', 'was', 'by'), 1, 0, 0.17687017067164812)
(('was', 'by', 'no'), 3, 0, 1.7785588752196837)
(('by', 'no', 'means'), 12, 0, 11.424242424242424)
(('no', 'means', 'yet'), 1, 0, 0.17687017067164812)
(('means', 'yet', 'reconciled'), 1, 0, 0.17687017067164812)
(('yet', 'reconciled', 'to'), 1, 0, 0.17687017067164812)
(('reconciled', 'to', 'his'), 1, 0, 0.17687017067164812)
(('to', 'his', 'own'), 4, 0, 2.9150197628458496)
(('his', 'own', 'daughter'), 1, 0, 0.17687017067164812)
(('own', 'daughter', "'"), 1, 0, 0.17687017067164812)
(('daughter', "'", 's'), 15, 0, 14.666666666666666)
(("'", 's', 'marrying'), 7, 0, 6.295454545454546)
(('s', 'marrying', ','), 2, 0, 0.983389342294767)
(('marrying', ',', 'nor'), 1, 0, 0.17687017067164812)
((',', 'nor', 'could'), 2, 0, 0.983389342294767)
(('nor', 'could', 'ever'), 1, 0, 0.17687017067164812)
(('could', 'ever', 'speak'), 1, 0, 0.17687017067164812)
(('ever', 'speak', 'of'), 1, 0, 0.17687017067164812)
(('speak', 'of', 'her'), 4, 0, 2.9150197628458496)
(('of', 'her', 'but'), 1, 0, 0.17687017067164812)
(('her', 'but', 'with'), 1, 0, 0.17687017067164812)
(('but', 'with', 'compassion'), 1, 0, 0.17687017067164812)
(('with', 'compassion', ','), 2, 0, 0.983389342294767)
(('compassion', ',', 'though'), 2, 0, 0.983389342294767)
((',', 'though', 'it'), 6, 0, 4.48816029143898)
(('though', 'it', 'had'), 1, 0, 0.17687017067164812)
(('it', 'had', 'been'), 20, 0, 21.0)
(('had', 'been', 'entirely'), 3, 0, 1.7785588752196837)
(('been', 'entirely', 'a'), 1, 0, 0.17687017067164812)
(('entirely', 'a', 'match'), 1, 0, 0.17687017067164812)
(('a', 'match', 'of'), 1, 0, 0.17687017067164812)
(('match', 'of', 'affection'), 1, 0, 0.17687017067164812)
(('of', 'affection', ','), 1, 0, 0.17687017067164812)
(('affection', ',', 'when'), 1, 0, 0.17687017067164812)
((',', 'when', 'he'), 10, 0, 9.36024844720497)
(('when', 'he', 'was'), 6, 0, 4.48816029143898)
(('he', 'was', 'now'), 3, 0, 1.7785588752196837)
(('was', 'now', 'obliged'), 1, 0, 0.17687017067164812)
(('now', 'obliged', 'to'), 1, 0, 0.17687017067164812)
(('obliged', 'to', 'part'), 1, 0, 0.17687017067164812)
(('part', 'with', 'Miss'), 1, 0, 0.17687017067164812)
(('with', 'Miss', 'Taylor'), 2, 0, 0.983389342294767)
(('Miss', 'Taylor', 'too'), 1, 0, 0.17687017067164812)
(('Taylor', 'too', ';'), 1, 0, 0.17687017067164812)
(('too', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'from'), 7, 0, 6.295454545454546)
(('and', 'from', 'his'), 2, 0, 0.983389342294767)
(('from', 'his', 'habits'), 1, 0, 0.17687017067164812)
(('his', 'habits', 'of'), 1, 0, 0.17687017067164812)
(('habits', 'of', 'gentle'), 1, 0, 0.17687017067164812)
(('of', 'gentle', 'selfishness'), 1, 0, 0.17687017067164812)
(('gentle', 'selfishness', ','), 1, 0, 0.17687017067164812)
(('selfishness', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'of'), 21, 0, 29.040000000000003)
(('and', 'of', 'being'), 2, 0, 0.983389342294767)
(('of', 'being', 'never'), 1, 0, 0.17687017067164812)
(('being', 'never', 'able'), 1, 0, 0.17687017067164812)
(('never', 'able', 'to'), 1, 0, 0.17687017067164812)
(('able', 'to', 'suppose'), 1, 0, 0.17687017067164812)
(('to', 'suppose', 'that'), 3, 0, 1.7785588752196837)
(('suppose', 'that', 'other'), 1, 0, 0.17687017067164812)
(('that', 'other', 'people'), 1, 0, 0.17687017067164812)
(('other', 'people', 'could'), 1, 0, 0.17687017067164812)
(('people', 'could', 'feel'), 1, 0, 0.17687017067164812)
(('could', 'feel', 'differently'), 1, 0, 0.17687017067164812)
(('feel', 'differently', 'from'), 1, 0, 0.17687017067164812)
(('differently', 'from', 'himself'), 1, 0, 0.17687017067164812)
(('from', 'himself', ','), 3, 0, 1.7785588752196837)
(('himself', ',', 'he'), 4, 0, 2.9150197628458496)
(('he', 'was', 'very'), 5, 0, 3.7220338983050847)
(('was', 'very', 'much'), 17, 0, 19.42105263157895)
(('very', 'much', 'disposed'), 2, 0, 0.983389342294767)
(('much', 'disposed', 'to'), 3, 0, 1.7785588752196837)
(('disposed', 'to', 'think'), 1, 0, 0.17687017067164812)
(('to', 'think', 'Miss'), 1, 0, 0.17687017067164812)
(('think', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Taylor', 'had', 'done'), 1, 0, 0.17687017067164812)
(('had', 'done', 'as'), 1, 0, 0.17687017067164812)
(('done', 'as', 'sad'), 1, 0, 0.17687017067164812)
(('as', 'sad', 'a'), 1, 0, 0.17687017067164812)
(('sad', 'a', 'thing'), 1, 0, 0.17687017067164812)
(('a', 'thing', 'for'), 1, 0, 0.17687017067164812)
(('thing', 'for', 'herself'), 1, 0, 0.17687017067164812)
(('for', 'herself', 'as'), 1, 0, 0.17687017067164812)
(('herself', 'as', 'for'), 1, 0, 0.17687017067164812)
(('as', 'for', 'them'), 1, 0, 0.17687017067164812)
(('for', 'them', ','), 5, 0, 3.7220338983050847)
((',', 'and', 'would'), 9, 0, 6.5983606557377055)
(('and', 'would', 'have'), 2, 0, 0.983389342294767)
(('would', 'have', 'been'), 60, 0, 15.25)
(('have', 'been', 'a'), 19, 0, 20.0)
(('been', 'a', 'great'), 4, 0, 2.9150197628458496)
(('a', 'great', 'deal'), 63, 0, 128.0)
(('great', 'deal', 'happier'), 1, 0, 0.17687017067164812)
(('deal', 'happier', 'if'), 1, 0, 0.17687017067164812)
(('happier', 'if', 'she'), 1, 0, 0.17687017067164812)
(('if', 'she', 'had'), 5, 0, 3.7220338983050847)
(('she', 'had', 'spent'), 2, 0, 0.983389342294767)
(('had', 'spent', 'all'), 1, 0, 0.17687017067164812)
(('spent', 'all', 'the'), 1, 0, 0.17687017067164812)
(('all', 'the', 'rest'), 15, 0, 14.666666666666666)
(('the', 'rest', 'of'), 23, 0, 14.608695652173914)
(('rest', 'of', 'her'), 4, 0, 2.9150197628458496)
(('of', 'her', 'life'), 4, 0, 2.9150197628458496)
(('her', 'life', 'at'), 1, 0, 0.17687017067164812)
(('life', 'at', 'Hartfield'), 1, 0, 0.17687017067164812)
(('at', 'Hartfield', '.'), 10, 0, 9.36024844720497)
(('Hartfield', '.', ''), 21, 0, 29.040000000000003)
(('', 'Emma', 'smiled'), 3, 0, 1.7785588752196837)
(('Emma', 'smiled', 'and'), 2, 0, 0.983389342294767)
(('smiled', 'and', 'chatted'), 1, 0, 0.17687017067164812)
(('and', 'chatted', 'as'), 1, 0, 0.17687017067164812)
(('chatted', 'as', 'cheerfully'), 1, 0, 0.17687017067164812)
(('as', 'cheerfully', 'as'), 1, 0, 0.17687017067164812)
(('cheerfully', 'as', 'she'), 1, 0, 0.17687017067164812)
(('as', 'she', 'could'), 18, 0, 11.585365853658537)
(('she', 'could', ','), 5, 0, 3.7220338983050847)
(('could', ',', 'to'), 2, 0, 0.983389342294767)
((',', 'to', 'keep'), 3, 0, 1.7785588752196837)
(('to', 'keep', 'him'), 3, 0, 1.7785588752196837)
(('keep', 'him', 'from'), 2, 0, 0.983389342294767)
(('him', 'from', 'such'), 1, 0, 0.17687017067164812)
(('from', 'such', 'thoughts'), 1, 0, 0.17687017067164812)
(('such', 'thoughts', ';'), 1, 0, 0.17687017067164812)
(('thoughts', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'when'), 13, 0, 10.137931034482758)
(('but', 'when', 'tea'), 1, 0, 0.17687017067164812)
(('when', 'tea', 'came'), 1, 0, 0.17687017067164812)
(('tea', 'came', ','), 1, 0, 0.17687017067164812)
(('came', ',', 'it'), 1, 0, 0.17687017067164812)
((',', 'it', 'was'), 57, 0, 116.0)
(('it', 'was', 'impossible'), 5, 0, 3.7220338983050847)
(('was', 'impossible', 'for'), 2, 0, 0.983389342294767)
(('impossible', 'for', 'him'), 2, 0, 0.983389342294767)
(('for', 'him', 'not'), 1, 0, 0.17687017067164812)
(('him', 'not', 'to'), 2, 0, 0.983389342294767)
(('not', 'to', 'say'), 2, 0, 0.983389342294767)
(('to', 'say', 'exactly'), 1, 0, 0.17687017067164812)
(('say', 'exactly', 'as'), 1, 0, 0.17687017067164812)
(('exactly', 'as', 'he'), 1, 0, 0.17687017067164812)
(('as', 'he', 'had'), 8, 0, 7.927797833935018)
(('he', 'had', 'said'), 2, 0, 0.983389342294767)
(('had', 'said', 'at'), 1, 0, 0.17687017067164812)
(('said', 'at', 'dinner'), 1, 0, 0.17687017067164812)
(('at', 'dinner', ','), 3, 0, 1.7785588752196837)
(('dinner', ',', ''), 1, 0, 0.17687017067164812)
((',', '', ''), 112, 0, 0.0)
(('', '', '"'), 1555, 0, 0.0)
(('', '"', 'Poor'), 9, 0, 6.5983606557377055)
(('"', 'Poor', 'Miss'), 1, 0, 0.17687017067164812)
(('Poor', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', '!--'), 1, 0, 0.17687017067164812)
(('Taylor', '!--', 'I'), 1, 0, 0.17687017067164812)
(('!--', 'I', 'wish'), 1, 0, 0.17687017067164812)
(('I', 'wish', 'she'), 1, 0, 0.17687017067164812)
(('wish', 'she', 'were'), 1, 0, 0.17687017067164812)
(('she', 'were', 'here'), 1, 0, 0.17687017067164812)
(('were', 'here', 'again'), 1, 0, 0.17687017067164812)
(('here', 'again', '.'), 1, 0, 0.17687017067164812)
(('', '', 'What'), 55, 0, 33.6)
(('', 'What', 'a'), 8, 0, 7.927797833935018)
(('What', 'a', 'pity'), 1, 0, 0.17687017067164812)
(('a', 'pity', 'it'), 1, 0, 0.17687017067164812)
(('pity', 'it', 'is'), 1, 0, 0.17687017067164812)
(('it', 'is', 'that'), 4, 0, 2.9150197628458496)
(('is', 'that', 'Mr'), 1, 0, 0.17687017067164812)
(('that', 'Mr', '.'), 38, 0, 61.285714285714285)
(('.', 'Weston', 'ever'), 1, 0, 0.17687017067164812)
(('Weston', 'ever', 'thought'), 1, 0, 0.17687017067164812)
(('ever', 'thought', 'of'), 1, 0, 0.17687017067164812)
(('thought', 'of', 'her'), 3, 0, 1.7785588752196837)
(('of', 'her', '!"'), 2, 0, 0.983389342294767)
(('her', '!"', ''), 5, 0, 3.7220338983050847)
(('!"', '', ''), 160, 0, 0.0)
(('', '"', 'I'), 244, 0, 0.0)
(('"', 'I', 'cannot'), 13, 0, 10.137931034482758)
(('I', 'cannot', 'agree'), 2, 0, 0.983389342294767)
(('cannot', 'agree', 'with'), 2, 0, 0.983389342294767)
(('agree', 'with', 'you'), 5, 0, 3.7220338983050847)
(('with', 'you', ','), 9, 0, 6.5983606557377055)
(('you', ',', 'papa'), 1, 0, 0.17687017067164812)
((',', 'papa', ';'), 5, 0, 3.7220338983050847)
(('papa', ';', 'you'), 1, 0, 0.17687017067164812)
((';', 'you', 'know'), 1, 0, 0.17687017067164812)
(('you', 'know', 'I'), 3, 0, 1.7785588752196837)
(('know', 'I', 'cannot'), 1, 0, 0.17687017067164812)
(('I', 'cannot', '.'), 1, 0, 0.17687017067164812)
(('cannot', '.', ''), 1, 0, 0.17687017067164812)
(('.', 'Weston', 'is'), 6, 0, 4.48816029143898)
(('Weston', 'is', 'such'), 1, 0, 0.17687017067164812)
(('is', 'such', 'a'), 9, 0, 6.5983606557377055)
(('such', 'a', 'good'), 2, 0, 0.983389342294767)
(('a', 'good', '-'), 5, 0, 3.7220338983050847)
(('good', '-', 'humoured'), 6, 0, 4.48816029143898)
(('-', 'humoured', ','), 4, 0, 2.9150197628458496)
(('humoured', ',', 'pleasant'), 1, 0, 0.17687017067164812)
((',', 'pleasant', ','), 1, 0, 0.17687017067164812)
(('pleasant', ',', 'excellent'), 1, 0, 0.17687017067164812)
((',', 'excellent', 'man'), 1, 0, 0.17687017067164812)
(('excellent', 'man', ','), 1, 0, 0.17687017067164812)
(('man', ',', 'that'), 1, 0, 0.17687017067164812)
((',', 'that', 'he'), 41, 0, 21.0)
(('that', 'he', 'thoroughly'), 1, 0, 0.17687017067164812)
(('he', 'thoroughly', 'deserves'), 1, 0, 0.17687017067164812)
(('thoroughly', 'deserves', 'a'), 1, 0, 0.17687017067164812)
(('deserves', 'a', 'good'), 1, 0, 0.17687017067164812)
(('a', 'good', 'wife'), 3, 0, 1.7785588752196837)
(('good', 'wife', ';--'), 1, 0, 0.17687017067164812)
(('wife', ';--', 'and'), 1, 0, 0.17687017067164812)
((';--', 'and', 'you'), 2, 0, 0.983389342294767)
(('and', 'you', 'would'), 2, 0, 0.983389342294767)
(('you', 'would', 'not'), 12, 0, 11.424242424242424)
(('would', 'not', 'have'), 33, 0, 22.666666666666664)
(('not', 'have', 'had'), 3, 0, 1.7785588752196837)
(('have', 'had', 'Miss'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', 'live'), 1, 0, 0.17687017067164812)
(('Taylor', 'live', 'with'), 1, 0, 0.17687017067164812)
(('live', 'with', 'us'), 1, 0, 0.17687017067164812)
(('with', 'us', 'for'), 1, 0, 0.17687017067164812)
(('us', 'for', 'ever'), 1, 0, 0.17687017067164812)
(('for', 'ever', ','), 3, 0, 1.7785588752196837)
(('ever', ',', 'and'), 4, 0, 2.9150197628458496)
((',', 'and', 'bear'), 1, 0, 0.17687017067164812)
(('and', 'bear', 'all'), 1, 0, 0.17687017067164812)
(('bear', 'all', 'my'), 1, 0, 0.17687017067164812)
(('all', 'my', 'odd'), 1, 0, 0.17687017067164812)
(('my', 'odd', 'humours'), 1, 0, 0.17687017067164812)
(('odd', 'humours', ','), 2, 0, 0.983389342294767)
(('humours', ',', 'when'), 1, 0, 0.17687017067164812)
((',', 'when', 'she'), 13, 0, 10.137931034482758)
(('when', 'she', 'might'), 2, 0, 0.983389342294767)
(('she', 'might', 'have'), 6, 0, 4.48816029143898)
(('might', 'have', 'a'), 3, 0, 1.7785588752196837)
(('have', 'a', 'house'), 1, 0, 0.17687017067164812)
(('a', 'house', 'of'), 2, 0, 0.983389342294767)
(('house', 'of', 'her'), 3, 0, 1.7785588752196837)
(('of', 'her', 'own'), 31, 0, 20.571428571428573)
(('her', 'own', '?"'), 1, 0, 0.17687017067164812)
(('own', '?"', ''), 1, 0, 0.17687017067164812)
(('?"', '', ''), 238, 0, 0.0)
(('', '"', 'A'), 13, 0, 10.137931034482758)
(('"', 'A', 'house'), 1, 0, 0.17687017067164812)
(('A', 'house', 'of'), 1, 0, 0.17687017067164812)
(('her', 'own', '!--'), 1, 0, 0.17687017067164812)
(('own', '!--', 'But'), 1, 0, 0.17687017067164812)
(('!--', 'But', 'where'), 1, 0, 0.17687017067164812)
(('But', 'where', 'is'), 1, 0, 0.17687017067164812)
(('where', 'is', 'the'), 1, 0, 0.17687017067164812)
(('is', 'the', 'advantage'), 1, 0, 0.17687017067164812)
(('the', 'advantage', 'of'), 7, 0, 6.295454545454546)
(('advantage', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'house'), 2, 0, 0.983389342294767)
(('her', 'own', '?'), 1, 0, 0.17687017067164812)
(('own', '?', ''), 1, 0, 0.17687017067164812)
(('?', '', ''), 174, 0, 0.0)
(('', '', 'This'), 78, 0, 26.333333333333332)
(('', 'This', 'is'), 20, 0, 21.0)
(('This', 'is', 'three'), 1, 0, 0.17687017067164812)
(('is', 'three', 'times'), 1, 0, 0.17687017067164812)
(('three', 'times', 'as'), 1, 0, 0.17687017067164812)
(('times', 'as', 'large'), 1, 0, 0.17687017067164812)
(('as', 'large', '.--'), 1, 0, 0.17687017067164812)
(('large', '.--', 'And'), 1, 0, 0.17687017067164812)
(('.--', 'And', 'you'), 1, 0, 0.17687017067164812)
(('And', 'you', 'have'), 2, 0, 0.983389342294767)
(('you', 'have', 'never'), 4, 0, 2.9150197628458496)
(('have', 'never', 'any'), 1, 0, 0.17687017067164812)
(('never', 'any', 'odd'), 1, 0, 0.17687017067164812)
(('any', 'odd', 'humours'), 1, 0, 0.17687017067164812)
(('humours', ',', 'my'), 1, 0, 0.17687017067164812)
((',', 'my', 'dear'), 87, 0, 176.0)
(('my', 'dear', '."'), 2, 0, 0.983389342294767)
(('dear', '."', ''), 2, 0, 0.983389342294767)
(('."', '', ''), 1157, 0, 0.0)
(('', '"', 'How'), 18, 0, 11.585365853658537)
(('"', 'How', 'often'), 2, 0, 0.983389342294767)
(('How', 'often', 'we'), 1, 0, 0.17687017067164812)
(('often', 'we', 'shall'), 1, 0, 0.17687017067164812)
(('we', 'shall', 'be'), 6, 0, 4.48816029143898)
(('shall', 'be', 'going'), 1, 0, 0.17687017067164812)
(('be', 'going', 'to'), 2, 0, 0.983389342294767)
(('going', 'to', 'see'), 1, 0, 0.17687017067164812)
(('to', 'see', 'them'), 4, 0, 2.9150197628458496)
(('see', 'them', ','), 1, 0, 0.17687017067164812)
((',', 'and', 'they'), 9, 0, 6.5983606557377055)
(('and', 'they', 'coming'), 1, 0, 0.17687017067164812)
(('they', 'coming', 'to'), 1, 0, 0.17687017067164812)
(('coming', 'to', 'see'), 2, 0, 0.983389342294767)
(('to', 'see', 'us'), 1, 0, 0.17687017067164812)
(('see', 'us', '!--'), 1, 0, 0.17687017067164812)
(('us', '!--', 'We'), 1, 0, 0.17687017067164812)
(('!--', 'We', 'shall'), 1, 0, 0.17687017067164812)
(('We', 'shall', 'be'), 2, 0, 0.983389342294767)
(('shall', 'be', 'always'), 1, 0, 0.17687017067164812)
(('be', 'always', 'meeting'), 1, 0, 0.17687017067164812)
(('always', 'meeting', '!'), 1, 0, 0.17687017067164812)
(('meeting', '!', ''), 1, 0, 0.17687017067164812)
(('!', '', ''), 549, 0, 0.0)
(('', '', '_We_'), 2, 0, 0.983389342294767)
(('', '_We_', 'must'), 1, 0, 0.17687017067164812)
(('_We_', 'must', 'begin'), 1, 0, 0.17687017067164812)
(('must', 'begin', ';'), 1, 0, 0.17687017067164812)
(('begin', ';', 'we'), 1, 0, 0.17687017067164812)
((';', 'we', 'must'), 1, 0, 0.17687017067164812)
(('we', 'must', 'go'), 1, 0, 0.17687017067164812)
(('must', 'go', 'and'), 5, 0, 3.7220338983050847)
(('go', 'and', 'pay'), 1, 0, 0.17687017067164812)
(('and', 'pay', 'wedding'), 1, 0, 0.17687017067164812)
(('pay', 'wedding', 'visit'), 1, 0, 0.17687017067164812)
(('wedding', 'visit', 'very'), 1, 0, 0.17687017067164812)
(('visit', 'very', 'soon'), 1, 0, 0.17687017067164812)
(('very', 'soon', '."'), 2, 0, 0.983389342294767)
(('soon', '."', ''), 5, 0, 3.7220338983050847)
(('', '"', 'My'), 41, 0, 21.0)
(('"', 'My', 'dear'), 22, 0, 16.03030303030303)
(('My', 'dear', ','), 6, 0, 4.48816029143898)
(('dear', ',', 'how'), 1, 0, 0.17687017067164812)
((',', 'how', 'am'), 2, 0, 0.983389342294767)
(('how', 'am', 'I'), 2, 0, 0.983389342294767)
(('am', 'I', 'to'), 2, 0, 0.983389342294767)
(('I', 'to', 'get'), 1, 0, 0.17687017067164812)
(('to', 'get', 'so'), 2, 0, 0.983389342294767)
(('get', 'so', 'far'), 2, 0, 0.983389342294767)
(('so', 'far', '?'), 1, 0, 0.17687017067164812)
(('far', '?', ''), 1, 0, 0.17687017067164812)
(('', '', 'Randalls'), 1, 0, 0.17687017067164812)
(('', 'Randalls', 'is'), 1, 0, 0.17687017067164812)
(('Randalls', 'is', 'such'), 1, 0, 0.17687017067164812)
(('such', 'a', 'distance'), 3, 0, 1.7785588752196837)
(('a', 'distance', '.'), 1, 0, 0.17687017067164812)
(('distance', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'I'), 650, 0, 0.0)
(('', 'I', 'could'), 20, 0, 21.0)
(('I', 'could', 'not'), 35, 0, 25.714285714285715)
(('could', 'not', 'walk'), 1, 0, 0.17687017067164812)
(('not', 'walk', 'half'), 1, 0, 0.17687017067164812)
(('walk', 'half', 'so'), 1, 0, 0.17687017067164812)
(('half', 'so', 'far'), 1, 0, 0.17687017067164812)
(('so', 'far', '."'), 1, 0, 0.17687017067164812)
(('far', '."', ''), 1, 0, 0.17687017067164812)
(('', '"', 'No'), 51, 0, 26.0)
(('"', 'No', ','), 37, 0, 44.333333333333336)
(('No', ',', 'papa'), 1, 0, 0.17687017067164812)
((',', 'papa', ','), 6, 0, 4.48816029143898)
(('papa', ',', 'nobody'), 1, 0, 0.17687017067164812)
((',', 'nobody', 'thought'), 1, 0, 0.17687017067164812)
(('nobody', 'thought', 'of'), 1, 0, 0.17687017067164812)
(('thought', 'of', 'your'), 1, 0, 0.17687017067164812)
(('of', 'your', 'walking'), 1, 0, 0.17687017067164812)
(('your', 'walking', '.'), 1, 0, 0.17687017067164812)
(('walking', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'We'), 60, 0, 15.25)
(('', 'We', 'must'), 9, 0, 6.5983606557377055)
(('We', 'must', 'go'), 1, 0, 0.17687017067164812)
(('must', 'go', 'in'), 2, 0, 0.983389342294767)
(('go', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'carriage'), 5, 0, 3.7220338983050847)
(('the', 'carriage', ','), 7, 0, 6.295454545454546)
(('carriage', ',', 'to'), 1, 0, 0.17687017067164812)
((',', 'to', 'be'), 38, 0, 61.285714285714285)
(('to', 'be', 'sure'), 16, 0, 14.681818181818182)
(('be', 'sure', '."'), 1, 0, 0.17687017067164812)
(('sure', '."', ''), 3, 0, 1.7785588752196837)
(('', '"', 'The'), 12, 0, 11.424242424242424)
(('"', 'The', 'carriage'), 1, 0, 0.17687017067164812)
(('The', 'carriage', '!'), 1, 0, 0.17687017067164812)
(('carriage', '!', ''), 2, 0, 0.983389342294767)
(('', '', 'But'), 183, 0, 0.0)
(('', 'But', 'James'), 1, 0, 0.17687017067164812)
(('But', 'James', 'will'), 1, 0, 0.17687017067164812)
(('James', 'will', 'not'), 1, 0, 0.17687017067164812)
(('will', 'not', 'like'), 5, 0, 3.7220338983050847)
(('not', 'like', 'to'), 4, 0, 2.9150197628458496)
(('like', 'to', 'put'), 1, 0, 0.17687017067164812)
(('to', 'put', 'the'), 3, 0, 1.7785588752196837)
(('put', 'the', 'horses'), 2, 0, 0.983389342294767)
(('the', 'horses', 'to'), 2, 0, 0.983389342294767)
(('horses', 'to', 'for'), 1, 0, 0.17687017067164812)
(('to', 'for', 'such'), 2, 0, 0.983389342294767)
(('for', 'such', 'a'), 4, 0, 2.9150197628458496)
(('such', 'a', 'little'), 2, 0, 0.983389342294767)
(('a', 'little', 'way'), 3, 0, 1.7785588752196837)
(('little', 'way', ';--'), 1, 0, 0.17687017067164812)
(('way', ';--', 'and'), 1, 0, 0.17687017067164812)
((';--', 'and', 'where'), 1, 0, 0.17687017067164812)
(('and', 'where', 'are'), 1, 0, 0.17687017067164812)
(('where', 'are', 'the'), 1, 0, 0.17687017067164812)
(('are', 'the', 'poor'), 1, 0, 0.17687017067164812)
(('the', 'poor', 'horses'), 1, 0, 0.17687017067164812)
(('poor', 'horses', 'to'), 1, 0, 0.17687017067164812)
(('horses', 'to', 'be'), 2, 0, 0.983389342294767)
(('to', 'be', 'while'), 1, 0, 0.17687017067164812)
(('be', 'while', 'we'), 1, 0, 0.17687017067164812)
(('while', 'we', 'are'), 1, 0, 0.17687017067164812)
(('we', 'are', 'paying'), 1, 0, 0.17687017067164812)
(('are', 'paying', 'our'), 1, 0, 0.17687017067164812)
(('paying', 'our', 'visit'), 1, 0, 0.17687017067164812)
(('our', 'visit', '?"'), 1, 0, 0.17687017067164812)
(('visit', '?"', ''), 1, 0, 0.17687017067164812)
(('', '"', 'They'), 9, 0, 6.5983606557377055)
(('"', 'They', 'are'), 2, 0, 0.983389342294767)
(('They', 'are', 'to'), 2, 0, 0.983389342294767)
(('are', 'to', 'be'), 5, 0, 3.7220338983050847)
(('to', 'be', 'put'), 3, 0, 1.7785588752196837)
(('be', 'put', 'into'), 1, 0, 0.17687017067164812)
(('put', 'into', 'Mr'), 1, 0, 0.17687017067164812)
(('into', 'Mr', '.'), 3, 0, 1.7785588752196837)
(('.', 'Weston', "'"), 51, 0, 26.0)
(('Weston', "'", 's'), 51, 0, 26.0)
(("'", 's', 'stable'), 1, 0, 0.17687017067164812)
(('s', 'stable', ','), 1, 0, 0.17687017067164812)
(('stable', ',', 'papa'), 1, 0, 0.17687017067164812)
((',', 'papa', '.'), 4, 0, 2.9150197628458496)
(('papa', '.', ''), 4, 0, 2.9150197628458496)
(('', '', 'You'), 168, 0, 0.0)
(('', 'You', 'know'), 5, 0, 3.7220338983050847)
(('You', 'know', 'we'), 1, 0, 0.17687017067164812)
(('know', 'we', 'have'), 1, 0, 0.17687017067164812)
(('we', 'have', 'settled'), 1, 0, 0.17687017067164812)
(('have', 'settled', 'all'), 1, 0, 0.17687017067164812)
(('settled', 'all', 'that'), 1, 0, 0.17687017067164812)
(('all', 'that', 'already'), 1, 0, 0.17687017067164812)
(('that', 'already', '.'), 1, 0, 0.17687017067164812)
(('already', '.', ''), 8, 0, 7.927797833935018)
(('', 'We', 'talked'), 1, 0, 0.17687017067164812)
(('We', 'talked', 'it'), 1, 0, 0.17687017067164812)
(('talked', 'it', 'all'), 3, 0, 1.7785588752196837)
(('it', 'all', 'over'), 4, 0, 2.9150197628458496)
(('all', 'over', 'with'), 1, 0, 0.17687017067164812)
(('over', 'with', 'Mr'), 1, 0, 0.17687017067164812)
(('with', 'Mr', '.'), 30, 0, 31.0)
(('.', 'Weston', 'last'), 1, 0, 0.17687017067164812)
(('Weston', 'last', 'night'), 1, 0, 0.17687017067164812)
(('last', 'night', '.'), 4, 0, 2.9150197628458496)
(('night', '.', ''), 9, 0, 6.5983606557377055)
(('', '', 'And'), 136, 0, 0.0)
(('', 'And', 'as'), 11, 0, 8.671532846715328)
(('And', 'as', 'for'), 4, 0, 2.9150197628458496)
(('as', 'for', 'James'), 1, 0, 0.17687017067164812)
(('for', 'James', ','), 1, 0, 0.17687017067164812)
(('James', ',', 'you'), 1, 0, 0.17687017067164812)
((',', 'you', 'may'), 7, 0, 6.295454545454546)
(('you', 'may', 'be'), 4, 0, 2.9150197628458496)
(('may', 'be', 'very'), 4, 0, 2.9150197628458496)
(('be', 'very', 'sure'), 3, 0, 1.7785588752196837)
(('very', 'sure', 'he'), 2, 0, 0.983389342294767)
(('sure', 'he', 'will'), 1, 0, 0.17687017067164812)
(('he', 'will', 'always'), 1, 0, 0.17687017067164812)
(('will', 'always', 'like'), 1, 0, 0.17687017067164812)
(('always', 'like', 'going'), 1, 0, 0.17687017067164812)
(('like', 'going', 'to'), 1, 0, 0.17687017067164812)
(('going', 'to', 'Randalls'), 1, 0, 0.17687017067164812)
(('to', 'Randalls', ','), 2, 0, 0.983389342294767)
(('Randalls', ',', 'because'), 1, 0, 0.17687017067164812)
((',', 'because', 'of'), 2, 0, 0.983389342294767)
(('because', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'daughter'), 3, 0, 1.7785588752196837)
(('his', 'daughter', "'"), 10, 0, 9.36024844720497)
(("'", 's', 'being'), 23, 0, 14.608695652173914)
(('s', 'being', 'housemaid'), 1, 0, 0.17687017067164812)
(('being', 'housemaid', 'there'), 1, 0, 0.17687017067164812)
(('housemaid', 'there', '.'), 1, 0, 0.17687017067164812)
(('', 'I', 'only'), 4, 0, 2.9150197628458496)
(('I', 'only', 'doubt'), 1, 0, 0.17687017067164812)
(('only', 'doubt', 'whether'), 1, 0, 0.17687017067164812)
(('doubt', 'whether', 'he'), 2, 0, 0.983389342294767)
(('whether', 'he', 'will'), 2, 0, 0.983389342294767)
(('he', 'will', 'ever'), 1, 0, 0.17687017067164812)
(('will', 'ever', 'take'), 2, 0, 0.983389342294767)
(('ever', 'take', 'us'), 1, 0, 0.17687017067164812)
(('take', 'us', 'anywhere'), 1, 0, 0.17687017067164812)
(('us', 'anywhere', 'else'), 1, 0, 0.17687017067164812)
(('anywhere', 'else', '.'), 1, 0, 0.17687017067164812)
(('else', '.', ''), 14, 0, 11.428571428571427)
(('', '', 'That'), 44, 0, 33.75)
(('', 'That', 'was'), 8, 0, 7.927797833935018)
(('That', 'was', 'your'), 2, 0, 0.983389342294767)
(('was', 'your', 'doing'), 1, 0, 0.17687017067164812)
(('your', 'doing', ','), 1, 0, 0.17687017067164812)
(('doing', ',', 'papa'), 1, 0, 0.17687017067164812)
(('', 'You', 'got'), 1, 0, 0.17687017067164812)
(('You', 'got', 'Hannah'), 1, 0, 0.17687017067164812)
(('got', 'Hannah', 'that'), 1, 0, 0.17687017067164812)
(('Hannah', 'that', 'good'), 1, 0, 0.17687017067164812)
(('that', 'good', 'place'), 1, 0, 0.17687017067164812)
(('good', 'place', '.'), 1, 0, 0.17687017067164812)
(('place', '.', ''), 16, 0, 14.681818181818182)
(('', '', 'Nobody'), 11, 0, 8.671532846715328)
(('', 'Nobody', 'thought'), 1, 0, 0.17687017067164812)
(('Nobody', 'thought', 'of'), 1, 0, 0.17687017067164812)
(('thought', 'of', 'Hannah'), 1, 0, 0.17687017067164812)
(('of', 'Hannah', 'till'), 1, 0, 0.17687017067164812)
(('Hannah', 'till', 'you'), 1, 0, 0.17687017067164812)
(('till', 'you', 'mentioned'), 1, 0, 0.17687017067164812)
(('you', 'mentioned', 'her'), 1, 0, 0.17687017067164812)
(('mentioned', 'her', '--'), 1, 0, 0.17687017067164812)
(('her', '--', 'James'), 1, 0, 0.17687017067164812)
(('--', 'James', 'is'), 1, 0, 0.17687017067164812)
(('James', 'is', 'so'), 1, 0, 0.17687017067164812)
(('is', 'so', 'obliged'), 1, 0, 0.17687017067164812)
(('so', 'obliged', 'to'), 2, 0, 0.983389342294767)
(('obliged', 'to', 'you'), 14, 0, 11.428571428571427)
(('to', 'you', '!"'), 1, 0, 0.17687017067164812)
(('you', '!"', ''), 2, 0, 0.983389342294767)
(('"', 'I', 'am'), 48, 0, 58.8)
(('I', 'am', 'very'), 28, 0, 41.888888888888886)
(('am', 'very', 'glad'), 3, 0, 1.7785588752196837)
(('very', 'glad', 'I'), 1, 0, 0.17687017067164812)
(('glad', 'I', 'did'), 1, 0, 0.17687017067164812)
(('I', 'did', 'think'), 1, 0, 0.17687017067164812)
(('did', 'think', 'of'), 2, 0, 0.983389342294767)
(('think', 'of', 'her'), 5, 0, 3.7220338983050847)
(('of', 'her', '.'), 8, 0, 7.927797833935018)
(('It', 'was', 'very'), 3, 0, 1.7785588752196837)
(('was', 'very', 'lucky'), 1, 0, 0.17687017067164812)
(('very', 'lucky', ','), 1, 0, 0.17687017067164812)
(('lucky', ',', 'for'), 1, 0, 0.17687017067164812)
((',', 'for', 'I'), 9, 0, 6.5983606557377055)
(('for', 'I', 'would'), 1, 0, 0.17687017067164812)
(('I', 'would', 'not'), 24, 0, 39.285714285714285)
(('have', 'had', 'poor'), 1, 0, 0.17687017067164812)
(('had', 'poor', 'James'), 1, 0, 0.17687017067164812)
(('poor', 'James', 'think'), 1, 0, 0.17687017067164812)
(('James', 'think', 'himself'), 1, 0, 0.17687017067164812)
(('think', 'himself', 'slighted'), 1, 0, 0.17687017067164812)
(('himself', 'slighted', 'upon'), 1, 0, 0.17687017067164812)
(('slighted', 'upon', 'any'), 1, 0, 0.17687017067164812)
(('upon', 'any', 'account'), 1, 0, 0.17687017067164812)
(('any', 'account', ';'), 1, 0, 0.17687017067164812)
(('account', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'I'), 51, 0, 26.0)
(('and', 'I', 'am'), 22, 0, 16.03030303030303)
(('I', 'am', 'sure'), 109, 0, 110.0)
(('am', 'sure', 'she'), 12, 0, 11.424242424242424)
(('sure', 'she', 'will'), 5, 0, 3.7220338983050847)
(('she', 'will', 'make'), 2, 0, 0.983389342294767)
(('will', 'make', 'a'), 2, 0, 0.983389342294767)
(('make', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'good'), 22, 0, 16.03030303030303)
(('very', 'good', 'servant'), 1, 0, 0.17687017067164812)
(('good', 'servant', ':'), 1, 0, 0.17687017067164812)
(('servant', ':', 'she'), 1, 0, 0.17687017067164812)
((':', 'she', 'is'), 2, 0, 0.983389342294767)
(('she', 'is', 'a'), 9, 0, 6.5983606557377055)
(('is', 'a', 'civil'), 1, 0, 0.17687017067164812)
(('a', 'civil', ','), 1, 0, 0.17687017067164812)
(('civil', ',', 'pretty'), 1, 0, 0.17687017067164812)
((',', 'pretty', '-'), 2, 0, 0.983389342294767)
(('pretty', '-', 'spoken'), 1, 0, 0.17687017067164812)
(('-', 'spoken', 'girl'), 1, 0, 0.17687017067164812)
(('spoken', 'girl', ';'), 1, 0, 0.17687017067164812)
(('girl', ';', 'I'), 1, 0, 0.17687017067164812)
((';', 'I', 'have'), 4, 0, 2.9150197628458496)
(('I', 'have', 'a'), 19, 0, 20.0)
(('have', 'a', 'great'), 14, 0, 11.428571428571427)
(('a', 'great', 'opinion'), 2, 0, 0.983389342294767)
(('great', 'opinion', 'of'), 2, 0, 0.983389342294767)
(('opinion', 'of', 'her'), 2, 0, 0.983389342294767)
(('', '', 'Whenever'), 4, 0, 2.9150197628458496)
(('', 'Whenever', 'I'), 1, 0, 0.17687017067164812)
(('Whenever', 'I', 'see'), 1, 0, 0.17687017067164812)
(('I', 'see', 'her'), 1, 0, 0.17687017067164812)
(('see', 'her', ','), 2, 0, 0.983389342294767)
(('her', ',', 'she'), 9, 0, 6.5983606557377055)
((',', 'she', 'always'), 1, 0, 0.17687017067164812)
(('she', 'always', 'curtseys'), 1, 0, 0.17687017067164812)
(('always', 'curtseys', 'and'), 1, 0, 0.17687017067164812)
(('curtseys', 'and', 'asks'), 1, 0, 0.17687017067164812)
(('and', 'asks', 'me'), 1, 0, 0.17687017067164812)
(('asks', 'me', 'how'), 1, 0, 0.17687017067164812)
(('me', 'how', 'I'), 2, 0, 0.983389342294767)
(('how', 'I', 'do'), 1, 0, 0.17687017067164812)
(('I', 'do', ','), 2, 0, 0.983389342294767)
(('do', ',', 'in'), 1, 0, 0.17687017067164812)
((',', 'in', 'a'), 32, 0, 33.0)
(('in', 'a', 'very'), 11, 0, 8.671532846715328)
(('a', 'very', 'pretty'), 11, 0, 8.671532846715328)
(('very', 'pretty', 'manner'), 1, 0, 0.17687017067164812)
(('pretty', 'manner', ';'), 1, 0, 0.17687017067164812)
(('manner', ';', 'and'), 3, 0, 1.7785588752196837)
((';', 'and', 'when'), 28, 0, 41.888888888888886)
(('and', 'when', 'you'), 3, 0, 1.7785588752196837)
(('when', 'you', 'have'), 1, 0, 0.17687017067164812)
(('you', 'have', 'had'), 3, 0, 1.7785588752196837)
(('have', 'had', 'her'), 1, 0, 0.17687017067164812)
(('had', 'her', 'here'), 1, 0, 0.17687017067164812)
(('her', 'here', 'to'), 1, 0, 0.17687017067164812)
(('here', 'to', 'do'), 1, 0, 0.17687017067164812)
(('to', 'do', 'needlework'), 1, 0, 0.17687017067164812)
(('do', 'needlework', ','), 1, 0, 0.17687017067164812)
(('needlework', ',', 'I'), 1, 0, 0.17687017067164812)
((',', 'I', 'observe'), 2, 0, 0.983389342294767)
(('I', 'observe', 'she'), 1, 0, 0.17687017067164812)
(('observe', 'she', 'always'), 1, 0, 0.17687017067164812)
(('she', 'always', 'turns'), 1, 0, 0.17687017067164812)
(('always', 'turns', 'the'), 1, 0, 0.17687017067164812)
(('turns', 'the', 'lock'), 1, 0, 0.17687017067164812)
(('the', 'lock', 'of'), 1, 0, 0.17687017067164812)
(('lock', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'door'), 1, 0, 0.17687017067164812)
(('the', 'door', 'the'), 1, 0, 0.17687017067164812)
(('door', 'the', 'right'), 1, 0, 0.17687017067164812)
(('the', 'right', 'way'), 1, 0, 0.17687017067164812)
(('right', 'way', 'and'), 1, 0, 0.17687017067164812)
(('way', 'and', 'never'), 1, 0, 0.17687017067164812)
(('and', 'never', 'bangs'), 1, 0, 0.17687017067164812)
(('never', 'bangs', 'it'), 1, 0, 0.17687017067164812)
(('bangs', 'it', '.'), 1, 0, 0.17687017067164812)
(('it', '.', ''), 158, 0, 0.0)
(('', 'I', 'am'), 90, 0, 91.0)
(('she', 'will', 'be'), 9, 0, 6.5983606557377055)
(('will', 'be', 'an'), 5, 0, 3.7220338983050847)
(('be', 'an', 'excellent'), 3, 0, 1.7785588752196837)
(('an', 'excellent', 'servant'), 1, 0, 0.17687017067164812)
(('excellent', 'servant', ';'), 1, 0, 0.17687017067164812)
(('servant', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'it'), 28, 0, 41.888888888888886)
(('and', 'it', 'will'), 3, 0, 1.7785588752196837)
(('it', 'will', 'be'), 32, 0, 33.0)
(('will', 'be', 'a'), 14, 0, 11.428571428571427)
(('be', 'a', 'great'), 9, 0, 6.5983606557377055)
(('a', 'great', 'comfort'), 2, 0, 0.983389342294767)
(('great', 'comfort', 'to'), 2, 0, 0.983389342294767)
(('comfort', 'to', 'poor'), 1, 0, 0.17687017067164812)
(('to', 'poor', 'Miss'), 1, 0, 0.17687017067164812)
(('poor', 'Miss', 'Taylor'), 11, 0, 8.671532846715328)
(('Miss', 'Taylor', 'to'), 1, 0, 0.17687017067164812)
(('Taylor', 'to', 'have'), 1, 0, 0.17687017067164812)
(('to', 'have', 'somebody'), 1, 0, 0.17687017067164812)
(('have', 'somebody', 'about'), 1, 0, 0.17687017067164812)
(('somebody', 'about', 'her'), 1, 0, 0.17687017067164812)
(('about', 'her', 'that'), 1, 0, 0.17687017067164812)
(('her', 'that', 'she'), 7, 0, 6.295454545454546)
(('that', 'she', 'is'), 2, 0, 0.983389342294767)
(('she', 'is', 'used'), 2, 0, 0.983389342294767)
(('is', 'used', 'to'), 2, 0, 0.983389342294767)
(('used', 'to', 'see'), 1, 0, 0.17687017067164812)
(('to', 'see', '.'), 2, 0, 0.983389342294767)
(('see', '.', ''), 6, 0, 4.48816029143898)
(('', 'Whenever', 'James'), 1, 0, 0.17687017067164812)
(('Whenever', 'James', 'goes'), 1, 0, 0.17687017067164812)
(('James', 'goes', 'over'), 1, 0, 0.17687017067164812)
(('goes', 'over', 'to'), 1, 0, 0.17687017067164812)
(('over', 'to', 'see'), 1, 0, 0.17687017067164812)
(('to', 'see', 'his'), 2, 0, 0.983389342294767)
(('see', 'his', 'daughter'), 2, 0, 0.983389342294767)
(('his', 'daughter', ','), 3, 0, 1.7785588752196837)
(('daughter', ',', 'you'), 1, 0, 0.17687017067164812)
((',', 'you', 'know'), 71, 0, 72.0)
(('you', 'know', ','), 49, 0, 25.0)
(('know', ',', 'she'), 1, 0, 0.17687017067164812)
((',', 'she', 'will'), 3, 0, 1.7785588752196837)
(('will', 'be', 'hearing'), 1, 0, 0.17687017067164812)
(('be', 'hearing', 'of'), 1, 0, 0.17687017067164812)
(('hearing', 'of', 'us'), 1, 0, 0.17687017067164812)
(('of', 'us', '.'), 2, 0, 0.983389342294767)
(('us', '.', ''), 20, 0, 21.0)
(('', 'He', 'will'), 7, 0, 6.295454545454546)
(('He', 'will', 'be'), 4, 0, 2.9150197628458496)
(('will', 'be', 'able'), 1, 0, 0.17687017067164812)
(('be', 'able', 'to'), 20, 0, 21.0)
(('able', 'to', 'tell'), 1, 0, 0.17687017067164812)
(('to', 'tell', 'her'), 3, 0, 1.7785588752196837)
(('tell', 'her', 'how'), 1, 0, 0.17687017067164812)
(('her', 'how', 'we'), 1, 0, 0.17687017067164812)
(('how', 'we', 'all'), 1, 0, 0.17687017067164812)
(('we', 'all', 'are'), 1, 0, 0.17687017067164812)
(('all', 'are', '."'), 1, 0, 0.17687017067164812)
(('are', '."', ''), 3, 0, 1.7785588752196837)
(('', 'Emma', 'spared'), 1, 0, 0.17687017067164812)
(('Emma', 'spared', 'no'), 1, 0, 0.17687017067164812)
(('spared', 'no', 'exertions'), 1, 0, 0.17687017067164812)
(('no', 'exertions', 'to'), 1, 0, 0.17687017067164812)
(('exertions', 'to', 'maintain'), 1, 0, 0.17687017067164812)
(('to', 'maintain', 'this'), 1, 0, 0.17687017067164812)
(('maintain', 'this', 'happier'), 1, 0, 0.17687017067164812)
(('this', 'happier', 'flow'), 1, 0, 0.17687017067164812)
(('happier', 'flow', 'of'), 1, 0, 0.17687017067164812)
(('flow', 'of', 'ideas'), 1, 0, 0.17687017067164812)
(('of', 'ideas', ','), 1, 0, 0.17687017067164812)
(('ideas', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'hoped'), 2, 0, 0.983389342294767)
(('and', 'hoped', ','), 1, 0, 0.17687017067164812)
(('hoped', ',', 'by'), 1, 0, 0.17687017067164812)
((',', 'by', 'the'), 20, 0, 21.0)
(('by', 'the', 'help'), 1, 0, 0.17687017067164812)
(('the', 'help', 'of'), 3, 0, 1.7785588752196837)
(('help', 'of', 'backgammon'), 1, 0, 0.17687017067164812)
(('of', 'backgammon', ','), 1, 0, 0.17687017067164812)
(('backgammon', ',', 'to'), 1, 0, 0.17687017067164812)
((',', 'to', 'get'), 4, 0, 2.9150197628458496)
(('to', 'get', 'her'), 1, 0, 0.17687017067164812)
(('get', 'her', 'father'), 1, 0, 0.17687017067164812)
(('her', 'father', 'tolerably'), 1, 0, 0.17687017067164812)
(('father', 'tolerably', 'through'), 1, 0, 0.17687017067164812)
(('tolerably', 'through', 'the'), 1, 0, 0.17687017067164812)
(('through', 'the', 'evening'), 1, 0, 0.17687017067164812)
(('the', 'evening', ','), 10, 0, 9.36024844720497)
(('evening', ',', 'and'), 5, 0, 3.7220338983050847)
((',', 'and', 'be'), 13, 0, 10.137931034482758)
(('and', 'be', 'attacked'), 1, 0, 0.17687017067164812)
(('be', 'attacked', 'by'), 1, 0, 0.17687017067164812)
(('attacked', 'by', 'no'), 1, 0, 0.17687017067164812)
(('by', 'no', 'regrets'), 1, 0, 0.17687017067164812)
(('no', 'regrets', 'but'), 1, 0, 0.17687017067164812)
(('regrets', 'but', 'her'), 1, 0, 0.17687017067164812)
(('but', 'her', 'own'), 1, 0, 0.17687017067164812)
(('', 'The', 'backgammon'), 1, 0, 0.17687017067164812)
(('The', 'backgammon', '-'), 1, 0, 0.17687017067164812)
(('backgammon', '-', 'table'), 1, 0, 0.17687017067164812)
(('-', 'table', 'was'), 1, 0, 0.17687017067164812)
(('table', 'was', 'placed'), 1, 0, 0.17687017067164812)
(('was', 'placed', ';'), 1, 0, 0.17687017067164812)
(('placed', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'a'), 4, 0, 2.9150197628458496)
(('but', 'a', 'visitor'), 1, 0, 0.17687017067164812)
(('a', 'visitor', 'immediately'), 1, 0, 0.17687017067164812)
(('visitor', 'immediately', 'afterwards'), 1, 0, 0.17687017067164812)
(('immediately', 'afterwards', 'walked'), 1, 0, 0.17687017067164812)
(('afterwards', 'walked', 'in'), 1, 0, 0.17687017067164812)
(('walked', 'in', 'and'), 1, 0, 0.17687017067164812)
(('in', 'and', 'made'), 1, 0, 0.17687017067164812)
(('made', 'it', 'unnecessary'), 1, 0, 0.17687017067164812)
(('it', 'unnecessary', '.'), 1, 0, 0.17687017067164812)
(('unnecessary', '.', ''), 2, 0, 0.983389342294767)
(('Mr', '.', 'Knightley'), 277, 0, 0.0)
(('.', 'Knightley', ','), 72, 0, 73.0)
(('Knightley', ',', 'a'), 2, 0, 0.983389342294767)
((',', 'a', 'sensible'), 2, 0, 0.983389342294767)
(('a', 'sensible', 'man'), 5, 0, 3.7220338983050847)
(('sensible', 'man', 'about'), 1, 0, 0.17687017067164812)
(('man', 'about', 'seven'), 1, 0, 0.17687017067164812)
(('about', 'seven', 'or'), 1, 0, 0.17687017067164812)
(('seven', 'or', 'eight'), 1, 0, 0.17687017067164812)
(('or', 'eight', '-'), 1, 0, 0.17687017067164812)
(('eight', '-', 'and'), 1, 0, 0.17687017067164812)
(('-', 'and', '-'), 19, 0, 20.0)
(('and', '-', 'thirty'), 2, 0, 0.983389342294767)
(('-', 'thirty', ','), 1, 0, 0.17687017067164812)
(('thirty', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'not'), 8, 0, 7.927797833935018)
(('was', 'not', 'only'), 2, 0, 0.983389342294767)
(('not', 'only', 'a'), 1, 0, 0.17687017067164812)
(('only', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'old'), 4, 0, 2.9150197628458496)
(('very', 'old', 'and'), 1, 0, 0.17687017067164812)
(('old', 'and', 'intimate'), 1, 0, 0.17687017067164812)
(('and', 'intimate', 'friend'), 1, 0, 0.17687017067164812)
(('intimate', 'friend', 'of'), 1, 0, 0.17687017067164812)
(('friend', 'of', 'the'), 1, 0, 0.17687017067164812)
(('family', ',', 'but'), 1, 0, 0.17687017067164812)
(('but', 'particularly', 'connected'), 1, 0, 0.17687017067164812)
(('particularly', 'connected', 'with'), 1, 0, 0.17687017067164812)
(('connected', 'with', 'it'), 1, 0, 0.17687017067164812)
(('with', 'it', ','), 3, 0, 1.7785588752196837)
(('it', ',', 'as'), 5, 0, 3.7220338983050847)
(('as', 'the', 'elder'), 1, 0, 0.17687017067164812)
(('the', 'elder', 'brother'), 1, 0, 0.17687017067164812)
(('elder', 'brother', 'of'), 1, 0, 0.17687017067164812)
(('brother', 'of', 'Isabella'), 1, 0, 0.17687017067164812)
(('of', 'Isabella', "'"), 2, 0, 0.983389342294767)
(("'", 's', 'husband'), 1, 0, 0.17687017067164812)
(('s', 'husband', '.'), 1, 0, 0.17687017067164812)
(('husband', '.', ''), 5, 0, 3.7220338983050847)
(('', 'He', 'lived'), 1, 0, 0.17687017067164812)
(('He', 'lived', 'about'), 1, 0, 0.17687017067164812)
(('lived', 'about', 'a'), 1, 0, 0.17687017067164812)
(('about', 'a', 'mile'), 1, 0, 0.17687017067164812)
(('mile', 'from', 'Highbury'), 1, 0, 0.17687017067164812)
(('from', 'Highbury', ','), 3, 0, 1.7785588752196837)
(('Highbury', ',', 'was'), 2, 0, 0.983389342294767)
((',', 'was', 'a'), 7, 0, 6.295454545454546)
(('was', 'a', 'frequent'), 1, 0, 0.17687017067164812)
(('a', 'frequent', 'visitor'), 1, 0, 0.17687017067164812)
(('frequent', 'visitor', ','), 1, 0, 0.17687017067164812)
(('visitor', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'always'), 4, 0, 2.9150197628458496)
(('and', 'always', 'welcome'), 1, 0, 0.17687017067164812)
(('always', 'welcome', ','), 1, 0, 0.17687017067164812)
(('welcome', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'at'), 8, 0, 7.927797833935018)
(('and', 'at', 'this'), 1, 0, 0.17687017067164812)
(('at', 'this', 'time'), 8, 0, 7.927797833935018)
(('this', 'time', 'more'), 1, 0, 0.17687017067164812)
(('time', 'more', 'welcome'), 1, 0, 0.17687017067164812)
(('more', 'welcome', 'than'), 1, 0, 0.17687017067164812)
(('welcome', 'than', 'usual'), 1, 0, 0.17687017067164812)
(('than', 'usual', ','), 4, 0, 2.9150197628458496)
(('usual', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'coming'), 1, 0, 0.17687017067164812)
(('as', 'coming', 'directly'), 1, 0, 0.17687017067164812)
(('coming', 'directly', 'from'), 1, 0, 0.17687017067164812)
(('directly', 'from', 'their'), 1, 0, 0.17687017067164812)
(('from', 'their', 'mutual'), 1, 0, 0.17687017067164812)
(('their', 'mutual', 'connexions'), 1, 0, 0.17687017067164812)
(('mutual', 'connexions', 'in'), 1, 0, 0.17687017067164812)
(('connexions', 'in', 'London'), 1, 0, 0.17687017067164812)
(('in', 'London', '.'), 1, 0, 0.17687017067164812)
(('London', '.', ''), 4, 0, 2.9150197628458496)
(('', 'He', 'had'), 62, 0, 21.0)
(('He', 'had', 'returned'), 2, 0, 0.983389342294767)
(('had', 'returned', 'to'), 2, 0, 0.983389342294767)
(('returned', 'to', 'a'), 2, 0, 0.983389342294767)
(('to', 'a', 'late'), 2, 0, 0.983389342294767)
(('a', 'late', 'dinner'), 2, 0, 0.983389342294767)
(('late', 'dinner', ','), 2, 0, 0.983389342294767)
(('dinner', ',', 'after'), 1, 0, 0.17687017067164812)
((',', 'after', 'some'), 1, 0, 0.17687017067164812)
(('after', 'some', 'days'), 1, 0, 0.17687017067164812)
(('some', 'days', "'"), 1, 0, 0.17687017067164812)
(('days', "'", 'absence'), 1, 0, 0.17687017067164812)
(("'", 'absence', ','), 1, 0, 0.17687017067164812)
(('absence', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'now'), 9, 0, 6.5983606557377055)
(('and', 'now', 'walked'), 1, 0, 0.17687017067164812)
(('now', 'walked', 'up'), 1, 0, 0.17687017067164812)
(('walked', 'up', 'to'), 1, 0, 0.17687017067164812)
(('up', 'to', 'Hartfield'), 2, 0, 0.983389342294767)
(('to', 'Hartfield', 'to'), 2, 0, 0.983389342294767)
(('Hartfield', 'to', 'say'), 1, 0, 0.17687017067164812)
(('to', 'say', 'that'), 15, 0, 14.666666666666666)
(('say', 'that', 'all'), 1, 0, 0.17687017067164812)
(('that', 'all', 'were'), 1, 0, 0.17687017067164812)
(('all', 'were', 'well'), 1, 0, 0.17687017067164812)
(('were', 'well', 'in'), 1, 0, 0.17687017067164812)
(('well', 'in', 'Brunswick'), 1, 0, 0.17687017067164812)
(('in', 'Brunswick', 'Square'), 6, 0, 4.48816029143898)
(('Brunswick', 'Square', '.'), 4, 0, 2.9150197628458496)
(('Square', '.', ''), 4, 0, 2.9150197628458496)
(('was', 'a', 'happy'), 2, 0, 0.983389342294767)
(('a', 'happy', 'circumstance'), 1, 0, 0.17687017067164812)
(('happy', 'circumstance', ','), 1, 0, 0.17687017067164812)
(('circumstance', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'animated'), 1, 0, 0.17687017067164812)
(('and', 'animated', 'Mr'), 1, 0, 0.17687017067164812)
(('animated', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('.', 'Woodhouse', 'for'), 1, 0, 0.17687017067164812)
(('Woodhouse', 'for', 'some'), 1, 0, 0.17687017067164812)
(('for', 'some', 'time'), 9, 0, 6.5983606557377055)
(('some', 'time', '.'), 5, 0, 3.7220338983050847)
(('.', 'Knightley', 'had'), 9, 0, 6.5983606557377055)
(('Knightley', 'had', 'a'), 1, 0, 0.17687017067164812)
(('had', 'a', 'cheerful'), 1, 0, 0.17687017067164812)
(('a', 'cheerful', 'manner'), 1, 0, 0.17687017067164812)
(('cheerful', 'manner', ','), 1, 0, 0.17687017067164812)
(('manner', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'always'), 4, 0, 2.9150197628458496)
(('which', 'always', 'did'), 1, 0, 0.17687017067164812)
(('always', 'did', 'him'), 1, 0, 0.17687017067164812)
(('did', 'him', 'good'), 1, 0, 0.17687017067164812)
(('him', 'good', ';'), 1, 0, 0.17687017067164812)
(('good', ';', 'and'), 4, 0, 2.9150197628458496)
((';', 'and', 'his'), 12, 0, 11.424242424242424)
(('and', 'his', 'many'), 1, 0, 0.17687017067164812)
(('his', 'many', 'inquiries'), 1, 0, 0.17687017067164812)
(('many', 'inquiries', 'after'), 2, 0, 0.983389342294767)
(('inquiries', 'after', '"'), 1, 0, 0.17687017067164812)
(('after', '"', 'poor'), 1, 0, 0.17687017067164812)
(('"', 'poor', 'Isabella'), 1, 0, 0.17687017067164812)
(('poor', 'Isabella', '"'), 1, 0, 0.17687017067164812)
(('Isabella', '"', 'and'), 1, 0, 0.17687017067164812)
(('"', 'and', 'her'), 1, 0, 0.17687017067164812)
(('and', 'her', 'children'), 1, 0, 0.17687017067164812)
(('her', 'children', 'were'), 2, 0, 0.983389342294767)
(('children', 'were', 'answered'), 1, 0, 0.17687017067164812)
(('were', 'answered', 'most'), 1, 0, 0.17687017067164812)
(('answered', 'most', 'satisfactorily'), 1, 0, 0.17687017067164812)
(('most', 'satisfactorily', '.'), 1, 0, 0.17687017067164812)
(('satisfactorily', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'When'), 37, 0, 44.333333333333336)
(('', 'When', 'this'), 1, 0, 0.17687017067164812)
(('When', 'this', 'was'), 1, 0, 0.17687017067164812)
(('this', 'was', 'over'), 1, 0, 0.17687017067164812)
(('was', 'over', ','), 6, 0, 4.48816029143898)
(('over', ',', 'Mr'), 1, 0, 0.17687017067164812)
((',', 'Mr', '.'), 94, 0, 31.666666666666664)
(('.', 'Woodhouse', 'gratefully'), 1, 0, 0.17687017067164812)
(('Woodhouse', 'gratefully', 'observed'), 1, 0, 0.17687017067164812)
(('gratefully', 'observed', ','), 1, 0, 0.17687017067164812)
(('observed', ',', '"'), 4, 0, 2.9150197628458496)
((',', '"', 'It'), 2, 0, 0.983389342294767)
(('"', 'It', 'is'), 34, 0, 40.833333333333336)
(('It', 'is', 'very'), 8, 0, 7.927797833935018)
(('is', 'very', 'kind'), 1, 0, 0.17687017067164812)
(('very', 'kind', 'of'), 2, 0, 0.983389342294767)
(('kind', 'of', 'you'), 2, 0, 0.983389342294767)
(('of', 'you', ','), 5, 0, 3.7220338983050847)
(('you', ',', 'Mr'), 5, 0, 3.7220338983050847)
(('Knightley', ',', 'to'), 2, 0, 0.983389342294767)
((',', 'to', 'come'), 1, 0, 0.17687017067164812)
(('to', 'come', 'out'), 2, 0, 0.983389342294767)
(('come', 'out', 'at'), 1, 0, 0.17687017067164812)
(('out', 'at', 'this'), 1, 0, 0.17687017067164812)
(('at', 'this', 'late'), 1, 0, 0.17687017067164812)
(('this', 'late', 'hour'), 1, 0, 0.17687017067164812)
(('late', 'hour', 'to'), 1, 0, 0.17687017067164812)
(('hour', 'to', 'call'), 1, 0, 0.17687017067164812)
(('to', 'call', 'upon'), 2, 0, 0.983389342294767)
(('call', 'upon', 'us'), 1, 0, 0.17687017067164812)
(('upon', 'us', '.'), 1, 0, 0.17687017067164812)
(('I', 'am', 'afraid'), 19, 0, 20.0)
(('am', 'afraid', 'you'), 5, 0, 3.7220338983050847)
(('afraid', 'you', 'must'), 1, 0, 0.17687017067164812)
(('you', 'must', 'have'), 7, 0, 6.295454545454546)
(('must', 'have', 'had'), 5, 0, 3.7220338983050847)
(('have', 'had', 'a'), 5, 0, 3.7220338983050847)
(('had', 'a', 'shocking'), 1, 0, 0.17687017067164812)
(('a', 'shocking', 'walk'), 1, 0, 0.17687017067164812)
(('shocking', 'walk', '."'), 1, 0, 0.17687017067164812)
(('walk', '."', ''), 3, 0, 1.7785588752196837)
(('', '"', 'Not'), 16, 0, 14.681818181818182)
(('"', 'Not', 'at'), 4, 0, 2.9150197628458496)
(('Not', 'at', 'all'), 4, 0, 2.9150197628458496)
(('at', 'all', ','), 12, 0, 11.424242424242424)
(('all', ',', 'sir'), 1, 0, 0.17687017067164812)
((',', 'sir', '.'), 6, 0, 4.48816029143898)
(('sir', '.', ''), 8, 0, 7.927797833935018)
(('', 'It', 'is'), 60, 0, 15.25)
(('It', 'is', 'a'), 23, 0, 14.608695652173914)
(('is', 'a', 'beautiful'), 1, 0, 0.17687017067164812)
(('a', 'beautiful', 'moonlight'), 1, 0, 0.17687017067164812)
(('beautiful', 'moonlight', 'night'), 1, 0, 0.17687017067164812)
(('moonlight', 'night', ';'), 1, 0, 0.17687017067164812)
(('night', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'so'), 15, 0, 14.666666666666666)
(('and', 'so', 'mild'), 1, 0, 0.17687017067164812)
(('so', 'mild', 'that'), 1, 0, 0.17687017067164812)
(('mild', 'that', 'I'), 1, 0, 0.17687017067164812)
(('that', 'I', 'must'), 5, 0, 3.7220338983050847)
(('I', 'must', 'draw'), 1, 0, 0.17687017067164812)
(('must', 'draw', 'back'), 1, 0, 0.17687017067164812)
(('draw', 'back', 'from'), 1, 0, 0.17687017067164812)
(('back', 'from', 'your'), 1, 0, 0.17687017067164812)
(('from', 'your', 'great'), 1, 0, 0.17687017067164812)
(('your', 'great', 'fire'), 1, 0, 0.17687017067164812)
(('great', 'fire', '."'), 1, 0, 0.17687017067164812)
(('fire', '."', ''), 1, 0, 0.17687017067164812)
(('', '"', 'But'), 48, 0, 58.8)
(('"', 'But', 'you'), 10, 0, 9.36024844720497)
(('But', 'you', 'must'), 1, 0, 0.17687017067164812)
(('must', 'have', 'found'), 3, 0, 1.7785588752196837)
(('have', 'found', 'it'), 2, 0, 0.983389342294767)
(('found', 'it', 'very'), 1, 0, 0.17687017067164812)
(('it', 'very', 'damp'), 1, 0, 0.17687017067164812)
(('very', 'damp', 'and'), 1, 0, 0.17687017067164812)
(('damp', 'and', 'dirty'), 1, 0, 0.17687017067164812)
(('and', 'dirty', '.'), 1, 0, 0.17687017067164812)
(('dirty', '.', ''), 1, 0, 0.17687017067164812)
(('', 'I', 'wish'), 11, 0, 8.671532846715328)
(('I', 'wish', 'you'), 11, 0, 8.671532846715328)
(('wish', 'you', 'may'), 3, 0, 1.7785588752196837)
(('you', 'may', 'not'), 4, 0, 2.9150197628458496)
(('may', 'not', 'catch'), 1, 0, 0.17687017067164812)
(('not', 'catch', 'cold'), 1, 0, 0.17687017067164812)
(('catch', 'cold', '."'), 2, 0, 0.983389342294767)
(('cold', '."', ''), 3, 0, 1.7785588752196837)
(('', '"', 'Dirty'), 1, 0, 0.17687017067164812)
(('"', 'Dirty', ','), 1, 0, 0.17687017067164812)
(('Dirty', ',', 'sir'), 1, 0, 0.17687017067164812)
((',', 'sir', '!'), 1, 0, 0.17687017067164812)
(('sir', '!', ''), 2, 0, 0.983389342294767)
(('', '', 'Look'), 5, 0, 3.7220338983050847)
(('', 'Look', 'at'), 4, 0, 2.9150197628458496)
(('Look', 'at', 'my'), 1, 0, 0.17687017067164812)
(('at', 'my', 'shoes'), 1, 0, 0.17687017067164812)
(('my', 'shoes', '.'), 1, 0, 0.17687017067164812)
(('shoes', '.', ''), 2, 0, 0.983389342294767)
(('', '', 'Not'), 15, 0, 14.666666666666666)
(('', 'Not', 'a'), 2, 0, 0.983389342294767)
(('Not', 'a', 'speck'), 1, 0, 0.17687017067164812)
(('a', 'speck', 'on'), 1, 0, 0.17687017067164812)
(('speck', 'on', 'them'), 1, 0, 0.17687017067164812)
(('on', 'them', '."'), 1, 0, 0.17687017067164812)
(('them', '."', ''), 12, 0, 11.424242424242424)
(('', '"', 'Well'), 43, 0, 29.333333333333332)
(('"', 'Well', '!'), 2, 0, 0.983389342294767)
(('Well', '!', ''), 4, 0, 2.9150197628458496)
(('', '', 'that'), 7, 0, 6.295454545454546)
(('', 'that', 'is'), 2, 0, 0.983389342294767)
(('that', 'is', 'quite'), 4, 0, 2.9150197628458496)
(('is', 'quite', 'surprising'), 1, 0, 0.17687017067164812)
(('quite', 'surprising', ','), 1, 0, 0.17687017067164812)
(('surprising', ',', 'for'), 1, 0, 0.17687017067164812)
((',', 'for', 'we'), 3, 0, 1.7785588752196837)
(('for', 'we', 'have'), 1, 0, 0.17687017067164812)
(('we', 'have', 'had'), 2, 0, 0.983389342294767)
(('had', 'a', 'vast'), 2, 0, 0.983389342294767)
(('a', 'vast', 'deal'), 5, 0, 3.7220338983050847)
(('vast', 'deal', 'of'), 4, 0, 2.9150197628458496)
(('deal', 'of', 'rain'), 1, 0, 0.17687017067164812)
(('of', 'rain', 'here'), 1, 0, 0.17687017067164812)
(('rain', 'here', '.'), 1, 0, 0.17687017067164812)
(('here', '.', ''), 16, 0, 14.681818181818182)
(('', 'It', 'rained'), 1, 0, 0.17687017067164812)
(('It', 'rained', 'dreadfully'), 1, 0, 0.17687017067164812)
(('rained', 'dreadfully', 'hard'), 1, 0, 0.17687017067164812)
(('dreadfully', 'hard', 'for'), 1, 0, 0.17687017067164812)
(('hard', 'for', 'half'), 1, 0, 0.17687017067164812)
(('for', 'half', 'an'), 2, 0, 0.983389342294767)
(('half', 'an', 'hour'), 18, 0, 11.585365853658537)
(('an', 'hour', 'while'), 1, 0, 0.17687017067164812)
(('hour', 'while', 'we'), 1, 0, 0.17687017067164812)
(('while', 'we', 'were'), 3, 0, 1.7785588752196837)
(('we', 'were', 'at'), 2, 0, 0.983389342294767)
(('were', 'at', 'breakfast'), 1, 0, 0.17687017067164812)
(('at', 'breakfast', '.'), 1, 0, 0.17687017067164812)
(('breakfast', '.', ''), 2, 0, 0.983389342294767)
(('', 'I', 'wanted'), 3, 0, 1.7785588752196837)
(('I', 'wanted', 'them'), 1, 0, 0.17687017067164812)
(('wanted', 'them', 'to'), 1, 0, 0.17687017067164812)
(('them', 'to', 'put'), 1, 0, 0.17687017067164812)
(('to', 'put', 'off'), 2, 0, 0.983389342294767)
(('put', 'off', 'the'), 1, 0, 0.17687017067164812)
(('off', 'the', 'wedding'), 1, 0, 0.17687017067164812)
(('the', 'wedding', '."'), 1, 0, 0.17687017067164812)
(('wedding', '."', ''), 2, 0, 0.983389342294767)
(('', '"', 'By'), 4, 0, 2.9150197628458496)
(('"', 'By', 'the'), 2, 0, 0.983389342294767)
(('By', 'the', 'bye'), 3, 0, 1.7785588752196837)
(('the', 'bye', '--'), 1, 0, 0.17687017067164812)
(('bye', '--', 'I'), 1, 0, 0.17687017067164812)
(('--', 'I', 'have'), 12, 0, 11.424242424242424)
(('I', 'have', 'not'), 37, 0, 44.333333333333336)
(('have', 'not', 'wished'), 1, 0, 0.17687017067164812)
(('not', 'wished', 'you'), 1, 0, 0.17687017067164812)
(('wished', 'you', 'joy'), 1, 0, 0.17687017067164812)
(('you', 'joy', '.'), 1, 0, 0.17687017067164812)
(('joy', '.', ''), 4, 0, 2.9150197628458496)
(('', '', 'Being'), 1, 0, 0.17687017067164812)
(('', 'Being', 'pretty'), 1, 0, 0.17687017067164812)
(('Being', 'pretty', 'well'), 1, 0, 0.17687017067164812)
(('pretty', 'well', 'aware'), 1, 0, 0.17687017067164812)
(('well', 'aware', 'of'), 2, 0, 0.983389342294767)
(('aware', 'of', 'what'), 1, 0, 0.17687017067164812)
(('of', 'what', 'sort'), 2, 0, 0.983389342294767)
(('what', 'sort', 'of'), 1, 0, 0.17687017067164812)
(('sort', 'of', 'joy'), 1, 0, 0.17687017067164812)
(('of', 'joy', 'you'), 1, 0, 0.17687017067164812)
(('joy', 'you', 'must'), 1, 0, 0.17687017067164812)
(('you', 'must', 'both'), 1, 0, 0.17687017067164812)
(('must', 'both', 'be'), 1, 0, 0.17687017067164812)
(('both', 'be', 'feeling'), 1, 0, 0.17687017067164812)
(('be', 'feeling', ','), 1, 0, 0.17687017067164812)
(('feeling', ',', 'I'), 1, 0, 0.17687017067164812)
((',', 'I', 'have'), 33, 0, 22.666666666666664)
(('I', 'have', 'been'), 38, 0, 61.285714285714285)
(('have', 'been', 'in'), 6, 0, 4.48816029143898)
(('been', 'in', 'no'), 1, 0, 0.17687017067164812)
(('in', 'no', 'hurry'), 3, 0, 1.7785588752196837)
(('no', 'hurry', 'with'), 1, 0, 0.17687017067164812)
(('hurry', 'with', 'my'), 1, 0, 0.17687017067164812)
(('with', 'my', 'congratulations'), 1, 0, 0.17687017067164812)
(('my', 'congratulations', ';'), 1, 0, 0.17687017067164812)
(('congratulations', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'I'), 43, 0, 29.333333333333332)
(('but', 'I', 'hope'), 8, 0, 7.927797833935018)
(('I', 'hope', 'it'), 9, 0, 6.5983606557377055)
(('hope', 'it', 'all'), 1, 0, 0.17687017067164812)
(('it', 'all', 'went'), 1, 0, 0.17687017067164812)
(('all', 'went', 'off'), 1, 0, 0.17687017067164812)
(('went', 'off', 'tolerably'), 1, 0, 0.17687017067164812)
(('off', 'tolerably', 'well'), 1, 0, 0.17687017067164812)
(('tolerably', 'well', '.'), 1, 0, 0.17687017067164812)
(('well', '.', ''), 31, 0, 20.571428571428573)
(('', 'How', 'did'), 3, 0, 1.7785588752196837)
(('How', 'did', 'you'), 2, 0, 0.983389342294767)
(('did', 'you', 'all'), 1, 0, 0.17687017067164812)
(('you', 'all', 'behave'), 1, 0, 0.17687017067164812)
(('all', 'behave', '?'), 1, 0, 0.17687017067164812)
(('behave', '?', ''), 1, 0, 0.17687017067164812)
(('', '', 'Who'), 5, 0, 3.7220338983050847)
(('', 'Who', 'cried'), 1, 0, 0.17687017067164812)
(('Who', 'cried', 'most'), 1, 0, 0.17687017067164812)
(('cried', 'most', '?"'), 1, 0, 0.17687017067164812)
(('most', '?"', ''), 1, 0, 0.17687017067164812)
(('', '"', 'Ah'), 32, 0, 33.0)
(('"', 'Ah', '!'), 27, 0, 14.823529411764707)
(('Ah', '!', ''), 37, 0, 44.333333333333336)
(('', '', 'poor'), 5, 0, 3.7220338983050847)
(('', 'poor', 'Miss'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', '!'), 2, 0, 0.983389342294767)
(('Taylor', '!', ''), 2, 0, 0.983389342294767)
(('', '', "'"), 1, 0, 0.17687017067164812)
(('', "'", 'Tis'), 1, 0, 0.17687017067164812)
(("'", 'Tis', 'a'), 1, 0, 0.17687017067164812)
(('Tis', 'a', 'sad'), 1, 0, 0.17687017067164812)
(('a', 'sad', 'business'), 1, 0, 0.17687017067164812)
(('sad', 'business', '."'), 1, 0, 0.17687017067164812)
(('business', '."', ''), 3, 0, 1.7785588752196837)
(('"', 'Poor', 'Mr'), 1, 0, 0.17687017067164812)
(('Poor', 'Mr', '.'), 5, 0, 3.7220338983050847)
(('Mr', '.', 'and'), 39, 0, 18.18181818181818)
(('.', 'and', 'Miss'), 9, 0, 6.5983606557377055)
(('and', 'Miss', 'Woodhouse'), 10, 0, 9.36024844720497)
(('Miss', 'Woodhouse', ','), 78, 0, 26.333333333333332)
(('Woodhouse', ',', 'if'), 1, 0, 0.17687017067164812)
((',', 'if', 'you'), 38, 0, 61.285714285714285)
(('if', 'you', 'please'), 12, 0, 11.424242424242424)
(('you', 'please', ';'), 2, 0, 0.983389342294767)
(('please', ';', 'but'), 2, 0, 0.983389342294767)
(('but', 'I', 'cannot'), 9, 0, 6.5983606557377055)
(('I', 'cannot', 'possibly'), 1, 0, 0.17687017067164812)
(('cannot', 'possibly', 'say'), 1, 0, 0.17687017067164812)
(('possibly', 'say', '`'), 1, 0, 0.17687017067164812)
(('say', '`', 'poor'), 1, 0, 0.17687017067164812)
(('`', 'poor', 'Miss'), 2, 0, 0.983389342294767)
(('Miss', 'Taylor', ".'"), 1, 0, 0.17687017067164812)
(('Taylor', ".'", ''), 1, 0, 0.17687017067164812)
((".'", '', ''), 31, 0, 20.571428571428573)
(('', 'I', 'have'), 61, 0, 186.0)
(('a', 'great', 'regard'), 9, 0, 6.5983606557377055)
(('great', 'regard', 'for'), 9, 0, 6.5983606557377055)
(('regard', 'for', 'you'), 1, 0, 0.17687017067164812)
(('for', 'you', 'and'), 2, 0, 0.983389342294767)
(('you', 'and', 'Emma'), 1, 0, 0.17687017067164812)
(('and', 'Emma', ';'), 1, 0, 0.17687017067164812)
(('Emma', ';', 'but'), 3, 0, 1.7785588752196837)
(('but', 'when', 'it'), 2, 0, 0.983389342294767)
(('when', 'it', 'comes'), 2, 0, 0.983389342294767)
(('it', 'comes', 'to'), 2, 0, 0.983389342294767)
(('comes', 'to', 'the'), 3, 0, 1.7785588752196837)
(('to', 'the', 'question'), 1, 0, 0.17687017067164812)
(('the', 'question', 'of'), 1, 0, 0.17687017067164812)
(('question', 'of', 'dependence'), 1, 0, 0.17687017067164812)
(('of', 'dependence', 'or'), 1, 0, 0.17687017067164812)
(('dependence', 'or', 'independence'), 1, 0, 0.17687017067164812)
(('or', 'independence', '!--'), 1, 0, 0.17687017067164812)
(('independence', '!--', 'At'), 1, 0, 0.17687017067164812)
(('!--', 'At', 'any'), 1, 0, 0.17687017067164812)
(('At', 'any', 'rate'), 2, 0, 0.983389342294767)
(('any', 'rate', ','), 3, 0, 1.7785588752196837)
(('rate', ',', 'it'), 2, 0, 0.983389342294767)
((',', 'it', 'must'), 12, 0, 11.424242424242424)
(('it', 'must', 'be'), 30, 0, 31.0)
(('must', 'be', 'better'), 2, 0, 0.983389342294767)
(('be', 'better', 'to'), 1, 0, 0.17687017067164812)
(('better', 'to', 'have'), 1, 0, 0.17687017067164812)
(('to', 'have', 'only'), 1, 0, 0.17687017067164812)
(('have', 'only', 'one'), 1, 0, 0.17687017067164812)
(('only', 'one', 'to'), 1, 0, 0.17687017067164812)
(('one', 'to', 'please'), 1, 0, 0.17687017067164812)
(('to', 'please', 'than'), 1, 0, 0.17687017067164812)
(('please', 'than', 'two'), 1, 0, 0.17687017067164812)
(('than', 'two', '."'), 1, 0, 0.17687017067164812)
(('two', '."', ''), 1, 0, 0.17687017067164812)
(('', '"', 'Especially'), 1, 0, 0.17687017067164812)
(('"', 'Especially', 'when'), 1, 0, 0.17687017067164812)
(('Especially', 'when', '_one_'), 1, 0, 0.17687017067164812)
(('when', '_one_', 'of'), 1, 0, 0.17687017067164812)
(('_one_', 'of', 'those'), 1, 0, 0.17687017067164812)
(('of', 'those', 'two'), 1, 0, 0.17687017067164812)
(('those', 'two', 'is'), 1, 0, 0.17687017067164812)
(('two', 'is', 'such'), 1, 0, 0.17687017067164812)
(('such', 'a', 'fanciful'), 1, 0, 0.17687017067164812)
(('a', 'fanciful', ','), 1, 0, 0.17687017067164812)
(('fanciful', ',', 'troublesome'), 1, 0, 0.17687017067164812)
((',', 'troublesome', 'creature'), 1, 0, 0.17687017067164812)
(('troublesome', 'creature', '!"'), 1, 0, 0.17687017067164812)
(('creature', '!"', ''), 2, 0, 0.983389342294767)
(('', '', 'said'), 46, 0, 28.2)
(('', 'said', 'Emma'), 10, 0, 9.36024844720497)
(('said', 'Emma', 'playfully'), 1, 0, 0.17687017067164812)
(('Emma', 'playfully', '.'), 1, 0, 0.17687017067164812)
(('playfully', '.', ''), 2, 0, 0.983389342294767)
(('', '"', 'That'), 24, 0, 39.285714285714285)
(('"', 'That', 'is'), 8, 0, 7.927797833935018)
(('That', 'is', 'what'), 2, 0, 0.983389342294767)
(('is', 'what', 'you'), 2, 0, 0.983389342294767)
(('what', 'you', 'have'), 3, 0, 1.7785588752196837)
(('you', 'have', 'in'), 1, 0, 0.17687017067164812)
(('have', 'in', 'your'), 1, 0, 0.17687017067164812)
(('in', 'your', 'head'), 1, 0, 0.17687017067164812)
(('your', 'head', ','), 1, 0, 0.17687017067164812)
(('head', ',', 'I'), 1, 0, 0.17687017067164812)
((',', 'I', 'know'), 11, 0, 8.671532846715328)
(('I', 'know', '--'), 1, 0, 0.17687017067164812)
(('know', '--', 'and'), 2, 0, 0.983389342294767)
(('--', 'and', 'what'), 4, 0, 2.9150197628458496)
(('and', 'what', 'you'), 3, 0, 1.7785588752196837)
(('what', 'you', 'would'), 4, 0, 2.9150197628458496)
(('you', 'would', 'certainly'), 1, 0, 0.17687017067164812)
(('would', 'certainly', 'say'), 1, 0, 0.17687017067164812)
(('certainly', 'say', 'if'), 1, 0, 0.17687017067164812)
(('say', 'if', 'my'), 1, 0, 0.17687017067164812)
(('if', 'my', 'father'), 1, 0, 0.17687017067164812)
(('my', 'father', 'were'), 1, 0, 0.17687017067164812)
(('father', 'were', 'not'), 1, 0, 0.17687017067164812)
(('were', 'not', 'by'), 1, 0, 0.17687017067164812)
(('not', 'by', '."'), 1, 0, 0.17687017067164812)
(('by', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'I', 'believe'), 3, 0, 1.7785588752196837)
(('I', 'believe', 'it'), 4, 0, 2.9150197628458496)
(('believe', 'it', 'is'), 2, 0, 0.983389342294767)
(('it', 'is', 'very'), 9, 0, 6.5983606557377055)
(('is', 'very', 'true'), 2, 0, 0.983389342294767)
(('very', 'true', ','), 3, 0, 1.7785588752196837)
(('true', ',', 'my'), 4, 0, 2.9150197628458496)
(('my', 'dear', ','), 34, 0, 40.833333333333336)
(('dear', ',', 'indeed'), 1, 0, 0.17687017067164812)
((',', 'indeed', ',"'), 8, 0, 7.927797833935018)
(('indeed', ',"', 'said'), 3, 0, 1.7785588752196837)
((',"', 'said', 'Mr'), 30, 0, 31.0)
(('said', 'Mr', '.'), 38, 0, 61.285714285714285)
(('.', 'Woodhouse', ','), 27, 0, 14.823529411764707)
(('Woodhouse', ',', 'with'), 2, 0, 0.983389342294767)
(('with', 'a', 'sigh'), 2, 0, 0.983389342294767)
(('a', 'sigh', '.'), 1, 0, 0.17687017067164812)
(('sigh', '.', ''), 3, 0, 1.7785588752196837)
(('am', 'afraid', 'I'), 2, 0, 0.983389342294767)
(('afraid', 'I', 'am'), 1, 0, 0.17687017067164812)
(('I', 'am', 'sometimes'), 1, 0, 0.17687017067164812)
(('am', 'sometimes', 'very'), 1, 0, 0.17687017067164812)
(('sometimes', 'very', 'fanciful'), 1, 0, 0.17687017067164812)
(('very', 'fanciful', 'and'), 1, 0, 0.17687017067164812)
(('fanciful', 'and', 'troublesome'), 1, 0, 0.17687017067164812)
(('and', 'troublesome', '."'), 1, 0, 0.17687017067164812)
(('troublesome', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'My', 'dearest'), 4, 0, 2.9150197628458496)
(('My', 'dearest', 'papa'), 1, 0, 0.17687017067164812)
(('dearest', 'papa', '!'), 1, 0, 0.17687017067164812)
(('papa', '!', ''), 1, 0, 0.17687017067164812)
(('', 'You', 'do'), 8, 0, 7.927797833935018)
(('You', 'do', 'not'), 7, 0, 6.295454545454546)
(('do', 'not', 'think'), 25, 0, 22.454545454545453)
(('not', 'think', 'I'), 6, 0, 4.48816029143898)
(('think', 'I', 'could'), 1, 0, 0.17687017067164812)
(('I', 'could', 'mean'), 1, 0, 0.17687017067164812)
(('could', 'mean', '_you_'), 1, 0, 0.17687017067164812)
(('mean', '_you_', ','), 1, 0, 0.17687017067164812)
(('_you_', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'suppose'), 1, 0, 0.17687017067164812)
(('or', 'suppose', 'Mr'), 1, 0, 0.17687017067164812)
(('suppose', 'Mr', '.'), 3, 0, 1.7785588752196837)
(('.', 'Knightley', 'to'), 7, 0, 6.295454545454546)
(('Knightley', 'to', 'mean'), 1, 0, 0.17687017067164812)
(('to', 'mean', '_you_'), 1, 0, 0.17687017067164812)
(('mean', '_you_', '.'), 1, 0, 0.17687017067164812)
(('_you_', '.', ''), 2, 0, 0.983389342294767)
(('What', 'a', 'horrible'), 1, 0, 0.17687017067164812)
(('a', 'horrible', 'idea'), 1, 0, 0.17687017067164812)
(('horrible', 'idea', '!'), 1, 0, 0.17687017067164812)
(('idea', '!', ''), 1, 0, 0.17687017067164812)
(('', '', 'Oh'), 41, 0, 21.0)
(('', 'Oh', 'no'), 3, 0, 1.7785588752196837)
(('Oh', 'no', '!'), 5, 0, 3.7220338983050847)
(('no', '!', ''), 8, 0, 7.927797833935018)
(('', 'I', 'meant'), 2, 0, 0.983389342294767)
(('I', 'meant', 'only'), 1, 0, 0.17687017067164812)
(('meant', 'only', 'myself'), 1, 0, 0.17687017067164812)
(('only', 'myself', '.'), 1, 0, 0.17687017067164812)
(('myself', '.', ''), 16, 0, 14.681818181818182)
(('.', 'Knightley', 'loves'), 1, 0, 0.17687017067164812)
(('Knightley', 'loves', 'to'), 1, 0, 0.17687017067164812)
(('loves', 'to', 'find'), 1, 0, 0.17687017067164812)
(('to', 'find', 'fault'), 2, 0, 0.983389342294767)
(('find', 'fault', 'with'), 1, 0, 0.17687017067164812)
(('fault', 'with', 'me'), 1, 0, 0.17687017067164812)
(('with', 'me', ','), 6, 0, 4.48816029143898)
(('me', ',', 'you'), 5, 0, 3.7220338983050847)
(('you', 'know', '--'), 5, 0, 3.7220338983050847)
(('know', '--', 'in'), 2, 0, 0.983389342294767)
(('--', 'in', 'a'), 1, 0, 0.17687017067164812)
(('in', 'a', 'joke'), 1, 0, 0.17687017067164812)
(('a', 'joke', '--'), 1, 0, 0.17687017067164812)
(('joke', '--', 'it'), 1, 0, 0.17687017067164812)
(('--', 'it', 'is'), 7, 0, 6.295454545454546)
(('it', 'is', 'all'), 3, 0, 1.7785588752196837)
(('is', 'all', 'a'), 1, 0, 0.17687017067164812)
(('all', 'a', 'joke'), 1, 0, 0.17687017067164812)
(('a', 'joke', '.'), 2, 0, 0.983389342294767)
(('joke', '.', ''), 2, 0, 0.983389342294767)
(('', 'We', 'always'), 1, 0, 0.17687017067164812)
(('We', 'always', 'say'), 1, 0, 0.17687017067164812)
(('always', 'say', 'what'), 1, 0, 0.17687017067164812)
(('say', 'what', 'we'), 1, 0, 0.17687017067164812)
(('what', 'we', 'like'), 1, 0, 0.17687017067164812)
(('we', 'like', 'to'), 1, 0, 0.17687017067164812)
(('like', 'to', 'one'), 1, 0, 0.17687017067164812)
(('to', 'one', 'another'), 4, 0, 2.9150197628458496)
(('one', 'another', '."'), 1, 0, 0.17687017067164812)
(('another', '."', ''), 1, 0, 0.17687017067164812)
(('Knightley', ',', 'in'), 3, 0, 1.7785588752196837)
((',', 'in', 'fact'), 10, 0, 9.36024844720497)
(('in', 'fact', ','), 11, 0, 8.671532846715328)
(('fact', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'one'), 4, 0, 2.9150197628458496)
(('was', 'one', 'of'), 8, 0, 7.927797833935018)
(('one', 'of', 'the'), 27, 0, 14.823529411764707)
(('of', 'the', 'few'), 2, 0, 0.983389342294767)
(('the', 'few', 'people'), 1, 0, 0.17687017067164812)
(('few', 'people', 'who'), 1, 0, 0.17687017067164812)
(('people', 'who', 'could'), 1, 0, 0.17687017067164812)
(('who', 'could', 'see'), 1, 0, 0.17687017067164812)
(('could', 'see', 'faults'), 1, 0, 0.17687017067164812)
(('see', 'faults', 'in'), 1, 0, 0.17687017067164812)
(('faults', 'in', 'Emma'), 1, 0, 0.17687017067164812)
(('in', 'Emma', 'Woodhouse'), 1, 0, 0.17687017067164812)
(('Woodhouse', ',', 'and'), 5, 0, 3.7220338983050847)
(('and', 'the', 'only'), 3, 0, 1.7785588752196837)
(('the', 'only', 'one'), 2, 0, 0.983389342294767)
(('only', 'one', 'who'), 1, 0, 0.17687017067164812)
(('one', 'who', 'ever'), 1, 0, 0.17687017067164812)
(('who', 'ever', 'told'), 1, 0, 0.17687017067164812)
(('ever', 'told', 'her'), 1, 0, 0.17687017067164812)
(('told', 'her', 'of'), 1, 0, 0.17687017067164812)
(('her', 'of', 'them'), 1, 0, 0.17687017067164812)
(('of', 'them', ':'), 2, 0, 0.983389342294767)
(('them', ':', 'and'), 1, 0, 0.17687017067164812)
((':', 'and', 'though'), 3, 0, 1.7785588752196837)
(('and', 'though', 'this'), 1, 0, 0.17687017067164812)
(('though', 'this', 'was'), 1, 0, 0.17687017067164812)
(('this', 'was', 'not'), 2, 0, 0.983389342294767)
(('was', 'not', 'particularly'), 1, 0, 0.17687017067164812)
(('not', 'particularly', 'agreeable'), 1, 0, 0.17687017067164812)
(('particularly', 'agreeable', 'to'), 1, 0, 0.17687017067164812)
(('agreeable', 'to', 'Emma'), 1, 0, 0.17687017067164812)
(('to', 'Emma', 'herself'), 1, 0, 0.17687017067164812)
(('Emma', 'herself', ','), 1, 0, 0.17687017067164812)
(('herself', ',', 'she'), 6, 0, 4.48816029143898)
((',', 'she', 'knew'), 5, 0, 3.7220338983050847)
(('she', 'knew', 'it'), 2, 0, 0.983389342294767)
(('knew', 'it', 'would'), 2, 0, 0.983389342294767)
(('it', 'would', 'be'), 45, 0, 76.66666666666667)
(('would', 'be', 'so'), 12, 0, 11.424242424242424)
(('be', 'so', 'much'), 1, 0, 0.17687017067164812)
(('so', 'much', 'less'), 2, 0, 0.983389342294767)
(('much', 'less', 'so'), 1, 0, 0.17687017067164812)
(('less', 'so', 'to'), 1, 0, 0.17687017067164812)
(('so', 'to', 'her'), 2, 0, 0.983389342294767)
(('to', 'her', 'father'), 11, 0, 8.671532846715328)
(('father', ',', 'that'), 2, 0, 0.983389342294767)
((',', 'that', 'she'), 45, 0, 76.66666666666667)
(('that', 'she', 'would'), 13, 0, 10.137931034482758)
(('she', 'would', 'not'), 17, 0, 19.42105263157895)
(('not', 'have', 'him'), 3, 0, 1.7785588752196837)
(('have', 'him', 'really'), 1, 0, 0.17687017067164812)
(('him', 'really', 'suspect'), 1, 0, 0.17687017067164812)
(('really', 'suspect', 'such'), 1, 0, 0.17687017067164812)
(('suspect', 'such', 'a'), 1, 0, 0.17687017067164812)
(('such', 'a', 'circumstance'), 3, 0, 1.7785588752196837)
(('a', 'circumstance', 'as'), 1, 0, 0.17687017067164812)
(('circumstance', 'as', 'her'), 1, 0, 0.17687017067164812)
(('as', 'her', 'not'), 1, 0, 0.17687017067164812)
(('her', 'not', 'being'), 3, 0, 1.7785588752196837)
(('not', 'being', 'thought'), 2, 0, 0.983389342294767)
(('being', 'thought', 'perfect'), 1, 0, 0.17687017067164812)
(('thought', 'perfect', 'by'), 1, 0, 0.17687017067164812)
(('perfect', 'by', 'every'), 1, 0, 0.17687017067164812)
(('by', 'every', 'body'), 4, 0, 2.9150197628458496)
(('every', 'body', '.'), 5, 0, 3.7220338983050847)
(('body', '.', ''), 15, 0, 14.666666666666666)
(('', '"', 'Emma'), 10, 0, 9.36024844720497)
(('"', 'Emma', 'knows'), 1, 0, 0.17687017067164812)
(('Emma', 'knows', 'I'), 1, 0, 0.17687017067164812)
(('knows', 'I', 'never'), 1, 0, 0.17687017067164812)
(('I', 'never', 'flatter'), 1, 0, 0.17687017067164812)
(('never', 'flatter', 'her'), 1, 0, 0.17687017067164812)
(('flatter', 'her', ',"'), 1, 0, 0.17687017067164812)
(('her', ',"', 'said'), 2, 0, 0.983389342294767)
(('Knightley', ',', '"'), 11, 0, 8.671532846715328)
((',', '"', 'but'), 7, 0, 6.295454545454546)
(('"', 'but', 'I'), 10, 0, 9.36024844720497)
(('but', 'I', 'meant'), 2, 0, 0.983389342294767)
(('I', 'meant', 'no'), 1, 0, 0.17687017067164812)
(('meant', 'no', 'reflection'), 1, 0, 0.17687017067164812)
(('no', 'reflection', 'on'), 1, 0, 0.17687017067164812)
(('reflection', 'on', 'any'), 1, 0, 0.17687017067164812)
(('on', 'any', 'body'), 1, 0, 0.17687017067164812)
(('any', 'body', '.'), 10, 0, 9.36024844720497)
(('', '', 'Miss'), 56, 0, 19.0)
(('', 'Miss', 'Taylor'), 2, 0, 0.983389342294767)
(('Miss', 'Taylor', 'has'), 1, 0, 0.17687017067164812)
(('Taylor', 'has', 'been'), 1, 0, 0.17687017067164812)
(('has', 'been', 'used'), 2, 0, 0.983389342294767)
(('been', 'used', 'to'), 14, 0, 11.428571428571427)
(('used', 'to', 'have'), 1, 0, 0.17687017067164812)
(('to', 'have', 'two'), 2, 0, 0.983389342294767)
(('have', 'two', 'persons'), 1, 0, 0.17687017067164812)
(('two', 'persons', 'to'), 1, 0, 0.17687017067164812)
(('persons', 'to', 'please'), 1, 0, 0.17687017067164812)
(('to', 'please', ';'), 1, 0, 0.17687017067164812)
(('please', ';', 'she'), 1, 0, 0.17687017067164812)
((';', 'she', 'will'), 4, 0, 2.9150197628458496)
(('she', 'will', 'now'), 1, 0, 0.17687017067164812)
(('will', 'now', 'have'), 1, 0, 0.17687017067164812)
(('now', 'have', 'but'), 1, 0, 0.17687017067164812)
(('have', 'but', 'one'), 1, 0, 0.17687017067164812)
(('but', 'one', '.'), 4, 0, 2.9150197628458496)
(('one', '.', ''), 10, 0, 9.36024844720497)
(('', 'The', 'chances'), 1, 0, 0.17687017067164812)
(('The', 'chances', 'are'), 1, 0, 0.17687017067164812)
(('chances', 'are', 'that'), 1, 0, 0.17687017067164812)
(('are', 'that', 'she'), 1, 0, 0.17687017067164812)
(('that', 'she', 'must'), 8, 0, 7.927797833935018)
(('she', 'must', 'be'), 11, 0, 8.671532846715328)
(('must', 'be', 'a'), 15, 0, 14.666666666666666)
(('be', 'a', 'gainer'), 1, 0, 0.17687017067164812)
(('a', 'gainer', '."'), 1, 0, 0.17687017067164812)
(('gainer', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'Well', ',"'), 11, 0, 8.671532846715328)
(('Well', ',"', 'said'), 11, 0, 8.671532846715328)
((',"', 'said', 'Emma'), 46, 0, 28.2)
(('said', 'Emma', ','), 39, 0, 18.18181818181818)
(('Emma', ',', 'willing'), 1, 0, 0.17687017067164812)
((',', 'willing', 'to'), 1, 0, 0.17687017067164812)
(('willing', 'to', 'let'), 1, 0, 0.17687017067164812)
(('to', 'let', 'it'), 1, 0, 0.17687017067164812)
(('let', 'it', 'pass'), 5, 0, 3.7220338983050847)
(('it', 'pass', '--"'), 1, 0, 0.17687017067164812)
(('pass', '--"', 'you'), 1, 0, 0.17687017067164812)
(('--"', 'you', 'want'), 1, 0, 0.17687017067164812)
(('you', 'want', 'to'), 2, 0, 0.983389342294767)
(('want', 'to', 'hear'), 2, 0, 0.983389342294767)
(('to', 'hear', 'about'), 1, 0, 0.17687017067164812)
(('hear', 'about', 'the'), 1, 0, 0.17687017067164812)
(('about', 'the', 'wedding'), 1, 0, 0.17687017067164812)
(('the', 'wedding', ';'), 1, 0, 0.17687017067164812)
(('wedding', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'I', 'shall'), 7, 0, 6.295454545454546)
(('I', 'shall', 'be'), 17, 0, 19.42105263157895)
(('shall', 'be', 'happy'), 2, 0, 0.983389342294767)
(('be', 'happy', 'to'), 6, 0, 4.48816029143898)
(('happy', 'to', 'tell'), 1, 0, 0.17687017067164812)
(('to', 'tell', 'you'), 6, 0, 4.48816029143898)
(('tell', 'you', ','), 6, 0, 4.48816029143898)
(('you', ',', 'for'), 2, 0, 0.983389342294767)
(('for', 'we', 'all'), 1, 0, 0.17687017067164812)
(('we', 'all', 'behaved'), 1, 0, 0.17687017067164812)
(('all', 'behaved', 'charmingly'), 1, 0, 0.17687017067164812)
(('behaved', 'charmingly', '.'), 1, 0, 0.17687017067164812)
(('charmingly', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Every'), 29, 0, 32.30769230769231)
(('', 'Every', 'body'), 13, 0, 10.137931034482758)
(('Every', 'body', 'was'), 1, 0, 0.17687017067164812)
(('body', 'was', 'punctual'), 1, 0, 0.17687017067164812)
(('was', 'punctual', ','), 1, 0, 0.17687017067164812)
(('punctual', ',', 'every'), 1, 0, 0.17687017067164812)
((',', 'every', 'body'), 5, 0, 3.7220338983050847)
(('every', 'body', 'in'), 2, 0, 0.983389342294767)
(('body', 'in', 'their'), 1, 0, 0.17687017067164812)
(('in', 'their', 'best'), 1, 0, 0.17687017067164812)
(('their', 'best', 'looks'), 1, 0, 0.17687017067164812)
(('best', 'looks', ':'), 1, 0, 0.17687017067164812)
(('looks', ':', 'not'), 1, 0, 0.17687017067164812)
((':', 'not', 'a'), 1, 0, 0.17687017067164812)
(('not', 'a', 'tear'), 1, 0, 0.17687017067164812)
(('a', 'tear', ','), 1, 0, 0.17687017067164812)
(('tear', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'hardly'), 3, 0, 1.7785588752196837)
(('and', 'hardly', 'a'), 1, 0, 0.17687017067164812)
(('hardly', 'a', 'long'), 1, 0, 0.17687017067164812)
(('a', 'long', 'face'), 1, 0, 0.17687017067164812)
(('long', 'face', 'to'), 1, 0, 0.17687017067164812)
(('face', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'seen'), 4, 0, 2.9150197628458496)
(('be', 'seen', '.'), 1, 0, 0.17687017067164812)
(('seen', '.', ''), 2, 0, 0.983389342294767)
(('Oh', 'no', ';'), 1, 0, 0.17687017067164812)
(('no', ';', 'we'), 1, 0, 0.17687017067164812)
((';', 'we', 'all'), 2, 0, 0.983389342294767)
(('we', 'all', 'felt'), 1, 0, 0.17687017067164812)
(('all', 'felt', 'that'), 1, 0, 0.17687017067164812)
(('felt', 'that', 'we'), 1, 0, 0.17687017067164812)
(('that', 'we', 'were'), 1, 0, 0.17687017067164812)
(('we', 'were', 'going'), 1, 0, 0.17687017067164812)
(('were', 'going', 'to'), 5, 0, 3.7220338983050847)
(('going', 'to', 'be'), 8, 0, 7.927797833935018)
(('to', 'be', 'only'), 3, 0, 1.7785588752196837)
(('be', 'only', 'half'), 1, 0, 0.17687017067164812)
(('a', 'mile', 'apart'), 1, 0, 0.17687017067164812)
(('mile', 'apart', ','), 1, 0, 0.17687017067164812)
(('apart', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'were'), 6, 0, 4.48816029143898)
(('and', 'were', 'sure'), 1, 0, 0.17687017067164812)
(('were', 'sure', 'of'), 1, 0, 0.17687017067164812)
(('sure', 'of', 'meeting'), 1, 0, 0.17687017067164812)
(('of', 'meeting', 'every'), 1, 0, 0.17687017067164812)
(('meeting', 'every', 'day'), 1, 0, 0.17687017067164812)
(('every', 'day', '."'), 1, 0, 0.17687017067164812)
(('day', '."', ''), 6, 0, 4.48816029143898)
(('', '"', 'Dear'), 8, 0, 7.927797833935018)
(('"', 'Dear', 'Emma'), 1, 0, 0.17687017067164812)
(('Dear', 'Emma', 'bears'), 1, 0, 0.17687017067164812)
(('Emma', 'bears', 'every'), 1, 0, 0.17687017067164812)
(('bears', 'every', 'thing'), 1, 0, 0.17687017067164812)
(('every', 'thing', 'so'), 1, 0, 0.17687017067164812)
(('thing', 'so', 'well'), 1, 0, 0.17687017067164812)
(('so', 'well', ',"'), 1, 0, 0.17687017067164812)
(('well', ',"', 'said'), 3, 0, 1.7785588752196837)
((',"', 'said', 'her'), 5, 0, 3.7220338983050847)
(('said', 'her', 'father'), 3, 0, 1.7785588752196837)
(('her', 'father', '.'), 8, 0, 7.927797833935018)
(('father', '.', ''), 16, 0, 14.681818181818182)
(('"', 'But', ','), 10, 0, 9.36024844720497)
(('But', ',', 'Mr'), 3, 0, 1.7785588752196837)
(('Knightley', ',', 'she'), 2, 0, 0.983389342294767)
((',', 'she', 'is'), 18, 0, 11.585365853658537)
(('she', 'is', 'really'), 3, 0, 1.7785588752196837)
(('is', 'really', 'very'), 1, 0, 0.17687017067164812)
(('really', 'very', 'sorry'), 1, 0, 0.17687017067164812)
(('very', 'sorry', 'to'), 5, 0, 3.7220338983050847)
(('sorry', 'to', 'lose'), 3, 0, 1.7785588752196837)
(('to', 'lose', 'poor'), 1, 0, 0.17687017067164812)
(('lose', 'poor', 'Miss'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', ','), 4, 0, 2.9150197628458496)
(('Taylor', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'I'), 55, 0, 33.6)
(('sure', 'she', '_will_'), 1, 0, 0.17687017067164812)
(('she', '_will_', 'miss'), 1, 0, 0.17687017067164812)
(('_will_', 'miss', 'her'), 1, 0, 0.17687017067164812)
(('miss', 'her', 'more'), 1, 0, 0.17687017067164812)
(('her', 'more', 'than'), 7, 0, 6.295454545454546)
(('more', 'than', 'she'), 12, 0, 11.424242424242424)
(('than', 'she', 'thinks'), 1, 0, 0.17687017067164812)
(('she', 'thinks', 'for'), 1, 0, 0.17687017067164812)
(('thinks', 'for', '."'), 1, 0, 0.17687017067164812)
(('for', '."', ''), 6, 0, 4.48816029143898)
(('', 'Emma', 'turned'), 2, 0, 0.983389342294767)
(('Emma', 'turned', 'away'), 1, 0, 0.17687017067164812)
(('turned', 'away', 'her'), 1, 0, 0.17687017067164812)
(('away', 'her', 'head'), 1, 0, 0.17687017067164812)
(('her', 'head', ','), 3, 0, 1.7785588752196837)
(('head', ',', 'divided'), 1, 0, 0.17687017067164812)
((',', 'divided', 'between'), 1, 0, 0.17687017067164812)
(('divided', 'between', 'tears'), 1, 0, 0.17687017067164812)
(('between', 'tears', 'and'), 1, 0, 0.17687017067164812)
(('tears', 'and', 'smiles'), 1, 0, 0.17687017067164812)
(('and', 'smiles', '.'), 1, 0, 0.17687017067164812)
(('smiles', '.', ''), 3, 0, 1.7785588752196837)
(('', '"', 'It'), 49, 0, 25.0)
(('It', 'is', 'impossible'), 6, 0, 4.48816029143898)
(('is', 'impossible', 'that'), 1, 0, 0.17687017067164812)
(('impossible', 'that', 'Emma'), 1, 0, 0.17687017067164812)
(('that', 'Emma', 'should'), 2, 0, 0.983389342294767)
(('Emma', 'should', 'not'), 1, 0, 0.17687017067164812)
(('should', 'not', 'miss'), 1, 0, 0.17687017067164812)
(('not', 'miss', 'such'), 1, 0, 0.17687017067164812)
(('miss', 'such', 'a'), 1, 0, 0.17687017067164812)
(('such', 'a', 'companion'), 1, 0, 0.17687017067164812)
(('a', 'companion', ',"'), 1, 0, 0.17687017067164812)
(('companion', ',"', 'said'), 1, 0, 0.17687017067164812)
(('.', 'Knightley', '.'), 25, 0, 22.454545454545453)
(('Knightley', '.', ''), 30, 0, 31.0)
(('', '"', 'We'), 17, 0, 19.42105263157895)
(('"', 'We', 'should'), 1, 0, 0.17687017067164812)
(('We', 'should', 'not'), 1, 0, 0.17687017067164812)
(('should', 'not', 'like'), 2, 0, 0.983389342294767)
(('not', 'like', 'her'), 1, 0, 0.17687017067164812)
(('like', 'her', 'so'), 2, 0, 0.983389342294767)
(('her', 'so', 'well'), 1, 0, 0.17687017067164812)
(('so', 'well', 'as'), 5, 0, 3.7220338983050847)
(('well', 'as', 'we'), 1, 0, 0.17687017067164812)
(('as', 'we', 'do'), 2, 0, 0.983389342294767)
(('we', 'do', ','), 1, 0, 0.17687017067164812)
(('do', ',', 'sir'), 1, 0, 0.17687017067164812)
((',', 'sir', ','), 17, 0, 19.42105263157895)
(('sir', ',', 'if'), 2, 0, 0.983389342294767)
((',', 'if', 'we'), 6, 0, 4.48816029143898)
(('if', 'we', 'could'), 3, 0, 1.7785588752196837)
(('we', 'could', 'suppose'), 1, 0, 0.17687017067164812)
(('could', 'suppose', 'it'), 1, 0, 0.17687017067164812)
(('suppose', 'it', ';'), 1, 0, 0.17687017067164812)
(('it', ';', 'but'), 13, 0, 10.137931034482758)
((';', 'but', 'she'), 29, 0, 32.30769230769231)
(('but', 'she', 'knows'), 1, 0, 0.17687017067164812)
(('she', 'knows', 'how'), 2, 0, 0.983389342294767)
(('knows', 'how', 'much'), 1, 0, 0.17687017067164812)
(('how', 'much', 'the'), 1, 0, 0.17687017067164812)
(('much', 'the', 'marriage'), 1, 0, 0.17687017067164812)
(('the', 'marriage', 'is'), 1, 0, 0.17687017067164812)
(('marriage', 'is', 'to'), 1, 0, 0.17687017067164812)
(('is', 'to', 'Miss'), 1, 0, 0.17687017067164812)
(('to', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(("'", 's', 'advantage'), 2, 0, 0.983389342294767)
(('s', 'advantage', ';'), 1, 0, 0.17687017067164812)
(('advantage', ';', 'she'), 1, 0, 0.17687017067164812)
((';', 'she', 'knows'), 1, 0, 0.17687017067164812)
(('knows', 'how', 'very'), 1, 0, 0.17687017067164812)
(('how', 'very', 'acceptable'), 1, 0, 0.17687017067164812)
(('very', 'acceptable', 'it'), 1, 0, 0.17687017067164812)
(('acceptable', 'it', 'must'), 1, 0, 0.17687017067164812)
(('must', 'be', ','), 4, 0, 2.9150197628458496)
(('be', ',', 'at'), 1, 0, 0.17687017067164812)
((',', 'at', 'Miss'), 2, 0, 0.983389342294767)
(('at', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(("'", 's', 'time'), 4, 0, 2.9150197628458496)
(('s', 'time', 'of'), 3, 0, 1.7785588752196837)
(('time', 'of', 'life'), 3, 0, 1.7785588752196837)
(('of', 'life', ','), 3, 0, 1.7785588752196837)
(('life', ',', 'to'), 1, 0, 0.17687017067164812)
(('to', 'be', 'settled'), 3, 0, 1.7785588752196837)
(('be', 'settled', 'in'), 1, 0, 0.17687017067164812)
(('settled', 'in', 'a'), 1, 0, 0.17687017067164812)
(('in', 'a', 'home'), 1, 0, 0.17687017067164812)
(('a', 'home', 'of'), 1, 0, 0.17687017067164812)
(('home', 'of', 'her'), 1, 0, 0.17687017067164812)
(('her', 'own', ','), 3, 0, 1.7785588752196837)
(('own', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'how'), 9, 0, 6.5983606557377055)
(('and', 'how', 'important'), 1, 0, 0.17687017067164812)
(('how', 'important', 'to'), 1, 0, 0.17687017067164812)
(('important', 'to', 'her'), 1, 0, 0.17687017067164812)
(('to', 'her', 'to'), 4, 0, 2.9150197628458496)
(('her', 'to', 'be'), 18, 0, 11.585365853658537)
(('to', 'be', 'secure'), 2, 0, 0.983389342294767)
(('be', 'secure', 'of'), 3, 0, 1.7785588752196837)
(('secure', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'comfortable'), 1, 0, 0.17687017067164812)
(('a', 'comfortable', 'provision'), 1, 0, 0.17687017067164812)
(('comfortable', 'provision', ','), 1, 0, 0.17687017067164812)
(('provision', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'therefore'), 16, 0, 14.681818181818182)
(('and', 'therefore', 'cannot'), 1, 0, 0.17687017067164812)
(('therefore', 'cannot', 'allow'), 1, 0, 0.17687017067164812)
(('cannot', 'allow', 'herself'), 1, 0, 0.17687017067164812)
(('allow', 'herself', 'to'), 2, 0, 0.983389342294767)
(('herself', 'to', 'feel'), 1, 0, 0.17687017067164812)
(('to', 'feel', 'so'), 1, 0, 0.17687017067164812)
(('feel', 'so', 'much'), 1, 0, 0.17687017067164812)
(('so', 'much', 'pain'), 1, 0, 0.17687017067164812)
(('much', 'pain', 'as'), 1, 0, 0.17687017067164812)
(('pain', 'as', 'pleasure'), 1, 0, 0.17687017067164812)
(('as', 'pleasure', '.'), 1, 0, 0.17687017067164812)
(('pleasure', '.', ''), 10, 0, 9.36024844720497)
(('', 'Every', 'friend'), 1, 0, 0.17687017067164812)
(('Every', 'friend', 'of'), 1, 0, 0.17687017067164812)
(('friend', 'of', 'Miss'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', 'must'), 2, 0, 0.983389342294767)
(('Taylor', 'must', 'be'), 2, 0, 0.983389342294767)
(('must', 'be', 'glad'), 1, 0, 0.17687017067164812)
(('be', 'glad', 'to'), 5, 0, 3.7220338983050847)
(('glad', 'to', 'have'), 2, 0, 0.983389342294767)
(('to', 'have', 'her'), 10, 0, 9.36024844720497)
(('have', 'her', 'so'), 1, 0, 0.17687017067164812)
(('her', 'so', 'happily'), 1, 0, 0.17687017067164812)
(('so', 'happily', 'married'), 1, 0, 0.17687017067164812)
(('happily', 'married', '."'), 1, 0, 0.17687017067164812)
(('married', '."', ''), 4, 0, 2.9150197628458496)
(('', '"', 'And'), 48, 0, 58.8)
(('"', 'And', 'you'), 2, 0, 0.983389342294767)
(('you', 'have', 'forgotten'), 1, 0, 0.17687017067164812)
(('have', 'forgotten', 'one'), 1, 0, 0.17687017067164812)
(('forgotten', 'one', 'matter'), 1, 0, 0.17687017067164812)
(('one', 'matter', 'of'), 1, 0, 0.17687017067164812)
(('matter', 'of', 'joy'), 1, 0, 0.17687017067164812)
(('of', 'joy', 'to'), 1, 0, 0.17687017067164812)
(('joy', 'to', 'me'), 1, 0, 0.17687017067164812)
(('to', 'me', ',"'), 3, 0, 1.7785588752196837)
(('me', ',"', 'said'), 5, 0, 3.7220338983050847)
(('Emma', ',', '"'), 30, 0, 31.0)
((',', '"', 'and'), 17, 0, 19.42105263157895)
(('"', 'and', 'a'), 1, 0, 0.17687017067164812)
(('and', 'a', 'very'), 12, 0, 11.424242424242424)
(('a', 'very', 'considerable'), 1, 0, 0.17687017067164812)
(('very', 'considerable', 'one'), 1, 0, 0.17687017067164812)
(('considerable', 'one', '--'), 1, 0, 0.17687017067164812)
(('one', '--', 'that'), 1, 0, 0.17687017067164812)
(('--', 'that', 'I'), 2, 0, 0.983389342294767)
(('that', 'I', 'made'), 1, 0, 0.17687017067164812)
(('I', 'made', 'the'), 3, 0, 1.7785588752196837)
(('made', 'the', 'match'), 2, 0, 0.983389342294767)
(('the', 'match', 'myself'), 1, 0, 0.17687017067164812)
(('match', 'myself', '.'), 1, 0, 0.17687017067164812)
(('', 'I', 'made'), 3, 0, 1.7785588752196837)
(('the', 'match', ','), 3, 0, 1.7785588752196837)
(('match', ',', 'you'), 1, 0, 0.17687017067164812)
(('know', ',', 'four'), 1, 0, 0.17687017067164812)
((',', 'four', 'years'), 1, 0, 0.17687017067164812)
(('four', 'years', 'ago'), 2, 0, 0.983389342294767)
(('years', 'ago', ';'), 2, 0, 0.983389342294767)
(('ago', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'to'), 5, 0, 3.7220338983050847)
(('and', 'to', 'have'), 4, 0, 2.9150197628458496)
(('to', 'have', 'it'), 5, 0, 3.7220338983050847)
(('have', 'it', 'take'), 1, 0, 0.17687017067164812)
(('it', 'take', 'place'), 1, 0, 0.17687017067164812)
(('take', 'place', ','), 2, 0, 0.983389342294767)
(('place', ',', 'and'), 3, 0, 1.7785588752196837)
(('and', 'be', 'proved'), 1, 0, 0.17687017067164812)
(('be', 'proved', 'in'), 1, 0, 0.17687017067164812)
(('proved', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'right'), 4, 0, 2.9150197628458496)
(('the', 'right', ','), 1, 0, 0.17687017067164812)
(('right', ',', 'when'), 1, 0, 0.17687017067164812)
((',', 'when', 'so'), 1, 0, 0.17687017067164812)
(('when', 'so', 'many'), 1, 0, 0.17687017067164812)
(('so', 'many', 'people'), 1, 0, 0.17687017067164812)
(('many', 'people', 'said'), 1, 0, 0.17687017067164812)
(('people', 'said', 'Mr'), 1, 0, 0.17687017067164812)
(('.', 'Weston', 'would'), 8, 0, 7.927797833935018)
(('Weston', 'would', 'never'), 2, 0, 0.983389342294767)
(('would', 'never', 'marry'), 5, 0, 3.7220338983050847)
(('never', 'marry', 'again'), 3, 0, 1.7785588752196837)
(('marry', 'again', ','), 1, 0, 0.17687017067164812)
(('again', ',', 'may'), 1, 0, 0.17687017067164812)
((',', 'may', 'comfort'), 1, 0, 0.17687017067164812)
(('may', 'comfort', 'me'), 1, 0, 0.17687017067164812)
(('comfort', 'me', 'for'), 1, 0, 0.17687017067164812)
(('me', 'for', 'any'), 1, 0, 0.17687017067164812)
(('for', 'any', 'thing'), 12, 0, 11.424242424242424)
(('any', 'thing', '."'), 4, 0, 2.9150197628458496)
(('thing', '."', ''), 10, 0, 9.36024844720497)
(('.', 'Knightley', 'shook'), 1, 0, 0.17687017067164812)
(('Knightley', 'shook', 'his'), 1, 0, 0.17687017067164812)
(('shook', 'his', 'head'), 5, 0, 3.7220338983050847)
(('his', 'head', 'at'), 1, 0, 0.17687017067164812)
(('head', 'at', 'her'), 1, 0, 0.17687017067164812)
(('at', 'her', '.'), 5, 0, 3.7220338983050847)
(('Her', 'father', 'fondly'), 1, 0, 0.17687017067164812)
(('father', 'fondly', 'replied'), 1, 0, 0.17687017067164812)
(('fondly', 'replied', ','), 1, 0, 0.17687017067164812)
(('replied', ',', '"'), 8, 0, 7.927797833935018)
((',', '"', 'Ah'), 4, 0, 2.9150197628458496)
(('', '', 'my'), 14, 0, 11.428571428571427)
(('', 'my', 'dear'), 11, 0, 8.671532846715328)
(('dear', ',', 'I'), 8, 0, 7.927797833935018)
((',', 'I', 'wish'), 6, 0, 4.48816029143898)
(('wish', 'you', 'would'), 3, 0, 1.7785588752196837)
(('would', 'not', 'make'), 2, 0, 0.983389342294767)
(('not', 'make', 'matches'), 1, 0, 0.17687017067164812)
(('make', 'matches', 'and'), 1, 0, 0.17687017067164812)
(('matches', 'and', 'foretell'), 1, 0, 0.17687017067164812)
(('and', 'foretell', 'things'), 1, 0, 0.17687017067164812)
(('foretell', 'things', ','), 1, 0, 0.17687017067164812)
(('things', ',', 'for'), 1, 0, 0.17687017067164812)
((',', 'for', 'whatever'), 2, 0, 0.983389342294767)
(('for', 'whatever', 'you'), 1, 0, 0.17687017067164812)
(('whatever', 'you', 'say'), 1, 0, 0.17687017067164812)
(('you', 'say', 'always'), 1, 0, 0.17687017067164812)
(('say', 'always', 'comes'), 1, 0, 0.17687017067164812)
(('always', 'comes', 'to'), 1, 0, 0.17687017067164812)
(('comes', 'to', 'pass'), 1, 0, 0.17687017067164812)
(('to', 'pass', '.'), 1, 0, 0.17687017067164812)
(('pass', '.', ''), 4, 0, 2.9150197628458496)
(('', '', 'Pray'), 8, 0, 7.927797833935018)
(('', 'Pray', 'do'), 2, 0, 0.983389342294767)
(('Pray', 'do', 'not'), 2, 0, 0.983389342294767)
(('do', 'not', 'make'), 3, 0, 1.7785588752196837)
(('not', 'make', 'any'), 2, 0, 0.983389342294767)
(('make', 'any', 'more'), 2, 0, 0.983389342294767)
(('any', 'more', 'matches'), 2, 0, 0.983389342294767)
(('more', 'matches', '."'), 1, 0, 0.17687017067164812)
(('matches', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'I', 'promise'), 1, 0, 0.17687017067164812)
(('I', 'promise', 'you'), 1, 0, 0.17687017067164812)
(('promise', 'you', 'to'), 1, 0, 0.17687017067164812)
(('you', 'to', 'make'), 1, 0, 0.17687017067164812)
(('to', 'make', 'none'), 1, 0, 0.17687017067164812)
(('make', 'none', 'for'), 1, 0, 0.17687017067164812)
(('none', 'for', 'myself'), 1, 0, 0.17687017067164812)
(('for', 'myself', ','), 4, 0, 2.9150197628458496)
(('myself', ',', 'papa'), 1, 0, 0.17687017067164812)
(('papa', ';', 'but'), 1, 0, 0.17687017067164812)
(('but', 'I', 'must'), 7, 0, 6.295454545454546)
(('I', 'must', ','), 3, 0, 1.7785588752196837)
(('must', ',', 'indeed'), 1, 0, 0.17687017067164812)
(('indeed', ',', 'for'), 2, 0, 0.983389342294767)
((',', 'for', 'other'), 1, 0, 0.17687017067164812)
(('for', 'other', 'people'), 1, 0, 0.17687017067164812)
(('other', 'people', '.'), 4, 0, 2.9150197628458496)
(('people', '.', ''), 4, 0, 2.9150197628458496)
(('It', 'is', 'the'), 5, 0, 3.7220338983050847)
(('is', 'the', 'greatest'), 2, 0, 0.983389342294767)
(('the', 'greatest', 'amusement'), 1, 0, 0.17687017067164812)
(('greatest', 'amusement', 'in'), 1, 0, 0.17687017067164812)
(('amusement', 'in', 'the'), 1, 0, 0.17687017067164812)
(('the', 'world', '!'), 4, 0, 2.9150197628458496)
(('world', '!', ''), 4, 0, 2.9150197628458496)
(('', 'And', 'after'), 1, 0, 0.17687017067164812)
(('And', 'after', 'such'), 1, 0, 0.17687017067164812)
(('after', 'such', 'success'), 1, 0, 0.17687017067164812)
(('such', 'success', ','), 1, 0, 0.17687017067164812)
(('success', ',', 'you'), 1, 0, 0.17687017067164812)
(('you', 'know', '!--'), 1, 0, 0.17687017067164812)
(('know', '!--', 'Every'), 1, 0, 0.17687017067164812)
(('!--', 'Every', 'body'), 2, 0, 0.983389342294767)
(('Every', 'body', 'said'), 1, 0, 0.17687017067164812)
(('body', 'said', 'that'), 1, 0, 0.17687017067164812)
(('said', 'that', 'Mr'), 1, 0, 0.17687017067164812)
(('marry', 'again', '.'), 2, 0, 0.983389342294767)
(('', 'Oh', 'dear'), 1, 0, 0.17687017067164812)
(('Oh', 'dear', ','), 1, 0, 0.17687017067164812)
(('dear', ',', 'no'), 3, 0, 1.7785588752196837)
((',', 'no', '!'), 3, 0, 1.7785588752196837)
(('Weston', ',', 'who'), 10, 0, 9.36024844720497)
(('who', 'had', 'been'), 16, 0, 14.681818181818182)
(('been', 'a', 'widower'), 1, 0, 0.17687017067164812)
(('a', 'widower', 'so'), 1, 0, 0.17687017067164812)
(('widower', 'so', 'long'), 1, 0, 0.17687017067164812)
(('so', 'long', ','), 5, 0, 3.7220338983050847)
(('long', ',', 'and'), 5, 0, 3.7220338983050847)
(('and', 'who', 'seemed'), 1, 0, 0.17687017067164812)
(('who', 'seemed', 'so'), 1, 0, 0.17687017067164812)
(('seemed', 'so', 'perfectly'), 1, 0, 0.17687017067164812)
(('so', 'perfectly', 'comfortable'), 1, 0, 0.17687017067164812)
(('perfectly', 'comfortable', 'without'), 1, 0, 0.17687017067164812)
(('comfortable', 'without', 'a'), 1, 0, 0.17687017067164812)
(('without', 'a', 'wife'), 1, 0, 0.17687017067164812)
(('a', 'wife', ','), 5, 0, 3.7220338983050847)
(('wife', ',', 'so'), 1, 0, 0.17687017067164812)
((',', 'so', 'constantly'), 1, 0, 0.17687017067164812)
(('so', 'constantly', 'occupied'), 1, 0, 0.17687017067164812)
(('constantly', 'occupied', 'either'), 1, 0, 0.17687017067164812)
(('occupied', 'either', 'in'), 1, 0, 0.17687017067164812)
(('either', 'in', 'his'), 2, 0, 0.983389342294767)
(('in', 'his', 'business'), 1, 0, 0.17687017067164812)
(('his', 'business', 'in'), 1, 0, 0.17687017067164812)
(('business', 'in', 'town'), 1, 0, 0.17687017067164812)
(('in', 'town', 'or'), 1, 0, 0.17687017067164812)
(('town', 'or', 'among'), 1, 0, 0.17687017067164812)
(('or', 'among', 'his'), 1, 0, 0.17687017067164812)
(('among', 'his', 'friends'), 1, 0, 0.17687017067164812)
(('his', 'friends', 'here'), 1, 0, 0.17687017067164812)
(('friends', 'here', ','), 1, 0, 0.17687017067164812)
(('here', ',', 'always'), 1, 0, 0.17687017067164812)
((',', 'always', 'acceptable'), 1, 0, 0.17687017067164812)
(('always', 'acceptable', 'wherever'), 1, 0, 0.17687017067164812)
(('acceptable', 'wherever', 'he'), 1, 0, 0.17687017067164812)
(('wherever', 'he', 'went'), 2, 0, 0.983389342294767)
(('he', 'went', ','), 2, 0, 0.983389342294767)
(('went', ',', 'always'), 1, 0, 0.17687017067164812)
((',', 'always', 'cheerful'), 1, 0, 0.17687017067164812)
(('always', 'cheerful', '--'), 1, 0, 0.17687017067164812)
(('cheerful', '--', 'Mr'), 1, 0, 0.17687017067164812)
(('--', 'Mr', '.'), 13, 0, 10.137931034482758)
(('.', 'Weston', 'need'), 1, 0, 0.17687017067164812)
(('Weston', 'need', 'not'), 1, 0, 0.17687017067164812)
(('need', 'not', 'spend'), 1, 0, 0.17687017067164812)
(('not', 'spend', 'a'), 1, 0, 0.17687017067164812)
(('spend', 'a', 'single'), 1, 0, 0.17687017067164812)
(('a', 'single', 'evening'), 1, 0, 0.17687017067164812)
(('single', 'evening', 'in'), 1, 0, 0.17687017067164812)
(('evening', 'in', 'the'), 2, 0, 0.983389342294767)
(('in', 'the', 'year'), 1, 0, 0.17687017067164812)
(('the', 'year', 'alone'), 1, 0, 0.17687017067164812)
(('year', 'alone', 'if'), 1, 0, 0.17687017067164812)
(('alone', 'if', 'he'), 1, 0, 0.17687017067164812)
(('if', 'he', 'did'), 7, 0, 6.295454545454546)
(('he', 'did', 'not'), 22, 0, 16.03030303030303)
(('did', 'not', 'like'), 5, 0, 3.7220338983050847)
(('not', 'like', 'it'), 4, 0, 2.9150197628458496)
(('like', 'it', '.'), 3, 0, 1.7785588752196837)
(('.', 'Weston', 'certainly'), 1, 0, 0.17687017067164812)
(('Weston', 'certainly', 'would'), 1, 0, 0.17687017067164812)
(('certainly', 'would', 'never'), 1, 0, 0.17687017067164812)
(('', '', 'Some'), 12, 0, 11.424242424242424)
(('', 'Some', 'people'), 3, 0, 1.7785588752196837)
(('Some', 'people', 'even'), 1, 0, 0.17687017067164812)
(('people', 'even', 'talked'), 1, 0, 0.17687017067164812)
(('even', 'talked', 'of'), 1, 0, 0.17687017067164812)
(('talked', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'promise'), 1, 0, 0.17687017067164812)
(('a', 'promise', 'to'), 1, 0, 0.17687017067164812)
(('promise', 'to', 'his'), 1, 0, 0.17687017067164812)
(('to', 'his', 'wife'), 5, 0, 3.7220338983050847)
(('his', 'wife', 'on'), 1, 0, 0.17687017067164812)
(('wife', 'on', 'her'), 1, 0, 0.17687017067164812)
(('on', 'her', 'deathbed'), 1, 0, 0.17687017067164812)
(('her', 'deathbed', ','), 1, 0, 0.17687017067164812)
(('deathbed', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'others'), 4, 0, 2.9150197628458496)
(('and', 'others', 'of'), 1, 0, 0.17687017067164812)
(('others', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'son'), 1, 0, 0.17687017067164812)
(('the', 'son', 'and'), 1, 0, 0.17687017067164812)
(('son', 'and', 'the'), 1, 0, 0.17687017067164812)
(('and', 'the', 'uncle'), 1, 0, 0.17687017067164812)
(('the', 'uncle', 'not'), 1, 0, 0.17687017067164812)
(('uncle', 'not', 'letting'), 1, 0, 0.17687017067164812)
(('not', 'letting', 'him'), 1, 0, 0.17687017067164812)
(('letting', 'him', '.'), 1, 0, 0.17687017067164812)
(('him', '.', ''), 67, 0, 22.666666666666664)
(('', 'All', 'manner'), 1, 0, 0.17687017067164812)
(('All', 'manner', 'of'), 1, 0, 0.17687017067164812)
(('manner', 'of', 'solemn'), 1, 0, 0.17687017067164812)
(('of', 'solemn', 'nonsense'), 1, 0, 0.17687017067164812)
(('solemn', 'nonsense', 'was'), 1, 0, 0.17687017067164812)
(('nonsense', 'was', 'talked'), 1, 0, 0.17687017067164812)
(('was', 'talked', 'on'), 1, 0, 0.17687017067164812)
(('talked', 'on', 'the'), 1, 0, 0.17687017067164812)
(('on', 'the', 'subject'), 32, 0, 33.0)
(('the', 'subject', ','), 13, 0, 10.137931034482758)
(('subject', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'I'), 36, 0, 44.4)
(('but', 'I', 'believed'), 1, 0, 0.17687017067164812)
(('I', 'believed', 'none'), 1, 0, 0.17687017067164812)
(('believed', 'none', 'of'), 1, 0, 0.17687017067164812)
(('none', 'of', 'it'), 3, 0, 1.7785588752196837)
(('of', 'it', '.'), 29, 0, 32.30769230769231)
(('', '"', 'Ever'), 2, 0, 0.983389342294767)
(('"', 'Ever', 'since'), 1, 0, 0.17687017067164812)
(('Ever', 'since', 'the'), 2, 0, 0.983389342294767)
(('since', 'the', 'day'), 2, 0, 0.983389342294767)
(('the', 'day', '--'), 2, 0, 0.983389342294767)
(('day', '--', 'about'), 1, 0, 0.17687017067164812)
(('--', 'about', 'four'), 1, 0, 0.17687017067164812)
(('about', 'four', 'years'), 1, 0, 0.17687017067164812)
(('years', 'ago', '--'), 1, 0, 0.17687017067164812)
(('ago', '--', 'that'), 1, 0, 0.17687017067164812)
(('--', 'that', 'Miss'), 1, 0, 0.17687017067164812)
(('that', 'Miss', 'Taylor'), 3, 0, 1.7785588752196837)
(('Miss', 'Taylor', 'and'), 1, 0, 0.17687017067164812)
(('Taylor', 'and', 'I'), 1, 0, 0.17687017067164812)
(('and', 'I', 'met'), 1, 0, 0.17687017067164812)
(('I', 'met', 'with'), 1, 0, 0.17687017067164812)
(('met', 'with', 'him'), 1, 0, 0.17687017067164812)
(('with', 'him', 'in'), 3, 0, 1.7785588752196837)
(('him', 'in', 'Broadway'), 1, 0, 0.17687017067164812)
(('in', 'Broadway', 'Lane'), 1, 0, 0.17687017067164812)
(('Broadway', 'Lane', ','), 1, 0, 0.17687017067164812)
(('Lane', ',', 'when'), 1, 0, 0.17687017067164812)
((',', 'when', ','), 2, 0, 0.983389342294767)
(('when', ',', 'because'), 2, 0, 0.983389342294767)
((',', 'because', 'it'), 7, 0, 6.295454545454546)
(('because', 'it', 'began'), 1, 0, 0.17687017067164812)
(('it', 'began', 'to'), 2, 0, 0.983389342294767)
(('began', 'to', 'drizzle'), 1, 0, 0.17687017067164812)
(('to', 'drizzle', ','), 1, 0, 0.17687017067164812)
(('drizzle', ',', 'he'), 1, 0, 0.17687017067164812)
((',', 'he', 'darted'), 1, 0, 0.17687017067164812)
(('he', 'darted', 'away'), 1, 0, 0.17687017067164812)
(('darted', 'away', 'with'), 1, 0, 0.17687017067164812)
(('away', 'with', 'so'), 1, 0, 0.17687017067164812)
(('with', 'so', 'much'), 8, 0, 7.927797833935018)
(('so', 'much', 'gallantry'), 1, 0, 0.17687017067164812)
(('much', 'gallantry', ','), 1, 0, 0.17687017067164812)
(('gallantry', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'borrowed'), 1, 0, 0.17687017067164812)
(('and', 'borrowed', 'two'), 1, 0, 0.17687017067164812)
(('borrowed', 'two', 'umbrellas'), 1, 0, 0.17687017067164812)
(('two', 'umbrellas', 'for'), 1, 0, 0.17687017067164812)
(('umbrellas', 'for', 'us'), 1, 0, 0.17687017067164812)
(('for', 'us', 'from'), 1, 0, 0.17687017067164812)
(('us', 'from', 'Farmer'), 1, 0, 0.17687017067164812)
(('from', 'Farmer', 'Mitchell'), 1, 0, 0.17687017067164812)
(('Farmer', 'Mitchell', "'"), 1, 0, 0.17687017067164812)
(('Mitchell', "'", 's'), 1, 0, 0.17687017067164812)
(("'", 's', ','), 51, 0, 26.0)
(('s', ',', 'I'), 6, 0, 4.48816029143898)
((',', 'I', 'made'), 2, 0, 0.983389342294767)
(('I', 'made', 'up'), 1, 0, 0.17687017067164812)
(('made', 'up', 'my'), 2, 0, 0.983389342294767)
(('up', 'my', 'mind'), 2, 0, 0.983389342294767)
(('my', 'mind', 'on'), 1, 0, 0.17687017067164812)
(('mind', 'on', 'the'), 1, 0, 0.17687017067164812)
(('the', 'subject', '.'), 9, 0, 6.5983606557377055)
(('subject', '.', ''), 14, 0, 11.428571428571427)
(('', 'I', 'planned'), 1, 0, 0.17687017067164812)
(('I', 'planned', 'the'), 1, 0, 0.17687017067164812)
(('planned', 'the', 'match'), 1, 0, 0.17687017067164812)
(('the', 'match', 'from'), 1, 0, 0.17687017067164812)
(('match', 'from', 'that'), 1, 0, 0.17687017067164812)
(('from', 'that', 'hour'), 1, 0, 0.17687017067164812)
(('that', 'hour', ';'), 1, 0, 0.17687017067164812)
(('hour', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'when', 'such'), 1, 0, 0.17687017067164812)
(('when', 'such', 'success'), 1, 0, 0.17687017067164812)
(('such', 'success', 'has'), 1, 0, 0.17687017067164812)
(('success', 'has', 'blessed'), 1, 0, 0.17687017067164812)
(('has', 'blessed', 'me'), 1, 0, 0.17687017067164812)
(('blessed', 'me', 'in'), 1, 0, 0.17687017067164812)
(('me', 'in', 'this'), 2, 0, 0.983389342294767)
(('in', 'this', 'instance'), 5, 0, 3.7220338983050847)
(('this', 'instance', ','), 2, 0, 0.983389342294767)
(('instance', ',', 'dear'), 1, 0, 0.17687017067164812)
((',', 'dear', 'papa'), 1, 0, 0.17687017067164812)
(('dear', 'papa', ','), 5, 0, 3.7220338983050847)
(('papa', ',', 'you'), 2, 0, 0.983389342294767)
((',', 'you', 'cannot'), 2, 0, 0.983389342294767)
(('you', 'cannot', 'think'), 1, 0, 0.17687017067164812)
(('cannot', 'think', 'that'), 1, 0, 0.17687017067164812)
(('think', 'that', 'I'), 1, 0, 0.17687017067164812)
(('that', 'I', 'shall'), 3, 0, 1.7785588752196837)
(('I', 'shall', 'leave'), 3, 0, 1.7785588752196837)
(('shall', 'leave', 'off'), 2, 0, 0.983389342294767)
(('leave', 'off', 'match'), 1, 0, 0.17687017067164812)
(('off', 'match', '-'), 1, 0, 0.17687017067164812)
(('match', '-', 'making'), 6, 0, 4.48816029143898)
(('-', 'making', '."'), 1, 0, 0.17687017067164812)
(('making', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'I', 'do'), 33, 0, 22.666666666666664)
(('I', 'do', 'not'), 135, 0, 136.0)
(('do', 'not', 'understand'), 3, 0, 1.7785588752196837)
(('not', 'understand', 'what'), 1, 0, 0.17687017067164812)
(('understand', 'what', 'you'), 2, 0, 0.983389342294767)
(('what', 'you', 'mean'), 5, 0, 3.7220338983050847)
(('you', 'mean', 'by'), 1, 0, 0.17687017067164812)
(('mean', 'by', '`'), 1, 0, 0.17687017067164812)
(('by', '`', 'success'), 1, 0, 0.17687017067164812)
(('`', 'success', ',\'"'), 1, 0, 0.17687017067164812)
(('success', ',\'"', 'said'), 1, 0, 0.17687017067164812)
((',\'"', 'said', 'Mr'), 1, 0, 0.17687017067164812)
(('', '"', 'Success'), 1, 0, 0.17687017067164812)
(('"', 'Success', 'supposes'), 1, 0, 0.17687017067164812)
(('Success', 'supposes', 'endeavour'), 1, 0, 0.17687017067164812)
(('supposes', 'endeavour', '.'), 1, 0, 0.17687017067164812)
(('endeavour', '.', ''), 2, 0, 0.983389342294767)
(('', '', 'Your'), 14, 0, 11.428571428571427)
(('', 'Your', 'time'), 1, 0, 0.17687017067164812)
(('Your', 'time', 'has'), 1, 0, 0.17687017067164812)
(('time', 'has', 'been'), 1, 0, 0.17687017067164812)
(('has', 'been', 'properly'), 1, 0, 0.17687017067164812)
(('been', 'properly', 'and'), 1, 0, 0.17687017067164812)
(('properly', 'and', 'delicately'), 1, 0, 0.17687017067164812)
(('and', 'delicately', 'spent'), 1, 0, 0.17687017067164812)
(('delicately', 'spent', ','), 1, 0, 0.17687017067164812)
(('spent', ',', 'if'), 1, 0, 0.17687017067164812)
(('if', 'you', 'have'), 2, 0, 0.983389342294767)
(('you', 'have', 'been'), 12, 0, 11.424242424242424)
(('have', 'been', 'endeavouring'), 1, 0, 0.17687017067164812)
(('been', 'endeavouring', 'for'), 1, 0, 0.17687017067164812)
(('endeavouring', 'for', 'the'), 1, 0, 0.17687017067164812)
(('for', 'the', 'last'), 3, 0, 1.7785588752196837)
(('the', 'last', 'four'), 1, 0, 0.17687017067164812)
(('last', 'four', 'years'), 1, 0, 0.17687017067164812)
(('four', 'years', 'to'), 1, 0, 0.17687017067164812)
(('years', 'to', 'bring'), 1, 0, 0.17687017067164812)
(('to', 'bring', 'about'), 1, 0, 0.17687017067164812)
(('bring', 'about', 'this'), 1, 0, 0.17687017067164812)
(('about', 'this', 'marriage'), 1, 0, 0.17687017067164812)
(('this', 'marriage', '.'), 1, 0, 0.17687017067164812)
(('marriage', '.', ''), 7, 0, 6.295454545454546)
(('', 'A', 'worthy'), 1, 0, 0.17687017067164812)
(('A', 'worthy', 'employment'), 1, 0, 0.17687017067164812)
(('worthy', 'employment', 'for'), 1, 0, 0.17687017067164812)
(('employment', 'for', 'a'), 1, 0, 0.17687017067164812)
(('for', 'a', 'young'), 5, 0, 3.7220338983050847)
(('a', 'young', 'lady'), 6, 0, 4.48816029143898)
(('young', 'lady', "'"), 2, 0, 0.983389342294767)
(('lady', "'", 's'), 7, 0, 6.295454545454546)
(("'", 's', 'mind'), 12, 0, 11.424242424242424)
(('s', 'mind', '!'), 1, 0, 0.17687017067164812)
(('mind', '!', ''), 2, 0, 0.983389342294767)
(('', 'But', 'if'), 4, 0, 2.9150197628458496)
(('But', 'if', ','), 1, 0, 0.17687017067164812)
(('if', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'I'), 11, 0, 8.671532846715328)
(('which', 'I', 'rather'), 1, 0, 0.17687017067164812)
(('I', 'rather', 'imagine'), 2, 0, 0.983389342294767)
(('rather', 'imagine', ','), 1, 0, 0.17687017067164812)
(('imagine', ',', 'your'), 1, 0, 0.17687017067164812)
((',', 'your', 'making'), 1, 0, 0.17687017067164812)
(('your', 'making', 'the'), 1, 0, 0.17687017067164812)
(('making', 'the', 'match'), 1, 0, 0.17687017067164812)
(('match', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'you'), 23, 0, 14.608695652173914)
(('as', 'you', 'call'), 1, 0, 0.17687017067164812)
(('you', 'call', 'it'), 1, 0, 0.17687017067164812)
(('call', 'it', ','), 1, 0, 0.17687017067164812)
(('it', ',', 'means'), 1, 0, 0.17687017067164812)
((',', 'means', 'only'), 1, 0, 0.17687017067164812)
(('means', 'only', 'your'), 1, 0, 0.17687017067164812)
(('only', 'your', 'planning'), 1, 0, 0.17687017067164812)
(('your', 'planning', 'it'), 1, 0, 0.17687017067164812)
(('planning', 'it', ','), 1, 0, 0.17687017067164812)
(('it', ',', 'your'), 1, 0, 0.17687017067164812)
((',', 'your', 'saying'), 1, 0, 0.17687017067164812)
(('your', 'saying', 'to'), 1, 0, 0.17687017067164812)
(('saying', 'to', 'yourself'), 1, 0, 0.17687017067164812)
(('to', 'yourself', 'one'), 1, 0, 0.17687017067164812)
(('yourself', 'one', 'idle'), 1, 0, 0.17687017067164812)
(('one', 'idle', 'day'), 1, 0, 0.17687017067164812)
(('idle', 'day', ','), 1, 0, 0.17687017067164812)
(('day', ',', '`'), 1, 0, 0.17687017067164812)
((',', '`', 'I'), 8, 0, 7.927797833935018)
(('`', 'I', 'think'), 1, 0, 0.17687017067164812)
(('I', 'think', 'it'), 12, 0, 11.424242424242424)
(('think', 'it', 'would'), 4, 0, 2.9150197628458496)
(('would', 'be', 'a'), 29, 0, 32.30769230769231)
(('be', 'a', 'very'), 11, 0, 8.671532846715328)
(('very', 'good', 'thing'), 1, 0, 0.17687017067164812)
(('good', 'thing', 'for'), 1, 0, 0.17687017067164812)
(('thing', 'for', 'Miss'), 1, 0, 0.17687017067164812)
(('for', 'Miss', 'Taylor'), 2, 0, 0.983389342294767)
(('Miss', 'Taylor', 'if'), 1, 0, 0.17687017067164812)
(('Taylor', 'if', 'Mr'), 1, 0, 0.17687017067164812)
(('if', 'Mr', '.'), 6, 0, 4.48816029143898)
(('.', 'Weston', 'were'), 6, 0, 4.48816029143898)
(('Weston', 'were', 'to'), 1, 0, 0.17687017067164812)
(('were', 'to', 'marry'), 2, 0, 0.983389342294767)
(('to', 'marry', 'her'), 2, 0, 0.983389342294767)
(('marry', 'her', ",'"), 1, 0, 0.17687017067164812)
(('her', ",'", 'and'), 1, 0, 0.17687017067164812)
((",'", 'and', 'saying'), 1, 0, 0.17687017067164812)
(('and', 'saying', 'it'), 1, 0, 0.17687017067164812)
(('saying', 'it', 'again'), 1, 0, 0.17687017067164812)
(('it', 'again', 'to'), 2, 0, 0.983389342294767)
(('again', 'to', 'yourself'), 1, 0, 0.17687017067164812)
(('to', 'yourself', 'every'), 1, 0, 0.17687017067164812)
(('yourself', 'every', 'now'), 1, 0, 0.17687017067164812)
(('every', 'now', 'and'), 2, 0, 0.983389342294767)
(('now', 'and', 'then'), 6, 0, 4.48816029143898)
(('and', 'then', 'afterwards'), 1, 0, 0.17687017067164812)
(('then', 'afterwards', ','), 1, 0, 0.17687017067164812)
(('afterwards', ',', 'why'), 1, 0, 0.17687017067164812)
((',', 'why', 'do'), 3, 0, 1.7785588752196837)
(('why', 'do', 'you'), 3, 0, 1.7785588752196837)
(('do', 'you', 'talk'), 1, 0, 0.17687017067164812)
(('you', 'talk', 'of'), 1, 0, 0.17687017067164812)
(('talk', 'of', 'success'), 1, 0, 0.17687017067164812)
(('of', 'success', '?'), 1, 0, 0.17687017067164812)
(('success', '?', ''), 1, 0, 0.17687017067164812)
(('', '', 'Where'), 11, 0, 8.671532846715328)
(('', 'Where', 'is'), 3, 0, 1.7785588752196837)
(('Where', 'is', 'your'), 1, 0, 0.17687017067164812)
(('is', 'your', 'merit'), 1, 0, 0.17687017067164812)
(('your', 'merit', '?'), 1, 0, 0.17687017067164812)
(('merit', '?', ''), 1, 0, 0.17687017067164812)
(('', 'What', 'are'), 4, 0, 2.9150197628458496)
(('What', 'are', 'you'), 1, 0, 0.17687017067164812)
(('are', 'you', 'proud'), 1, 0, 0.17687017067164812)
(('you', 'proud', 'of'), 1, 0, 0.17687017067164812)
(('proud', 'of', '?'), 1, 0, 0.17687017067164812)
(('of', '?', ''), 3, 0, 1.7785588752196837)
(('', 'You', 'made'), 1, 0, 0.17687017067164812)
(('You', 'made', 'a'), 1, 0, 0.17687017067164812)
(('made', 'a', 'lucky'), 1, 0, 0.17687017067164812)
(('a', 'lucky', 'guess'), 3, 0, 1.7785588752196837)
(('lucky', 'guess', ';'), 1, 0, 0.17687017067164812)
(('guess', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', '_that_'), 1, 0, 0.17687017067164812)
(('and', '_that_', 'is'), 1, 0, 0.17687017067164812)
(('_that_', 'is', 'all'), 1, 0, 0.17687017067164812)
(('is', 'all', 'that'), 4, 0, 2.9150197628458496)
(('all', 'that', 'can'), 1, 0, 0.17687017067164812)
(('that', 'can', 'be'), 1, 0, 0.17687017067164812)
(('can', 'be', 'said'), 1, 0, 0.17687017067164812)
(('be', 'said', '."'), 2, 0, 0.983389342294767)
(('said', '."', ''), 3, 0, 1.7785588752196837)
(('"', 'And', 'have'), 1, 0, 0.17687017067164812)
(('And', 'have', 'you'), 1, 0, 0.17687017067164812)
(('have', 'you', 'never'), 1, 0, 0.17687017067164812)
(('you', 'never', 'known'), 1, 0, 0.17687017067164812)
(('never', 'known', 'the'), 2, 0, 0.983389342294767)
(('known', 'the', 'pleasure'), 1, 0, 0.17687017067164812)
(('the', 'pleasure', 'and'), 2, 0, 0.983389342294767)
(('pleasure', 'and', 'triumph'), 1, 0, 0.17687017067164812)
(('and', 'triumph', 'of'), 1, 0, 0.17687017067164812)
(('triumph', 'of', 'a'), 2, 0, 0.983389342294767)
(('of', 'a', 'lucky'), 1, 0, 0.17687017067164812)
(('lucky', 'guess', '?--'), 1, 0, 0.17687017067164812)
(('guess', '?--', 'I'), 1, 0, 0.17687017067164812)
(('?--', 'I', 'pity'), 1, 0, 0.17687017067164812)
(('I', 'pity', 'you'), 1, 0, 0.17687017067164812)
(('pity', 'you', '.--'), 1, 0, 0.17687017067164812)
(('you', '.--', 'I'), 2, 0, 0.983389342294767)
(('.--', 'I', 'thought'), 3, 0, 1.7785588752196837)
(('I', 'thought', 'you'), 6, 0, 4.48816029143898)
(('thought', 'you', 'cleverer'), 1, 0, 0.17687017067164812)
(('you', 'cleverer', '--'), 1, 0, 0.17687017067164812)
(('cleverer', '--', 'for'), 1, 0, 0.17687017067164812)
(('--', 'for', ','), 2, 0, 0.983389342294767)
(('for', ',', 'depend'), 1, 0, 0.17687017067164812)
((',', 'depend', 'upon'), 3, 0, 1.7785588752196837)
(('depend', 'upon', 'it'), 6, 0, 4.48816029143898)
(('upon', 'it', 'a'), 1, 0, 0.17687017067164812)
(('it', 'a', 'lucky'), 1, 0, 0.17687017067164812)
(('lucky', 'guess', 'is'), 1, 0, 0.17687017067164812)
(('guess', 'is', 'never'), 1, 0, 0.17687017067164812)
(('is', 'never', 'merely'), 1, 0, 0.17687017067164812)
(('never', 'merely', 'luck'), 1, 0, 0.17687017067164812)
(('merely', 'luck', '.'), 1, 0, 0.17687017067164812)
(('luck', '.', ''), 4, 0, 2.9150197628458496)
(('', '', 'There'), 94, 0, 31.666666666666664)
(('', 'There', 'is'), 21, 0, 29.040000000000003)
(('There', 'is', 'always'), 2, 0, 0.983389342294767)
(('is', 'always', 'some'), 1, 0, 0.17687017067164812)
(('always', 'some', 'talent'), 1, 0, 0.17687017067164812)
(('some', 'talent', 'in'), 1, 0, 0.17687017067164812)
(('talent', 'in', 'it'), 1, 0, 0.17687017067164812)
(('in', 'it', '.'), 4, 0, 2.9150197628458496)
(('And', 'as', 'to'), 5, 0, 3.7220338983050847)
(('as', 'to', 'my'), 3, 0, 1.7785588752196837)
(('to', 'my', 'poor'), 2, 0, 0.983389342294767)
(('my', 'poor', 'word'), 1, 0, 0.17687017067164812)
(('poor', 'word', '`'), 1, 0, 0.17687017067164812)
(('word', '`', 'success'), 1, 0, 0.17687017067164812)
(('`', 'success', ",'"), 1, 0, 0.17687017067164812)
(('success', ",'", 'which'), 1, 0, 0.17687017067164812)
((",'", 'which', 'you'), 1, 0, 0.17687017067164812)
(('which', 'you', 'quarrel'), 1, 0, 0.17687017067164812)
(('you', 'quarrel', 'with'), 1, 0, 0.17687017067164812)
(('quarrel', 'with', ','), 1, 0, 0.17687017067164812)
(('with', ',', 'I'), 1, 0, 0.17687017067164812)
((',', 'I', 'do'), 29, 0, 32.30769230769231)
(('do', 'not', 'know'), 55, 0, 33.6)
(('not', 'know', 'that'), 11, 0, 8.671532846715328)
(('know', 'that', 'I'), 6, 0, 4.48816029143898)
(('that', 'I', 'am'), 14, 0, 11.428571428571427)
(('I', 'am', 'so'), 6, 0, 4.48816029143898)
(('am', 'so', 'entirely'), 1, 0, 0.17687017067164812)
(('so', 'entirely', 'without'), 2, 0, 0.983389342294767)
(('entirely', 'without', 'any'), 1, 0, 0.17687017067164812)
(('without', 'any', 'claim'), 1, 0, 0.17687017067164812)
(('any', 'claim', 'to'), 1, 0, 0.17687017067164812)
(('claim', 'to', 'it'), 1, 0, 0.17687017067164812)
(('to', 'it', '.'), 8, 0, 7.927797833935018)
(('', 'You', 'have'), 10, 0, 9.36024844720497)
(('You', 'have', 'drawn'), 1, 0, 0.17687017067164812)
(('have', 'drawn', 'two'), 1, 0, 0.17687017067164812)
(('drawn', 'two', 'pretty'), 1, 0, 0.17687017067164812)
(('two', 'pretty', 'pictures'), 1, 0, 0.17687017067164812)
(('pretty', 'pictures', ';'), 1, 0, 0.17687017067164812)
(('pictures', ';', 'but'), 1, 0, 0.17687017067164812)
(('but', 'I', 'think'), 3, 0, 1.7785588752196837)
(('I', 'think', 'there'), 6, 0, 4.48816029143898)
(('think', 'there', 'may'), 1, 0, 0.17687017067164812)
(('there', 'may', 'be'), 4, 0, 2.9150197628458496)
(('may', 'be', 'a'), 8, 0, 7.927797833935018)
(('be', 'a', 'third'), 1, 0, 0.17687017067164812)
(('a', 'third', '--'), 1, 0, 0.17687017067164812)
(('third', '--', 'a'), 1, 0, 0.17687017067164812)
(('--', 'a', 'something'), 2, 0, 0.983389342294767)
(('a', 'something', 'between'), 1, 0, 0.17687017067164812)
(('something', 'between', 'the'), 1, 0, 0.17687017067164812)
(('between', 'the', 'do'), 1, 0, 0.17687017067164812)
(('the', 'do', '-'), 2, 0, 0.983389342294767)
(('do', '-', 'nothing'), 1, 0, 0.17687017067164812)
(('-', 'nothing', 'and'), 1, 0, 0.17687017067164812)
(('nothing', 'and', 'the'), 1, 0, 0.17687017067164812)
(('and', 'the', 'do'), 1, 0, 0.17687017067164812)
(('do', '-', 'all'), 1, 0, 0.17687017067164812)
(('-', 'all', '.'), 1, 0, 0.17687017067164812)
(('all', '.', ''), 35, 0, 25.714285714285715)
(('', '', 'If'), 74, 0, 75.0)
(('', 'If', 'I'), 11, 0, 8.671532846715328)
(('If', 'I', 'had'), 7, 0, 6.295454545454546)
(('I', 'had', 'not'), 13, 0, 10.137931034482758)
(('had', 'not', 'promoted'), 1, 0, 0.17687017067164812)
(('not', 'promoted', 'Mr'), 1, 0, 0.17687017067164812)
(('promoted', 'Mr', '.'), 1, 0, 0.17687017067164812)
(("'", 's', 'visits'), 3, 0, 1.7785588752196837)
(('s', 'visits', 'here'), 1, 0, 0.17687017067164812)
(('visits', 'here', ','), 1, 0, 0.17687017067164812)
(('here', ',', 'and'), 4, 0, 2.9150197628458496)
((',', 'and', 'given'), 4, 0, 2.9150197628458496)
(('and', 'given', 'many'), 1, 0, 0.17687017067164812)
(('given', 'many', 'little'), 1, 0, 0.17687017067164812)
(('many', 'little', 'encouragements'), 1, 0, 0.17687017067164812)
(('little', 'encouragements', ','), 1, 0, 0.17687017067164812)
(('encouragements', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'smoothed'), 1, 0, 0.17687017067164812)
(('and', 'smoothed', 'many'), 1, 0, 0.17687017067164812)
(('smoothed', 'many', 'little'), 1, 0, 0.17687017067164812)
(('many', 'little', 'matters'), 1, 0, 0.17687017067164812)
(('little', 'matters', ','), 2, 0, 0.983389342294767)
(('matters', ',', 'it'), 1, 0, 0.17687017067164812)
((',', 'it', 'might'), 11, 0, 8.671532846715328)
(('it', 'might', 'not'), 5, 0, 3.7220338983050847)
(('might', 'not', 'have'), 9, 0, 6.5983606557377055)
(('not', 'have', 'come'), 3, 0, 1.7785588752196837)
(('have', 'come', 'to'), 1, 0, 0.17687017067164812)
(('come', 'to', 'any'), 2, 0, 0.983389342294767)
(('to', 'any', 'thing'), 7, 0, 6.295454545454546)
(('any', 'thing', 'after'), 1, 0, 0.17687017067164812)
(('thing', 'after', 'all'), 1, 0, 0.17687017067164812)
(('after', 'all', '.'), 3, 0, 1.7785588752196837)
(('', 'I', 'think'), 23, 0, 14.608695652173914)
(('I', 'think', 'you'), 11, 0, 8.671532846715328)
(('think', 'you', 'must'), 1, 0, 0.17687017067164812)
(('you', 'must', 'know'), 1, 0, 0.17687017067164812)
(('must', 'know', 'Hartfield'), 1, 0, 0.17687017067164812)
(('know', 'Hartfield', 'enough'), 1, 0, 0.17687017067164812)
(('Hartfield', 'enough', 'to'), 1, 0, 0.17687017067164812)
(('enough', 'to', 'comprehend'), 1, 0, 0.17687017067164812)
(('to', 'comprehend', 'that'), 2, 0, 0.983389342294767)
(('comprehend', 'that', '."'), 1, 0, 0.17687017067164812)
(('that', '."', ''), 3, 0, 1.7785588752196837)
(('"', 'A', 'straightforward'), 1, 0, 0.17687017067164812)
(('A', 'straightforward', ','), 1, 0, 0.17687017067164812)
(('straightforward', ',', 'open'), 1, 0, 0.17687017067164812)
((',', 'open', '-'), 1, 0, 0.17687017067164812)
(('open', '-', 'hearted'), 2, 0, 0.983389342294767)
(('-', 'hearted', 'man'), 1, 0, 0.17687017067164812)
(('hearted', 'man', 'like'), 1, 0, 0.17687017067164812)
(('man', 'like', 'Weston'), 1, 0, 0.17687017067164812)
(('like', 'Weston', ','), 1, 0, 0.17687017067164812)
(('Weston', ',', 'and'), 10, 0, 9.36024844720497)
(('and', 'a', 'rational'), 1, 0, 0.17687017067164812)
(('a', 'rational', ','), 1, 0, 0.17687017067164812)
(('rational', ',', 'unaffected'), 1, 0, 0.17687017067164812)
((',', 'unaffected', 'woman'), 1, 0, 0.17687017067164812)
(('unaffected', 'woman', 'like'), 1, 0, 0.17687017067164812)
(('woman', 'like', 'Miss'), 1, 0, 0.17687017067164812)
(('like', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Taylor', ',', 'may'), 1, 0, 0.17687017067164812)
((',', 'may', 'be'), 6, 0, 4.48816029143898)
(('may', 'be', 'safely'), 2, 0, 0.983389342294767)
(('be', 'safely', 'left'), 2, 0, 0.983389342294767)
(('safely', 'left', 'to'), 2, 0, 0.983389342294767)
(('left', 'to', 'manage'), 1, 0, 0.17687017067164812)
(('to', 'manage', 'their'), 1, 0, 0.17687017067164812)
(('manage', 'their', 'own'), 1, 0, 0.17687017067164812)
(('their', 'own', 'concerns'), 2, 0, 0.983389342294767)
(('own', 'concerns', '.'), 2, 0, 0.983389342294767)
(('concerns', '.', ''), 2, 0, 0.983389342294767)
(('', 'You', 'are'), 21, 0, 29.040000000000003)
(('You', 'are', 'more'), 1, 0, 0.17687017067164812)
(('are', 'more', 'likely'), 1, 0, 0.17687017067164812)
(('more', 'likely', 'to'), 2, 0, 0.983389342294767)
(('likely', 'to', 'have'), 4, 0, 2.9150197628458496)
(('to', 'have', 'done'), 5, 0, 3.7220338983050847)
(('have', 'done', 'harm'), 1, 0, 0.17687017067164812)
(('done', 'harm', 'to'), 1, 0, 0.17687017067164812)
(('harm', 'to', 'yourself'), 1, 0, 0.17687017067164812)
(('to', 'yourself', ','), 1, 0, 0.17687017067164812)
(('yourself', ',', 'than'), 1, 0, 0.17687017067164812)
((',', 'than', 'good'), 1, 0, 0.17687017067164812)
(('than', 'good', 'to'), 1, 0, 0.17687017067164812)
(('good', 'to', 'them'), 1, 0, 0.17687017067164812)
(('to', 'them', ','), 8, 0, 7.927797833935018)
(('them', ',', 'by'), 1, 0, 0.17687017067164812)
((',', 'by', 'interference'), 1, 0, 0.17687017067164812)
(('by', 'interference', '."'), 1, 0, 0.17687017067164812)
(('interference', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'Emma', 'never'), 1, 0, 0.17687017067164812)
(('Emma', 'never', 'thinks'), 1, 0, 0.17687017067164812)
(('never', 'thinks', 'of'), 1, 0, 0.17687017067164812)
(('thinks', 'of', 'herself'), 1, 0, 0.17687017067164812)
(('of', 'herself', ','), 7, 0, 6.295454545454546)
(('herself', ',', 'if'), 2, 0, 0.983389342294767)
((',', 'if', 'she'), 15, 0, 14.666666666666666)
(('if', 'she', 'can'), 1, 0, 0.17687017067164812)
(('she', 'can', 'do'), 1, 0, 0.17687017067164812)
(('can', 'do', 'good'), 1, 0, 0.17687017067164812)
(('do', 'good', 'to'), 1, 0, 0.17687017067164812)
(('good', 'to', 'others'), 2, 0, 0.983389342294767)
(('to', 'others', ',"'), 1, 0, 0.17687017067164812)
(('others', ',"', 'rejoined'), 1, 0, 0.17687017067164812)
((',"', 'rejoined', 'Mr'), 1, 0, 0.17687017067164812)
(('rejoined', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('Woodhouse', ',', 'understanding'), 1, 0, 0.17687017067164812)
((',', 'understanding', 'but'), 1, 0, 0.17687017067164812)
(('understanding', 'but', 'in'), 1, 0, 0.17687017067164812)
(('but', 'in', 'part'), 1, 0, 0.17687017067164812)
(('in', 'part', '.'), 1, 0, 0.17687017067164812)
(('part', '.', ''), 5, 0, 3.7220338983050847)
(('But', ',', 'my'), 7, 0, 6.295454545454546)
(('dear', ',', 'pray'), 1, 0, 0.17687017067164812)
((',', 'pray', 'do'), 2, 0, 0.983389342294767)
(('pray', 'do', 'not'), 2, 0, 0.983389342294767)
(('more', 'matches', ';'), 1, 0, 0.17687017067164812)
(('matches', ';', 'they'), 1, 0, 0.17687017067164812)
((';', 'they', 'are'), 3, 0, 1.7785588752196837)
(('they', 'are', 'silly'), 1, 0, 0.17687017067164812)
(('are', 'silly', 'things'), 1, 0, 0.17687017067164812)
(('silly', 'things', ','), 1, 0, 0.17687017067164812)
(('things', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'break'), 1, 0, 0.17687017067164812)
(('and', 'break', 'up'), 1, 0, 0.17687017067164812)
(('break', 'up', 'one'), 1, 0, 0.17687017067164812)
(('up', 'one', "'"), 2, 0, 0.983389342294767)
(('one', "'", 's'), 10, 0, 9.36024844720497)
(('s', 'family', 'circle'), 1, 0, 0.17687017067164812)
(('family', 'circle', 'grievously'), 1, 0, 0.17687017067164812)
(('circle', 'grievously', '."'), 1, 0, 0.17687017067164812)
(('grievously', '."', ''), 1, 0, 0.17687017067164812)
(('', '"', 'Only'), 4, 0, 2.9150197628458496)
(('"', 'Only', 'one'), 1, 0, 0.17687017067164812)
(('Only', 'one', 'more'), 1, 0, 0.17687017067164812)
(('one', 'more', ','), 1, 0, 0.17687017067164812)
(('more', ',', 'papa'), 1, 0, 0.17687017067164812)
(('papa', ';', 'only'), 1, 0, 0.17687017067164812)
((';', 'only', 'for'), 1, 0, 0.17687017067164812)
(('only', 'for', 'Mr'), 1, 0, 0.17687017067164812)
(('for', 'Mr', '.'), 31, 0, 20.571428571428573)
(('Mr', '.', 'Elton'), 214, 0, 0.0)
(('.', 'Elton', '.'), 26, 0, 24.157894736842106)
(('Elton', '.', ''), 26, 0, 24.157894736842106)
(('', '', 'Poor'), 15, 0, 14.666666666666666)
(('', 'Poor', 'Mr'), 4, 0, 2.9150197628458496)
(('.', 'Elton', '!'), 2, 0, 0.983389342294767)
(('Elton', '!', ''), 2, 0, 0.983389342294767)
(('', 'You', 'like'), 2, 0, 0.983389342294767)
(('You', 'like', 'Mr'), 1, 0, 0.17687017067164812)
(('like', 'Mr', '.'), 10, 0, 9.36024844720497)
(('.', 'Elton', ','), 81, 0, 82.0)
(('Elton', ',', 'papa'), 1, 0, 0.17687017067164812)
((',', 'papa', ',--'), 1, 0, 0.17687017067164812)
(('papa', ',--', 'I'), 1, 0, 0.17687017067164812)
((',--', 'I', 'must'), 1, 0, 0.17687017067164812)
(('I', 'must', 'look'), 1, 0, 0.17687017067164812)
(('must', 'look', 'about'), 1, 0, 0.17687017067164812)
(('look', 'about', 'for'), 1, 0, 0.17687017067164812)
(('about', 'for', 'a'), 1, 0, 0.17687017067164812)
(('for', 'a', 'wife'), 3, 0, 1.7785588752196837)
(('a', 'wife', 'for'), 2, 0, 0.983389342294767)
(('wife', 'for', 'him'), 2, 0, 0.983389342294767)
(('for', 'him', '.'), 8, 0, 7.927797833935018)
(('There', 'is', 'nobody'), 2, 0, 0.983389342294767)
(('is', 'nobody', 'in'), 1, 0, 0.17687017067164812)
(('nobody', 'in', 'Highbury'), 1, 0, 0.17687017067164812)
(('in', 'Highbury', 'who'), 1, 0, 0.17687017067164812)
(('Highbury', 'who', 'deserves'), 1, 0, 0.17687017067164812)
(('who', 'deserves', 'him'), 1, 0, 0.17687017067164812)
(('deserves', 'him', '--'), 1, 0, 0.17687017067164812)
(('him', '--', 'and'), 4, 0, 2.9150197628458496)
(('--', 'and', 'he'), 7, 0, 6.295454545454546)
(('and', 'he', 'has'), 2, 0, 0.983389342294767)
(('he', 'has', 'been'), 5, 0, 3.7220338983050847)
(('has', 'been', 'here'), 2, 0, 0.983389342294767)
(('been', 'here', 'a'), 3, 0, 1.7785588752196837)
(('here', 'a', 'whole'), 1, 0, 0.17687017067164812)
(('a', 'whole', 'year'), 1, 0, 0.17687017067164812)
(('whole', 'year', ','), 1, 0, 0.17687017067164812)
(('year', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'has'), 6, 0, 4.48816029143898)
(('and', 'has', 'fitted'), 1, 0, 0.17687017067164812)
(('has', 'fitted', 'up'), 1, 0, 0.17687017067164812)
(('fitted', 'up', 'his'), 1, 0, 0.17687017067164812)
(('up', 'his', 'house'), 1, 0, 0.17687017067164812)
(('his', 'house', 'so'), 1, 0, 0.17687017067164812)
(('house', 'so', 'comfortably'), 1, 0, 0.17687017067164812)
(('so', 'comfortably', ','), 1, 0, 0.17687017067164812)
(('comfortably', ',', 'that'), 1, 0, 0.17687017067164812)
((',', 'that', 'it'), 22, 0, 16.03030303030303)
(('that', 'it', 'would'), 10, 0, 9.36024844720497)
(('be', 'a', 'shame'), 1, 0, 0.17687017067164812)
(('a', 'shame', 'to'), 1, 0, 0.17687017067164812)
(('shame', 'to', 'have'), 1, 0, 0.17687017067164812)
(('to', 'have', 'him'), 7, 0, 6.295454545454546)
(('have', 'him', 'single'), 1, 0, 0.17687017067164812)
(('him', 'single', 'any'), 1, 0, 0.17687017067164812)
(('single', 'any', 'longer'), 1, 0, 0.17687017067164812)
(('any', 'longer', '--'), 1, 0, 0.17687017067164812)
(('longer', '--', 'and'), 1, 0, 0.17687017067164812)
(('--', 'and', 'I'), 14, 0, 11.428571428571427)
(('and', 'I', 'thought'), 2, 0, 0.983389342294767)
(('I', 'thought', 'when'), 1, 0, 0.17687017067164812)
(('thought', 'when', 'he'), 1, 0, 0.17687017067164812)
(('he', 'was', 'joining'), 1, 0, 0.17687017067164812)
(('was', 'joining', 'their'), 1, 0, 0.17687017067164812)
(('joining', 'their', 'hands'), 1, 0, 0.17687017067164812)
(('their', 'hands', 'to'), 1, 0, 0.17687017067164812)
(('hands', 'to', '-'), 1, 0, 0.17687017067164812)
(('to', '-', 'day'), 25, 0, 22.454545454545453)
(('-', 'day', ','), 5, 0, 3.7220338983050847)
(('day', ',', 'he'), 2, 0, 0.983389342294767)
((',', 'he', 'looked'), 3, 0, 1.7785588752196837)
(('he', 'looked', 'so'), 1, 0, 0.17687017067164812)
(('looked', 'so', 'very'), 1, 0, 0.17687017067164812)
(('so', 'very', 'much'), 10, 0, 9.36024844720497)
(('very', 'much', 'as'), 2, 0, 0.983389342294767)
(('much', 'as', 'if'), 1, 0, 0.17687017067164812)
(('as', 'if', 'he'), 12, 0, 11.424242424242424)
(('if', 'he', 'would'), 3, 0, 1.7785588752196837)
(('he', 'would', 'like'), 1, 0, 0.17687017067164812)
(('would', 'like', 'to'), 2, 0, 0.983389342294767)
(('like', 'to', 'have'), 5, 0, 3.7220338983050847)
(('to', 'have', 'the'), 14, 0, 11.428571428571427)
(('have', 'the', 'same'), 1, 0, 0.17687017067164812)
(('the', 'same', 'kind'), 1, 0, 0.17687017067164812)
(('same', 'kind', 'office'), 1, 0, 0.17687017067164812)
(('kind', 'office', 'done'), 1, 0, 0.17687017067164812)
(('office', 'done', 'for'), 1, 0, 0.17687017067164812)
(('done', 'for', 'him'), 1, 0, 0.17687017067164812)
(('for', 'him', '!'), 1, 0, 0.17687017067164812)
(('him', '!', ''), 4, 0, 2.9150197628458496)
(('I', 'think', 'very'), 1, 0, 0.17687017067164812)
(('think', 'very', 'well'), 2, 0, 0.983389342294767)
(('very', 'well', 'of'), 2, 0, 0.983389342294767)
(('well', 'of', 'Mr'), 1, 0, 0.17687017067164812)
(('of', 'Mr', '.'), 88, 0, 44.5)
(('Elton', ',', 'and'), 12, 0, 11.424242424242424)
((',', 'and', 'this'), 4, 0, 2.9150197628458496)
(('and', 'this', 'is'), 1, 0, 0.17687017067164812)
(('this', 'is', 'the'), 3, 0, 1.7785588752196837)
(('is', 'the', 'only'), 3, 0, 1.7785588752196837)
(('the', 'only', 'way'), 3, 0, 1.7785588752196837)
(('only', 'way', 'I'), 1, 0, 0.17687017067164812)
(('way', 'I', 'have'), 1, 0, 0.17687017067164812)
(('I', 'have', 'of'), 2, 0, 0.983389342294767)
(('have', 'of', 'doing'), 1, 0, 0.17687017067164812)
(('of', 'doing', 'him'), 1, 0, 0.17687017067164812)
(('doing', 'him', 'a'), 1, 0, 0.17687017067164812)
(('him', 'a', 'service'), 1, 0, 0.17687017067164812)
(('a', 'service', '."'), 1, 0, 0.17687017067164812)
(('service', '."', ''), 1, 0, 0.17687017067164812)
(('', '"', 'Mr'), 20, 0, 21.0)
(('"', 'Mr', '.'), 22, 0, 16.03030303030303)
(('.', 'Elton', 'is'), 10, 0, 9.36024844720497)
(('Elton', 'is', 'a'), 3, 0, 1.7785588752196837)
(('is', 'a', 'very'), 22, 0, 16.03030303030303)
(('very', 'pretty', 'young'), 1, 0, 0.17687017067164812)
(('pretty', 'young', 'man'), 1, 0, 0.17687017067164812)
(('young', 'man', ','), 25, 0, 22.454545454545453)
(('man', ',', 'to'), 3, 0, 1.7785588752196837)
(('be', 'sure', ','), 6, 0, 4.48816029143898)
(('sure', ',', 'and'), 1, 0, 0.17687017067164812)
(('very', 'good', 'young'), 1, 0, 0.17687017067164812)
(('good', 'young', 'man'), 1, 0, 0.17687017067164812)
(('man', ',', 'and'), 11, 0, 8.671532846715328)
(('and', 'I', 'have'), 7, 0, 6.295454545454546)
(('regard', 'for', 'him'), 3, 0, 1.7785588752196837)
(('But', 'if', 'you'), 2, 0, 0.983389342294767)
(('if', 'you', 'want'), 2, 0, 0.983389342294767)
(('want', 'to', 'shew'), 1, 0, 0.17687017067164812)
(('to', 'shew', 'him'), 1, 0, 0.17687017067164812)
(('shew', 'him', 'any'), 1, 0, 0.17687017067164812)
(('him', 'any', 'attention'), 1, 0, 0.17687017067164812)
(('any', 'attention', ','), 1, 0, 0.17687017067164812)
(('attention', ',', 'my'), 1, 0, 0.17687017067164812)
(('dear', ',', 'ask'), 1, 0, 0.17687017067164812)
((',', 'ask', 'him'), 1, 0, 0.17687017067164812)
(('ask', 'him', 'to'), 1, 0, 0.17687017067164812)
(('him', 'to', 'come'), 3, 0, 1.7785588752196837)
(('to', 'come', 'and'), 4, 0, 2.9150197628458496)
(('come', 'and', 'dine'), 2, 0, 0.983389342294767)
(('and', 'dine', 'with'), 2, 0, 0.983389342294767)
(('dine', 'with', 'us'), 2, 0, 0.983389342294767)
(('with', 'us', 'some'), 1, 0, 0.17687017067164812)
(('us', 'some', 'day'), 1, 0, 0.17687017067164812)
(('some', 'day', '.'), 1, 0, 0.17687017067164812)
(('', 'That', 'will'), 4, 0, 2.9150197628458496)
(('That', 'will', 'be'), 3, 0, 1.7785588752196837)
(('be', 'a', 'much'), 3, 0, 1.7785588752196837)
(('a', 'much', 'better'), 4, 0, 2.9150197628458496)
(('much', 'better', 'thing'), 2, 0, 0.983389342294767)
(('better', 'thing', '.'), 2, 0, 0.983389342294767)
(('thing', '.', ''), 40, 0, 32.800000000000004)
(('', 'I', 'dare'), 11, 0, 8.671532846715328)
(('I', 'dare', 'say'), 50, 0, 102.0)
(('dare', 'say', 'Mr'), 1, 0, 0.17687017067164812)
(('say', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('.', 'Knightley', 'will'), 2, 0, 0.983389342294767)
(('Knightley', 'will', 'be'), 2, 0, 0.983389342294767)
(('will', 'be', 'so'), 10, 0, 9.36024844720497)
(('be', 'so', 'kind'), 4, 0, 2.9150197628458496)
(('so', 'kind', 'as'), 9, 0, 6.5983606557377055)
(('kind', 'as', 'to'), 10, 0, 9.36024844720497)
(('as', 'to', 'meet'), 1, 0, 0.17687017067164812)
(('to', 'meet', 'him'), 5, 0, 3.7220338983050847)
(('meet', 'him', '."'), 1, 0, 0.17687017067164812)
(('him', '."', ''), 26, 0, 24.157894736842106)
(('', '"', 'With'), 2, 0, 0.983389342294767)
(('"', 'With', 'a'), 1, 0, 0.17687017067164812)
(('With', 'a', 'great'), 1, 0, 0.17687017067164812)
(('great', 'deal', 'of'), 26, 0, 24.157894736842106)
(('deal', 'of', 'pleasure'), 3, 0, 1.7785588752196837)
(('of', 'pleasure', ','), 3, 0, 1.7785588752196837)
(('pleasure', ',', 'sir'), 1, 0, 0.17687017067164812)
(('sir', ',', 'at'), 1, 0, 0.17687017067164812)
((',', 'at', 'any'), 4, 0, 2.9150197628458496)
(('any', 'time', ',"'), 1, 0, 0.17687017067164812)
(('time', ',"', 'said'), 1, 0, 0.17687017067164812)
(('Knightley', ',', 'laughing'), 1, 0, 0.17687017067164812)
((',', 'laughing', ','), 5, 0, 3.7220338983050847)
(('laughing', ',', '"'), 5, 0, 3.7220338983050847)
(('"', 'and', 'I'), 5, 0, 3.7220338983050847)
(('and', 'I', 'agree'), 1, 0, 0.17687017067164812)
(('I', 'agree', 'with'), 2, 0, 0.983389342294767)
(('with', 'you', 'entirely'), 1, 0, 0.17687017067164812)
(('you', 'entirely', ','), 1, 0, 0.17687017067164812)
(('entirely', ',', 'that'), 1, 0, 0.17687017067164812)
(('that', 'it', 'will'), 4, 0, 2.9150197628458496)
(('', '', 'Invite'), 2, 0, 0.983389342294767)
(('', 'Invite', 'him'), 1, 0, 0.17687017067164812)
(('Invite', 'him', 'to'), 1, 0, 0.17687017067164812)
(('him', 'to', 'dinner'), 1, 0, 0.17687017067164812)
(('to', 'dinner', ','), 2, 0, 0.983389342294767)
(('dinner', ',', 'Emma'), 2, 0, 0.983389342294767)
((',', 'Emma', ','), 21, 0, 29.040000000000003)
(('Emma', ',', 'and'), 8, 0, 7.927797833935018)
((',', 'and', 'help'), 2, 0, 0.983389342294767)
(('and', 'help', 'him'), 1, 0, 0.17687017067164812)
(('help', 'him', 'to'), 1, 0, 0.17687017067164812)
(('him', 'to', 'the'), 3, 0, 1.7785588752196837)
(('to', 'the', 'best'), 1, 0, 0.17687017067164812)
(('the', 'best', 'of'), 10, 0, 9.36024844720497)
(('best', 'of', 'the'), 2, 0, 0.983389342294767)
(('of', 'the', 'fish'), 1, 0, 0.17687017067164812)
(('the', 'fish', 'and'), 1, 0, 0.17687017067164812)
(('fish', 'and', 'the'), 1, 0, 0.17687017067164812)
(('and', 'the', 'chicken'), 1, 0, 0.17687017067164812)
(('the', 'chicken', ','), 1, 0, 0.17687017067164812)
(('chicken', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'leave'), 1, 0, 0.17687017067164812)
(('but', 'leave', 'him'), 1, 0, 0.17687017067164812)
(('leave', 'him', 'to'), 1, 0, 0.17687017067164812)
(('him', 'to', 'chuse'), 2, 0, 0.983389342294767)
(('to', 'chuse', 'his'), 2, 0, 0.983389342294767)
(('chuse', 'his', 'own'), 2, 0, 0.983389342294767)
(('his', 'own', 'wife'), 1, 0, 0.17687017067164812)
(('own', 'wife', '.'), 1, 0, 0.17687017067164812)
(('wife', '.', ''), 7, 0, 6.295454545454546)
(('', '', 'Depend'), 6, 0, 4.48816029143898)
(('', 'Depend', 'upon'), 6, 0, 4.48816029143898)
(('Depend', 'upon', 'it'), 9, 0, 6.5983606557377055)
(('upon', 'it', ','), 11, 0, 8.671532846715328)
(('it', ',', 'a'), 1, 0, 0.17687017067164812)
((',', 'a', 'man'), 1, 0, 0.17687017067164812)
(('man', 'of', 'six'), 1, 0, 0.17687017067164812)
(('of', 'six', 'or'), 1, 0, 0.17687017067164812)
(('six', 'or', 'seven'), 1, 0, 0.17687017067164812)
(('or', 'seven', '-'), 1, 0, 0.17687017067164812)
(('seven', '-', 'and'), 1, 0, 0.17687017067164812)
(('and', '-', 'twenty'), 16, 0, 14.681818181818182)
(('-', 'twenty', 'can'), 1, 0, 0.17687017067164812)
(('twenty', 'can', 'take'), 1, 0, 0.17687017067164812)
(('can', 'take', 'care'), 1, 0, 0.17687017067164812)
(('take', 'care', 'of'), 15, 0, 14.666666666666666)
(('care', 'of', 'himself'), 3, 0, 1.7785588752196837)
(('of', 'himself', '."'), 2, 0, 0.983389342294767)
(('himself', '."', ''), 3, 0, 1.7785588752196837)
(('', 'CHAPTER', 'II'), 3, 0, 1.7785588752196837)
(('CHAPTER', 'II', ''), 3, 0, 1.7785588752196837)
(('II', '', ''), 4, 0, 2.9150197628458496)
(('was', 'a', 'native'), 1, 0, 0.17687017067164812)
(('a', 'native', 'of'), 1, 0, 0.17687017067164812)
(('native', 'of', 'Highbury'), 1, 0, 0.17687017067164812)
(('of', 'Highbury', ','), 7, 0, 6.295454545454546)
(('Highbury', ',', 'and'), 10, 0, 9.36024844720497)
((',', 'and', 'born'), 1, 0, 0.17687017067164812)
(('and', 'born', 'of'), 1, 0, 0.17687017067164812)
(('born', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'respectable'), 1, 0, 0.17687017067164812)
(('a', 'respectable', 'family'), 1, 0, 0.17687017067164812)
(('respectable', 'family', ','), 1, 0, 0.17687017067164812)
(('family', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'for'), 3, 0, 1.7785588752196837)
(('which', 'for', 'the'), 1, 0, 0.17687017067164812)
(('the', 'last', 'two'), 3, 0, 1.7785588752196837)
(('last', 'two', 'or'), 1, 0, 0.17687017067164812)
(('two', 'or', 'three'), 10, 0, 9.36024844720497)
(('or', 'three', 'generations'), 1, 0, 0.17687017067164812)
(('three', 'generations', 'had'), 1, 0, 0.17687017067164812)
(('generations', 'had', 'been'), 1, 0, 0.17687017067164812)
(('had', 'been', 'rising'), 1, 0, 0.17687017067164812)
(('been', 'rising', 'into'), 1, 0, 0.17687017067164812)
(('rising', 'into', 'gentility'), 1, 0, 0.17687017067164812)
(('into', 'gentility', 'and'), 1, 0, 0.17687017067164812)
(('gentility', 'and', 'property'), 1, 0, 0.17687017067164812)
(('and', 'property', '.'), 1, 0, 0.17687017067164812)
(('property', '.', ''), 1, 0, 0.17687017067164812)
(('He', 'had', 'received'), 1, 0, 0.17687017067164812)
(('had', 'received', 'a'), 2, 0, 0.983389342294767)
(('received', 'a', 'good'), 1, 0, 0.17687017067164812)
(('a', 'good', 'education'), 1, 0, 0.17687017067164812)
(('good', 'education', ','), 1, 0, 0.17687017067164812)
(('education', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', ','), 4, 0, 2.9150197628458496)
(('but', ',', 'on'), 3, 0, 1.7785588752196837)
((',', 'on', 'succeeding'), 1, 0, 0.17687017067164812)
(('on', 'succeeding', 'early'), 1, 0, 0.17687017067164812)
(('succeeding', 'early', 'in'), 1, 0, 0.17687017067164812)
(('early', 'in', 'life'), 3, 0, 1.7785588752196837)
(('in', 'life', 'to'), 1, 0, 0.17687017067164812)
(('life', 'to', 'a'), 1, 0, 0.17687017067164812)
(('to', 'a', 'small'), 2, 0, 0.983389342294767)
(('a', 'small', 'independence'), 1, 0, 0.17687017067164812)
(('small', 'independence', ','), 1, 0, 0.17687017067164812)
(('independence', ',', 'had'), 1, 0, 0.17687017067164812)
((',', 'had', 'become'), 1, 0, 0.17687017067164812)
(('had', 'become', 'indisposed'), 1, 0, 0.17687017067164812)
(('become', 'indisposed', 'for'), 1, 0, 0.17687017067164812)
(('indisposed', 'for', 'any'), 1, 0, 0.17687017067164812)
(('for', 'any', 'of'), 1, 0, 0.17687017067164812)
(('any', 'of', 'the'), 5, 0, 3.7220338983050847)
(('of', 'the', 'more'), 1, 0, 0.17687017067164812)
(('the', 'more', 'homely'), 1, 0, 0.17687017067164812)
(('more', 'homely', 'pursuits'), 1, 0, 0.17687017067164812)
(('homely', 'pursuits', 'in'), 1, 0, 0.17687017067164812)
(('pursuits', 'in', 'which'), 1, 0, 0.17687017067164812)
(('in', 'which', 'his'), 1, 0, 0.17687017067164812)
(('which', 'his', 'brothers'), 1, 0, 0.17687017067164812)
(('his', 'brothers', 'were'), 1, 0, 0.17687017067164812)
(('brothers', 'were', 'engaged'), 1, 0, 0.17687017067164812)
(('were', 'engaged', ','), 1, 0, 0.17687017067164812)
(('engaged', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'had'), 24, 0, 39.285714285714285)
(('and', 'had', 'satisfied'), 1, 0, 0.17687017067164812)
(('had', 'satisfied', 'an'), 1, 0, 0.17687017067164812)
(('satisfied', 'an', 'active'), 1, 0, 0.17687017067164812)
(('an', 'active', ','), 2, 0, 0.983389342294767)
(('active', ',', 'cheerful'), 1, 0, 0.17687017067164812)
((',', 'cheerful', 'mind'), 1, 0, 0.17687017067164812)
(('cheerful', 'mind', 'and'), 1, 0, 0.17687017067164812)
(('mind', 'and', 'social'), 1, 0, 0.17687017067164812)
(('and', 'social', 'temper'), 1, 0, 0.17687017067164812)
(('social', 'temper', 'by'), 1, 0, 0.17687017067164812)
(('temper', 'by', 'entering'), 1, 0, 0.17687017067164812)
(('by', 'entering', 'into'), 1, 0, 0.17687017067164812)
(('entering', 'into', 'the'), 1, 0, 0.17687017067164812)
(('into', 'the', 'militia'), 1, 0, 0.17687017067164812)
(('the', 'militia', 'of'), 1, 0, 0.17687017067164812)
(('militia', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'county'), 1, 0, 0.17687017067164812)
(('his', 'county', ','), 1, 0, 0.17687017067164812)
(('county', ',', 'then'), 1, 0, 0.17687017067164812)
((',', 'then', 'embodied'), 1, 0, 0.17687017067164812)
(('then', 'embodied', '.'), 1, 0, 0.17687017067164812)
(('embodied', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Captain'), 2, 0, 0.983389342294767)
(('', 'Captain', 'Weston'), 2, 0, 0.983389342294767)
(('Captain', 'Weston', 'was'), 1, 0, 0.17687017067164812)
(('was', 'a', 'general'), 2, 0, 0.983389342294767)
(('a', 'general', 'favourite'), 1, 0, 0.17687017067164812)
(('general', 'favourite', ';'), 1, 0, 0.17687017067164812)
(('favourite', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'when', 'the'), 4, 0, 2.9150197628458496)
(('when', 'the', 'chances'), 1, 0, 0.17687017067164812)
(('the', 'chances', 'of'), 1, 0, 0.17687017067164812)
(('chances', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'military'), 1, 0, 0.17687017067164812)
(('his', 'military', 'life'), 1, 0, 0.17687017067164812)
(('military', 'life', 'had'), 1, 0, 0.17687017067164812)
(('life', 'had', 'introduced'), 1, 0, 0.17687017067164812)
(('had', 'introduced', 'him'), 1, 0, 0.17687017067164812)
(('introduced', 'him', 'to'), 2, 0, 0.983389342294767)
(('him', 'to', 'Miss'), 1, 0, 0.17687017067164812)
(('to', 'Miss', 'Churchill'), 1, 0, 0.17687017067164812)
(('Miss', 'Churchill', ','), 2, 0, 0.983389342294767)
(('Churchill', ',', 'of'), 3, 0, 1.7785588752196837)
((',', 'of', 'a'), 4, 0, 2.9150197628458496)
(('of', 'a', 'great'), 3, 0, 1.7785588752196837)
(('a', 'great', 'Yorkshire'), 1, 0, 0.17687017067164812)
(('great', 'Yorkshire', 'family'), 1, 0, 0.17687017067164812)
(('Yorkshire', 'family', ','), 1, 0, 0.17687017067164812)
(('family', ',', 'and'), 6, 0, 4.48816029143898)
((',', 'and', 'Miss'), 16, 0, 14.681818181818182)
(('and', 'Miss', 'Churchill'), 2, 0, 0.983389342294767)
(('Miss', 'Churchill', 'fell'), 1, 0, 0.17687017067164812)
(('Churchill', 'fell', 'in'), 1, 0, 0.17687017067164812)
(('fell', 'in', 'love'), 1, 0, 0.17687017067164812)
(('in', 'love', 'with'), 30, 0, 31.0)
(('love', 'with', 'him'), 6, 0, 4.48816029143898)
(('with', 'him', ','), 14, 0, 11.428571428571427)
(('him', ',', 'nobody'), 1, 0, 0.17687017067164812)
((',', 'nobody', 'was'), 1, 0, 0.17687017067164812)
(('nobody', 'was', 'surprized'), 1, 0, 0.17687017067164812)
(('was', 'surprized', ','), 1, 0, 0.17687017067164812)
(('surprized', ',', 'except'), 1, 0, 0.17687017067164812)
((',', 'except', 'her'), 1, 0, 0.17687017067164812)
(('except', 'her', 'brother'), 1, 0, 0.17687017067164812)
(('her', 'brother', 'and'), 2, 0, 0.983389342294767)
(('brother', 'and', 'his'), 1, 0, 0.17687017067164812)
(('and', 'his', 'wife'), 6, 0, 4.48816029143898)
(('his', 'wife', ','), 10, 0, 9.36024844720497)
(('wife', ',', 'who'), 4, 0, 2.9150197628458496)
(('who', 'had', 'never'), 2, 0, 0.983389342294767)
(('had', 'never', 'seen'), 6, 0, 4.48816029143898)
(('never', 'seen', 'him'), 3, 0, 1.7785588752196837)
(('seen', 'him', ','), 2, 0, 0.983389342294767)
(('him', ',', 'and'), 20, 0, 21.0)
(('and', 'who', 'were'), 3, 0, 1.7785588752196837)
(('who', 'were', 'full'), 1, 0, 0.17687017067164812)
(('were', 'full', 'of'), 1, 0, 0.17687017067164812)
(('full', 'of', 'pride'), 1, 0, 0.17687017067164812)
(('of', 'pride', 'and'), 1, 0, 0.17687017067164812)
(('pride', 'and', 'importance'), 1, 0, 0.17687017067164812)
(('and', 'importance', ','), 1, 0, 0.17687017067164812)
(('importance', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'the'), 5, 0, 3.7220338983050847)
(('which', 'the', 'connexion'), 1, 0, 0.17687017067164812)
(('the', 'connexion', 'would'), 1, 0, 0.17687017067164812)
(('connexion', 'would', 'offend'), 1, 0, 0.17687017067164812)
(('would', 'offend', '.'), 1, 0, 0.17687017067164812)
(('offend', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Miss', 'Churchill'), 1, 0, 0.17687017067164812)
(('Churchill', ',', 'however'), 1, 0, 0.17687017067164812)
(('however', ',', 'being'), 1, 0, 0.17687017067164812)
((',', 'being', 'of'), 1, 0, 0.17687017067164812)
(('being', 'of', 'age'), 1, 0, 0.17687017067164812)
(('of', 'age', ','), 2, 0, 0.983389342294767)
((',', 'and', 'with'), 21, 0, 29.040000000000003)
(('and', 'with', 'the'), 6, 0, 4.48816029143898)
(('with', 'the', 'full'), 1, 0, 0.17687017067164812)
(('the', 'full', 'command'), 1, 0, 0.17687017067164812)
(('full', 'command', 'of'), 1, 0, 0.17687017067164812)
(('command', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'fortune'), 1, 0, 0.17687017067164812)
(('her', 'fortune', '--'), 1, 0, 0.17687017067164812)
(('fortune', '--', 'though'), 1, 0, 0.17687017067164812)
(('--', 'though', 'her'), 1, 0, 0.17687017067164812)
(('though', 'her', 'fortune'), 1, 0, 0.17687017067164812)
(('her', 'fortune', 'bore'), 1, 0, 0.17687017067164812)
(('fortune', 'bore', 'no'), 1, 0, 0.17687017067164812)
(('bore', 'no', 'proportion'), 1, 0, 0.17687017067164812)
(('no', 'proportion', 'to'), 1, 0, 0.17687017067164812)
(('proportion', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'family'), 2, 0, 0.983389342294767)
(('the', 'family', '-'), 1, 0, 0.17687017067164812)
(('family', '-', 'estate'), 1, 0, 0.17687017067164812)
(('-', 'estate', '--'), 1, 0, 0.17687017067164812)
(('estate', '--', 'was'), 1, 0, 0.17687017067164812)
(('--', 'was', 'not'), 1, 0, 0.17687017067164812)
(('was', 'not', 'to'), 9, 0, 6.5983606557377055)
(('not', 'to', 'be'), 26, 0, 24.157894736842106)
(('to', 'be', 'dissuaded'), 1, 0, 0.17687017067164812)
(('be', 'dissuaded', 'from'), 1, 0, 0.17687017067164812)
(('dissuaded', 'from', 'the'), 1, 0, 0.17687017067164812)
(('from', 'the', 'marriage'), 2, 0, 0.983389342294767)
(('the', 'marriage', ','), 2, 0, 0.983389342294767)
(('marriage', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'it'), 24, 0, 39.285714285714285)
(('and', 'it', 'took'), 1, 0, 0.17687017067164812)
(('it', 'took', 'place'), 1, 0, 0.17687017067164812)
(('took', 'place', ','), 1, 0, 0.17687017067164812)
(('place', ',', 'to'), 3, 0, 1.7785588752196837)
((',', 'to', 'the'), 5, 0, 3.7220338983050847)
(('to', 'the', 'infinite'), 1, 0, 0.17687017067164812)
(('the', 'infinite', 'mortification'), 1, 0, 0.17687017067164812)
(('infinite', 'mortification', 'of'), 1, 0, 0.17687017067164812)
(('mortification', 'of', 'Mr'), 1, 0, 0.17687017067164812)
(('.', 'and', 'Mrs'), 39, 0, 18.18181818181818)
(('and', 'Mrs', '.'), 96, 0, 194.0)
(('Mrs', '.', 'Churchill'), 41, 0, 21.0)
(('.', 'Churchill', ','), 13, 0, 10.137931034482758)
(('Churchill', ',', 'who'), 4, 0, 2.9150197628458496)
((',', 'who', 'threw'), 1, 0, 0.17687017067164812)
(('who', 'threw', 'her'), 1, 0, 0.17687017067164812)
(('threw', 'her', 'off'), 1, 0, 0.17687017067164812)
(('her', 'off', 'with'), 1, 0, 0.17687017067164812)
(('off', 'with', 'due'), 1, 0, 0.17687017067164812)
(('with', 'due', 'decorum'), 1, 0, 0.17687017067164812)
(('due', 'decorum', '.'), 1, 0, 0.17687017067164812)
(('decorum', '.', ''), 1, 0, 0.17687017067164812)
(('It', 'was', 'an'), 5, 0, 3.7220338983050847)
(('was', 'an', 'unsuitable'), 1, 0, 0.17687017067164812)
(('an', 'unsuitable', 'connexion'), 1, 0, 0.17687017067164812)
(('unsuitable', 'connexion', ','), 1, 0, 0.17687017067164812)
(('connexion', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'did'), 6, 0, 4.48816029143898)
(('and', 'did', 'not'), 4, 0, 2.9150197628458496)
(('did', 'not', 'produce'), 1, 0, 0.17687017067164812)
(('not', 'produce', 'much'), 1, 0, 0.17687017067164812)
(('produce', 'much', 'happiness'), 1, 0, 0.17687017067164812)
(('much', 'happiness', '.'), 1, 0, 0.17687017067164812)
(('happiness', '.', ''), 12, 0, 11.424242424242424)
(('', '', 'Mrs'), 97, 0, 49.0)
(('', 'Mrs', '.'), 97, 0, 49.0)
(('.', 'Weston', 'ought'), 1, 0, 0.17687017067164812)
(('Weston', 'ought', 'to'), 1, 0, 0.17687017067164812)
(('ought', 'to', 'have'), 14, 0, 11.428571428571427)
(('to', 'have', 'found'), 1, 0, 0.17687017067164812)
(('have', 'found', 'more'), 1, 0, 0.17687017067164812)
(('found', 'more', 'in'), 1, 0, 0.17687017067164812)
(('more', 'in', 'it'), 1, 0, 0.17687017067164812)
(('in', 'it', ','), 2, 0, 0.983389342294767)
(('it', ',', 'for'), 4, 0, 2.9150197628458496)
((',', 'for', 'she'), 9, 0, 6.5983606557377055)
(('for', 'she', 'had'), 2, 0, 0.983389342294767)
(('she', 'had', 'a'), 7, 0, 6.295454545454546)
(('had', 'a', 'husband'), 1, 0, 0.17687017067164812)
(('a', 'husband', 'whose'), 1, 0, 0.17687017067164812)
(('husband', 'whose', 'warm'), 1, 0, 0.17687017067164812)
(('whose', 'warm', 'heart'), 1, 0, 0.17687017067164812)
(('warm', 'heart', 'and'), 1, 0, 0.17687017067164812)
(('heart', 'and', 'sweet'), 1, 0, 0.17687017067164812)
(('and', 'sweet', 'temper'), 1, 0, 0.17687017067164812)
(('sweet', 'temper', 'made'), 1, 0, 0.17687017067164812)
(('temper', 'made', 'him'), 1, 0, 0.17687017067164812)
(('made', 'him', 'think'), 1, 0, 0.17687017067164812)
(('him', 'think', 'every'), 1, 0, 0.17687017067164812)
(('think', 'every', 'thing'), 1, 0, 0.17687017067164812)
(('every', 'thing', 'due'), 1, 0, 0.17687017067164812)
(('thing', 'due', 'to'), 1, 0, 0.17687017067164812)
(('due', 'to', 'her'), 1, 0, 0.17687017067164812)
(('to', 'her', 'in'), 5, 0, 3.7220338983050847)
(('her', 'in', 'return'), 1, 0, 0.17687017067164812)
(('in', 'return', 'for'), 3, 0, 1.7785588752196837)
(('return', 'for', 'the'), 1, 0, 0.17687017067164812)
(('for', 'the', 'great'), 1, 0, 0.17687017067164812)
(('the', 'great', 'goodness'), 1, 0, 0.17687017067164812)
(('great', 'goodness', 'of'), 1, 0, 0.17687017067164812)
(('goodness', 'of', 'being'), 1, 0, 0.17687017067164812)
(('of', 'being', 'in'), 5, 0, 3.7220338983050847)
(('being', 'in', 'love'), 9, 0, 6.5983606557377055)
(('with', 'him', ';'), 2, 0, 0.983389342294767)
(('him', ';', 'but'), 6, 0, 4.48816029143898)
((';', 'but', 'though'), 1, 0, 0.17687017067164812)
(('but', 'though', 'she'), 1, 0, 0.17687017067164812)
(('though', 'she', 'had'), 6, 0, 4.48816029143898)
(('she', 'had', 'one'), 2, 0, 0.983389342294767)
(('had', 'one', 'sort'), 1, 0, 0.17687017067164812)
(('one', 'sort', 'of'), 1, 0, 0.17687017067164812)
(('sort', 'of', 'spirit'), 1, 0, 0.17687017067164812)
(('of', 'spirit', ','), 1, 0, 0.17687017067164812)
(('spirit', ',', 'she'), 1, 0, 0.17687017067164812)
((',', 'she', 'had'), 36, 0, 44.4)
(('she', 'had', 'not'), 17, 0, 19.42105263157895)
(('had', 'not', 'the'), 4, 0, 2.9150197628458496)
(('not', 'the', 'best'), 2, 0, 0.983389342294767)
(('the', 'best', '.'), 2, 0, 0.983389342294767)
(('best', '.', ''), 8, 0, 7.927797833935018)
(('She', 'had', 'resolution'), 1, 0, 0.17687017067164812)
(('had', 'resolution', 'enough'), 2, 0, 0.983389342294767)
(('resolution', 'enough', 'to'), 3, 0, 1.7785588752196837)
(('enough', 'to', 'pursue'), 1, 0, 0.17687017067164812)
(('to', 'pursue', 'her'), 1, 0, 0.17687017067164812)
(('pursue', 'her', 'own'), 1, 0, 0.17687017067164812)
(('her', 'own', 'will'), 1, 0, 0.17687017067164812)
(('own', 'will', 'in'), 1, 0, 0.17687017067164812)
(('will', 'in', 'spite'), 1, 0, 0.17687017067164812)
(('spite', 'of', 'her'), 4, 0, 2.9150197628458496)
(('of', 'her', 'brother'), 2, 0, 0.983389342294767)
(('her', 'brother', ','), 2, 0, 0.983389342294767)
(('brother', ',', 'but'), 1, 0, 0.17687017067164812)
(('but', 'not', 'enough'), 1, 0, 0.17687017067164812)
(('not', 'enough', 'to'), 2, 0, 0.983389342294767)
(('enough', 'to', 'refrain'), 2, 0, 0.983389342294767)
(('to', 'refrain', 'from'), 4, 0, 2.9150197628458496)
(('refrain', 'from', 'unreasonable'), 1, 0, 0.17687017067164812)
(('from', 'unreasonable', 'regrets'), 1, 0, 0.17687017067164812)
(('unreasonable', 'regrets', 'at'), 1, 0, 0.17687017067164812)
(('regrets', 'at', 'that'), 1, 0, 0.17687017067164812)
(('at', 'that', 'brother'), 1, 0, 0.17687017067164812)
(('that', 'brother', "'"), 1, 0, 0.17687017067164812)
(('brother', "'", 's'), 6, 0, 4.48816029143898)
(("'", 's', 'unreasonable'), 1, 0, 0.17687017067164812)
(('s', 'unreasonable', 'anger'), 1, 0, 0.17687017067164812)
(('unreasonable', 'anger', ','), 1, 0, 0.17687017067164812)
(('anger', ',', 'nor'), 1, 0, 0.17687017067164812)
((',', 'nor', 'from'), 1, 0, 0.17687017067164812)
(('nor', 'from', 'missing'), 1, 0, 0.17687017067164812)
(('from', 'missing', 'the'), 1, 0, 0.17687017067164812)
(('missing', 'the', 'luxuries'), 1, 0, 0.17687017067164812)
(('the', 'luxuries', 'of'), 1, 0, 0.17687017067164812)
(('luxuries', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'former'), 2, 0, 0.983389342294767)
(('her', 'former', 'home'), 1, 0, 0.17687017067164812)
(('former', 'home', '.'), 1, 0, 0.17687017067164812)
(('home', '.', ''), 6, 0, 4.48816029143898)
(('', '', 'They'), 125, 0, 0.0)
(('', 'They', 'lived'), 1, 0, 0.17687017067164812)
(('They', 'lived', 'beyond'), 1, 0, 0.17687017067164812)
(('lived', 'beyond', 'their'), 1, 0, 0.17687017067164812)
(('beyond', 'their', 'income'), 1, 0, 0.17687017067164812)
(('their', 'income', ','), 2, 0, 0.983389342294767)
(('income', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'still'), 2, 0, 0.983389342294767)
(('but', 'still', 'it'), 2, 0, 0.983389342294767)
(('still', 'it', 'was'), 1, 0, 0.17687017067164812)
(('it', 'was', 'nothing'), 1, 0, 0.17687017067164812)
(('was', 'nothing', 'in'), 2, 0, 0.983389342294767)
(('nothing', 'in', 'comparison'), 1, 0, 0.17687017067164812)
(('in', 'comparison', 'of'), 1, 0, 0.17687017067164812)
(('comparison', 'of', 'Enscombe'), 1, 0, 0.17687017067164812)
(('of', 'Enscombe', ':'), 1, 0, 0.17687017067164812)
(('Enscombe', ':', 'she'), 1, 0, 0.17687017067164812)
((':', 'she', 'did'), 2, 0, 0.983389342294767)
(('she', 'did', 'not'), 28, 0, 41.888888888888886)
(('did', 'not', 'cease'), 1, 0, 0.17687017067164812)
(('not', 'cease', 'to'), 2, 0, 0.983389342294767)
(('cease', 'to', 'love'), 1, 0, 0.17687017067164812)
(('to', 'love', 'her'), 2, 0, 0.983389342294767)
(('love', 'her', 'husband'), 1, 0, 0.17687017067164812)
(('husband', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'she'), 25, 0, 22.454545454545453)
(('but', 'she', 'wanted'), 1, 0, 0.17687017067164812)
(('she', 'wanted', 'at'), 1, 0, 0.17687017067164812)
(('wanted', 'at', 'once'), 1, 0, 0.17687017067164812)
(('at', 'once', 'to'), 1, 0, 0.17687017067164812)
(('once', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'the'), 16, 0, 14.681818181818182)
(('be', 'the', 'wife'), 1, 0, 0.17687017067164812)
(('the', 'wife', 'of'), 1, 0, 0.17687017067164812)
(('wife', 'of', 'Captain'), 1, 0, 0.17687017067164812)
(('of', 'Captain', 'Weston'), 1, 0, 0.17687017067164812)
(('Captain', 'Weston', ','), 2, 0, 0.983389342294767)
(('Miss', 'Churchill', 'of'), 1, 0, 0.17687017067164812)
(('Churchill', 'of', 'Enscombe'), 1, 0, 0.17687017067164812)
(('of', 'Enscombe', '.'), 3, 0, 1.7785588752196837)
(('Enscombe', '.', ''), 5, 0, 3.7220338983050847)
(('had', 'been', 'considered'), 1, 0, 0.17687017067164812)
(('been', 'considered', ','), 1, 0, 0.17687017067164812)
(('considered', ',', 'especially'), 1, 0, 0.17687017067164812)
((',', 'especially', 'by'), 1, 0, 0.17687017067164812)
(('especially', 'by', 'the'), 1, 0, 0.17687017067164812)
(('by', 'the', 'Churchills'), 1, 0, 0.17687017067164812)
(('the', 'Churchills', ','), 4, 0, 2.9150197628458496)
(('Churchills', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'making'), 1, 0, 0.17687017067164812)
(('as', 'making', 'such'), 1, 0, 0.17687017067164812)
(('making', 'such', 'an'), 1, 0, 0.17687017067164812)
(('such', 'an', 'amazing'), 1, 0, 0.17687017067164812)
(('an', 'amazing', 'match'), 1, 0, 0.17687017067164812)
(('amazing', 'match', ','), 1, 0, 0.17687017067164812)
(('match', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'proved'), 1, 0, 0.17687017067164812)
(('was', 'proved', 'to'), 2, 0, 0.983389342294767)
(('proved', 'to', 'have'), 3, 0, 1.7785588752196837)
(('to', 'have', 'much'), 2, 0, 0.983389342294767)
(('have', 'much', 'the'), 1, 0, 0.17687017067164812)
(('much', 'the', 'worst'), 1, 0, 0.17687017067164812)
(('the', 'worst', 'of'), 8, 0, 7.927797833935018)
(('worst', 'of', 'the'), 3, 0, 1.7785588752196837)
(('of', 'the', 'bargain'), 1, 0, 0.17687017067164812)
(('the', 'bargain', ';'), 1, 0, 0.17687017067164812)
(('bargain', ';', 'for'), 1, 0, 0.17687017067164812)
((';', 'for', 'when'), 1, 0, 0.17687017067164812)
(('for', 'when', 'his'), 1, 0, 0.17687017067164812)
(('when', 'his', 'wife'), 1, 0, 0.17687017067164812)
(('his', 'wife', 'died'), 1, 0, 0.17687017067164812)
(('wife', 'died', ','), 1, 0, 0.17687017067164812)
(('died', ',', 'after'), 1, 0, 0.17687017067164812)
((',', 'after', 'a'), 11, 0, 8.671532846715328)
(('after', 'a', 'three'), 1, 0, 0.17687017067164812)
(('a', 'three', 'years'), 1, 0, 0.17687017067164812)
(('three', 'years', "'"), 1, 0, 0.17687017067164812)
(('years', "'", 'marriage'), 1, 0, 0.17687017067164812)
(("'", 'marriage', ','), 1, 0, 0.17687017067164812)
(('marriage', ',', 'he'), 1, 0, 0.17687017067164812)
(('he', 'was', 'rather'), 2, 0, 0.983389342294767)
(('was', 'rather', 'a'), 1, 0, 0.17687017067164812)
(('rather', 'a', 'poorer'), 1, 0, 0.17687017067164812)
(('a', 'poorer', 'man'), 1, 0, 0.17687017067164812)
(('poorer', 'man', 'than'), 1, 0, 0.17687017067164812)
(('man', 'than', 'at'), 1, 0, 0.17687017067164812)
(('than', 'at', 'first'), 1, 0, 0.17687017067164812)
(('at', 'first', ','), 8, 0, 7.927797833935018)
(('first', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'with', 'a'), 10, 0, 9.36024844720497)
(('with', 'a', 'child'), 1, 0, 0.17687017067164812)
(('a', 'child', 'to'), 1, 0, 0.17687017067164812)
(('child', 'to', 'maintain'), 1, 0, 0.17687017067164812)
(('to', 'maintain', '.'), 1, 0, 0.17687017067164812)
(('maintain', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'From'), 8, 0, 7.927797833935018)
(('', 'From', 'the'), 1, 0, 0.17687017067164812)
(('From', 'the', 'expense'), 1, 0, 0.17687017067164812)
(('the', 'expense', 'of'), 2, 0, 0.983389342294767)
(('expense', 'of', 'the'), 2, 0, 0.983389342294767)
(('of', 'the', 'child'), 3, 0, 1.7785588752196837)
(('the', 'child', ','), 3, 0, 1.7785588752196837)
(('child', ',', 'however'), 1, 0, 0.17687017067164812)
(('however', ',', 'he'), 5, 0, 3.7220338983050847)
(('he', 'was', 'soon'), 3, 0, 1.7785588752196837)
(('was', 'soon', 'relieved'), 1, 0, 0.17687017067164812)
(('soon', 'relieved', '.'), 1, 0, 0.17687017067164812)
(('relieved', '.', ''), 1, 0, 0.17687017067164812)
(('', 'The', 'boy'), 1, 0, 0.17687017067164812)
(('The', 'boy', 'had'), 1, 0, 0.17687017067164812)
(('boy', 'had', ','), 1, 0, 0.17687017067164812)
(('had', ',', 'with'), 1, 0, 0.17687017067164812)
((',', 'with', 'the'), 18, 0, 11.585365853658537)
(('with', 'the', 'additional'), 1, 0, 0.17687017067164812)
(('the', 'additional', 'softening'), 1, 0, 0.17687017067164812)
(('additional', 'softening', 'claim'), 1, 0, 0.17687017067164812)
(('softening', 'claim', 'of'), 1, 0, 0.17687017067164812)
(('claim', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'lingering'), 1, 0, 0.17687017067164812)
(('a', 'lingering', 'illness'), 1, 0, 0.17687017067164812)
(('lingering', 'illness', 'of'), 1, 0, 0.17687017067164812)
(('illness', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'mother'), 1, 0, 0.17687017067164812)
(('his', 'mother', "'"), 1, 0, 0.17687017067164812)
(('mother', "'", 's'), 15, 0, 14.666666666666666)
(('s', ',', 'been'), 1, 0, 0.17687017067164812)
((',', 'been', 'the'), 1, 0, 0.17687017067164812)
(('been', 'the', 'means'), 2, 0, 0.983389342294767)
(('the', 'means', 'of'), 7, 0, 6.295454545454546)
(('means', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'sort'), 3, 0, 1.7785588752196837)
(('a', 'sort', 'of'), 24, 0, 39.285714285714285)
(('sort', 'of', 'reconciliation'), 1, 0, 0.17687017067164812)
(('of', 'reconciliation', ';'), 1, 0, 0.17687017067164812)
(('reconciliation', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'Mr'), 18, 0, 11.585365853658537)
(('Churchill', ',', 'having'), 1, 0, 0.17687017067164812)
((',', 'having', 'no'), 2, 0, 0.983389342294767)
(('having', 'no', 'children'), 1, 0, 0.17687017067164812)
(('no', 'children', 'of'), 1, 0, 0.17687017067164812)
(('children', 'of', 'their'), 1, 0, 0.17687017067164812)
(('of', 'their', 'own'), 4, 0, 2.9150197628458496)
(('their', 'own', ','), 1, 0, 0.17687017067164812)
(('own', ',', 'nor'), 1, 0, 0.17687017067164812)
((',', 'nor', 'any'), 2, 0, 0.983389342294767)
(('nor', 'any', 'other'), 1, 0, 0.17687017067164812)
(('any', 'other', 'young'), 3, 0, 1.7785588752196837)
(('other', 'young', 'creature'), 1, 0, 0.17687017067164812)
(('young', 'creature', 'of'), 1, 0, 0.17687017067164812)
(('creature', 'of', 'equal'), 1, 0, 0.17687017067164812)
(('of', 'equal', 'kindred'), 1, 0, 0.17687017067164812)
(('equal', 'kindred', 'to'), 1, 0, 0.17687017067164812)
(('kindred', 'to', 'care'), 1, 0, 0.17687017067164812)
(('to', 'care', 'for'), 3, 0, 1.7785588752196837)
(('care', 'for', ','), 1, 0, 0.17687017067164812)
(('for', ',', 'offered'), 1, 0, 0.17687017067164812)
((',', 'offered', 'to'), 1, 0, 0.17687017067164812)
(('offered', 'to', 'take'), 1, 0, 0.17687017067164812)
(('to', 'take', 'the'), 7, 0, 6.295454545454546)
(('take', 'the', 'whole'), 1, 0, 0.17687017067164812)
(('the', 'whole', 'charge'), 2, 0, 0.983389342294767)
(('whole', 'charge', 'of'), 2, 0, 0.983389342294767)
(('charge', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'little'), 3, 0, 1.7785588752196837)
(('the', 'little', 'Frank'), 1, 0, 0.17687017067164812)
(('little', 'Frank', 'soon'), 1, 0, 0.17687017067164812)
(('Frank', 'soon', 'after'), 1, 0, 0.17687017067164812)
(('soon', 'after', 'her'), 2, 0, 0.983389342294767)
(('after', 'her', 'decease'), 1, 0, 0.17687017067164812)
(('her', 'decease', '.'), 1, 0, 0.17687017067164812)
(('decease', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Some', 'scruples'), 1, 0, 0.17687017067164812)
(('Some', 'scruples', 'and'), 1, 0, 0.17687017067164812)
(('scruples', 'and', 'some'), 1, 0, 0.17687017067164812)
(('and', 'some', 'reluctance'), 1, 0, 0.17687017067164812)
(('some', 'reluctance', 'the'), 1, 0, 0.17687017067164812)
(('reluctance', 'the', 'widower'), 1, 0, 0.17687017067164812)
(('the', 'widower', '-'), 1, 0, 0.17687017067164812)
(('widower', '-', 'father'), 1, 0, 0.17687017067164812)
(('-', 'father', 'may'), 1, 0, 0.17687017067164812)
(('father', 'may', 'be'), 1, 0, 0.17687017067164812)
(('may', 'be', 'supposed'), 1, 0, 0.17687017067164812)
(('be', 'supposed', 'to'), 5, 0, 3.7220338983050847)
(('supposed', 'to', 'have'), 2, 0, 0.983389342294767)
(('to', 'have', 'felt'), 2, 0, 0.983389342294767)
(('have', 'felt', ';'), 1, 0, 0.17687017067164812)
(('felt', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'as'), 14, 0, 11.428571428571427)
(('but', 'as', 'they'), 1, 0, 0.17687017067164812)
(('as', 'they', 'were'), 9, 0, 6.5983606557377055)
(('they', 'were', 'overcome'), 1, 0, 0.17687017067164812)
(('were', 'overcome', 'by'), 1, 0, 0.17687017067164812)
(('overcome', 'by', 'other'), 1, 0, 0.17687017067164812)
(('by', 'other', 'considerations'), 1, 0, 0.17687017067164812)
(('other', 'considerations', ','), 1, 0, 0.17687017067164812)
(('considerations', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'child'), 2, 0, 0.983389342294767)
(('the', 'child', 'was'), 1, 0, 0.17687017067164812)
(('child', 'was', 'given'), 1, 0, 0.17687017067164812)
(('was', 'given', 'up'), 1, 0, 0.17687017067164812)
(('given', 'up', 'to'), 1, 0, 0.17687017067164812)
(('up', 'to', 'the'), 4, 0, 2.9150197628458496)
(('to', 'the', 'care'), 2, 0, 0.983389342294767)
(('the', 'care', 'and'), 1, 0, 0.17687017067164812)
(('care', 'and', 'the'), 1, 0, 0.17687017067164812)
(('and', 'the', 'wealth'), 1, 0, 0.17687017067164812)
(('the', 'wealth', 'of'), 1, 0, 0.17687017067164812)
(('wealth', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'Churchills'), 4, 0, 2.9150197628458496)
(('Churchills', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'he'), 39, 0, 18.18181818181818)
(('and', 'he', 'had'), 12, 0, 11.424242424242424)
(('he', 'had', 'only'), 2, 0, 0.983389342294767)
(('had', 'only', 'his'), 2, 0, 0.983389342294767)
(('only', 'his', 'own'), 2, 0, 0.983389342294767)
(('his', 'own', 'comfort'), 1, 0, 0.17687017067164812)
(('own', 'comfort', 'to'), 1, 0, 0.17687017067164812)
(('comfort', 'to', 'seek'), 1, 0, 0.17687017067164812)
(('to', 'seek', ','), 2, 0, 0.983389342294767)
(('seek', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'his'), 25, 0, 22.454545454545453)
(('and', 'his', 'own'), 4, 0, 2.9150197628458496)
(('his', 'own', 'situation'), 1, 0, 0.17687017067164812)
(('own', 'situation', 'to'), 1, 0, 0.17687017067164812)
(('situation', 'to', 'improve'), 1, 0, 0.17687017067164812)
(('to', 'improve', 'as'), 1, 0, 0.17687017067164812)
(('improve', 'as', 'he'), 1, 0, 0.17687017067164812)
(('as', 'he', 'could'), 10, 0, 9.36024844720497)
(('he', 'could', '.'), 2, 0, 0.983389342294767)
(('could', '.', ''), 4, 0, 2.9150197628458496)
(('', 'A', 'complete'), 1, 0, 0.17687017067164812)
(('A', 'complete', 'change'), 1, 0, 0.17687017067164812)
(('complete', 'change', 'of'), 1, 0, 0.17687017067164812)
(('change', 'of', 'life'), 1, 0, 0.17687017067164812)
(('of', 'life', 'became'), 1, 0, 0.17687017067164812)
(('life', 'became', 'desirable'), 1, 0, 0.17687017067164812)
(('became', 'desirable', '.'), 1, 0, 0.17687017067164812)
(('desirable', '.', ''), 1, 0, 0.17687017067164812)
(('', 'He', 'quitted'), 1, 0, 0.17687017067164812)
(('He', 'quitted', 'the'), 1, 0, 0.17687017067164812)
(('quitted', 'the', 'militia'), 1, 0, 0.17687017067164812)
(('the', 'militia', 'and'), 1, 0, 0.17687017067164812)
(('militia', 'and', 'engaged'), 1, 0, 0.17687017067164812)
(('and', 'engaged', 'in'), 1, 0, 0.17687017067164812)
(('engaged', 'in', 'trade'), 1, 0, 0.17687017067164812)
(('in', 'trade', ','), 3, 0, 1.7785588752196837)
(('trade', ',', 'having'), 1, 0, 0.17687017067164812)
((',', 'having', 'brothers'), 1, 0, 0.17687017067164812)
(('having', 'brothers', 'already'), 1, 0, 0.17687017067164812)
(('brothers', 'already', 'established'), 1, 0, 0.17687017067164812)
(('already', 'established', 'in'), 1, 0, 0.17687017067164812)
(('established', 'in', 'a'), 1, 0, 0.17687017067164812)
(('in', 'a', 'good'), 2, 0, 0.983389342294767)
(('a', 'good', 'way'), 1, 0, 0.17687017067164812)
(('good', 'way', 'in'), 1, 0, 0.17687017067164812)
(('way', 'in', 'London'), 1, 0, 0.17687017067164812)
(('London', ',', 'which'), 2, 0, 0.983389342294767)
((',', 'which', 'afforded'), 1, 0, 0.17687017067164812)
(('which', 'afforded', 'him'), 1, 0, 0.17687017067164812)
(('afforded', 'him', 'a'), 1, 0, 0.17687017067164812)
(('him', 'a', 'favourable'), 1, 0, 0.17687017067164812)
(('a', 'favourable', 'opening'), 1, 0, 0.17687017067164812)
(('favourable', 'opening', '.'), 1, 0, 0.17687017067164812)
(('opening', '.', ''), 2, 0, 0.983389342294767)
(('was', 'a', 'concern'), 1, 0, 0.17687017067164812)
(('a', 'concern', 'which'), 1, 0, 0.17687017067164812)
(('concern', 'which', 'brought'), 1, 0, 0.17687017067164812)
(('which', 'brought', 'just'), 1, 0, 0.17687017067164812)
(('brought', 'just', 'employment'), 1, 0, 0.17687017067164812)
(('just', 'employment', 'enough'), 1, 0, 0.17687017067164812)
(('employment', 'enough', '.'), 1, 0, 0.17687017067164812)
(('enough', '.', ''), 11, 0, 8.671532846715328)
(('He', 'had', 'still'), 1, 0, 0.17687017067164812)
(('had', 'still', 'a'), 1, 0, 0.17687017067164812)
(('still', 'a', 'small'), 1, 0, 0.17687017067164812)
(('a', 'small', 'house'), 1, 0, 0.17687017067164812)
(('small', 'house', 'in'), 1, 0, 0.17687017067164812)
(('house', 'in', 'Highbury'), 1, 0, 0.17687017067164812)
(('in', 'Highbury', ','), 7, 0, 6.295454545454546)
(('Highbury', ',', 'where'), 1, 0, 0.17687017067164812)
((',', 'where', 'most'), 1, 0, 0.17687017067164812)
(('where', 'most', 'of'), 1, 0, 0.17687017067164812)
(('most', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'leisure'), 1, 0, 0.17687017067164812)
(('his', 'leisure', 'days'), 1, 0, 0.17687017067164812)
(('leisure', 'days', 'were'), 1, 0, 0.17687017067164812)
(('days', 'were', 'spent'), 1, 0, 0.17687017067164812)
(('were', 'spent', ';'), 1, 0, 0.17687017067164812)
(('spent', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'between'), 1, 0, 0.17687017067164812)
(('and', 'between', 'useful'), 1, 0, 0.17687017067164812)
(('between', 'useful', 'occupation'), 1, 0, 0.17687017067164812)
(('useful', 'occupation', 'and'), 1, 0, 0.17687017067164812)
(('occupation', 'and', 'the'), 1, 0, 0.17687017067164812)
(('and', 'the', 'pleasures'), 1, 0, 0.17687017067164812)
(('the', 'pleasures', 'of'), 4, 0, 2.9150197628458496)
(('pleasures', 'of', 'society'), 1, 0, 0.17687017067164812)
(('of', 'society', ','), 2, 0, 0.983389342294767)
(('society', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'next'), 1, 0, 0.17687017067164812)
(('the', 'next', 'eighteen'), 1, 0, 0.17687017067164812)
(('next', 'eighteen', 'or'), 1, 0, 0.17687017067164812)
(('eighteen', 'or', 'twenty'), 1, 0, 0.17687017067164812)
(('or', 'twenty', 'years'), 1, 0, 0.17687017067164812)
(('twenty', 'years', 'of'), 1, 0, 0.17687017067164812)
(('years', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'life'), 7, 0, 6.295454545454546)
(('his', 'life', 'passed'), 1, 0, 0.17687017067164812)
(('life', 'passed', 'cheerfully'), 1, 0, 0.17687017067164812)
(('passed', 'cheerfully', 'away'), 1, 0, 0.17687017067164812)
(('cheerfully', 'away', '.'), 1, 0, 0.17687017067164812)
(('away', '.', ''), 24, 0, 39.285714285714285)
(('He', 'had', ','), 2, 0, 0.983389342294767)
(('had', ',', 'by'), 2, 0, 0.983389342294767)
((',', 'by', 'that'), 1, 0, 0.17687017067164812)
(('by', 'that', 'time'), 1, 0, 0.17687017067164812)
(('that', 'time', ','), 3, 0, 1.7785588752196837)
(('time', ',', 'realised'), 1, 0, 0.17687017067164812)
((',', 'realised', 'an'), 1, 0, 0.17687017067164812)
(('realised', 'an', 'easy'), 1, 0, 0.17687017067164812)
(('an', 'easy', 'competence'), 1, 0, 0.17687017067164812)
(('easy', 'competence', '--'), 1, 0, 0.17687017067164812)
(('competence', '--', 'enough'), 1, 0, 0.17687017067164812)
(('--', 'enough', 'to'), 2, 0, 0.983389342294767)
(('enough', 'to', 'secure'), 1, 0, 0.17687017067164812)
(('to', 'secure', 'the'), 1, 0, 0.17687017067164812)
(('secure', 'the', 'purchase'), 1, 0, 0.17687017067164812)
(('the', 'purchase', 'of'), 1, 0, 0.17687017067164812)
(('purchase', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'little'), 6, 0, 4.48816029143898)
(('a', 'little', 'estate'), 1, 0, 0.17687017067164812)
(('little', 'estate', 'adjoining'), 1, 0, 0.17687017067164812)
(('estate', 'adjoining', 'Highbury'), 1, 0, 0.17687017067164812)
(('adjoining', 'Highbury', ','), 1, 0, 0.17687017067164812)
(('Highbury', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'he'), 8, 0, 7.927797833935018)
(('which', 'he', 'had'), 8, 0, 7.927797833935018)
(('he', 'had', 'always'), 2, 0, 0.983389342294767)
(('had', 'always', 'longed'), 1, 0, 0.17687017067164812)
(('always', 'longed', 'for'), 1, 0, 0.17687017067164812)
(('longed', 'for', '--'), 1, 0, 0.17687017067164812)
(('for', '--', 'enough'), 1, 0, 0.17687017067164812)
(('enough', 'to', 'marry'), 1, 0, 0.17687017067164812)
(('to', 'marry', 'a'), 2, 0, 0.983389342294767)
(('marry', 'a', 'woman'), 1, 0, 0.17687017067164812)
(('a', 'woman', 'as'), 3, 0, 1.7785588752196837)
(('woman', 'as', 'portionless'), 1, 0, 0.17687017067164812)
(('as', 'portionless', 'even'), 1, 0, 0.17687017067164812)
(('portionless', 'even', 'as'), 1, 0, 0.17687017067164812)
(('even', 'as', 'Miss'), 1, 0, 0.17687017067164812)
(('as', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
((',', 'and', 'to'), 22, 0, 16.03030303030303)
(('and', 'to', 'live'), 1, 0, 0.17687017067164812)
(('to', 'live', 'according'), 1, 0, 0.17687017067164812)
(('live', 'according', 'to'), 1, 0, 0.17687017067164812)
(('according', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'wishes'), 1, 0, 0.17687017067164812)
(('the', 'wishes', 'of'), 1, 0, 0.17687017067164812)
(('wishes', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'own'), 22, 0, 16.03030303030303)
(('his', 'own', 'friendly'), 1, 0, 0.17687017067164812)
(('own', 'friendly', 'and'), 1, 0, 0.17687017067164812)
(('friendly', 'and', 'social'), 1, 0, 0.17687017067164812)
(('and', 'social', 'disposition'), 1, 0, 0.17687017067164812)
(('social', 'disposition', '.'), 1, 0, 0.17687017067164812)
(('disposition', '.', ''), 2, 0, 0.983389342294767)
(('It', 'was', 'now'), 3, 0, 1.7785588752196837)
(('was', 'now', 'some'), 1, 0, 0.17687017067164812)
(('now', 'some', 'time'), 1, 0, 0.17687017067164812)
(('some', 'time', 'since'), 1, 0, 0.17687017067164812)
(('time', 'since', 'Miss'), 1, 0, 0.17687017067164812)
(('since', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Taylor', 'had', 'begun'), 1, 0, 0.17687017067164812)
(('had', 'begun', 'to'), 2, 0, 0.983389342294767)
(('begun', 'to', 'influence'), 1, 0, 0.17687017067164812)
(('to', 'influence', 'his'), 1, 0, 0.17687017067164812)
(('influence', 'his', 'schemes'), 1, 0, 0.17687017067164812)
(('his', 'schemes', ';'), 1, 0, 0.17687017067164812)
(('schemes', ';', 'but'), 1, 0, 0.17687017067164812)
(('but', 'as', 'it'), 3, 0, 1.7785588752196837)
(('as', 'it', 'was'), 10, 0, 9.36024844720497)
(('it', 'was', 'not'), 38, 0, 61.285714285714285)
(('was', 'not', 'the'), 7, 0, 6.295454545454546)
(('not', 'the', 'tyrannic'), 1, 0, 0.17687017067164812)
(('the', 'tyrannic', 'influence'), 1, 0, 0.17687017067164812)
(('tyrannic', 'influence', 'of'), 1, 0, 0.17687017067164812)
(('influence', 'of', 'youth'), 1, 0, 0.17687017067164812)
(('of', 'youth', 'on'), 1, 0, 0.17687017067164812)
(('youth', 'on', 'youth'), 1, 0, 0.17687017067164812)
(('on', 'youth', ','), 1, 0, 0.17687017067164812)
(('youth', ',', 'it'), 1, 0, 0.17687017067164812)
((',', 'it', 'had'), 6, 0, 4.48816029143898)
(('it', 'had', 'not'), 10, 0, 9.36024844720497)
(('had', 'not', 'shaken'), 1, 0, 0.17687017067164812)
(('not', 'shaken', 'his'), 1, 0, 0.17687017067164812)
(('shaken', 'his', 'determination'), 1, 0, 0.17687017067164812)
(('his', 'determination', 'of'), 1, 0, 0.17687017067164812)
(('determination', 'of', 'never'), 1, 0, 0.17687017067164812)
(('of', 'never', 'settling'), 1, 0, 0.17687017067164812)
(('never', 'settling', 'till'), 1, 0, 0.17687017067164812)
(('settling', 'till', 'he'), 1, 0, 0.17687017067164812)
(('till', 'he', 'could'), 2, 0, 0.983389342294767)
(('he', 'could', 'purchase'), 1, 0, 0.17687017067164812)
(('could', 'purchase', 'Randalls'), 1, 0, 0.17687017067164812)
(('purchase', 'Randalls', ','), 1, 0, 0.17687017067164812)
(('Randalls', ',', 'and'), 4, 0, 2.9150197628458496)
(('and', 'the', 'sale'), 1, 0, 0.17687017067164812)
(('the', 'sale', 'of'), 1, 0, 0.17687017067164812)
(('sale', 'of', 'Randalls'), 1, 0, 0.17687017067164812)
(('of', 'Randalls', 'was'), 2, 0, 0.983389342294767)
(('Randalls', 'was', 'long'), 1, 0, 0.17687017067164812)
(('was', 'long', 'looked'), 1, 0, 0.17687017067164812)
(('long', 'looked', 'forward'), 1, 0, 0.17687017067164812)
(('looked', 'forward', 'to'), 3, 0, 1.7785588752196837)
(('forward', 'to', ';'), 1, 0, 0.17687017067164812)
(('to', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'he'), 21, 0, 29.040000000000003)
(('but', 'he', 'had'), 4, 0, 2.9150197628458496)
(('he', 'had', 'gone'), 2, 0, 0.983389342294767)
(('had', 'gone', 'steadily'), 1, 0, 0.17687017067164812)
(('gone', 'steadily', 'on'), 1, 0, 0.17687017067164812)
(('steadily', 'on', ','), 1, 0, 0.17687017067164812)
(('on', ',', 'with'), 1, 0, 0.17687017067164812)
((',', 'with', 'these'), 1, 0, 0.17687017067164812)
(('with', 'these', 'objects'), 1, 0, 0.17687017067164812)
(('these', 'objects', 'in'), 1, 0, 0.17687017067164812)
(('objects', 'in', 'view'), 1, 0, 0.17687017067164812)
(('in', 'view', ','), 1, 0, 0.17687017067164812)
(('view', ',', 'till'), 1, 0, 0.17687017067164812)
((',', 'till', 'they'), 2, 0, 0.983389342294767)
(('till', 'they', 'were'), 1, 0, 0.17687017067164812)
(('they', 'were', 'accomplished'), 1, 0, 0.17687017067164812)
(('were', 'accomplished', '.'), 1, 0, 0.17687017067164812)
(('accomplished', '.', ''), 1, 0, 0.17687017067164812)
(('He', 'had', 'made'), 1, 0, 0.17687017067164812)
(('had', 'made', 'his'), 1, 0, 0.17687017067164812)
(('made', 'his', 'fortune'), 1, 0, 0.17687017067164812)
(('his', 'fortune', ','), 2, 0, 0.983389342294767)
(('fortune', ',', 'bought'), 1, 0, 0.17687017067164812)
((',', 'bought', 'his'), 1, 0, 0.17687017067164812)
(('bought', 'his', 'house'), 1, 0, 0.17687017067164812)
(('his', 'house', ','), 3, 0, 1.7785588752196837)
((',', 'and', 'obtained'), 1, 0, 0.17687017067164812)
(('and', 'obtained', 'his'), 1, 0, 0.17687017067164812)
(('obtained', 'his', 'wife'), 1, 0, 0.17687017067164812)
(('his', 'wife', ';'), 5, 0, 3.7220338983050847)
(('wife', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'was'), 5, 0, 3.7220338983050847)
(('and', 'was', 'beginning'), 1, 0, 0.17687017067164812)
(('was', 'beginning', 'a'), 1, 0, 0.17687017067164812)
(('beginning', 'a', 'new'), 1, 0, 0.17687017067164812)
(('a', 'new', 'period'), 1, 0, 0.17687017067164812)
(('new', 'period', 'of'), 1, 0, 0.17687017067164812)
(('period', 'of', 'existence'), 1, 0, 0.17687017067164812)
(('of', 'existence', ','), 1, 0, 0.17687017067164812)
(('existence', ',', 'with'), 1, 0, 0.17687017067164812)
((',', 'with', 'every'), 2, 0, 0.983389342294767)
(('with', 'every', 'probability'), 1, 0, 0.17687017067164812)
(('every', 'probability', 'of'), 2, 0, 0.983389342294767)
(('probability', 'of', 'greater'), 1, 0, 0.17687017067164812)
(('of', 'greater', 'happiness'), 2, 0, 0.983389342294767)
(('greater', 'happiness', 'than'), 2, 0, 0.983389342294767)
(('happiness', 'than', 'in'), 1, 0, 0.17687017067164812)
(('than', 'in', 'any'), 1, 0, 0.17687017067164812)
(('in', 'any', 'yet'), 1, 0, 0.17687017067164812)
(('any', 'yet', 'passed'), 1, 0, 0.17687017067164812)
(('yet', 'passed', 'through'), 1, 0, 0.17687017067164812)
(('passed', 'through', '.'), 1, 0, 0.17687017067164812)
(('through', '.', ''), 3, 0, 1.7785588752196837)
(('He', 'had', 'never'), 4, 0, 2.9150197628458496)
(('had', 'never', 'been'), 12, 0, 11.424242424242424)
(('never', 'been', 'an'), 1, 0, 0.17687017067164812)
(('been', 'an', 'unhappy'), 1, 0, 0.17687017067164812)
(('an', 'unhappy', 'man'), 1, 0, 0.17687017067164812)
(('unhappy', 'man', ';'), 1, 0, 0.17687017067164812)
(('man', ';', 'his'), 1, 0, 0.17687017067164812)
((';', 'his', 'own'), 2, 0, 0.983389342294767)
(('his', 'own', 'temper'), 1, 0, 0.17687017067164812)
(('own', 'temper', 'had'), 1, 0, 0.17687017067164812)
(('temper', 'had', 'secured'), 1, 0, 0.17687017067164812)
(('had', 'secured', 'him'), 1, 0, 0.17687017067164812)
(('secured', 'him', 'from'), 1, 0, 0.17687017067164812)
(('him', 'from', 'that'), 2, 0, 0.983389342294767)
(('from', 'that', ','), 1, 0, 0.17687017067164812)
(('that', ',', 'even'), 1, 0, 0.17687017067164812)
((',', 'even', 'in'), 4, 0, 2.9150197628458496)
(('even', 'in', 'his'), 2, 0, 0.983389342294767)
(('in', 'his', 'first'), 1, 0, 0.17687017067164812)
(('his', 'first', 'marriage'), 1, 0, 0.17687017067164812)
(('first', 'marriage', ';'), 1, 0, 0.17687017067164812)
(('marriage', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'his'), 8, 0, 7.927797833935018)
(('but', 'his', 'second'), 1, 0, 0.17687017067164812)
(('his', 'second', 'must'), 1, 0, 0.17687017067164812)
(('second', 'must', 'shew'), 1, 0, 0.17687017067164812)
(('must', 'shew', 'him'), 1, 0, 0.17687017067164812)
(('shew', 'him', 'how'), 1, 0, 0.17687017067164812)
(('him', 'how', 'delightful'), 1, 0, 0.17687017067164812)
(('how', 'delightful', 'a'), 1, 0, 0.17687017067164812)
(('delightful', 'a', 'well'), 1, 0, 0.17687017067164812)
(('a', 'well', '-'), 2, 0, 0.983389342294767)
(('well', '-', 'judging'), 1, 0, 0.17687017067164812)
(('-', 'judging', 'and'), 1, 0, 0.17687017067164812)
(('judging', 'and', 'truly'), 1, 0, 0.17687017067164812)
(('and', 'truly', 'amiable'), 1, 0, 0.17687017067164812)
(('truly', 'amiable', 'woman'), 1, 0, 0.17687017067164812)
(('amiable', 'woman', 'could'), 1, 0, 0.17687017067164812)
(('woman', 'could', 'be'), 1, 0, 0.17687017067164812)
(('could', 'be', ','), 1, 0, 0.17687017067164812)
(('be', ',', 'and'), 8, 0, 7.927797833935018)
((',', 'and', 'must'), 9, 0, 6.5983606557377055)
(('and', 'must', 'give'), 1, 0, 0.17687017067164812)
(('must', 'give', 'him'), 1, 0, 0.17687017067164812)
(('give', 'him', 'the'), 2, 0, 0.983389342294767)
(('him', 'the', 'pleasantest'), 1, 0, 0.17687017067164812)
(('the', 'pleasantest', 'proof'), 1, 0, 0.17687017067164812)
(('pleasantest', 'proof', 'of'), 1, 0, 0.17687017067164812)
(('proof', 'of', 'its'), 2, 0, 0.983389342294767)
(('of', 'its', 'being'), 17, 0, 19.42105263157895)
(('its', 'being', 'a'), 3, 0, 1.7785588752196837)
(('being', 'a', 'great'), 1, 0, 0.17687017067164812)
(('great', 'deal', 'better'), 5, 0, 3.7220338983050847)
(('deal', 'better', 'to'), 1, 0, 0.17687017067164812)
(('better', 'to', 'choose'), 1, 0, 0.17687017067164812)
(('to', 'choose', 'than'), 1, 0, 0.17687017067164812)
(('choose', 'than', 'to'), 1, 0, 0.17687017067164812)
(('than', 'to', 'be'), 4, 0, 2.9150197628458496)
(('to', 'be', 'chosen'), 1, 0, 0.17687017067164812)
(('be', 'chosen', ','), 1, 0, 0.17687017067164812)
(('chosen', ',', 'to'), 1, 0, 0.17687017067164812)
((',', 'to', 'excite'), 1, 0, 0.17687017067164812)
(('to', 'excite', 'gratitude'), 1, 0, 0.17687017067164812)
(('excite', 'gratitude', 'than'), 1, 0, 0.17687017067164812)
(('gratitude', 'than', 'to'), 1, 0, 0.17687017067164812)
(('than', 'to', 'feel'), 1, 0, 0.17687017067164812)
(('to', 'feel', 'it'), 6, 0, 4.48816029143898)
(('feel', 'it', '.'), 2, 0, 0.983389342294767)
(('He', 'had', 'only'), 1, 0, 0.17687017067164812)
(('had', 'only', 'himself'), 1, 0, 0.17687017067164812)
(('only', 'himself', 'to'), 1, 0, 0.17687017067164812)
(('himself', 'to', 'please'), 1, 0, 0.17687017067164812)
(('to', 'please', 'in'), 1, 0, 0.17687017067164812)
(('please', 'in', 'his'), 1, 0, 0.17687017067164812)
(('in', 'his', 'choice'), 1, 0, 0.17687017067164812)
(('his', 'choice', ':'), 1, 0, 0.17687017067164812)
(('choice', ':', 'his'), 1, 0, 0.17687017067164812)
((':', 'his', 'fortune'), 1, 0, 0.17687017067164812)
(('his', 'fortune', 'was'), 2, 0, 0.983389342294767)
(('fortune', 'was', 'his'), 1, 0, 0.17687017067164812)
(('was', 'his', 'own'), 4, 0, 2.9150197628458496)
(('his', 'own', ';'), 1, 0, 0.17687017067164812)
(('own', ';', 'for'), 1, 0, 0.17687017067164812)
((';', 'for', 'as'), 4, 0, 2.9150197628458496)
(('for', 'as', 'to'), 4, 0, 2.9150197628458496)
(('as', 'to', 'Frank'), 1, 0, 0.17687017067164812)
(('to', 'Frank', ','), 1, 0, 0.17687017067164812)
(('Frank', ',', 'it'), 1, 0, 0.17687017067164812)
(('was', 'more', 'than'), 3, 0, 1.7785588752196837)
(('more', 'than', 'being'), 1, 0, 0.17687017067164812)
(('than', 'being', 'tacitly'), 1, 0, 0.17687017067164812)
(('being', 'tacitly', 'brought'), 1, 0, 0.17687017067164812)
(('tacitly', 'brought', 'up'), 1, 0, 0.17687017067164812)
(('brought', 'up', 'as'), 1, 0, 0.17687017067164812)
(('up', 'as', 'his'), 1, 0, 0.17687017067164812)
(('as', 'his', 'uncle'), 1, 0, 0.17687017067164812)
(('his', 'uncle', "'"), 2, 0, 0.983389342294767)
(('uncle', "'", 's'), 4, 0, 2.9150197628458496)
(("'", 's', 'heir'), 1, 0, 0.17687017067164812)
(('s', 'heir', ','), 1, 0, 0.17687017067164812)
(('heir', ',', 'it'), 1, 0, 0.17687017067164812)
(('it', 'had', 'become'), 1, 0, 0.17687017067164812)
(('had', 'become', 'so'), 1, 0, 0.17687017067164812)
(('become', 'so', 'avowed'), 1, 0, 0.17687017067164812)
(('so', 'avowed', 'an'), 1, 0, 0.17687017067164812)
(('avowed', 'an', 'adoption'), 1, 0, 0.17687017067164812)
(('an', 'adoption', 'as'), 1, 0, 0.17687017067164812)
(('adoption', 'as', 'to'), 1, 0, 0.17687017067164812)
(('as', 'to', 'have'), 2, 0, 0.983389342294767)
(('have', 'him', 'assume'), 1, 0, 0.17687017067164812)
(('him', 'assume', 'the'), 1, 0, 0.17687017067164812)
(('assume', 'the', 'name'), 1, 0, 0.17687017067164812)
(('the', 'name', 'of'), 11, 0, 8.671532846715328)
(('name', 'of', 'Churchill'), 1, 0, 0.17687017067164812)
(('of', 'Churchill', 'on'), 1, 0, 0.17687017067164812)
(('Churchill', 'on', 'coming'), 1, 0, 0.17687017067164812)
(('on', 'coming', 'of'), 1, 0, 0.17687017067164812)
(('coming', 'of', 'age'), 1, 0, 0.17687017067164812)
(('of', 'age', '.'), 1, 0, 0.17687017067164812)
(('age', '.', ''), 2, 0, 0.983389342294767)
(('It', 'was', 'most'), 3, 0, 1.7785588752196837)
(('was', 'most', 'unlikely'), 1, 0, 0.17687017067164812)
(('most', 'unlikely', ','), 1, 0, 0.17687017067164812)
(('unlikely', ',', 'therefore'), 1, 0, 0.17687017067164812)
((',', 'therefore', ','), 25, 0, 22.454545454545453)
(('therefore', ',', 'that'), 1, 0, 0.17687017067164812)
(('that', 'he', 'should'), 21, 0, 29.040000000000003)
(('he', 'should', 'ever'), 2, 0, 0.983389342294767)
(('should', 'ever', 'want'), 1, 0, 0.17687017067164812)
(('ever', 'want', 'his'), 1, 0, 0.17687017067164812)
(('want', 'his', 'father'), 1, 0, 0.17687017067164812)
(('his', 'father', "'"), 9, 0, 6.5983606557377055)
(('father', "'", 's'), 39, 0, 18.18181818181818)
(("'", 's', 'assistance'), 2, 0, 0.983389342294767)
(('s', 'assistance', '.'), 1, 0, 0.17687017067164812)
(('assistance', '.', ''), 1, 0, 0.17687017067164812)
(('', 'His', 'father'), 3, 0, 1.7785588752196837)
(('His', 'father', 'had'), 1, 0, 0.17687017067164812)
(('father', 'had', 'no'), 1, 0, 0.17687017067164812)
(('had', 'no', 'apprehension'), 1, 0, 0.17687017067164812)
(('no', 'apprehension', 'of'), 1, 0, 0.17687017067164812)
(('apprehension', 'of', 'it'), 1, 0, 0.17687017067164812)
(('', 'The', 'aunt'), 3, 0, 1.7785588752196837)
(('The', 'aunt', 'was'), 2, 0, 0.983389342294767)
(('aunt', 'was', 'a'), 1, 0, 0.17687017067164812)
(('was', 'a', 'capricious'), 1, 0, 0.17687017067164812)
(('a', 'capricious', 'woman'), 1, 0, 0.17687017067164812)
(('capricious', 'woman', ','), 1, 0, 0.17687017067164812)
(('woman', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'governed'), 1, 0, 0.17687017067164812)
(('and', 'governed', 'her'), 1, 0, 0.17687017067164812)
(('governed', 'her', 'husband'), 1, 0, 0.17687017067164812)
(('her', 'husband', 'entirely'), 1, 0, 0.17687017067164812)
(('husband', 'entirely', ';'), 1, 0, 0.17687017067164812)
(('entirely', ';', 'but'), 1, 0, 0.17687017067164812)
(('was', 'not', 'in'), 6, 0, 4.48816029143898)
(('not', 'in', 'Mr'), 1, 0, 0.17687017067164812)
(("'", 's', 'nature'), 3, 0, 1.7785588752196837)
(('s', 'nature', 'to'), 2, 0, 0.983389342294767)
(('nature', 'to', 'imagine'), 1, 0, 0.17687017067164812)
(('to', 'imagine', 'that'), 1, 0, 0.17687017067164812)
(('imagine', 'that', 'any'), 2, 0, 0.983389342294767)
(('that', 'any', 'caprice'), 1, 0, 0.17687017067164812)
(('any', 'caprice', 'could'), 1, 0, 0.17687017067164812)
(('caprice', 'could', 'be'), 1, 0, 0.17687017067164812)
(('could', 'be', 'strong'), 1, 0, 0.17687017067164812)
(('be', 'strong', 'enough'), 1, 0, 0.17687017067164812)
(('strong', 'enough', 'to'), 1, 0, 0.17687017067164812)
(('enough', 'to', 'affect'), 1, 0, 0.17687017067164812)
(('to', 'affect', 'one'), 2, 0, 0.983389342294767)
(('affect', 'one', 'so'), 1, 0, 0.17687017067164812)
(('one', 'so', 'dear'), 1, 0, 0.17687017067164812)
(('so', 'dear', ','), 1, 0, 0.17687017067164812)
(('dear', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', ','), 20, 0, 21.0)
(('and', ',', 'as'), 13, 0, 10.137931034482758)
((',', 'as', 'he'), 22, 0, 16.03030303030303)
(('as', 'he', 'believed'), 2, 0, 0.983389342294767)
(('he', 'believed', ','), 1, 0, 0.17687017067164812)
(('believed', ',', 'so'), 1, 0, 0.17687017067164812)
((',', 'so', 'deservedly'), 1, 0, 0.17687017067164812)
(('so', 'deservedly', 'dear'), 1, 0, 0.17687017067164812)
(('deservedly', 'dear', '.'), 1, 0, 0.17687017067164812)
(('dear', '.', ''), 8, 0, 7.927797833935018)
(('', 'He', 'saw'), 4, 0, 2.9150197628458496)
(('He', 'saw', 'his'), 1, 0, 0.17687017067164812)
(('saw', 'his', 'son'), 1, 0, 0.17687017067164812)
(('his', 'son', 'every'), 1, 0, 0.17687017067164812)
(('son', 'every', 'year'), 1, 0, 0.17687017067164812)
(('every', 'year', 'in'), 1, 0, 0.17687017067164812)
(('year', 'in', 'London'), 1, 0, 0.17687017067164812)
(('London', ',', 'and'), 4, 0, 2.9150197628458496)
((',', 'and', 'was'), 43, 0, 29.333333333333332)
(('and', 'was', 'proud'), 1, 0, 0.17687017067164812)
(('was', 'proud', 'of'), 1, 0, 0.17687017067164812)
(('proud', 'of', 'him'), 1, 0, 0.17687017067164812)
(('of', 'him', ';'), 2, 0, 0.983389342294767)
(('him', ';', 'and'), 22, 0, 16.03030303030303)
(('and', 'his', 'fond'), 1, 0, 0.17687017067164812)
(('his', 'fond', 'report'), 1, 0, 0.17687017067164812)
(('fond', 'report', 'of'), 1, 0, 0.17687017067164812)
(('report', 'of', 'him'), 1, 0, 0.17687017067164812)
(('of', 'him', 'as'), 3, 0, 1.7785588752196837)
(('him', 'as', 'a'), 2, 0, 0.983389342294767)
(('as', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'fine'), 4, 0, 2.9150197628458496)
(('very', 'fine', 'young'), 3, 0, 1.7785588752196837)
(('fine', 'young', 'man'), 7, 0, 6.295454545454546)
(('young', 'man', 'had'), 4, 0, 2.9150197628458496)
(('man', 'had', 'made'), 1, 0, 0.17687017067164812)
(('had', 'made', 'Highbury'), 1, 0, 0.17687017067164812)
(('made', 'Highbury', 'feel'), 1, 0, 0.17687017067164812)
(('Highbury', 'feel', 'a'), 1, 0, 0.17687017067164812)
(('feel', 'a', 'sort'), 1, 0, 0.17687017067164812)
(('sort', 'of', 'pride'), 2, 0, 0.983389342294767)
(('of', 'pride', 'in'), 1, 0, 0.17687017067164812)
(('pride', 'in', 'him'), 1, 0, 0.17687017067164812)
(('in', 'him', 'too'), 1, 0, 0.17687017067164812)
(('him', 'too', '.'), 1, 0, 0.17687017067164812)
(('too', '.', ''), 12, 0, 11.424242424242424)
(('He', 'was', 'looked'), 1, 0, 0.17687017067164812)
(('was', 'looked', 'on'), 1, 0, 0.17687017067164812)
(('looked', 'on', 'as'), 1, 0, 0.17687017067164812)
(('on', 'as', 'sufficiently'), 1, 0, 0.17687017067164812)
(('as', 'sufficiently', 'belonging'), 1, 0, 0.17687017067164812)
(('sufficiently', 'belonging', 'to'), 1, 0, 0.17687017067164812)
(('belonging', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'place'), 3, 0, 1.7785588752196837)
(('the', 'place', 'to'), 1, 0, 0.17687017067164812)
(('place', 'to', 'make'), 1, 0, 0.17687017067164812)
(('to', 'make', 'his'), 4, 0, 2.9150197628458496)
(('make', 'his', 'merits'), 1, 0, 0.17687017067164812)
(('his', 'merits', 'and'), 1, 0, 0.17687017067164812)
(('merits', 'and', 'prospects'), 1, 0, 0.17687017067164812)
(('and', 'prospects', 'a'), 1, 0, 0.17687017067164812)
(('prospects', 'a', 'kind'), 1, 0, 0.17687017067164812)
(('a', 'kind', 'of'), 2, 0, 0.983389342294767)
(('kind', 'of', 'common'), 1, 0, 0.17687017067164812)
(('of', 'common', 'concern'), 1, 0, 0.17687017067164812)
(('common', 'concern', '.'), 1, 0, 0.17687017067164812)
(('concern', '.', ''), 2, 0, 0.983389342294767)
(('Mr', '.', 'Frank'), 49, 0, 25.0)
(('.', 'Frank', 'Churchill'), 49, 0, 25.0)
(('Frank', 'Churchill', 'was'), 7, 0, 6.295454545454546)
(('Churchill', 'was', 'one'), 1, 0, 0.17687017067164812)
(('of', 'the', 'boasts'), 1, 0, 0.17687017067164812)
(('the', 'boasts', 'of'), 1, 0, 0.17687017067164812)
(('boasts', 'of', 'Highbury'), 1, 0, 0.17687017067164812)
(('and', 'a', 'lively'), 1, 0, 0.17687017067164812)
(('a', 'lively', 'curiosity'), 1, 0, 0.17687017067164812)
(('lively', 'curiosity', 'to'), 1, 0, 0.17687017067164812)
(('curiosity', 'to', 'see'), 5, 0, 3.7220338983050847)
(('to', 'see', 'him'), 18, 0, 11.585365853658537)
(('see', 'him', 'prevailed'), 1, 0, 0.17687017067164812)
(('him', 'prevailed', ','), 1, 0, 0.17687017067164812)
(('prevailed', ',', 'though'), 1, 0, 0.17687017067164812)
((',', 'though', 'the'), 5, 0, 3.7220338983050847)
(('though', 'the', 'compliment'), 1, 0, 0.17687017067164812)
(('the', 'compliment', 'was'), 1, 0, 0.17687017067164812)
(('compliment', 'was', 'so'), 1, 0, 0.17687017067164812)
(('was', 'so', 'little'), 3, 0, 1.7785588752196837)
(('so', 'little', 'returned'), 1, 0, 0.17687017067164812)
(('little', 'returned', 'that'), 1, 0, 0.17687017067164812)
(('returned', 'that', 'he'), 1, 0, 0.17687017067164812)
(('that', 'he', 'had'), 33, 0, 22.666666666666664)
(('he', 'had', 'never'), 6, 0, 4.48816029143898)
(('never', 'been', 'there'), 2, 0, 0.983389342294767)
(('been', 'there', 'in'), 1, 0, 0.17687017067164812)
(('there', 'in', 'his'), 1, 0, 0.17687017067164812)
(('in', 'his', 'life'), 4, 0, 2.9150197628458496)
(('his', 'life', '.'), 5, 0, 3.7220338983050847)
(('life', '.', ''), 14, 0, 11.428571428571427)
(('', 'His', 'coming'), 1, 0, 0.17687017067164812)
(('His', 'coming', 'to'), 1, 0, 0.17687017067164812)
(('coming', 'to', 'visit'), 1, 0, 0.17687017067164812)
(('to', 'visit', 'his'), 1, 0, 0.17687017067164812)
(('visit', 'his', 'father'), 1, 0, 0.17687017067164812)
(('his', 'father', 'had'), 3, 0, 1.7785588752196837)
(('father', 'had', 'been'), 2, 0, 0.983389342294767)
(('had', 'been', 'often'), 2, 0, 0.983389342294767)
(('been', 'often', 'talked'), 1, 0, 0.17687017067164812)
(('often', 'talked', 'of'), 1, 0, 0.17687017067164812)
(('talked', 'of', 'but'), 1, 0, 0.17687017067164812)
(('of', 'but', 'never'), 1, 0, 0.17687017067164812)
(('but', 'never', 'achieved'), 1, 0, 0.17687017067164812)
(('never', 'achieved', '.'), 1, 0, 0.17687017067164812)
(('achieved', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Now'), 25, 0, 22.454545454545453)
(('', 'Now', ','), 14, 0, 11.428571428571427)
(('Now', ',', 'upon'), 1, 0, 0.17687017067164812)
((',', 'upon', 'his'), 2, 0, 0.983389342294767)
(('upon', 'his', 'father'), 1, 0, 0.17687017067164812)
(('marriage', ',', 'it'), 1, 0, 0.17687017067164812)
(('it', 'was', 'very'), 10, 0, 9.36024844720497)
(('was', 'very', 'generally'), 1, 0, 0.17687017067164812)
(('very', 'generally', 'proposed'), 1, 0, 0.17687017067164812)
(('generally', 'proposed', ','), 1, 0, 0.17687017067164812)
(('proposed', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'a'), 13, 0, 10.137931034482758)
(('as', 'a', 'most'), 2, 0, 0.983389342294767)
(('a', 'most', 'proper'), 1, 0, 0.17687017067164812)
(('most', 'proper', 'attention'), 1, 0, 0.17687017067164812)
(('proper', 'attention', ','), 2, 0, 0.983389342294767)
(('attention', ',', 'that'), 1, 0, 0.17687017067164812)
((',', 'that', 'the'), 15, 0, 14.666666666666666)
(('that', 'the', 'visit'), 1, 0, 0.17687017067164812)
(('the', 'visit', 'should'), 1, 0, 0.17687017067164812)
(('visit', 'should', 'take'), 1, 0, 0.17687017067164812)
(('should', 'take', 'place'), 1, 0, 0.17687017067164812)
(('take', 'place', '.'), 2, 0, 0.983389342294767)
(('', 'There', 'was'), 35, 0, 25.714285714285715)
(('There', 'was', 'not'), 2, 0, 0.983389342294767)
(('was', 'not', 'a'), 6, 0, 4.48816029143898)
(('not', 'a', 'dissentient'), 1, 0, 0.17687017067164812)
(('a', 'dissentient', 'voice'), 1, 0, 0.17687017067164812)
(('dissentient', 'voice', 'on'), 1, 0, 0.17687017067164812)
(('voice', 'on', 'the'), 1, 0, 0.17687017067164812)
(('subject', ',', 'either'), 1, 0, 0.17687017067164812)
((',', 'either', 'when'), 1, 0, 0.17687017067164812)
(('either', 'when', 'Mrs'), 1, 0, 0.17687017067164812)
(('when', 'Mrs', '.'), 7, 0, 6.295454545454546)
(('Mrs', '.', 'Perry'), 11, 0, 8.671532846715328)
(('.', 'Perry', 'drank'), 1, 0, 0.17687017067164812)
(('Perry', 'drank', 'tea'), 1, 0, 0.17687017067164812)
(('drank', 'tea', 'with'), 1, 0, 0.17687017067164812)
(('tea', 'with', 'Mrs'), 1, 0, 0.17687017067164812)
(('with', 'Mrs', '.'), 18, 0, 11.585365853658537)
(('Mrs', '.', 'and'), 8, 0, 7.927797833935018)
(('and', 'Miss', 'Bates'), 15, 0, 14.666666666666666)
(('Miss', 'Bates', ','), 26, 0, 24.157894736842106)
(('Bates', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'when'), 4, 0, 2.9150197628458496)
(('or', 'when', 'Mrs'), 1, 0, 0.17687017067164812)
(('Miss', 'Bates', 'returned'), 1, 0, 0.17687017067164812)
(('Bates', 'returned', 'the'), 1, 0, 0.17687017067164812)
(('returned', 'the', 'visit'), 1, 0, 0.17687017067164812)
(('the', 'visit', '.'), 2, 0, 0.983389342294767)
(('visit', '.', ''), 6, 0, 4.48816029143898)
(('', 'Now', 'was'), 1, 0, 0.17687017067164812)
(('Now', 'was', 'the'), 1, 0, 0.17687017067164812)
(('was', 'the', 'time'), 1, 0, 0.17687017067164812)
(('the', 'time', 'for'), 1, 0, 0.17687017067164812)
(('time', 'for', 'Mr'), 1, 0, 0.17687017067164812)
(('Frank', 'Churchill', 'to'), 6, 0, 4.48816029143898)
(('Churchill', 'to', 'come'), 1, 0, 0.17687017067164812)
(('to', 'come', 'among'), 2, 0, 0.983389342294767)
(('come', 'among', 'them'), 1, 0, 0.17687017067164812)
(('among', 'them', ';'), 1, 0, 0.17687017067164812)
(('them', ';', 'and'), 6, 0, 4.48816029143898)
(('and', 'the', 'hope'), 2, 0, 0.983389342294767)
(('the', 'hope', 'strengthened'), 1, 0, 0.17687017067164812)
(('hope', 'strengthened', 'when'), 1, 0, 0.17687017067164812)
(('strengthened', 'when', 'it'), 1, 0, 0.17687017067164812)
(('when', 'it', 'was'), 4, 0, 2.9150197628458496)
(('it', 'was', 'understood'), 1, 0, 0.17687017067164812)
(('was', 'understood', 'that'), 1, 0, 0.17687017067164812)
(('understood', 'that', 'he'), 1, 0, 0.17687017067164812)
(('he', 'had', 'written'), 1, 0, 0.17687017067164812)
(('had', 'written', 'to'), 1, 0, 0.17687017067164812)
(('written', 'to', 'his'), 1, 0, 0.17687017067164812)
(('to', 'his', 'new'), 1, 0, 0.17687017067164812)
(('his', 'new', 'mother'), 1, 0, 0.17687017067164812)
(('new', 'mother', 'on'), 1, 0, 0.17687017067164812)
(('mother', 'on', 'the'), 1, 0, 0.17687017067164812)
(('on', 'the', 'occasion'), 5, 0, 3.7220338983050847)
(('the', 'occasion', '.'), 3, 0, 1.7785588752196837)
(('occasion', '.', ''), 7, 0, 6.295454545454546)
(('', '', 'For'), 18, 0, 11.585365853658537)
(('', 'For', 'a'), 4, 0, 2.9150197628458496)
(('For', 'a', 'few'), 1, 0, 0.17687017067164812)
(('a', 'few', 'days'), 8, 0, 7.927797833935018)
(('few', 'days', ','), 2, 0, 0.983389342294767)
(('days', ',', 'every'), 1, 0, 0.17687017067164812)
((',', 'every', 'morning'), 2, 0, 0.983389342294767)
(('every', 'morning', 'visit'), 1, 0, 0.17687017067164812)
(('morning', 'visit', 'in'), 1, 0, 0.17687017067164812)
(('visit', 'in', 'Highbury'), 1, 0, 0.17687017067164812)
(('in', 'Highbury', 'included'), 1, 0, 0.17687017067164812)
(('Highbury', 'included', 'some'), 1, 0, 0.17687017067164812)
(('included', 'some', 'mention'), 1, 0, 0.17687017067164812)
(('some', 'mention', 'of'), 1, 0, 0.17687017067164812)
(('mention', 'of', 'the'), 2, 0, 0.983389342294767)
(('of', 'the', 'handsome'), 2, 0, 0.983389342294767)
(('the', 'handsome', 'letter'), 2, 0, 0.983389342294767)
(('handsome', 'letter', 'Mrs'), 1, 0, 0.17687017067164812)
(('letter', 'Mrs', '.'), 1, 0, 0.17687017067164812)
(('.', 'Weston', 'had'), 21, 0, 29.040000000000003)
(('Weston', 'had', 'received'), 1, 0, 0.17687017067164812)
(('had', 'received', '.'), 1, 0, 0.17687017067164812)
(('received', '.', ''), 2, 0, 0.983389342294767)
(('"', 'I', 'suppose'), 3, 0, 1.7785588752196837)
(('I', 'suppose', 'you'), 2, 0, 0.983389342294767)
(('suppose', 'you', 'have'), 2, 0, 0.983389342294767)
(('you', 'have', 'heard'), 5, 0, 3.7220338983050847)
(('have', 'heard', 'of'), 3, 0, 1.7785588752196837)
(('heard', 'of', 'the'), 1, 0, 0.17687017067164812)
(('handsome', 'letter', 'Mr'), 1, 0, 0.17687017067164812)
(('letter', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('Frank', 'Churchill', 'has'), 1, 0, 0.17687017067164812)
(('Churchill', 'has', 'written'), 1, 0, 0.17687017067164812)
(('has', 'written', 'to'), 1, 0, 0.17687017067164812)
(('written', 'to', 'Mrs'), 2, 0, 0.983389342294767)
(('to', 'Mrs', '.'), 56, 0, 19.0)
(('.', 'Weston', '?'), 1, 0, 0.17687017067164812)
(('Weston', '?', ''), 1, 0, 0.17687017067164812)
(('', 'I', 'understand'), 1, 0, 0.17687017067164812)
(('I', 'understand', 'it'), 1, 0, 0.17687017067164812)
(('understand', 'it', 'was'), 1, 0, 0.17687017067164812)
(('was', 'a', 'very'), 10, 0, 9.36024844720497)
(('a', 'very', 'handsome'), 5, 0, 3.7220338983050847)
(('very', 'handsome', 'letter'), 1, 0, 0.17687017067164812)
(('handsome', 'letter', ','), 1, 0, 0.17687017067164812)
(('letter', ',', 'indeed'), 1, 0, 0.17687017067164812)
((',', 'indeed', '.'), 5, 0, 3.7220338983050847)
(('indeed', '.', ''), 22, 0, 16.03030303030303)
(('.', 'Woodhouse', 'told'), 1, 0, 0.17687017067164812)
(('Woodhouse', 'told', 'me'), 1, 0, 0.17687017067164812)
(('told', 'me', 'of'), 1, 0, 0.17687017067164812)
(('me', 'of', 'it'), 1, 0, 0.17687017067164812)
(('.', 'Woodhouse', 'saw'), 1, 0, 0.17687017067164812)
(('Woodhouse', 'saw', 'the'), 1, 0, 0.17687017067164812)
(('saw', 'the', 'letter'), 2, 0, 0.983389342294767)
(('the', 'letter', ','), 4, 0, 2.9150197628458496)
(('letter', ',', 'and'), 7, 0, 6.295454545454546)
(('and', 'he', 'says'), 1, 0, 0.17687017067164812)
(('he', 'says', 'he'), 1, 0, 0.17687017067164812)
(('says', 'he', 'never'), 1, 0, 0.17687017067164812)
(('he', 'never', 'saw'), 1, 0, 0.17687017067164812)
(('never', 'saw', 'such'), 3, 0, 1.7785588752196837)
(('saw', 'such', 'a'), 3, 0, 1.7785588752196837)
(('such', 'a', 'handsome'), 2, 0, 0.983389342294767)
(('a', 'handsome', 'letter'), 1, 0, 0.17687017067164812)
(('handsome', 'letter', 'in'), 1, 0, 0.17687017067164812)
(('letter', 'in', 'his'), 1, 0, 0.17687017067164812)
(('his', 'life', '."'), 4, 0, 2.9150197628458496)
(('life', '."', ''), 7, 0, 6.295454545454546)
(('It', 'was', ','), 2, 0, 0.983389342294767)
(('was', ',', 'indeed'), 2, 0, 0.983389342294767)
(('indeed', ',', 'a'), 2, 0, 0.983389342294767)
((',', 'a', 'highly'), 1, 0, 0.17687017067164812)
(('a', 'highly', 'prized'), 1, 0, 0.17687017067164812)
(('highly', 'prized', 'letter'), 1, 0, 0.17687017067164812)
(('prized', 'letter', '.'), 1, 0, 0.17687017067164812)
(('letter', '.', ''), 9, 0, 6.5983606557377055)
(('Weston', 'had', ','), 2, 0, 0.983389342294767)
(('had', ',', 'of'), 1, 0, 0.17687017067164812)
((',', 'of', 'course'), 22, 0, 16.03030303030303)
(('of', 'course', ','), 16, 0, 14.681818181818182)
(('course', ',', 'formed'), 1, 0, 0.17687017067164812)
((',', 'formed', 'a'), 2, 0, 0.983389342294767)
(('formed', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'favourable'), 1, 0, 0.17687017067164812)
(('very', 'favourable', 'idea'), 1, 0, 0.17687017067164812)
(('favourable', 'idea', 'of'), 1, 0, 0.17687017067164812)
(('idea', 'of', 'the'), 4, 0, 2.9150197628458496)
(('of', 'the', 'young'), 4, 0, 2.9150197628458496)
(('the', 'young', 'man'), 21, 0, 29.040000000000003)
(('young', 'man', ';'), 6, 0, 4.48816029143898)
(('man', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'such'), 2, 0, 0.983389342294767)
(('and', 'such', 'a'), 4, 0, 2.9150197628458496)
(('such', 'a', 'pleasing'), 1, 0, 0.17687017067164812)
(('a', 'pleasing', 'attention'), 1, 0, 0.17687017067164812)
(('pleasing', 'attention', 'was'), 1, 0, 0.17687017067164812)
(('attention', 'was', 'an'), 1, 0, 0.17687017067164812)
(('was', 'an', 'irresistible'), 1, 0, 0.17687017067164812)
(('an', 'irresistible', 'proof'), 1, 0, 0.17687017067164812)
(('irresistible', 'proof', 'of'), 1, 0, 0.17687017067164812)
(('proof', 'of', 'his'), 2, 0, 0.983389342294767)
(('of', 'his', 'great'), 2, 0, 0.983389342294767)
(('his', 'great', 'good'), 2, 0, 0.983389342294767)
(('great', 'good', 'sense'), 1, 0, 0.17687017067164812)
(('good', 'sense', ','), 4, 0, 2.9150197628458496)
(('sense', ',', 'and'), 3, 0, 1.7785588752196837)
(('and', 'a', 'most'), 1, 0, 0.17687017067164812)
(('a', 'most', 'welcome'), 2, 0, 0.983389342294767)
(('most', 'welcome', 'addition'), 1, 0, 0.17687017067164812)
(('welcome', 'addition', 'to'), 1, 0, 0.17687017067164812)
(('addition', 'to', 'every'), 1, 0, 0.17687017067164812)
(('to', 'every', 'source'), 1, 0, 0.17687017067164812)
(('every', 'source', 'and'), 1, 0, 0.17687017067164812)
(('source', 'and', 'every'), 1, 0, 0.17687017067164812)
(('and', 'every', 'expression'), 1, 0, 0.17687017067164812)
(('every', 'expression', 'of'), 1, 0, 0.17687017067164812)
(('expression', 'of', 'congratulation'), 1, 0, 0.17687017067164812)
(('of', 'congratulation', 'which'), 1, 0, 0.17687017067164812)
(('congratulation', 'which', 'her'), 1, 0, 0.17687017067164812)
(('which', 'her', 'marriage'), 1, 0, 0.17687017067164812)
(('her', 'marriage', 'had'), 1, 0, 0.17687017067164812)
(('marriage', 'had', 'already'), 1, 0, 0.17687017067164812)
(('had', 'already', 'secured'), 1, 0, 0.17687017067164812)
(('already', 'secured', '.'), 1, 0, 0.17687017067164812)
(('secured', '.', ''), 1, 0, 0.17687017067164812)
(('', 'She', 'felt'), 10, 0, 9.36024844720497)
(('She', 'felt', 'herself'), 1, 0, 0.17687017067164812)
(('felt', 'herself', 'a'), 1, 0, 0.17687017067164812)
(('herself', 'a', 'most'), 2, 0, 0.983389342294767)
(('a', 'most', 'fortunate'), 4, 0, 2.9150197628458496)
(('most', 'fortunate', 'woman'), 2, 0, 0.983389342294767)
(('fortunate', 'woman', ';'), 1, 0, 0.17687017067164812)
(('woman', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'she'), 44, 0, 33.75)
(('she', 'had', 'lived'), 1, 0, 0.17687017067164812)
(('had', 'lived', 'long'), 1, 0, 0.17687017067164812)
(('lived', 'long', 'enough'), 1, 0, 0.17687017067164812)
(('long', 'enough', 'to'), 6, 0, 4.48816029143898)
(('enough', 'to', 'know'), 2, 0, 0.983389342294767)
(('to', 'know', 'how'), 5, 0, 3.7220338983050847)
(('know', 'how', 'fortunate'), 1, 0, 0.17687017067164812)
(('how', 'fortunate', 'she'), 1, 0, 0.17687017067164812)
(('fortunate', 'she', 'might'), 1, 0, 0.17687017067164812)
(('she', 'might', 'well'), 1, 0, 0.17687017067164812)
(('might', 'well', 'be'), 1, 0, 0.17687017067164812)
(('well', 'be', 'thought'), 1, 0, 0.17687017067164812)
(('be', 'thought', ','), 1, 0, 0.17687017067164812)
(('thought', ',', 'where'), 1, 0, 0.17687017067164812)
((',', 'where', 'the'), 3, 0, 1.7785588752196837)
(('where', 'the', 'only'), 1, 0, 0.17687017067164812)
(('the', 'only', 'regret'), 1, 0, 0.17687017067164812)
(('only', 'regret', 'was'), 1, 0, 0.17687017067164812)
(('regret', 'was', 'for'), 1, 0, 0.17687017067164812)
(('was', 'for', 'a'), 1, 0, 0.17687017067164812)
(('for', 'a', 'partial'), 1, 0, 0.17687017067164812)
(('a', 'partial', 'separation'), 1, 0, 0.17687017067164812)
(('partial', 'separation', 'from'), 1, 0, 0.17687017067164812)
(('separation', 'from', 'friends'), 1, 0, 0.17687017067164812)
(('from', 'friends', 'whose'), 1, 0, 0.17687017067164812)
(('friends', 'whose', 'friendship'), 1, 0, 0.17687017067164812)
(('whose', 'friendship', 'for'), 1, 0, 0.17687017067164812)
(('friendship', 'for', 'her'), 1, 0, 0.17687017067164812)
(('for', 'her', 'had'), 2, 0, 0.983389342294767)
(('her', 'had', 'never'), 1, 0, 0.17687017067164812)
(('had', 'never', 'cooled'), 1, 0, 0.17687017067164812)
(('never', 'cooled', ','), 1, 0, 0.17687017067164812)
(('cooled', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'who', 'could'), 2, 0, 0.983389342294767)
(('who', 'could', 'ill'), 1, 0, 0.17687017067164812)
(('could', 'ill', 'bear'), 1, 0, 0.17687017067164812)
(('ill', 'bear', 'to'), 1, 0, 0.17687017067164812)
(('bear', 'to', 'part'), 2, 0, 0.983389342294767)
(('part', 'with', 'her'), 3, 0, 1.7785588752196837)
(('', 'She', 'knew'), 4, 0, 2.9150197628458496)
(('She', 'knew', 'that'), 2, 0, 0.983389342294767)
(('knew', 'that', 'at'), 1, 0, 0.17687017067164812)
(('that', 'at', 'times'), 1, 0, 0.17687017067164812)
(('at', 'times', 'she'), 1, 0, 0.17687017067164812)
(('times', 'she', 'must'), 1, 0, 0.17687017067164812)
(('must', 'be', 'missed'), 2, 0, 0.983389342294767)
(('be', 'missed', ';'), 2, 0, 0.983389342294767)
(('missed', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'could'), 4, 0, 2.9150197628458496)
(('and', 'could', 'not'), 6, 0, 4.48816029143898)
(('could', 'not', 'think'), 8, 0, 7.927797833935018)
(('not', 'think', ','), 1, 0, 0.17687017067164812)
(('think', ',', 'without'), 1, 0, 0.17687017067164812)
((',', 'without', 'pain'), 1, 0, 0.17687017067164812)
(('without', 'pain', ','), 1, 0, 0.17687017067164812)
(('pain', ',', 'of'), 1, 0, 0.17687017067164812)
(("'", 's', 'losing'), 1, 0, 0.17687017067164812)
(('s', 'losing', 'a'), 1, 0, 0.17687017067164812)
(('losing', 'a', 'single'), 1, 0, 0.17687017067164812)
(('a', 'single', 'pleasure'), 1, 0, 0.17687017067164812)
(('single', 'pleasure', ','), 1, 0, 0.17687017067164812)
(('pleasure', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'suffering'), 1, 0, 0.17687017067164812)
(('or', 'suffering', 'an'), 1, 0, 0.17687017067164812)
(('suffering', 'an', 'hour'), 1, 0, 0.17687017067164812)
(('an', 'hour', "'"), 3, 0, 1.7785588752196837)
(('hour', "'", 's'), 5, 0, 3.7220338983050847)
(("'", 's', 'ennui'), 1, 0, 0.17687017067164812)
(('s', 'ennui', ','), 1, 0, 0.17687017067164812)
(('ennui', ',', 'from'), 1, 0, 0.17687017067164812)
((',', 'from', 'the'), 13, 0, 10.137931034482758)
(('from', 'the', 'want'), 1, 0, 0.17687017067164812)
(('the', 'want', 'of'), 6, 0, 4.48816029143898)
(('want', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'companionableness'), 1, 0, 0.17687017067164812)
(('her', 'companionableness', ':'), 1, 0, 0.17687017067164812)
(('companionableness', ':', 'but'), 1, 0, 0.17687017067164812)
((':', 'but', 'dear'), 1, 0, 0.17687017067164812)
(('but', 'dear', 'Emma'), 1, 0, 0.17687017067164812)
(('dear', 'Emma', 'was'), 1, 0, 0.17687017067164812)
(('Emma', 'was', 'of'), 1, 0, 0.17687017067164812)
(('was', 'of', 'no'), 3, 0, 1.7785588752196837)
(('of', 'no', 'feeble'), 1, 0, 0.17687017067164812)
(('no', 'feeble', 'character'), 1, 0, 0.17687017067164812)
(('feeble', 'character', ';'), 1, 0, 0.17687017067164812)
(('character', ';', 'she'), 1, 0, 0.17687017067164812)
((';', 'she', 'was'), 9, 0, 6.5983606557377055)
(('she', 'was', 'more'), 4, 0, 2.9150197628458496)
(('was', 'more', 'equal'), 1, 0, 0.17687017067164812)
(('more', 'equal', 'to'), 2, 0, 0.983389342294767)
(('equal', 'to', 'her'), 2, 0, 0.983389342294767)
(('to', 'her', 'situation'), 1, 0, 0.17687017067164812)
(('her', 'situation', 'than'), 1, 0, 0.17687017067164812)
(('situation', 'than', 'most'), 1, 0, 0.17687017067164812)
(('than', 'most', 'girls'), 1, 0, 0.17687017067164812)
(('most', 'girls', 'would'), 1, 0, 0.17687017067164812)
(('girls', 'would', 'have'), 1, 0, 0.17687017067164812)
(('have', 'been', ','), 3, 0, 1.7785588752196837)
(('been', ',', 'and'), 3, 0, 1.7785588752196837)
(('and', 'had', 'sense'), 1, 0, 0.17687017067164812)
(('had', 'sense', ','), 1, 0, 0.17687017067164812)
((',', 'and', 'energy'), 1, 0, 0.17687017067164812)
(('and', 'energy', ','), 1, 0, 0.17687017067164812)
(('energy', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'spirits'), 1, 0, 0.17687017067164812)
(('and', 'spirits', 'that'), 1, 0, 0.17687017067164812)
(('spirits', 'that', 'might'), 1, 0, 0.17687017067164812)
(('that', 'might', 'be'), 2, 0, 0.983389342294767)
(('might', 'be', 'hoped'), 2, 0, 0.983389342294767)
(('be', 'hoped', 'would'), 1, 0, 0.17687017067164812)
(('hoped', 'would', 'bear'), 1, 0, 0.17687017067164812)
(('would', 'bear', 'her'), 1, 0, 0.17687017067164812)
(('bear', 'her', 'well'), 1, 0, 0.17687017067164812)
(('her', 'well', 'and'), 1, 0, 0.17687017067164812)
(('well', 'and', 'happily'), 1, 0, 0.17687017067164812)
(('and', 'happily', 'through'), 1, 0, 0.17687017067164812)
(('happily', 'through', 'its'), 1, 0, 0.17687017067164812)
(('through', 'its', 'little'), 1, 0, 0.17687017067164812)
(('its', 'little', 'difficulties'), 1, 0, 0.17687017067164812)
(('little', 'difficulties', 'and'), 1, 0, 0.17687017067164812)
(('difficulties', 'and', 'privations'), 1, 0, 0.17687017067164812)
(('and', 'privations', '.'), 1, 0, 0.17687017067164812)
(('privations', '.', ''), 1, 0, 0.17687017067164812)
(('', 'And', 'then'), 6, 0, 4.48816029143898)
(('And', 'then', 'there'), 1, 0, 0.17687017067164812)
(('then', 'there', 'was'), 1, 0, 0.17687017067164812)
(('there', 'was', 'such'), 3, 0, 1.7785588752196837)
(('was', 'such', 'comfort'), 1, 0, 0.17687017067164812)
(('such', 'comfort', 'in'), 1, 0, 0.17687017067164812)
(('comfort', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'very'), 8, 0, 7.927797833935018)
(('the', 'very', 'easy'), 1, 0, 0.17687017067164812)
(('very', 'easy', 'distance'), 1, 0, 0.17687017067164812)
(('easy', 'distance', 'of'), 1, 0, 0.17687017067164812)
(('distance', 'of', 'Randalls'), 1, 0, 0.17687017067164812)
(('of', 'Randalls', 'from'), 1, 0, 0.17687017067164812)
(('Randalls', 'from', 'Hartfield'), 1, 0, 0.17687017067164812)
(('from', 'Hartfield', ','), 4, 0, 2.9150197628458496)
(('Hartfield', ',', 'so'), 1, 0, 0.17687017067164812)
((',', 'so', 'convenient'), 1, 0, 0.17687017067164812)
(('so', 'convenient', 'for'), 1, 0, 0.17687017067164812)
(('convenient', 'for', 'even'), 1, 0, 0.17687017067164812)
(('for', 'even', 'solitary'), 1, 0, 0.17687017067164812)
(('even', 'solitary', 'female'), 1, 0, 0.17687017067164812)
(('solitary', 'female', 'walking'), 1, 0, 0.17687017067164812)
(('female', 'walking', ','), 1, 0, 0.17687017067164812)
(('walking', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'in'), 23, 0, 14.608695652173914)
(('and', 'in', 'Mr'), 1, 0, 0.17687017067164812)
(("'", 's', 'disposition'), 4, 0, 2.9150197628458496)
(('s', 'disposition', 'and'), 1, 0, 0.17687017067164812)
(('disposition', 'and', 'circumstances'), 1, 0, 0.17687017067164812)
(('and', 'circumstances', ','), 1, 0, 0.17687017067164812)
(('circumstances', ',', 'which'), 3, 0, 1.7785588752196837)
((',', 'which', 'would'), 2, 0, 0.983389342294767)
(('which', 'would', 'make'), 1, 0, 0.17687017067164812)
(('would', 'make', 'the'), 1, 0, 0.17687017067164812)
(('make', 'the', 'approaching'), 1, 0, 0.17687017067164812)
(('the', 'approaching', 'season'), 1, 0, 0.17687017067164812)
(('approaching', 'season', 'no'), 1, 0, 0.17687017067164812)
(('season', 'no', 'hindrance'), 1, 0, 0.17687017067164812)
(('no', 'hindrance', 'to'), 1, 0, 0.17687017067164812)
(('hindrance', 'to', 'their'), 1, 0, 0.17687017067164812)
(('to', 'their', 'spending'), 1, 0, 0.17687017067164812)
(('their', 'spending', 'half'), 1, 0, 0.17687017067164812)
(('spending', 'half', 'the'), 1, 0, 0.17687017067164812)
(('half', 'the', 'evenings'), 1, 0, 0.17687017067164812)
(('the', 'evenings', 'in'), 1, 0, 0.17687017067164812)
(('evenings', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'week'), 3, 0, 1.7785588752196837)
(('the', 'week', 'together'), 1, 0, 0.17687017067164812)
(('week', 'together', '.'), 2, 0, 0.983389342294767)
(('together', '.', ''), 16, 0, 14.681818181818182)
(('', 'Her', 'situation'), 2, 0, 0.983389342294767)
(('Her', 'situation', 'was'), 1, 0, 0.17687017067164812)
(('situation', 'was', 'altogether'), 1, 0, 0.17687017067164812)
(('was', 'altogether', 'the'), 1, 0, 0.17687017067164812)
(('altogether', 'the', 'subject'), 1, 0, 0.17687017067164812)
(('the', 'subject', 'of'), 6, 0, 4.48816029143898)
(('subject', 'of', 'hours'), 1, 0, 0.17687017067164812)
(('of', 'hours', 'of'), 1, 0, 0.17687017067164812)
(('hours', 'of', 'gratitude'), 1, 0, 0.17687017067164812)
(('of', 'gratitude', 'to'), 1, 0, 0.17687017067164812)
(('gratitude', 'to', 'Mrs'), 1, 0, 0.17687017067164812)
(('and', 'of', 'moments'), 1, 0, 0.17687017067164812)
(('of', 'moments', 'only'), 1, 0, 0.17687017067164812)
(('moments', 'only', 'of'), 1, 0, 0.17687017067164812)
(('only', 'of', 'regret'), 1, 0, 0.17687017067164812)
(('of', 'regret', ';'), 1, 0, 0.17687017067164812)
(('regret', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'her', 'satisfaction'), 1, 0, 0.17687017067164812)
(('her', 'satisfaction', '--'), 1, 0, 0.17687017067164812)
(('satisfaction', '--', 'her'), 2, 0, 0.983389342294767)
(('--', 'her', 'more'), 1, 0, 0.17687017067164812)
(('more', 'than', 'satisfaction'), 1, 0, 0.17687017067164812)
(('than', 'satisfaction', '--'), 1, 0, 0.17687017067164812)
(('--', 'her', 'cheerful'), 1, 0, 0.17687017067164812)
(('her', 'cheerful', 'enjoyment'), 1, 0, 0.17687017067164812)
(('cheerful', 'enjoyment', ','), 1, 0, 0.17687017067164812)
(('enjoyment', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'so'), 2, 0, 0.983389342294767)
(('was', 'so', 'just'), 1, 0, 0.17687017067164812)
(('so', 'just', 'and'), 1, 0, 0.17687017067164812)
(('just', 'and', 'so'), 1, 0, 0.17687017067164812)
(('and', 'so', 'apparent'), 1, 0, 0.17687017067164812)
(('so', 'apparent', ','), 1, 0, 0.17687017067164812)
(('apparent', ',', 'that'), 1, 0, 0.17687017067164812)
((',', 'that', 'Emma'), 13, 0, 10.137931034482758)
(('that', 'Emma', ','), 3, 0, 1.7785588752196837)
(('Emma', ',', 'well'), 1, 0, 0.17687017067164812)
((',', 'well', 'as'), 1, 0, 0.17687017067164812)
(('well', 'as', 'she'), 5, 0, 3.7220338983050847)
(('as', 'she', 'knew'), 2, 0, 0.983389342294767)
(('she', 'knew', 'her'), 1, 0, 0.17687017067164812)
(('knew', 'her', 'father'), 1, 0, 0.17687017067164812)
(('father', ',', 'was'), 2, 0, 0.983389342294767)
((',', 'was', 'sometimes'), 1, 0, 0.17687017067164812)
(('was', 'sometimes', 'taken'), 1, 0, 0.17687017067164812)
(('sometimes', 'taken', 'by'), 1, 0, 0.17687017067164812)
(('taken', 'by', 'surprize'), 1, 0, 0.17687017067164812)
(('by', 'surprize', 'at'), 1, 0, 0.17687017067164812)
(('surprize', 'at', 'his'), 1, 0, 0.17687017067164812)
(('at', 'his', 'being'), 1, 0, 0.17687017067164812)
(('his', 'being', 'still'), 1, 0, 0.17687017067164812)
(('being', 'still', 'able'), 1, 0, 0.17687017067164812)
(('still', 'able', 'to'), 2, 0, 0.983389342294767)
(('able', 'to', 'pity'), 1, 0, 0.17687017067164812)
(('to', 'pity', '`'), 1, 0, 0.17687017067164812)
(('pity', '`', 'poor'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', ",'"), 1, 0, 0.17687017067164812)
(('Taylor', ",'", 'when'), 1, 0, 0.17687017067164812)
((",'", 'when', 'they'), 1, 0, 0.17687017067164812)
(('when', 'they', 'left'), 1, 0, 0.17687017067164812)
(('they', 'left', 'her'), 1, 0, 0.17687017067164812)
(('left', 'her', 'at'), 2, 0, 0.983389342294767)
(('her', 'at', 'Randalls'), 1, 0, 0.17687017067164812)
(('at', 'Randalls', 'in'), 1, 0, 0.17687017067164812)
(('Randalls', 'in', 'the'), 2, 0, 0.983389342294767)
(('in', 'the', 'centre'), 2, 0, 0.983389342294767)
(('the', 'centre', 'of'), 2, 0, 0.983389342294767)
(('centre', 'of', 'every'), 1, 0, 0.17687017067164812)
(('of', 'every', 'domestic'), 1, 0, 0.17687017067164812)
(('every', 'domestic', 'comfort'), 1, 0, 0.17687017067164812)
(('domestic', 'comfort', ','), 1, 0, 0.17687017067164812)
(('comfort', ',', 'or'), 2, 0, 0.983389342294767)
((',', 'or', 'saw'), 1, 0, 0.17687017067164812)
(('or', 'saw', 'her'), 1, 0, 0.17687017067164812)
(('saw', 'her', 'go'), 1, 0, 0.17687017067164812)
(('her', 'go', 'away'), 1, 0, 0.17687017067164812)
(('go', 'away', 'in'), 1, 0, 0.17687017067164812)
(('away', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'evening'), 7, 0, 6.295454545454546)
(('the', 'evening', 'attended'), 1, 0, 0.17687017067164812)
(('evening', 'attended', 'by'), 1, 0, 0.17687017067164812)
(('attended', 'by', 'her'), 1, 0, 0.17687017067164812)
(('by', 'her', 'pleasant'), 1, 0, 0.17687017067164812)
(('her', 'pleasant', 'husband'), 1, 0, 0.17687017067164812)
(('pleasant', 'husband', 'to'), 1, 0, 0.17687017067164812)
(('husband', 'to', 'a'), 1, 0, 0.17687017067164812)
(('to', 'a', 'carriage'), 1, 0, 0.17687017067164812)
(('a', 'carriage', 'of'), 1, 0, 0.17687017067164812)
(('carriage', 'of', 'her'), 1, 0, 0.17687017067164812)
(('', 'But', 'never'), 1, 0, 0.17687017067164812)
(('But', 'never', 'did'), 1, 0, 0.17687017067164812)
(('never', 'did', 'she'), 1, 0, 0.17687017067164812)
(('did', 'she', 'go'), 1, 0, 0.17687017067164812)
(('she', 'go', 'without'), 1, 0, 0.17687017067164812)
(('go', 'without', 'Mr'), 1, 0, 0.17687017067164812)
(('without', 'Mr', '.'), 1, 0, 0.17687017067164812)
(("'", 's', 'giving'), 1, 0, 0.17687017067164812)
(('s', 'giving', 'a'), 1, 0, 0.17687017067164812)
(('giving', 'a', 'gentle'), 1, 0, 0.17687017067164812)
(('a', 'gentle', 'sigh'), 2, 0, 0.983389342294767)
(('gentle', 'sigh', ','), 1, 0, 0.17687017067164812)
(('sigh', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'saying'), 5, 0, 3.7220338983050847)
(('and', 'saying', ','), 1, 0, 0.17687017067164812)
(('saying', ',', '"'), 2, 0, 0.983389342294767)
(('"', 'Ah', ','), 2, 0, 0.983389342294767)
(('Ah', ',', 'poor'), 1, 0, 0.17687017067164812)
((',', 'poor', 'Miss'), 1, 0, 0.17687017067164812)
(('', 'She', 'would'), 23, 0, 14.608695652173914)
(('She', 'would', 'be'), 6, 0, 4.48816029143898)
(('would', 'be', 'very'), 9, 0, 6.5983606557377055)
(('be', 'very', 'glad'), 5, 0, 3.7220338983050847)
(('very', 'glad', 'to'), 8, 0, 7.927797833935018)
(('glad', 'to', 'stay'), 1, 0, 0.17687017067164812)
(('to', 'stay', '."'), 1, 0, 0.17687017067164812)
(('stay', '."', ''), 1, 0, 0.17687017067164812)
(('There', 'was', 'no'), 12, 0, 11.424242424242424)
(('was', 'no', 'recovering'), 1, 0, 0.17687017067164812)
(('no', 'recovering', 'Miss'), 1, 0, 0.17687017067164812)
(('recovering', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', '--'), 3, 0, 1.7785588752196837)
(('Taylor', '--', 'nor'), 1, 0, 0.17687017067164812)
(('--', 'nor', 'much'), 1, 0, 0.17687017067164812)
(('nor', 'much', 'likelihood'), 1, 0, 0.17687017067164812)
(('much', 'likelihood', 'of'), 1, 0, 0.17687017067164812)
(('likelihood', 'of', 'ceasing'), 1, 0, 0.17687017067164812)
(('of', 'ceasing', 'to'), 1, 0, 0.17687017067164812)
(('ceasing', 'to', 'pity'), 1, 0, 0.17687017067164812)
(('to', 'pity', 'her'), 1, 0, 0.17687017067164812)
(('pity', 'her', ';'), 1, 0, 0.17687017067164812)
(('her', ';', 'but'), 7, 0, 6.295454545454546)
(('but', 'a', 'few'), 3, 0, 1.7785588752196837)
(('a', 'few', 'weeks'), 6, 0, 4.48816029143898)
(('few', 'weeks', 'brought'), 1, 0, 0.17687017067164812)
(('weeks', 'brought', 'some'), 1, 0, 0.17687017067164812)
(('brought', 'some', 'alleviation'), 1, 0, 0.17687017067164812)
(('some', 'alleviation', 'to'), 1, 0, 0.17687017067164812)
(('alleviation', 'to', 'Mr'), 1, 0, 0.17687017067164812)
(('to', 'Mr', '.'), 51, 0, 26.0)
(('.', 'Woodhouse', '.'), 4, 0, 2.9150197628458496)
(('Woodhouse', '.', ''), 11, 0, 8.671532846715328)
(('', 'The', 'compliments'), 1, 0, 0.17687017067164812)
(('The', 'compliments', 'of'), 1, 0, 0.17687017067164812)
(('compliments', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'neighbours'), 2, 0, 0.983389342294767)
(('his', 'neighbours', 'were'), 1, 0, 0.17687017067164812)
(('neighbours', 'were', 'over'), 1, 0, 0.17687017067164812)
(('were', 'over', ';'), 1, 0, 0.17687017067164812)
(('over', ';', 'he'), 1, 0, 0.17687017067164812)
((';', 'he', 'was'), 11, 0, 8.671532846715328)
(('was', 'no', 'longer'), 3, 0, 1.7785588752196837)
(('no', 'longer', 'teased'), 1, 0, 0.17687017067164812)
(('longer', 'teased', 'by'), 1, 0, 0.17687017067164812)
(('teased', 'by', 'being'), 1, 0, 0.17687017067164812)
(('by', 'being', 'wished'), 1, 0, 0.17687017067164812)
(('being', 'wished', 'joy'), 1, 0, 0.17687017067164812)
(('wished', 'joy', 'of'), 1, 0, 0.17687017067164812)
(('joy', 'of', 'so'), 1, 0, 0.17687017067164812)
(('of', 'so', 'sorrowful'), 1, 0, 0.17687017067164812)
(('so', 'sorrowful', 'an'), 1, 0, 0.17687017067164812)
(('sorrowful', 'an', 'event'), 1, 0, 0.17687017067164812)
(('an', 'event', ';'), 1, 0, 0.17687017067164812)
(('event', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'the', 'wedding'), 1, 0, 0.17687017067164812)
(('wedding', '-', 'cake'), 4, 0, 2.9150197628458496)
(('-', 'cake', ','), 1, 0, 0.17687017067164812)
(('cake', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'had'), 6, 0, 4.48816029143898)
(('which', 'had', 'been'), 6, 0, 4.48816029143898)
(('a', 'great', 'distress'), 1, 0, 0.17687017067164812)
(('great', 'distress', 'to'), 1, 0, 0.17687017067164812)
(('distress', 'to', 'him'), 1, 0, 0.17687017067164812)
(('to', 'him', ','), 19, 0, 20.0)
(('him', ',', 'was'), 5, 0, 3.7220338983050847)
((',', 'was', 'all'), 4, 0, 2.9150197628458496)
(('was', 'all', 'eat'), 1, 0, 0.17687017067164812)
(('all', 'eat', 'up'), 1, 0, 0.17687017067164812)
(('eat', 'up', '.'), 1, 0, 0.17687017067164812)
(('up', '.', ''), 9, 0, 6.5983606557377055)
(('', 'His', 'own'), 1, 0, 0.17687017067164812)
(('His', 'own', 'stomach'), 1, 0, 0.17687017067164812)
(('own', 'stomach', 'could'), 1, 0, 0.17687017067164812)
(('stomach', 'could', 'bear'), 1, 0, 0.17687017067164812)
(('could', 'bear', 'nothing'), 1, 0, 0.17687017067164812)
(('bear', 'nothing', 'rich'), 1, 0, 0.17687017067164812)
(('nothing', 'rich', ','), 1, 0, 0.17687017067164812)
(('rich', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'he', 'could'), 5, 0, 3.7220338983050847)
(('he', 'could', 'never'), 2, 0, 0.983389342294767)
(('could', 'never', 'believe'), 2, 0, 0.983389342294767)
(('never', 'believe', 'other'), 1, 0, 0.17687017067164812)
(('believe', 'other', 'people'), 1, 0, 0.17687017067164812)
(('other', 'people', 'to'), 1, 0, 0.17687017067164812)
(('people', 'to', 'be'), 2, 0, 0.983389342294767)
(('to', 'be', 'different'), 1, 0, 0.17687017067164812)
(('be', 'different', 'from'), 1, 0, 0.17687017067164812)
(('different', 'from', 'himself'), 1, 0, 0.17687017067164812)
(('from', 'himself', '.'), 1, 0, 0.17687017067164812)
(('himself', '.', ''), 14, 0, 11.428571428571427)
(('', 'What', 'was'), 2, 0, 0.983389342294767)
(('What', 'was', 'unwholesome'), 1, 0, 0.17687017067164812)
(('was', 'unwholesome', 'to'), 1, 0, 0.17687017067164812)
(('unwholesome', 'to', 'him'), 1, 0, 0.17687017067164812)
(('to', 'him', 'he'), 1, 0, 0.17687017067164812)
(('him', 'he', 'regarded'), 1, 0, 0.17687017067164812)
(('he', 'regarded', 'as'), 1, 0, 0.17687017067164812)
(('regarded', 'as', 'unfit'), 1, 0, 0.17687017067164812)
(('as', 'unfit', 'for'), 1, 0, 0.17687017067164812)
(('unfit', 'for', 'any'), 2, 0, 0.983389342294767)
(('for', 'any', 'body'), 7, 0, 6.295454545454546)
(('any', 'body', ';'), 1, 0, 0.17687017067164812)
(('body', ';', 'and'), 3, 0, 1.7785588752196837)
(('he', 'had', ','), 4, 0, 2.9150197628458496)
(('had', ',', 'therefore'), 2, 0, 0.983389342294767)
(('therefore', ',', 'earnestly'), 1, 0, 0.17687017067164812)
((',', 'earnestly', 'tried'), 1, 0, 0.17687017067164812)
(('earnestly', 'tried', 'to'), 2, 0, 0.983389342294767)
(('tried', 'to', 'dissuade'), 1, 0, 0.17687017067164812)
(('to', 'dissuade', 'them'), 1, 0, 0.17687017067164812)
(('dissuade', 'them', 'from'), 1, 0, 0.17687017067164812)
(('them', 'from', 'having'), 1, 0, 0.17687017067164812)
(('from', 'having', 'any'), 1, 0, 0.17687017067164812)
(('having', 'any', 'wedding'), 1, 0, 0.17687017067164812)
(('any', 'wedding', '-'), 1, 0, 0.17687017067164812)
(('-', 'cake', 'at'), 1, 0, 0.17687017067164812)
(('cake', 'at', 'all'), 1, 0, 0.17687017067164812)
(('all', ',', 'and'), 5, 0, 3.7220338983050847)
((',', 'and', 'when'), 7, 0, 6.295454545454546)
(('and', 'when', 'that'), 2, 0, 0.983389342294767)
(('when', 'that', 'proved'), 1, 0, 0.17687017067164812)
(('that', 'proved', 'vain'), 1, 0, 0.17687017067164812)
(('proved', 'vain', ','), 1, 0, 0.17687017067164812)
(('vain', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'earnestly'), 1, 0, 0.17687017067164812)
(('as', 'earnestly', 'tried'), 1, 0, 0.17687017067164812)
(('tried', 'to', 'prevent'), 1, 0, 0.17687017067164812)
(('to', 'prevent', 'any'), 1, 0, 0.17687017067164812)
(('prevent', 'any', 'body'), 1, 0, 0.17687017067164812)
(('any', 'body', "'"), 10, 0, 9.36024844720497)
(('body', "'", 's'), 29, 0, 32.30769230769231)
(("'", 's', 'eating'), 1, 0, 0.17687017067164812)
(('s', 'eating', 'it'), 1, 0, 0.17687017067164812)
(('eating', 'it', '.'), 1, 0, 0.17687017067164812)
(('He', 'had', 'been'), 11, 0, 8.671532846715328)
(('had', 'been', 'at'), 8, 0, 7.927797833935018)
(('been', 'at', 'the'), 3, 0, 1.7785588752196837)
(('at', 'the', 'pains'), 1, 0, 0.17687017067164812)
(('the', 'pains', 'of'), 1, 0, 0.17687017067164812)
(('pains', 'of', 'consulting'), 1, 0, 0.17687017067164812)
(('of', 'consulting', 'Mr'), 1, 0, 0.17687017067164812)
(('consulting', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('Mr', '.', 'Perry'), 36, 0, 44.4)
(('.', 'Perry', ','), 6, 0, 4.48816029143898)
(('Perry', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'apothecary'), 1, 0, 0.17687017067164812)
(('the', 'apothecary', ','), 1, 0, 0.17687017067164812)
(('apothecary', ',', 'on'), 1, 0, 0.17687017067164812)
((',', 'on', 'the'), 18, 0, 11.585365853658537)
(('.', 'Perry', 'was'), 5, 0, 3.7220338983050847)
(('Perry', 'was', 'an'), 1, 0, 0.17687017067164812)
(('was', 'an', 'intelligent'), 1, 0, 0.17687017067164812)
(('an', 'intelligent', ','), 1, 0, 0.17687017067164812)
(('intelligent', ',', 'gentlemanlike'), 1, 0, 0.17687017067164812)
((',', 'gentlemanlike', 'man'), 1, 0, 0.17687017067164812)
(('gentlemanlike', 'man', ','), 1, 0, 0.17687017067164812)
(('man', ',', 'whose'), 1, 0, 0.17687017067164812)
((',', 'whose', 'frequent'), 1, 0, 0.17687017067164812)
(('whose', 'frequent', 'visits'), 1, 0, 0.17687017067164812)
(('frequent', 'visits', 'were'), 1, 0, 0.17687017067164812)
(('visits', 'were', 'one'), 1, 0, 0.17687017067164812)
(('were', 'one', 'of'), 1, 0, 0.17687017067164812)
(('of', 'the', 'comforts'), 1, 0, 0.17687017067164812)
(('the', 'comforts', 'of'), 2, 0, 0.983389342294767)
(('comforts', 'of', 'Mr'), 1, 0, 0.17687017067164812)
(("'", 's', 'life'), 1, 0, 0.17687017067164812)
(('s', 'life', ';'), 1, 0, 0.17687017067164812)
(('life', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'upon'), 2, 0, 0.983389342294767)
(('and', 'upon', 'being'), 1, 0, 0.17687017067164812)
(('upon', 'being', 'applied'), 1, 0, 0.17687017067164812)
(('being', 'applied', 'to'), 1, 0, 0.17687017067164812)
(('applied', 'to', ','), 2, 0, 0.983389342294767)
(('to', ',', 'he'), 1, 0, 0.17687017067164812)
((',', 'he', 'could'), 16, 0, 14.681818181818182)
(('he', 'could', 'not'), 24, 0, 39.285714285714285)
(('not', 'but', 'acknowledge'), 1, 0, 0.17687017067164812)
(('but', 'acknowledge', '('), 1, 0, 0.17687017067164812)
(('acknowledge', '(', 'though'), 1, 0, 0.17687017067164812)
(('(', 'though', 'it'), 1, 0, 0.17687017067164812)
(('though', 'it', 'seemed'), 1, 0, 0.17687017067164812)
(('it', 'seemed', 'rather'), 1, 0, 0.17687017067164812)
(('seemed', 'rather', 'against'), 1, 0, 0.17687017067164812)
(('rather', 'against', 'the'), 2, 0, 0.983389342294767)
(('against', 'the', 'bias'), 1, 0, 0.17687017067164812)
(('the', 'bias', 'of'), 1, 0, 0.17687017067164812)
(('bias', 'of', 'inclination'), 1, 0, 0.17687017067164812)
(('of', 'inclination', ')'), 1, 0, 0.17687017067164812)
(('inclination', ')', 'that'), 1, 0, 0.17687017067164812)
((')', 'that', 'wedding'), 1, 0, 0.17687017067164812)
(('that', 'wedding', '-'), 1, 0, 0.17687017067164812)
(('-', 'cake', 'might'), 1, 0, 0.17687017067164812)
(('cake', 'might', 'certainly'), 1, 0, 0.17687017067164812)
(('might', 'certainly', 'disagree'), 1, 0, 0.17687017067164812)
(('certainly', 'disagree', 'with'), 1, 0, 0.17687017067164812)
(('disagree', 'with', 'many'), 1, 0, 0.17687017067164812)
(('with', 'many', '--'), 1, 0, 0.17687017067164812)
(('many', '--', 'perhaps'), 1, 0, 0.17687017067164812)
(('--', 'perhaps', 'with'), 1, 0, 0.17687017067164812)
(('perhaps', 'with', 'most'), 1, 0, 0.17687017067164812)
(('with', 'most', 'people'), 1, 0, 0.17687017067164812)
(('most', 'people', ','), 1, 0, 0.17687017067164812)
(('people', ',', 'unless'), 1, 0, 0.17687017067164812)
((',', 'unless', 'taken'), 1, 0, 0.17687017067164812)
(('unless', 'taken', 'moderately'), 1, 0, 0.17687017067164812)
(('taken', 'moderately', '.'), 1, 0, 0.17687017067164812)
(('moderately', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'With'), 25, 0, 22.454545454545453)
(('', 'With', 'such'), 2, 0, 0.983389342294767)
(('With', 'such', 'an'), 1, 0, 0.17687017067164812)
(('such', 'an', 'opinion'), 1, 0, 0.17687017067164812)
(('an', 'opinion', ','), 2, 0, 0.983389342294767)
(('opinion', ',', 'in'), 2, 0, 0.983389342294767)
((',', 'in', 'confirmation'), 1, 0, 0.17687017067164812)
(('in', 'confirmation', 'of'), 1, 0, 0.17687017067164812)
(('confirmation', 'of', 'his'), 1, 0, 0.17687017067164812)
(('his', 'own', ','), 4, 0, 2.9150197628458496)
(('own', ',', 'Mr'), 1, 0, 0.17687017067164812)
(('.', 'Woodhouse', 'hoped'), 1, 0, 0.17687017067164812)
(('Woodhouse', 'hoped', 'to'), 1, 0, 0.17687017067164812)
(('hoped', 'to', 'influence'), 1, 0, 0.17687017067164812)
(('to', 'influence', 'every'), 1, 0, 0.17687017067164812)
(('influence', 'every', 'visitor'), 1, 0, 0.17687017067164812)
(('every', 'visitor', 'of'), 1, 0, 0.17687017067164812)
(('visitor', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'newly'), 1, 0, 0.17687017067164812)
(('the', 'newly', 'married'), 1, 0, 0.17687017067164812)
(('newly', 'married', 'pair'), 1, 0, 0.17687017067164812)
(('married', 'pair', ';'), 1, 0, 0.17687017067164812)
(('pair', ';', 'but'), 1, 0, 0.17687017067164812)
((';', 'but', 'still'), 12, 0, 11.424242424242424)
(('but', 'still', 'the'), 1, 0, 0.17687017067164812)
(('still', 'the', 'cake'), 1, 0, 0.17687017067164812)
(('the', 'cake', 'was'), 1, 0, 0.17687017067164812)
(('cake', 'was', 'eaten'), 1, 0, 0.17687017067164812)
(('was', 'eaten', ';'), 1, 0, 0.17687017067164812)
(('eaten', ';', 'and'), 1, 0, 0.17687017067164812)
(('there', 'was', 'no'), 23, 0, 14.608695652173914)
(('was', 'no', 'rest'), 1, 0, 0.17687017067164812)
(('no', 'rest', 'for'), 1, 0, 0.17687017067164812)
(('rest', 'for', 'his'), 1, 0, 0.17687017067164812)
(('for', 'his', 'benevolent'), 1, 0, 0.17687017067164812)
(('his', 'benevolent', 'nerves'), 1, 0, 0.17687017067164812)
(('benevolent', 'nerves', 'till'), 1, 0, 0.17687017067164812)
(('nerves', 'till', 'it'), 1, 0, 0.17687017067164812)
(('till', 'it', 'was'), 3, 0, 1.7785588752196837)
(('it', 'was', 'all'), 14, 0, 11.428571428571427)
(('was', 'all', 'gone'), 1, 0, 0.17687017067164812)
(('all', 'gone', '.'), 1, 0, 0.17687017067164812)
(('gone', '.', ''), 9, 0, 6.5983606557377055)
(('There', 'was', 'a'), 11, 0, 8.671532846715328)
(('was', 'a', 'strange'), 1, 0, 0.17687017067164812)
(('a', 'strange', 'rumour'), 1, 0, 0.17687017067164812)
(('strange', 'rumour', 'in'), 1, 0, 0.17687017067164812)
(('rumour', 'in', 'Highbury'), 1, 0, 0.17687017067164812)
(('in', 'Highbury', 'of'), 1, 0, 0.17687017067164812)
(('Highbury', 'of', 'all'), 1, 0, 0.17687017067164812)
(('of', 'all', 'the'), 10, 0, 9.36024844720497)
(('all', 'the', 'little'), 2, 0, 0.983389342294767)
(('the', 'little', 'Perrys'), 1, 0, 0.17687017067164812)
(('little', 'Perrys', 'being'), 1, 0, 0.17687017067164812)
(('Perrys', 'being', 'seen'), 1, 0, 0.17687017067164812)
(('being', 'seen', 'with'), 1, 0, 0.17687017067164812)
(('seen', 'with', 'a'), 1, 0, 0.17687017067164812)
(('with', 'a', 'slice'), 1, 0, 0.17687017067164812)
(('a', 'slice', 'of'), 2, 0, 0.983389342294767)
(('slice', 'of', 'Mrs'), 1, 0, 0.17687017067164812)
(('of', 'Mrs', '.'), 50, 0, 102.0)
(("'", 's', 'wedding'), 3, 0, 1.7785588752196837)
(('s', 'wedding', '-'), 3, 0, 1.7785588752196837)
(('-', 'cake', 'in'), 1, 0, 0.17687017067164812)
(('cake', 'in', 'their'), 1, 0, 0.17687017067164812)
(('in', 'their', 'hands'), 1, 0, 0.17687017067164812)
(('their', 'hands', ':'), 1, 0, 0.17687017067164812)
(('hands', ':', 'but'), 1, 0, 0.17687017067164812)
((':', 'but', 'Mr'), 1, 0, 0.17687017067164812)
(('but', 'Mr', '.'), 17, 0, 19.42105263157895)
(('.', 'Woodhouse', 'would'), 5, 0, 3.7220338983050847)
(('Woodhouse', 'would', 'never'), 1, 0, 0.17687017067164812)
(('would', 'never', 'believe'), 1, 0, 0.17687017067164812)
(('never', 'believe', 'it'), 1, 0, 0.17687017067164812)
(('believe', 'it', '.'), 2, 0, 0.983389342294767)
(('', 'CHAPTER', 'III'), 3, 0, 1.7785588752196837)
(('CHAPTER', 'III', ''), 3, 0, 1.7785588752196837)
(('III', '', ''), 4, 0, 2.9150197628458496)
(('.', 'Woodhouse', 'was'), 14, 0, 11.428571428571427)
(('Woodhouse', 'was', 'fond'), 1, 0, 0.17687017067164812)
(('was', 'fond', 'of'), 2, 0, 0.983389342294767)
(('fond', 'of', 'society'), 2, 0, 0.983389342294767)
(('of', 'society', 'in'), 1, 0, 0.17687017067164812)
(('society', 'in', 'his'), 1, 0, 0.17687017067164812)
(('in', 'his', 'own'), 8, 0, 7.927797833935018)
(('his', 'own', 'way'), 1, 0, 0.17687017067164812)
(('own', 'way', '.'), 2, 0, 0.983389342294767)
(('way', '.', ''), 19, 0, 20.0)
(('', 'He', 'liked'), 1, 0, 0.17687017067164812)
(('He', 'liked', 'very'), 1, 0, 0.17687017067164812)
(('liked', 'very', 'much'), 1, 0, 0.17687017067164812)
(('very', 'much', 'to'), 9, 0, 6.5983606557377055)
(('much', 'to', 'have'), 3, 0, 1.7785588752196837)
(('to', 'have', 'his'), 5, 0, 3.7220338983050847)
(('have', 'his', 'friends'), 1, 0, 0.17687017067164812)
(('his', 'friends', 'come'), 1, 0, 0.17687017067164812)
(('friends', 'come', 'and'), 1, 0, 0.17687017067164812)
(('come', 'and', 'see'), 3, 0, 1.7785588752196837)
(('and', 'see', 'him'), 2, 0, 0.983389342294767)
(('see', 'him', ';'), 3, 0, 1.7785588752196837)
(('and', 'from', 'various'), 1, 0, 0.17687017067164812)
(('from', 'various', 'united'), 1, 0, 0.17687017067164812)
(('various', 'united', 'causes'), 1, 0, 0.17687017067164812)
(('united', 'causes', ','), 1, 0, 0.17687017067164812)
(('causes', ',', 'from'), 1, 0, 0.17687017067164812)
((',', 'from', 'his'), 5, 0, 3.7220338983050847)
(('from', 'his', 'long'), 1, 0, 0.17687017067164812)
(('his', 'long', 'residence'), 1, 0, 0.17687017067164812)
(('long', 'residence', 'at'), 1, 0, 0.17687017067164812)
(('residence', 'at', 'Hartfield'), 1, 0, 0.17687017067164812)
(('Hartfield', ',', 'and'), 12, 0, 11.424242424242424)
(('and', 'his', 'good'), 1, 0, 0.17687017067164812)
(('his', 'good', 'nature'), 1, 0, 0.17687017067164812)
(('good', 'nature', ','), 1, 0, 0.17687017067164812)
(('nature', ',', 'from'), 1, 0, 0.17687017067164812)
(('from', 'his', 'fortune'), 1, 0, 0.17687017067164812)
(('fortune', ',', 'his'), 1, 0, 0.17687017067164812)
((',', 'his', 'house'), 1, 0, 0.17687017067164812)
(('and', 'his', 'daughter'), 3, 0, 1.7785588752196837)
(('daughter', ',', 'he'), 1, 0, 0.17687017067164812)
(('he', 'could', 'command'), 1, 0, 0.17687017067164812)
(('could', 'command', 'the'), 1, 0, 0.17687017067164812)
(('command', 'the', 'visits'), 1, 0, 0.17687017067164812)
(('the', 'visits', 'of'), 1, 0, 0.17687017067164812)
(('visits', 'of', 'his'), 1, 0, 0.17687017067164812)
(('his', 'own', 'little'), 1, 0, 0.17687017067164812)
(('own', 'little', 'circle'), 1, 0, 0.17687017067164812)
(('little', 'circle', ','), 1, 0, 0.17687017067164812)
(('circle', ',', 'in'), 1, 0, 0.17687017067164812)
(('in', 'a', 'great'), 2, 0, 0.983389342294767)
(('a', 'great', 'measure'), 1, 0, 0.17687017067164812)
(('great', 'measure', ','), 2, 0, 0.983389342294767)
(('measure', ',', 'as'), 1, 0, 0.17687017067164812)
(('as', 'he', 'liked'), 2, 0, 0.983389342294767)
(('he', 'liked', '.'), 2, 0, 0.983389342294767)
(('liked', '.', ''), 2, 0, 0.983389342294767)
(('He', 'had', 'not'), 4, 0, 2.9150197628458496)
(('had', 'not', 'much'), 1, 0, 0.17687017067164812)
(('not', 'much', 'intercourse'), 1, 0, 0.17687017067164812)
(('much', 'intercourse', 'with'), 1, 0, 0.17687017067164812)
(('intercourse', 'with', 'any'), 1, 0, 0.17687017067164812)
(('with', 'any', 'families'), 1, 0, 0.17687017067164812)
(('any', 'families', 'beyond'), 1, 0, 0.17687017067164812)
(('families', 'beyond', 'that'), 1, 0, 0.17687017067164812)
(('beyond', 'that', 'circle'), 1, 0, 0.17687017067164812)
(('that', 'circle', ';'), 1, 0, 0.17687017067164812)
(('circle', ';', 'his'), 1, 0, 0.17687017067164812)
((';', 'his', 'horror'), 1, 0, 0.17687017067164812)
(('his', 'horror', 'of'), 1, 0, 0.17687017067164812)
(('horror', 'of', 'late'), 1, 0, 0.17687017067164812)
(('of', 'late', 'hours'), 1, 0, 0.17687017067164812)
(('late', 'hours', ','), 1, 0, 0.17687017067164812)
(('hours', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'large'), 1, 0, 0.17687017067164812)
(('and', 'large', 'dinner'), 1, 0, 0.17687017067164812)
(('large', 'dinner', '-'), 1, 0, 0.17687017067164812)
(('dinner', '-', 'parties'), 1, 0, 0.17687017067164812)
(('-', 'parties', ','), 1, 0, 0.17687017067164812)
(('parties', ',', 'made'), 1, 0, 0.17687017067164812)
((',', 'made', 'him'), 2, 0, 0.983389342294767)
(('made', 'him', 'unfit'), 1, 0, 0.17687017067164812)
(('him', 'unfit', 'for'), 1, 0, 0.17687017067164812)
(('for', 'any', 'acquaintance'), 1, 0, 0.17687017067164812)
(('any', 'acquaintance', 'but'), 1, 0, 0.17687017067164812)
(('acquaintance', 'but', 'such'), 1, 0, 0.17687017067164812)
(('but', 'such', 'as'), 1, 0, 0.17687017067164812)
(('such', 'as', 'would'), 1, 0, 0.17687017067164812)
(('as', 'would', 'visit'), 1, 0, 0.17687017067164812)
(('would', 'visit', 'him'), 1, 0, 0.17687017067164812)
(('visit', 'him', 'on'), 1, 0, 0.17687017067164812)
(('him', 'on', 'his'), 1, 0, 0.17687017067164812)
(('on', 'his', 'own'), 3, 0, 1.7785588752196837)
(('his', 'own', 'terms'), 1, 0, 0.17687017067164812)
(('own', 'terms', '.'), 1, 0, 0.17687017067164812)
(('terms', '.', ''), 2, 0, 0.983389342294767)
(('', '', 'Fortunately'), 2, 0, 0.983389342294767)
(('', 'Fortunately', 'for'), 1, 0, 0.17687017067164812)
(('Fortunately', 'for', 'him'), 1, 0, 0.17687017067164812)
(('for', 'him', ','), 7, 0, 6.295454545454546)
(('him', ',', 'Highbury'), 1, 0, 0.17687017067164812)
((',', 'Highbury', ','), 1, 0, 0.17687017067164812)
(('Highbury', ',', 'including'), 1, 0, 0.17687017067164812)
((',', 'including', 'Randalls'), 1, 0, 0.17687017067164812)
(('including', 'Randalls', 'in'), 1, 0, 0.17687017067164812)
(('in', 'the', 'same'), 22, 0, 16.03030303030303)
(('the', 'same', 'parish'), 1, 0, 0.17687017067164812)
(('same', 'parish', ','), 1, 0, 0.17687017067164812)
(('parish', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'Donwell'), 1, 0, 0.17687017067164812)
(('and', 'Donwell', 'Abbey'), 2, 0, 0.983389342294767)
(('Donwell', 'Abbey', 'in'), 1, 0, 0.17687017067164812)
(('Abbey', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'parish'), 2, 0, 0.983389342294767)
(('the', 'parish', 'adjoining'), 1, 0, 0.17687017067164812)
(('parish', 'adjoining', ','), 1, 0, 0.17687017067164812)
(('adjoining', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'seat'), 1, 0, 0.17687017067164812)
(('the', 'seat', 'of'), 1, 0, 0.17687017067164812)
(('seat', 'of', 'Mr'), 1, 0, 0.17687017067164812)
(('Knightley', ',', 'comprehended'), 1, 0, 0.17687017067164812)
((',', 'comprehended', 'many'), 1, 0, 0.17687017067164812)
(('comprehended', 'many', 'such'), 1, 0, 0.17687017067164812)
(('many', 'such', '.'), 1, 0, 0.17687017067164812)
(('such', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Not', 'unfrequently'), 1, 0, 0.17687017067164812)
(('Not', 'unfrequently', ','), 1, 0, 0.17687017067164812)
(('unfrequently', ',', 'through'), 1, 0, 0.17687017067164812)
((',', 'through', 'Emma'), 1, 0, 0.17687017067164812)
(('through', 'Emma', "'"), 2, 0, 0.983389342294767)
(("'", 's', 'persuasion'), 1, 0, 0.17687017067164812)
(('s', 'persuasion', ','), 1, 0, 0.17687017067164812)
(('persuasion', ',', 'he'), 1, 0, 0.17687017067164812)
((',', 'he', 'had'), 22, 0, 16.03030303030303)
(('he', 'had', 'some'), 1, 0, 0.17687017067164812)
(('had', 'some', 'of'), 1, 0, 0.17687017067164812)
(('of', 'the', 'chosen'), 2, 0, 0.983389342294767)
(('the', 'chosen', 'and'), 1, 0, 0.17687017067164812)
(('chosen', 'and', 'the'), 1, 0, 0.17687017067164812)
(('and', 'the', 'best'), 1, 0, 0.17687017067164812)
(('the', 'best', 'to'), 1, 0, 0.17687017067164812)
(('best', 'to', 'dine'), 1, 0, 0.17687017067164812)
(('to', 'dine', 'with'), 5, 0, 3.7220338983050847)
(('dine', 'with', 'him'), 1, 0, 0.17687017067164812)
(('with', 'him', ':'), 1, 0, 0.17687017067164812)
(('him', ':', 'but'), 1, 0, 0.17687017067164812)
((':', 'but', 'evening'), 1, 0, 0.17687017067164812)
(('but', 'evening', 'parties'), 1, 0, 0.17687017067164812)
(('evening', 'parties', 'were'), 1, 0, 0.17687017067164812)
(('parties', 'were', 'what'), 1, 0, 0.17687017067164812)
(('were', 'what', 'he'), 1, 0, 0.17687017067164812)
(('what', 'he', 'preferred'), 1, 0, 0.17687017067164812)
(('he', 'preferred', ';'), 1, 0, 0.17687017067164812)
(('preferred', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', ','), 53, 0, 108.0)
(('and', ',', 'unless'), 1, 0, 0.17687017067164812)
((',', 'unless', 'he'), 2, 0, 0.983389342294767)
(('unless', 'he', 'fancied'), 1, 0, 0.17687017067164812)
(('he', 'fancied', 'himself'), 1, 0, 0.17687017067164812)
(('fancied', 'himself', 'at'), 1, 0, 0.17687017067164812)
(('himself', 'at', 'any'), 1, 0, 0.17687017067164812)
(('any', 'time', 'unequal'), 1, 0, 0.17687017067164812)
(('time', 'unequal', 'to'), 1, 0, 0.17687017067164812)
(('unequal', 'to', 'company'), 1, 0, 0.17687017067164812)
(('to', 'company', ','), 1, 0, 0.17687017067164812)
(('company', ',', 'there'), 1, 0, 0.17687017067164812)
((',', 'there', 'was'), 23, 0, 14.608695652173914)
(('there', 'was', 'scarcely'), 1, 0, 0.17687017067164812)
(('was', 'scarcely', 'an'), 1, 0, 0.17687017067164812)
(('scarcely', 'an', 'evening'), 1, 0, 0.17687017067164812)
(('an', 'evening', 'in'), 1, 0, 0.17687017067164812)
(('the', 'week', 'in'), 1, 0, 0.17687017067164812)
(('week', 'in', 'which'), 1, 0, 0.17687017067164812)
(('in', 'which', 'Emma'), 1, 0, 0.17687017067164812)
(('which', 'Emma', 'could'), 4, 0, 2.9150197628458496)
(('could', 'not', 'make'), 3, 0, 1.7785588752196837)
(('not', 'make', 'up'), 1, 0, 0.17687017067164812)
(('make', 'up', 'a'), 1, 0, 0.17687017067164812)
(('up', 'a', 'card'), 1, 0, 0.17687017067164812)
(('a', 'card', '-'), 2, 0, 0.983389342294767)
(('card', '-', 'table'), 1, 0, 0.17687017067164812)
(('-', 'table', 'for'), 1, 0, 0.17687017067164812)
(('table', 'for', 'him'), 1, 0, 0.17687017067164812)
(('', '', 'Real'), 1, 0, 0.17687017067164812)
(('', 'Real', ','), 1, 0, 0.17687017067164812)
(('Real', ',', 'long'), 1, 0, 0.17687017067164812)
((',', 'long', '-'), 1, 0, 0.17687017067164812)
(('long', '-', 'standing'), 2, 0, 0.983389342294767)
(('-', 'standing', 'regard'), 1, 0, 0.17687017067164812)
(('standing', 'regard', 'brought'), 1, 0, 0.17687017067164812)
(('regard', 'brought', 'the'), 1, 0, 0.17687017067164812)
(('brought', 'the', 'Westons'), 1, 0, 0.17687017067164812)
(('the', 'Westons', 'and'), 2, 0, 0.983389342294767)
(('Westons', 'and', 'Mr'), 2, 0, 0.983389342294767)
(('.', 'Knightley', ';'), 7, 0, 6.295454545454546)
(('Knightley', ';', 'and'), 3, 0, 1.7785588752196837)
((';', 'and', 'by'), 11, 0, 8.671532846715328)
(('and', 'by', 'Mr'), 1, 0, 0.17687017067164812)
(('by', 'Mr', '.'), 22, 0, 16.03030303030303)
(('Elton', ',', 'a'), 1, 0, 0.17687017067164812)
((',', 'a', 'young'), 4, 0, 2.9150197628458496)
(('a', 'young', 'man'), 13, 0, 10.137931034482758)
(('young', 'man', 'living'), 1, 0, 0.17687017067164812)
(('man', 'living', 'alone'), 1, 0, 0.17687017067164812)
(('living', 'alone', 'without'), 1, 0, 0.17687017067164812)
(('alone', 'without', 'liking'), 1, 0, 0.17687017067164812)
(('without', 'liking', 'it'), 1, 0, 0.17687017067164812)
(('liking', 'it', ','), 1, 0, 0.17687017067164812)
(('it', ',', 'the'), 7, 0, 6.295454545454546)
((',', 'the', 'privilege'), 1, 0, 0.17687017067164812)
(('the', 'privilege', 'of'), 3, 0, 1.7785588752196837)
(('privilege', 'of', 'exchanging'), 1, 0, 0.17687017067164812)
(('of', 'exchanging', 'any'), 1, 0, 0.17687017067164812)
(('exchanging', 'any', 'vacant'), 1, 0, 0.17687017067164812)
(('any', 'vacant', 'evening'), 1, 0, 0.17687017067164812)
(('vacant', 'evening', 'of'), 1, 0, 0.17687017067164812)
(('evening', 'of', 'his'), 1, 0, 0.17687017067164812)
(('his', 'own', 'blank'), 1, 0, 0.17687017067164812)
(('own', 'blank', 'solitude'), 1, 0, 0.17687017067164812)
(('blank', 'solitude', 'for'), 1, 0, 0.17687017067164812)
(('solitude', 'for', 'the'), 1, 0, 0.17687017067164812)
(('for', 'the', 'elegancies'), 1, 0, 0.17687017067164812)
(('the', 'elegancies', 'and'), 1, 0, 0.17687017067164812)
(('elegancies', 'and', 'society'), 1, 0, 0.17687017067164812)
(('and', 'society', 'of'), 1, 0, 0.17687017067164812)
(('society', 'of', 'Mr'), 1, 0, 0.17687017067164812)
(("'", 's', 'drawing'), 3, 0, 1.7785588752196837)
(('s', 'drawing', '-'), 3, 0, 1.7785588752196837)
(('drawing', '-', 'room'), 15, 0, 14.666666666666666)
(('-', 'room', ','), 10, 0, 9.36024844720497)
(('room', ',', 'and'), 5, 0, 3.7220338983050847)
(('and', 'the', 'smiles'), 1, 0, 0.17687017067164812)
(('the', 'smiles', 'of'), 1, 0, 0.17687017067164812)
(('smiles', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'lovely'), 1, 0, 0.17687017067164812)
(('his', 'lovely', 'daughter'), 1, 0, 0.17687017067164812)
(('lovely', 'daughter', ','), 1, 0, 0.17687017067164812)
(('daughter', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'in'), 5, 0, 3.7220338983050847)
(('was', 'in', 'no'), 3, 0, 1.7785588752196837)
(('in', 'no', 'danger'), 2, 0, 0.983389342294767)
(('no', 'danger', 'of'), 3, 0, 1.7785588752196837)
(('danger', 'of', 'being'), 2, 0, 0.983389342294767)
(('of', 'being', 'thrown'), 1, 0, 0.17687017067164812)
(('being', 'thrown', 'away'), 1, 0, 0.17687017067164812)
(('thrown', 'away', '.'), 5, 0, 3.7220338983050847)
(('', '', 'After'), 18, 0, 11.585365853658537)
(('', 'After', 'these'), 1, 0, 0.17687017067164812)
(('After', 'these', 'came'), 1, 0, 0.17687017067164812)
(('these', 'came', 'a'), 1, 0, 0.17687017067164812)
(('came', 'a', 'second'), 1, 0, 0.17687017067164812)
(('a', 'second', 'set'), 1, 0, 0.17687017067164812)
(('second', 'set', ';'), 1, 0, 0.17687017067164812)
(('set', ';', 'among'), 1, 0, 0.17687017067164812)
((';', 'among', 'the'), 1, 0, 0.17687017067164812)
(('among', 'the', 'most'), 2, 0, 0.983389342294767)
(('the', 'most', 'come'), 1, 0, 0.17687017067164812)
(('most', 'come', '-'), 1, 0, 0.17687017067164812)
(('come', '-', 'at'), 1, 0, 0.17687017067164812)
(('-', 'at', '-'), 1, 0, 0.17687017067164812)
(('at', '-', 'able'), 1, 0, 0.17687017067164812)
(('-', 'able', 'of'), 1, 0, 0.17687017067164812)
(('able', 'of', 'whom'), 1, 0, 0.17687017067164812)
(('of', 'whom', 'were'), 1, 0, 0.17687017067164812)
(('whom', 'were', 'Mrs'), 1, 0, 0.17687017067164812)
(('were', 'Mrs', '.'), 1, 0, 0.17687017067164812)
(('Bates', ',', 'and'), 6, 0, 4.48816029143898)
((',', 'and', 'Mrs'), 10, 0, 9.36024844720497)
(('Mrs', '.', 'Goddard'), 58, 0, 59.0)
(('.', 'Goddard', ','), 8, 0, 7.927797833935018)
(('Goddard', ',', 'three'), 1, 0, 0.17687017067164812)
((',', 'three', 'ladies'), 1, 0, 0.17687017067164812)
(('three', 'ladies', 'almost'), 1, 0, 0.17687017067164812)
(('ladies', 'almost', 'always'), 1, 0, 0.17687017067164812)
(('almost', 'always', 'at'), 1, 0, 0.17687017067164812)
(('always', 'at', 'the'), 2, 0, 0.983389342294767)
(('at', 'the', 'service'), 1, 0, 0.17687017067164812)
(('the', 'service', 'of'), 1, 0, 0.17687017067164812)
(('service', 'of', 'an'), 1, 0, 0.17687017067164812)
(('of', 'an', 'invitation'), 1, 0, 0.17687017067164812)
(('an', 'invitation', 'from'), 1, 0, 0.17687017067164812)
(('invitation', 'from', 'Hartfield'), 1, 0, 0.17687017067164812)
(('who', 'were', 'fetched'), 1, 0, 0.17687017067164812)
(('were', 'fetched', 'and'), 1, 0, 0.17687017067164812)
(('fetched', 'and', 'carried'), 1, 0, 0.17687017067164812)
(('and', 'carried', 'home'), 1, 0, 0.17687017067164812)
(('carried', 'home', 'so'), 1, 0, 0.17687017067164812)
(('home', 'so', 'often'), 1, 0, 0.17687017067164812)
(('so', 'often', ','), 3, 0, 1.7785588752196837)
(('often', ',', 'that'), 1, 0, 0.17687017067164812)
((',', 'that', 'Mr'), 6, 0, 4.48816029143898)
(('.', 'Woodhouse', 'thought'), 1, 0, 0.17687017067164812)
(('Woodhouse', 'thought', 'it'), 1, 0, 0.17687017067164812)
(('thought', 'it', 'no'), 1, 0, 0.17687017067164812)
(('it', 'no', 'hardship'), 1, 0, 0.17687017067164812)
(('no', 'hardship', 'for'), 1, 0, 0.17687017067164812)
(('hardship', 'for', 'either'), 1, 0, 0.17687017067164812)
(('for', 'either', 'James'), 1, 0, 0.17687017067164812)
(('either', 'James', 'or'), 1, 0, 0.17687017067164812)
(('James', 'or', 'the'), 1, 0, 0.17687017067164812)
(('or', 'the', 'horses'), 1, 0, 0.17687017067164812)
(('the', 'horses', '.'), 3, 0, 1.7785588752196837)
(('horses', '.', ''), 4, 0, 2.9150197628458496)
(('', '', 'Had'), 12, 0, 11.424242424242424)
(('', 'Had', 'it'), 2, 0, 0.983389342294767)
(('Had', 'it', 'taken'), 1, 0, 0.17687017067164812)
(('it', 'taken', 'place'), 1, 0, 0.17687017067164812)
(('taken', 'place', 'only'), 1, 0, 0.17687017067164812)
(('place', 'only', 'once'), 1, 0, 0.17687017067164812)
(('only', 'once', 'a'), 1, 0, 0.17687017067164812)
(('once', 'a', 'year'), 1, 0, 0.17687017067164812)
(('a', 'year', ','), 1, 0, 0.17687017067164812)
(('year', ',', 'it'), 1, 0, 0.17687017067164812)
((',', 'it', 'would'), 21, 0, 29.040000000000003)
(('it', 'would', 'have'), 17, 0, 19.42105263157895)
(('been', 'a', 'grievance'), 1, 0, 0.17687017067164812)
(('a', 'grievance', '.'), 1, 0, 0.17687017067164812)
(('grievance', '.', ''), 1, 0, 0.17687017067164812)
(('Mrs', '.', 'Bates'), 30, 0, 31.0)
(('.', 'Bates', ','), 8, 0, 7.927797833935018)
(('Bates', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'widow'), 1, 0, 0.17687017067164812)
(('the', 'widow', 'of'), 1, 0, 0.17687017067164812)
(('widow', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'former'), 1, 0, 0.17687017067164812)
(('a', 'former', 'vicar'), 1, 0, 0.17687017067164812)
(('former', 'vicar', 'of'), 1, 0, 0.17687017067164812)
(('vicar', 'of', 'Highbury'), 2, 0, 0.983389342294767)
(('very', 'old', 'lady'), 1, 0, 0.17687017067164812)
(('old', 'lady', ','), 4, 0, 2.9150197628458496)
(('lady', ',', 'almost'), 1, 0, 0.17687017067164812)
((',', 'almost', 'past'), 1, 0, 0.17687017067164812)
(('almost', 'past', 'every'), 1, 0, 0.17687017067164812)
(('past', 'every', 'thing'), 1, 0, 0.17687017067164812)
(('every', 'thing', 'but'), 1, 0, 0.17687017067164812)
(('thing', 'but', 'tea'), 1, 0, 0.17687017067164812)
(('but', 'tea', 'and'), 1, 0, 0.17687017067164812)
(('tea', 'and', 'quadrille'), 1, 0, 0.17687017067164812)
(('and', 'quadrille', '.'), 1, 0, 0.17687017067164812)
(('quadrille', '.', ''), 1, 0, 0.17687017067164812)
(('', 'She', 'lived'), 1, 0, 0.17687017067164812)
(('She', 'lived', 'with'), 1, 0, 0.17687017067164812)
(('lived', 'with', 'her'), 1, 0, 0.17687017067164812)
(('with', 'her', 'single'), 1, 0, 0.17687017067164812)
(('her', 'single', 'daughter'), 1, 0, 0.17687017067164812)
(('single', 'daughter', 'in'), 1, 0, 0.17687017067164812)
(('daughter', 'in', 'a'), 1, 0, 0.17687017067164812)
(('a', 'very', 'small'), 2, 0, 0.983389342294767)
(('very', 'small', 'way'), 1, 0, 0.17687017067164812)
(('small', 'way', ','), 1, 0, 0.17687017067164812)
(('and', 'was', 'considered'), 1, 0, 0.17687017067164812)
(('was', 'considered', 'with'), 1, 0, 0.17687017067164812)
(('considered', 'with', 'all'), 1, 0, 0.17687017067164812)
(('with', 'all', 'the'), 22, 0, 16.03030303030303)
(('all', 'the', 'regard'), 1, 0, 0.17687017067164812)
(('the', 'regard', 'and'), 2, 0, 0.983389342294767)
(('regard', 'and', 'respect'), 1, 0, 0.17687017067164812)
(('and', 'respect', 'which'), 2, 0, 0.983389342294767)
(('respect', 'which', 'a'), 1, 0, 0.17687017067164812)
(('which', 'a', 'harmless'), 1, 0, 0.17687017067164812)
(('a', 'harmless', 'old'), 1, 0, 0.17687017067164812)
(('harmless', 'old', 'lady'), 1, 0, 0.17687017067164812)
(('lady', ',', 'under'), 1, 0, 0.17687017067164812)
((',', 'under', 'such'), 2, 0, 0.983389342294767)
(('under', 'such', 'untoward'), 1, 0, 0.17687017067164812)
(('such', 'untoward', 'circumstances'), 1, 0, 0.17687017067164812)
(('untoward', 'circumstances', ','), 1, 0, 0.17687017067164812)
(('circumstances', ',', 'can'), 1, 0, 0.17687017067164812)
((',', 'can', 'excite'), 1, 0, 0.17687017067164812)
(('can', 'excite', '.'), 1, 0, 0.17687017067164812)
(('excite', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Her', 'daughter'), 1, 0, 0.17687017067164812)
(('Her', 'daughter', 'enjoyed'), 1, 0, 0.17687017067164812)
(('daughter', 'enjoyed', 'a'), 1, 0, 0.17687017067164812)
(('enjoyed', 'a', 'most'), 1, 0, 0.17687017067164812)
(('a', 'most', 'uncommon'), 2, 0, 0.983389342294767)
(('most', 'uncommon', 'degree'), 1, 0, 0.17687017067164812)
(('uncommon', 'degree', 'of'), 1, 0, 0.17687017067164812)
(('degree', 'of', 'popularity'), 1, 0, 0.17687017067164812)
(('of', 'popularity', 'for'), 1, 0, 0.17687017067164812)
(('popularity', 'for', 'a'), 1, 0, 0.17687017067164812)
(('for', 'a', 'woman'), 3, 0, 1.7785588752196837)
(('a', 'woman', 'neither'), 1, 0, 0.17687017067164812)
(('woman', 'neither', 'young'), 1, 0, 0.17687017067164812)
(('neither', 'young', ','), 1, 0, 0.17687017067164812)
(('young', ',', 'handsome'), 1, 0, 0.17687017067164812)
(('handsome', ',', 'rich'), 1, 0, 0.17687017067164812)
((',', 'rich', ','), 1, 0, 0.17687017067164812)
(('rich', ',', 'nor'), 1, 0, 0.17687017067164812)
((',', 'nor', 'married'), 1, 0, 0.17687017067164812)
(('nor', 'married', '.'), 1, 0, 0.17687017067164812)
(('', 'Miss', 'Bates'), 14, 0, 11.428571428571427)
(('Miss', 'Bates', 'stood'), 1, 0, 0.17687017067164812)
(('Bates', 'stood', 'in'), 1, 0, 0.17687017067164812)
(('stood', 'in', 'the'), 1, 0, 0.17687017067164812)
(('the', 'very', 'worst'), 2, 0, 0.983389342294767)
(('very', 'worst', 'predicament'), 1, 0, 0.17687017067164812)
(('worst', 'predicament', 'in'), 1, 0, 0.17687017067164812)
(('predicament', 'in', 'the'), 1, 0, 0.17687017067164812)
(('the', 'world', 'for'), 2, 0, 0.983389342294767)
(('world', 'for', 'having'), 1, 0, 0.17687017067164812)
(('for', 'having', 'much'), 1, 0, 0.17687017067164812)
(('having', 'much', 'of'), 1, 0, 0.17687017067164812)
(('much', 'of', 'the'), 4, 0, 2.9150197628458496)
(('of', 'the', 'public'), 1, 0, 0.17687017067164812)
(('the', 'public', 'favour'), 1, 0, 0.17687017067164812)
(('public', 'favour', ';'), 1, 0, 0.17687017067164812)
(('favour', ';', 'and'), 3, 0, 1.7785588752196837)
(('she', 'had', 'no'), 9, 0, 6.5983606557377055)
(('had', 'no', 'intellectual'), 1, 0, 0.17687017067164812)
(('no', 'intellectual', 'superiority'), 1, 0, 0.17687017067164812)
(('intellectual', 'superiority', 'to'), 1, 0, 0.17687017067164812)
(('superiority', 'to', 'make'), 1, 0, 0.17687017067164812)
(('to', 'make', 'atonement'), 1, 0, 0.17687017067164812)
(('make', 'atonement', 'to'), 1, 0, 0.17687017067164812)
(('atonement', 'to', 'herself'), 1, 0, 0.17687017067164812)
(('to', 'herself', ','), 14, 0, 11.428571428571427)
(('herself', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'frighten'), 1, 0, 0.17687017067164812)
(('or', 'frighten', 'those'), 1, 0, 0.17687017067164812)
(('frighten', 'those', 'who'), 1, 0, 0.17687017067164812)
(('those', 'who', 'might'), 1, 0, 0.17687017067164812)
(('who', 'might', 'hate'), 1, 0, 0.17687017067164812)
(('might', 'hate', 'her'), 1, 0, 0.17687017067164812)
(('hate', 'her', 'into'), 1, 0, 0.17687017067164812)
(('her', 'into', 'outward'), 1, 0, 0.17687017067164812)
(('into', 'outward', 'respect'), 1, 0, 0.17687017067164812)
(('outward', 'respect', '.'), 1, 0, 0.17687017067164812)
(('respect', '.', ''), 2, 0, 0.983389342294767)
(('She', 'had', 'never'), 5, 0, 3.7220338983050847)
(('had', 'never', 'boasted'), 1, 0, 0.17687017067164812)
(('never', 'boasted', 'either'), 1, 0, 0.17687017067164812)
(('boasted', 'either', 'beauty'), 1, 0, 0.17687017067164812)
(('either', 'beauty', 'or'), 1, 0, 0.17687017067164812)
(('beauty', 'or', 'cleverness'), 1, 0, 0.17687017067164812)
(('or', 'cleverness', '.'), 1, 0, 0.17687017067164812)
(('cleverness', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Her', 'youth'), 1, 0, 0.17687017067164812)
(('Her', 'youth', 'had'), 1, 0, 0.17687017067164812)
(('youth', 'had', 'passed'), 1, 0, 0.17687017067164812)
(('had', 'passed', 'without'), 1, 0, 0.17687017067164812)
(('passed', 'without', 'distinction'), 1, 0, 0.17687017067164812)
(('without', 'distinction', ','), 1, 0, 0.17687017067164812)
(('distinction', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'her'), 26, 0, 24.157894736842106)
(('and', 'her', 'middle'), 1, 0, 0.17687017067164812)
(('her', 'middle', 'of'), 1, 0, 0.17687017067164812)
(('middle', 'of', 'life'), 1, 0, 0.17687017067164812)
(('of', 'life', 'was'), 1, 0, 0.17687017067164812)
(('life', 'was', 'devoted'), 1, 0, 0.17687017067164812)
(('was', 'devoted', 'to'), 1, 0, 0.17687017067164812)
(('devoted', 'to', 'the'), 1, 0, 0.17687017067164812)
(('the', 'care', 'of'), 3, 0, 1.7785588752196837)
(('care', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'failing'), 1, 0, 0.17687017067164812)
(('a', 'failing', 'mother'), 1, 0, 0.17687017067164812)
(('failing', 'mother', ','), 1, 0, 0.17687017067164812)
(('mother', ',', 'and'), 5, 0, 3.7220338983050847)
(('and', 'the', 'endeavour'), 1, 0, 0.17687017067164812)
(('the', 'endeavour', 'to'), 1, 0, 0.17687017067164812)
(('endeavour', 'to', 'make'), 1, 0, 0.17687017067164812)
(('to', 'make', 'a'), 5, 0, 3.7220338983050847)
(('make', 'a', 'small'), 1, 0, 0.17687017067164812)
(('a', 'small', 'income'), 1, 0, 0.17687017067164812)
(('small', 'income', 'go'), 1, 0, 0.17687017067164812)
(('income', 'go', 'as'), 1, 0, 0.17687017067164812)
(('go', 'as', 'far'), 1, 0, 0.17687017067164812)
(('as', 'far', 'as'), 16, 0, 14.681818181818182)
(('far', 'as', 'possible'), 1, 0, 0.17687017067164812)
(('as', 'possible', '.'), 13, 0, 10.137931034482758)
(('possible', '.', ''), 20, 0, 21.0)
(('', 'And', 'yet'), 2, 0, 0.983389342294767)
(('And', 'yet', 'she'), 1, 0, 0.17687017067164812)
(('yet', 'she', 'was'), 1, 0, 0.17687017067164812)
(('she', 'was', 'a'), 3, 0, 1.7785588752196837)
(('a', 'happy', 'woman'), 1, 0, 0.17687017067164812)
(('happy', 'woman', ','), 1, 0, 0.17687017067164812)
(('and', 'a', 'woman'), 1, 0, 0.17687017067164812)
(('a', 'woman', 'whom'), 1, 0, 0.17687017067164812)
(('woman', 'whom', 'no'), 1, 0, 0.17687017067164812)
(('whom', 'no', 'one'), 1, 0, 0.17687017067164812)
(('no', 'one', 'named'), 1, 0, 0.17687017067164812)
(('one', 'named', 'without'), 1, 0, 0.17687017067164812)
(('named', 'without', 'good'), 1, 0, 0.17687017067164812)
(('without', 'good', '-'), 1, 0, 0.17687017067164812)
(('good', '-', 'will'), 13, 0, 10.137931034482758)
(('-', 'will', '.'), 3, 0, 1.7785588752196837)
(('will', '.', ''), 10, 0, 9.36024844720497)
(('It', 'was', 'her'), 4, 0, 2.9150197628458496)
(('was', 'her', 'own'), 2, 0, 0.983389342294767)
(('her', 'own', 'universal'), 1, 0, 0.17687017067164812)
(('own', 'universal', 'good'), 1, 0, 0.17687017067164812)
(('universal', 'good', '-'), 1, 0, 0.17687017067164812)
(('-', 'will', 'and'), 1, 0, 0.17687017067164812)
(('will', 'and', 'contented'), 1, 0, 0.17687017067164812)
(('and', 'contented', 'temper'), 1, 0, 0.17687017067164812)
(('contented', 'temper', 'which'), 1, 0, 0.17687017067164812)
(('temper', 'which', 'worked'), 1, 0, 0.17687017067164812)
(('which', 'worked', 'such'), 1, 0, 0.17687017067164812)
(('worked', 'such', 'wonders'), 1, 0, 0.17687017067164812)
(('such', 'wonders', '.'), 1, 0, 0.17687017067164812)
(('wonders', '.', ''), 1, 0, 0.17687017067164812)
(('', 'She', 'loved'), 1, 0, 0.17687017067164812)
(('She', 'loved', 'every'), 1, 0, 0.17687017067164812)
(('loved', 'every', 'body'), 1, 0, 0.17687017067164812)
(('every', 'body', ','), 11, 0, 8.671532846715328)
(('body', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'interested'), 1, 0, 0.17687017067164812)
(('was', 'interested', 'in'), 1, 0, 0.17687017067164812)
(('interested', 'in', 'every'), 1, 0, 0.17687017067164812)
(('in', 'every', 'body'), 4, 0, 2.9150197628458496)
(('every', 'body', "'"), 19, 0, 20.0)
(("'", 's', 'happiness'), 5, 0, 3.7220338983050847)
(('s', 'happiness', ','), 2, 0, 0.983389342294767)
(('happiness', ',', 'quicksighted'), 1, 0, 0.17687017067164812)
((',', 'quicksighted', 'to'), 1, 0, 0.17687017067164812)
(('quicksighted', 'to', 'every'), 1, 0, 0.17687017067164812)
(('to', 'every', 'body'), 8, 0, 7.927797833935018)
(("'", 's', 'merits'), 2, 0, 0.983389342294767)
(('s', 'merits', ';'), 1, 0, 0.17687017067164812)
(('merits', ';', 'thought'), 1, 0, 0.17687017067164812)
((';', 'thought', 'herself'), 1, 0, 0.17687017067164812)
(('thought', 'herself', 'a'), 2, 0, 0.983389342294767)
(('most', 'fortunate', 'creature'), 1, 0, 0.17687017067164812)
(('fortunate', 'creature', ','), 1, 0, 0.17687017067164812)
(('creature', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'surrounded'), 1, 0, 0.17687017067164812)
(('and', 'surrounded', 'with'), 1, 0, 0.17687017067164812)
(('surrounded', 'with', 'blessings'), 1, 0, 0.17687017067164812)
(('with', 'blessings', 'in'), 1, 0, 0.17687017067164812)
(('blessings', 'in', 'such'), 1, 0, 0.17687017067164812)
(('in', 'such', 'an'), 2, 0, 0.983389342294767)
(('such', 'an', 'excellent'), 1, 0, 0.17687017067164812)
(('an', 'excellent', 'mother'), 1, 0, 0.17687017067164812)
(('excellent', 'mother', ','), 1, 0, 0.17687017067164812)
((',', 'and', 'so'), 18, 0, 11.585365853658537)
(('and', 'so', 'many'), 1, 0, 0.17687017067164812)
(('so', 'many', 'good'), 2, 0, 0.983389342294767)
(('many', 'good', 'neighbours'), 1, 0, 0.17687017067164812)
(('good', 'neighbours', 'and'), 1, 0, 0.17687017067164812)
(('neighbours', 'and', 'friends'), 1, 0, 0.17687017067164812)
(('and', 'friends', ','), 1, 0, 0.17687017067164812)
(('friends', ',', 'and'), 5, 0, 3.7220338983050847)
(('and', 'a', 'home'), 1, 0, 0.17687017067164812)
(('a', 'home', 'that'), 1, 0, 0.17687017067164812)
(('home', 'that', 'wanted'), 1, 0, 0.17687017067164812)
(('that', 'wanted', 'for'), 1, 0, 0.17687017067164812)
(('wanted', 'for', 'nothing'), 1, 0, 0.17687017067164812)
(('for', 'nothing', '.'), 4, 0, 2.9150197628458496)
(('nothing', '.', ''), 18, 0, 11.585365853658537)
(('', 'The', 'simplicity'), 1, 0, 0.17687017067164812)
(('The', 'simplicity', 'and'), 1, 0, 0.17687017067164812)
(('simplicity', 'and', 'cheerfulness'), 1, 0, 0.17687017067164812)
(('and', 'cheerfulness', 'of'), 2, 0, 0.983389342294767)
(('cheerfulness', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'nature'), 1, 0, 0.17687017067164812)
(('her', 'nature', ','), 1, 0, 0.17687017067164812)
(('nature', ',', 'her'), 1, 0, 0.17687017067164812)
((',', 'her', 'contented'), 1, 0, 0.17687017067164812)
(('her', 'contented', 'and'), 1, 0, 0.17687017067164812)
(('contented', 'and', 'grateful'), 1, 0, 0.17687017067164812)
(('and', 'grateful', 'spirit'), 1, 0, 0.17687017067164812)
(('grateful', 'spirit', ','), 1, 0, 0.17687017067164812)
(('spirit', ',', 'were'), 1, 0, 0.17687017067164812)
((',', 'were', 'a'), 2, 0, 0.983389342294767)
(('were', 'a', 'recommendation'), 1, 0, 0.17687017067164812)
(('a', 'recommendation', 'to'), 3, 0, 1.7785588752196837)
(('recommendation', 'to', 'every'), 1, 0, 0.17687017067164812)
(('body', ',', 'and'), 4, 0, 2.9150197628458496)
(('and', 'a', 'mine'), 1, 0, 0.17687017067164812)
(('a', 'mine', 'of'), 1, 0, 0.17687017067164812)
(('mine', 'of', 'felicity'), 1, 0, 0.17687017067164812)
(('of', 'felicity', 'to'), 1, 0, 0.17687017067164812)
(('felicity', 'to', 'herself'), 1, 0, 0.17687017067164812)
(('to', 'herself', '.'), 6, 0, 4.48816029143898)
(('herself', '.', ''), 40, 0, 32.800000000000004)
(('She', 'was', 'a'), 5, 0, 3.7220338983050847)
(('was', 'a', 'great'), 8, 0, 7.927797833935018)
(('a', 'great', 'talker'), 1, 0, 0.17687017067164812)
(('great', 'talker', 'upon'), 1, 0, 0.17687017067164812)
(('talker', 'upon', 'little'), 1, 0, 0.17687017067164812)
(('upon', 'little', 'matters'), 1, 0, 0.17687017067164812)
(('matters', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'exactly'), 2, 0, 0.983389342294767)
(('which', 'exactly', 'suited'), 2, 0, 0.983389342294767)
(('exactly', 'suited', 'Mr'), 1, 0, 0.17687017067164812)
(('suited', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('Woodhouse', ',', 'full'), 1, 0, 0.17687017067164812)
((',', 'full', 'of'), 3, 0, 1.7785588752196837)
(('full', 'of', 'trivial'), 1, 0, 0.17687017067164812)
(('of', 'trivial', 'communications'), 1, 0, 0.17687017067164812)
(('trivial', 'communications', 'and'), 1, 0, 0.17687017067164812)
(('communications', 'and', 'harmless'), 1, 0, 0.17687017067164812)
(('and', 'harmless', 'gossip'), 1, 0, 0.17687017067164812)
(('harmless', 'gossip', '.'), 1, 0, 0.17687017067164812)
(('gossip', '.', ''), 1, 0, 0.17687017067164812)
(('.', 'Goddard', 'was'), 2, 0, 0.983389342294767)
(('Goddard', 'was', 'the'), 1, 0, 0.17687017067164812)
(('was', 'the', 'mistress'), 1, 0, 0.17687017067164812)
(('the', 'mistress', 'of'), 1, 0, 0.17687017067164812)
(('mistress', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'School'), 1, 0, 0.17687017067164812)
(('a', 'School', '--'), 1, 0, 0.17687017067164812)
(('School', '--', 'not'), 1, 0, 0.17687017067164812)
(('--', 'not', 'of'), 1, 0, 0.17687017067164812)
(('not', 'of', 'a'), 2, 0, 0.983389342294767)
(('of', 'a', 'seminary'), 1, 0, 0.17687017067164812)
(('a', 'seminary', ','), 1, 0, 0.17687017067164812)
(('seminary', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'an'), 3, 0, 1.7785588752196837)
(('or', 'an', 'establishment'), 1, 0, 0.17687017067164812)
(('an', 'establishment', ','), 1, 0, 0.17687017067164812)
(('establishment', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'any'), 13, 0, 10.137931034482758)
(('or', 'any', 'thing'), 6, 0, 4.48816029143898)
(('any', 'thing', 'which'), 2, 0, 0.983389342294767)
(('thing', 'which', 'professed'), 1, 0, 0.17687017067164812)
(('which', 'professed', ','), 1, 0, 0.17687017067164812)
(('professed', ',', 'in'), 1, 0, 0.17687017067164812)
((',', 'in', 'long'), 1, 0, 0.17687017067164812)
(('in', 'long', 'sentences'), 1, 0, 0.17687017067164812)
(('long', 'sentences', 'of'), 1, 0, 0.17687017067164812)
(('sentences', 'of', 'refined'), 1, 0, 0.17687017067164812)
(('of', 'refined', 'nonsense'), 1, 0, 0.17687017067164812)
(('refined', 'nonsense', ','), 1, 0, 0.17687017067164812)
(('nonsense', ',', 'to'), 1, 0, 0.17687017067164812)
((',', 'to', 'combine'), 1, 0, 0.17687017067164812)
(('to', 'combine', 'liberal'), 1, 0, 0.17687017067164812)
(('combine', 'liberal', 'acquirements'), 1, 0, 0.17687017067164812)
(('liberal', 'acquirements', 'with'), 1, 0, 0.17687017067164812)
(('acquirements', 'with', 'elegant'), 1, 0, 0.17687017067164812)
(('with', 'elegant', 'morality'), 1, 0, 0.17687017067164812)
(('elegant', 'morality', ','), 1, 0, 0.17687017067164812)
(('morality', ',', 'upon'), 1, 0, 0.17687017067164812)
((',', 'upon', 'new'), 1, 0, 0.17687017067164812)
(('upon', 'new', 'principles'), 1, 0, 0.17687017067164812)
(('new', 'principles', 'and'), 1, 0, 0.17687017067164812)
(('principles', 'and', 'new'), 1, 0, 0.17687017067164812)
(('and', 'new', 'systems'), 1, 0, 0.17687017067164812)
(('new', 'systems', '--'), 1, 0, 0.17687017067164812)
(('systems', '--', 'and'), 1, 0, 0.17687017067164812)
(('--', 'and', 'where'), 1, 0, 0.17687017067164812)
(('and', 'where', 'young'), 1, 0, 0.17687017067164812)
(('where', 'young', 'ladies'), 1, 0, 0.17687017067164812)
(('young', 'ladies', 'for'), 1, 0, 0.17687017067164812)
(('ladies', 'for', 'enormous'), 1, 0, 0.17687017067164812)
(('for', 'enormous', 'pay'), 1, 0, 0.17687017067164812)
(('enormous', 'pay', 'might'), 1, 0, 0.17687017067164812)
(('pay', 'might', 'be'), 1, 0, 0.17687017067164812)
(('might', 'be', 'screwed'), 1, 0, 0.17687017067164812)
(('be', 'screwed', 'out'), 1, 0, 0.17687017067164812)
(('screwed', 'out', 'of'), 1, 0, 0.17687017067164812)
(('out', 'of', 'health'), 2, 0, 0.983389342294767)
(('of', 'health', 'and'), 1, 0, 0.17687017067164812)
(('health', 'and', 'into'), 1, 0, 0.17687017067164812)
(('and', 'into', 'vanity'), 1, 0, 0.17687017067164812)
(('into', 'vanity', '--'), 1, 0, 0.17687017067164812)
(('vanity', '--', 'but'), 1, 0, 0.17687017067164812)
(('--', 'but', 'a'), 2, 0, 0.983389342294767)
(('but', 'a', 'real'), 1, 0, 0.17687017067164812)
(('a', 'real', ','), 1, 0, 0.17687017067164812)
(('real', ',', 'honest'), 1, 0, 0.17687017067164812)
((',', 'honest', ','), 2, 0, 0.983389342294767)
(('honest', ',', 'old'), 1, 0, 0.17687017067164812)
((',', 'old', '-'), 2, 0, 0.983389342294767)
(('old', '-', 'fashioned'), 2, 0, 0.983389342294767)
(('-', 'fashioned', 'Boarding'), 1, 0, 0.17687017067164812)
(('fashioned', 'Boarding', '-'), 1, 0, 0.17687017067164812)
(('Boarding', '-', 'school'), 1, 0, 0.17687017067164812)
(('-', 'school', ','), 1, 0, 0.17687017067164812)
(('school', ',', 'where'), 1, 0, 0.17687017067164812)
((',', 'where', 'a'), 2, 0, 0.983389342294767)
(('where', 'a', 'reasonable'), 1, 0, 0.17687017067164812)
(('a', 'reasonable', 'quantity'), 1, 0, 0.17687017067164812)
(('reasonable', 'quantity', 'of'), 1, 0, 0.17687017067164812)
(('quantity', 'of', 'accomplishments'), 1, 0, 0.17687017067164812)
(('of', 'accomplishments', 'were'), 1, 0, 0.17687017067164812)
(('accomplishments', 'were', 'sold'), 1, 0, 0.17687017067164812)
(('were', 'sold', 'at'), 1, 0, 0.17687017067164812)
(('sold', 'at', 'a'), 1, 0, 0.17687017067164812)
(('at', 'a', 'reasonable'), 1, 0, 0.17687017067164812)
(('a', 'reasonable', 'price'), 1, 0, 0.17687017067164812)
(('reasonable', 'price', ','), 1, 0, 0.17687017067164812)
(('price', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'where'), 2, 0, 0.983389342294767)
(('and', 'where', 'girls'), 1, 0, 0.17687017067164812)
(('where', 'girls', 'might'), 1, 0, 0.17687017067164812)
(('girls', 'might', 'be'), 1, 0, 0.17687017067164812)
(('might', 'be', 'sent'), 1, 0, 0.17687017067164812)
(('be', 'sent', 'to'), 2, 0, 0.983389342294767)
(('sent', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'out'), 4, 0, 2.9150197628458496)
(('be', 'out', 'of'), 5, 0, 3.7220338983050847)
(('out', 'of', 'the'), 19, 0, 20.0)
(('of', 'the', 'way'), 2, 0, 0.983389342294767)
(('the', 'way', ','), 3, 0, 1.7785588752196837)
((',', 'and', 'scramble'), 2, 0, 0.983389342294767)
(('and', 'scramble', 'themselves'), 1, 0, 0.17687017067164812)
(('scramble', 'themselves', 'into'), 1, 0, 0.17687017067164812)
(('themselves', 'into', 'a'), 1, 0, 0.17687017067164812)
(('into', 'a', 'little'), 1, 0, 0.17687017067164812)
(('a', 'little', 'education'), 1, 0, 0.17687017067164812)
(('little', 'education', ','), 1, 0, 0.17687017067164812)
(('education', ',', 'without'), 1, 0, 0.17687017067164812)
((',', 'without', 'any'), 8, 0, 7.927797833935018)
(('without', 'any', 'danger'), 3, 0, 1.7785588752196837)
(('any', 'danger', 'of'), 4, 0, 2.9150197628458496)
(('danger', 'of', 'coming'), 1, 0, 0.17687017067164812)
(('of', 'coming', 'back'), 1, 0, 0.17687017067164812)
(('coming', 'back', 'prodigies'), 1, 0, 0.17687017067164812)
(('back', 'prodigies', '.'), 1, 0, 0.17687017067164812)
(('prodigies', '.', ''), 1, 0, 0.17687017067164812)
(('.', 'Goddard', "'"), 33, 0, 22.666666666666664)
(('Goddard', "'", 's'), 34, 0, 40.833333333333336)
(("'", 's', 'school'), 2, 0, 0.983389342294767)
(('s', 'school', 'was'), 1, 0, 0.17687017067164812)
(('school', 'was', 'in'), 1, 0, 0.17687017067164812)
(('was', 'in', 'high'), 2, 0, 0.983389342294767)
(('in', 'high', 'repute'), 1, 0, 0.17687017067164812)
(('high', 'repute', '--'), 1, 0, 0.17687017067164812)
(('repute', '--', 'and'), 1, 0, 0.17687017067164812)
(('--', 'and', 'very'), 4, 0, 2.9150197628458496)
(('and', 'very', 'deservedly'), 1, 0, 0.17687017067164812)
(('very', 'deservedly', ';'), 1, 0, 0.17687017067164812)
(('deservedly', ';', 'for'), 1, 0, 0.17687017067164812)
((';', 'for', 'Highbury'), 1, 0, 0.17687017067164812)
(('for', 'Highbury', 'was'), 1, 0, 0.17687017067164812)
(('Highbury', 'was', 'reckoned'), 1, 0, 0.17687017067164812)
(('was', 'reckoned', 'a'), 2, 0, 0.983389342294767)
(('reckoned', 'a', 'particularly'), 1, 0, 0.17687017067164812)
(('a', 'particularly', 'healthy'), 1, 0, 0.17687017067164812)
(('particularly', 'healthy', 'spot'), 1, 0, 0.17687017067164812)
(('healthy', 'spot', ':'), 1, 0, 0.17687017067164812)
(('spot', ':', 'she'), 1, 0, 0.17687017067164812)
((':', 'she', 'had'), 1, 0, 0.17687017067164812)
(('she', 'had', 'an'), 2, 0, 0.983389342294767)
(('had', 'an', 'ample'), 1, 0, 0.17687017067164812)
(('an', 'ample', 'house'), 1, 0, 0.17687017067164812)
(('ample', 'house', 'and'), 1, 0, 0.17687017067164812)
(('house', 'and', 'garden'), 1, 0, 0.17687017067164812)
(('and', 'garden', ','), 1, 0, 0.17687017067164812)
(('garden', ',', 'gave'), 1, 0, 0.17687017067164812)
((',', 'gave', 'the'), 2, 0, 0.983389342294767)
(('gave', 'the', 'children'), 1, 0, 0.17687017067164812)
(('the', 'children', 'plenty'), 1, 0, 0.17687017067164812)
(('children', 'plenty', 'of'), 1, 0, 0.17687017067164812)
(('plenty', 'of', 'wholesome'), 1, 0, 0.17687017067164812)
(('of', 'wholesome', 'food'), 1, 0, 0.17687017067164812)
(('wholesome', 'food', ','), 1, 0, 0.17687017067164812)
(('food', ',', 'let'), 1, 0, 0.17687017067164812)
((',', 'let', 'them'), 2, 0, 0.983389342294767)
(('let', 'them', 'run'), 1, 0, 0.17687017067164812)
(('them', 'run', 'about'), 1, 0, 0.17687017067164812)
(('run', 'about', 'a'), 1, 0, 0.17687017067164812)
(('about', 'a', 'great'), 1, 0, 0.17687017067164812)
(('great', 'deal', 'in'), 1, 0, 0.17687017067164812)
(('deal', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'summer'), 2, 0, 0.983389342294767)
(('the', 'summer', ','), 2, 0, 0.983389342294767)
(('summer', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'in', 'winter'), 2, 0, 0.983389342294767)
(('in', 'winter', 'dressed'), 1, 0, 0.17687017067164812)
(('winter', 'dressed', 'their'), 1, 0, 0.17687017067164812)
(('dressed', 'their', 'chilblains'), 1, 0, 0.17687017067164812)
(('their', 'chilblains', 'with'), 1, 0, 0.17687017067164812)
(('chilblains', 'with', 'her'), 1, 0, 0.17687017067164812)
(('with', 'her', 'own'), 6, 0, 4.48816029143898)
(('her', 'own', 'hands'), 1, 0, 0.17687017067164812)
(('own', 'hands', '.'), 1, 0, 0.17687017067164812)
(('hands', '.', ''), 2, 0, 0.983389342294767)
(('It', 'was', 'no'), 4, 0, 2.9150197628458496)
(('was', 'no', 'wonder'), 2, 0, 0.983389342294767)
(('no', 'wonder', 'that'), 3, 0, 1.7785588752196837)
(('wonder', 'that', 'a'), 1, 0, 0.17687017067164812)
(('that', 'a', 'train'), 1, 0, 0.17687017067164812)
(('a', 'train', 'of'), 2, 0, 0.983389342294767)
(('train', 'of', 'twenty'), 1, 0, 0.17687017067164812)
(('of', 'twenty', 'young'), 1, 0, 0.17687017067164812)
(('twenty', 'young', 'couple'), 1, 0, 0.17687017067164812)
(('young', 'couple', 'now'), 1, 0, 0.17687017067164812)
(('couple', 'now', 'walked'), 1, 0, 0.17687017067164812)
(('now', 'walked', 'after'), 1, 0, 0.17687017067164812)
(('walked', 'after', 'her'), 1, 0, 0.17687017067164812)
(('after', 'her', 'to'), 1, 0, 0.17687017067164812)
(('her', 'to', 'church'), 1, 0, 0.17687017067164812)
(('to', 'church', '.'), 2, 0, 0.983389342294767)
(('church', '.', ''), 2, 0, 0.983389342294767)
(('was', 'a', 'plain'), 1, 0, 0.17687017067164812)
(('a', 'plain', ','), 2, 0, 0.983389342294767)
(('plain', ',', 'motherly'), 1, 0, 0.17687017067164812)
((',', 'motherly', 'kind'), 1, 0, 0.17687017067164812)
(('motherly', 'kind', 'of'), 1, 0, 0.17687017067164812)
(('kind', 'of', 'woman'), 1, 0, 0.17687017067164812)
(('of', 'woman', ','), 1, 0, 0.17687017067164812)
(('woman', ',', 'who'), 2, 0, 0.983389342294767)
(('who', 'had', 'worked'), 1, 0, 0.17687017067164812)
(('had', 'worked', 'hard'), 1, 0, 0.17687017067164812)
(('worked', 'hard', 'in'), 1, 0, 0.17687017067164812)
(('hard', 'in', 'her'), 1, 0, 0.17687017067164812)
(('in', 'her', 'youth'), 1, 0, 0.17687017067164812)
(('her', 'youth', ','), 1, 0, 0.17687017067164812)
(('youth', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'now', 'thought'), 1, 0, 0.17687017067164812)
(('now', 'thought', 'herself'), 1, 0, 0.17687017067164812)
(('thought', 'herself', 'entitled'), 1, 0, 0.17687017067164812)
(('herself', 'entitled', 'to'), 1, 0, 0.17687017067164812)
(('entitled', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'occasional'), 1, 0, 0.17687017067164812)
(('the', 'occasional', 'holiday'), 1, 0, 0.17687017067164812)
(('occasional', 'holiday', 'of'), 1, 0, 0.17687017067164812)
(('holiday', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'tea'), 1, 0, 0.17687017067164812)
(('a', 'tea', '-'), 1, 0, 0.17687017067164812)
(('tea', '-', 'visit'), 1, 0, 0.17687017067164812)
(('-', 'visit', ';'), 1, 0, 0.17687017067164812)
(('visit', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'having'), 9, 0, 6.5983606557377055)
(('and', 'having', 'formerly'), 1, 0, 0.17687017067164812)
(('having', 'formerly', 'owed'), 1, 0, 0.17687017067164812)
(('formerly', 'owed', 'much'), 1, 0, 0.17687017067164812)
(('owed', 'much', 'to'), 1, 0, 0.17687017067164812)
(('much', 'to', 'Mr'), 2, 0, 0.983389342294767)
(("'", 's', 'kindness'), 1, 0, 0.17687017067164812)
(('s', 'kindness', ','), 1, 0, 0.17687017067164812)
(('kindness', ',', 'felt'), 1, 0, 0.17687017067164812)
((',', 'felt', 'his'), 1, 0, 0.17687017067164812)
(('felt', 'his', 'particular'), 1, 0, 0.17687017067164812)
(('his', 'particular', 'claim'), 1, 0, 0.17687017067164812)
(('particular', 'claim', 'on'), 1, 0, 0.17687017067164812)
(('claim', 'on', 'her'), 1, 0, 0.17687017067164812)
(('on', 'her', 'to'), 3, 0, 1.7785588752196837)
(('her', 'to', 'leave'), 2, 0, 0.983389342294767)
(('to', 'leave', 'her'), 2, 0, 0.983389342294767)
(('leave', 'her', 'neat'), 1, 0, 0.17687017067164812)
(('her', 'neat', 'parlour'), 1, 0, 0.17687017067164812)
(('neat', 'parlour', ','), 1, 0, 0.17687017067164812)
(('parlour', ',', 'hung'), 1, 0, 0.17687017067164812)
((',', 'hung', 'round'), 1, 0, 0.17687017067164812)
(('hung', 'round', 'with'), 1, 0, 0.17687017067164812)
(('round', 'with', 'fancy'), 1, 0, 0.17687017067164812)
(('with', 'fancy', '-'), 1, 0, 0.17687017067164812)
(('fancy', '-', 'work'), 1, 0, 0.17687017067164812)
(('-', 'work', ','), 1, 0, 0.17687017067164812)
(('work', ',', 'whenever'), 1, 0, 0.17687017067164812)
((',', 'whenever', 'she'), 1, 0, 0.17687017067164812)
(('whenever', 'she', 'could'), 1, 0, 0.17687017067164812)
(('could', ',', 'and'), 4, 0, 2.9150197628458496)
((',', 'and', 'win'), 1, 0, 0.17687017067164812)
(('and', 'win', 'or'), 1, 0, 0.17687017067164812)
(('win', 'or', 'lose'), 1, 0, 0.17687017067164812)
(('or', 'lose', 'a'), 1, 0, 0.17687017067164812)
(('lose', 'a', 'few'), 1, 0, 0.17687017067164812)
(('a', 'few', 'sixpences'), 1, 0, 0.17687017067164812)
(('few', 'sixpences', 'by'), 1, 0, 0.17687017067164812)
(('sixpences', 'by', 'his'), 1, 0, 0.17687017067164812)
(('by', 'his', 'fireside'), 1, 0, 0.17687017067164812)
(('his', 'fireside', '.'), 1, 0, 0.17687017067164812)
(('fireside', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'These'), 12, 0, 11.424242424242424)
(('', 'These', 'were'), 6, 0, 4.48816029143898)
(('These', 'were', 'the'), 1, 0, 0.17687017067164812)
(('were', 'the', 'ladies'), 1, 0, 0.17687017067164812)
(('the', 'ladies', 'whom'), 1, 0, 0.17687017067164812)
(('ladies', 'whom', 'Emma'), 1, 0, 0.17687017067164812)
(('whom', 'Emma', 'found'), 1, 0, 0.17687017067164812)
(('Emma', 'found', 'herself'), 2, 0, 0.983389342294767)
(('found', 'herself', 'very'), 1, 0, 0.17687017067164812)
(('herself', 'very', 'frequently'), 1, 0, 0.17687017067164812)
(('very', 'frequently', 'able'), 1, 0, 0.17687017067164812)
(('frequently', 'able', 'to'), 1, 0, 0.17687017067164812)
(('able', 'to', 'collect'), 1, 0, 0.17687017067164812)
(('to', 'collect', ';'), 1, 0, 0.17687017067164812)
(('collect', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'happy'), 1, 0, 0.17687017067164812)
(('and', 'happy', 'was'), 1, 0, 0.17687017067164812)
(('happy', 'was', 'she'), 1, 0, 0.17687017067164812)
(('was', 'she', ','), 1, 0, 0.17687017067164812)
(('she', ',', 'for'), 1, 0, 0.17687017067164812)
(('her', 'father', "'"), 15, 0, 14.666666666666666)
(("'", 's', 'sake'), 6, 0, 4.48816029143898)
(('s', 'sake', ','), 3, 0, 1.7785588752196837)
(('sake', ',', 'in'), 2, 0, 0.983389342294767)
((',', 'in', 'the'), 39, 0, 18.18181818181818)
(('in', 'the', 'power'), 1, 0, 0.17687017067164812)
(('the', 'power', ';'), 1, 0, 0.17687017067164812)
(('power', ';', 'though'), 1, 0, 0.17687017067164812)
((';', 'though', ','), 2, 0, 0.983389342294767)
(('though', ',', 'as'), 2, 0, 0.983389342294767)
((',', 'as', 'far'), 9, 0, 6.5983606557377055)
(('far', 'as', 'she'), 3, 0, 1.7785588752196837)
(('as', 'she', 'was'), 10, 0, 9.36024844720497)
(('she', 'was', 'herself'), 3, 0, 1.7785588752196837)
(('was', 'herself', 'concerned'), 1, 0, 0.17687017067164812)
(('herself', 'concerned', ','), 1, 0, 0.17687017067164812)
(('concerned', ',', 'it'), 1, 0, 0.17687017067164812)
(('it', 'was', 'no'), 3, 0, 1.7785588752196837)
(('was', 'no', 'remedy'), 1, 0, 0.17687017067164812)
(('no', 'remedy', 'for'), 1, 0, 0.17687017067164812)
(('remedy', 'for', 'the'), 1, 0, 0.17687017067164812)
(('for', 'the', 'absence'), 1, 0, 0.17687017067164812)
(('the', 'absence', 'of'), 1, 0, 0.17687017067164812)
(('absence', 'of', 'Mrs'), 1, 0, 0.17687017067164812)
(('.', 'Weston', '.'), 26, 0, 24.157894736842106)
(('Weston', '.', ''), 27, 0, 14.823529411764707)
(('She', 'was', 'delighted'), 2, 0, 0.983389342294767)
(('was', 'delighted', 'to'), 2, 0, 0.983389342294767)
(('delighted', 'to', 'see'), 3, 0, 1.7785588752196837)
(('to', 'see', 'her'), 12, 0, 11.424242424242424)
(('see', 'her', 'father'), 1, 0, 0.17687017067164812)
(('her', 'father', 'look'), 1, 0, 0.17687017067164812)
(('father', 'look', 'comfortable'), 1, 0, 0.17687017067164812)
(('look', 'comfortable', ','), 1, 0, 0.17687017067164812)
(('comfortable', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'very'), 20, 0, 21.0)
(('and', 'very', 'much'), 4, 0, 2.9150197628458496)
(('very', 'much', 'pleased'), 7, 0, 6.295454545454546)
(('much', 'pleased', 'with'), 6, 0, 4.48816029143898)
(('pleased', 'with', 'herself'), 1, 0, 0.17687017067164812)
(('with', 'herself', 'for'), 1, 0, 0.17687017067164812)
(('herself', 'for', 'contriving'), 1, 0, 0.17687017067164812)
(('for', 'contriving', 'things'), 1, 0, 0.17687017067164812)
(('contriving', 'things', 'so'), 1, 0, 0.17687017067164812)
(('things', 'so', 'well'), 1, 0, 0.17687017067164812)
(('so', 'well', ';'), 2, 0, 0.983389342294767)
(('well', ';', 'but'), 6, 0, 4.48816029143898)
(('but', 'the', 'quiet'), 1, 0, 0.17687017067164812)
(('the', 'quiet', 'prosings'), 1, 0, 0.17687017067164812)
(('quiet', 'prosings', 'of'), 1, 0, 0.17687017067164812)
(('prosings', 'of', 'three'), 1, 0, 0.17687017067164812)
(('of', 'three', 'such'), 1, 0, 0.17687017067164812)
(('three', 'such', 'women'), 1, 0, 0.17687017067164812)
(('such', 'women', 'made'), 1, 0, 0.17687017067164812)
(('women', 'made', 'her'), 1, 0, 0.17687017067164812)
(('made', 'her', 'feel'), 2, 0, 0.983389342294767)
(('her', 'feel', 'that'), 1, 0, 0.17687017067164812)
(('feel', 'that', 'every'), 1, 0, 0.17687017067164812)
(('that', 'every', 'evening'), 1, 0, 0.17687017067164812)
(('every', 'evening', 'so'), 1, 0, 0.17687017067164812)
(('evening', 'so', 'spent'), 1, 0, 0.17687017067164812)
(('so', 'spent', 'was'), 1, 0, 0.17687017067164812)
(('spent', 'was', 'indeed'), 1, 0, 0.17687017067164812)
(('was', 'indeed', 'one'), 1, 0, 0.17687017067164812)
(('indeed', 'one', 'of'), 1, 0, 0.17687017067164812)
(('of', 'the', 'long'), 1, 0, 0.17687017067164812)
(('the', 'long', 'evenings'), 1, 0, 0.17687017067164812)
(('long', 'evenings', 'she'), 1, 0, 0.17687017067164812)
(('evenings', 'she', 'had'), 1, 0, 0.17687017067164812)
(('she', 'had', 'fearfully'), 1, 0, 0.17687017067164812)
(('had', 'fearfully', 'anticipated'), 1, 0, 0.17687017067164812)
(('fearfully', 'anticipated', '.'), 1, 0, 0.17687017067164812)
(('anticipated', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'As'), 38, 0, 61.285714285714285)
(('', 'As', 'she'), 3, 0, 1.7785588752196837)
(('As', 'she', 'sat'), 1, 0, 0.17687017067164812)
(('she', 'sat', 'one'), 1, 0, 0.17687017067164812)
(('sat', 'one', 'morning'), 1, 0, 0.17687017067164812)
(('one', 'morning', ','), 6, 0, 4.48816029143898)
(('morning', ',', 'looking'), 1, 0, 0.17687017067164812)
((',', 'looking', 'forward'), 1, 0, 0.17687017067164812)
(('looking', 'forward', 'to'), 1, 0, 0.17687017067164812)
(('forward', 'to', 'exactly'), 1, 0, 0.17687017067164812)
(('to', 'exactly', 'such'), 1, 0, 0.17687017067164812)
(('exactly', 'such', 'a'), 1, 0, 0.17687017067164812)
(('such', 'a', 'close'), 2, 0, 0.983389342294767)
(('a', 'close', 'of'), 1, 0, 0.17687017067164812)
(('close', 'of', 'the'), 2, 0, 0.983389342294767)
(('of', 'the', 'present'), 3, 0, 1.7785588752196837)
(('the', 'present', 'day'), 1, 0, 0.17687017067164812)
(('present', 'day', ','), 1, 0, 0.17687017067164812)
(('day', ',', 'a'), 1, 0, 0.17687017067164812)
((',', 'a', 'note'), 1, 0, 0.17687017067164812)
(('a', 'note', 'was'), 1, 0, 0.17687017067164812)
(('note', 'was', 'brought'), 1, 0, 0.17687017067164812)
(('was', 'brought', 'from'), 1, 0, 0.17687017067164812)
(('brought', 'from', 'Mrs'), 1, 0, 0.17687017067164812)
(('from', 'Mrs', '.'), 10, 0, 9.36024844720497)
(('Goddard', ',', 'requesting'), 1, 0, 0.17687017067164812)
((',', 'requesting', ','), 1, 0, 0.17687017067164812)
(('requesting', ',', 'in'), 1, 0, 0.17687017067164812)
((',', 'in', 'most'), 1, 0, 0.17687017067164812)
(('in', 'most', 'respectful'), 1, 0, 0.17687017067164812)
(('most', 'respectful', 'terms'), 1, 0, 0.17687017067164812)
(('respectful', 'terms', ','), 1, 0, 0.17687017067164812)
(('terms', ',', 'to'), 1, 0, 0.17687017067164812)
(('to', 'be', 'allowed'), 7, 0, 6.295454545454546)
(('be', 'allowed', 'to'), 9, 0, 6.5983606557377055)
(('allowed', 'to', 'bring'), 1, 0, 0.17687017067164812)
(('to', 'bring', 'Miss'), 1, 0, 0.17687017067164812)
(('bring', 'Miss', 'Smith'), 1, 0, 0.17687017067164812)
(('Miss', 'Smith', 'with'), 1, 0, 0.17687017067164812)
(('Smith', 'with', 'her'), 1, 0, 0.17687017067164812)
(('with', 'her', ';'), 5, 0, 3.7220338983050847)
(('her', ';', 'a'), 3, 0, 1.7785588752196837)
((';', 'a', 'most'), 3, 0, 1.7785588752196837)
(('most', 'welcome', 'request'), 1, 0, 0.17687017067164812)
(('welcome', 'request', ':'), 1, 0, 0.17687017067164812)
(('request', ':', 'for'), 1, 0, 0.17687017067164812)
((':', 'for', 'Miss'), 1, 0, 0.17687017067164812)
(('for', 'Miss', 'Smith'), 3, 0, 1.7785588752196837)
(('Miss', 'Smith', 'was'), 4, 0, 2.9150197628458496)
(('Smith', 'was', 'a'), 1, 0, 0.17687017067164812)
(('was', 'a', 'girl'), 1, 0, 0.17687017067164812)
(('a', 'girl', 'of'), 4, 0, 2.9150197628458496)
(('girl', 'of', 'seventeen'), 1, 0, 0.17687017067164812)
(('of', 'seventeen', ','), 1, 0, 0.17687017067164812)
(('seventeen', ',', 'whom'), 1, 0, 0.17687017067164812)
((',', 'whom', 'Emma'), 2, 0, 0.983389342294767)
(('whom', 'Emma', 'knew'), 1, 0, 0.17687017067164812)
(('Emma', 'knew', 'very'), 1, 0, 0.17687017067164812)
(('knew', 'very', 'well'), 1, 0, 0.17687017067164812)
(('very', 'well', 'by'), 2, 0, 0.983389342294767)
(('well', 'by', 'sight'), 1, 0, 0.17687017067164812)
(('by', 'sight', ','), 1, 0, 0.17687017067164812)
(('sight', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'had', 'long'), 1, 0, 0.17687017067164812)
(('had', 'long', 'felt'), 2, 0, 0.983389342294767)
(('long', 'felt', 'an'), 1, 0, 0.17687017067164812)
(('felt', 'an', 'interest'), 1, 0, 0.17687017067164812)
(('an', 'interest', 'in'), 4, 0, 2.9150197628458496)
(('interest', 'in', ','), 1, 0, 0.17687017067164812)
(('in', ',', 'on'), 1, 0, 0.17687017067164812)
((',', 'on', 'account'), 1, 0, 0.17687017067164812)
(('on', 'account', 'of'), 1, 0, 0.17687017067164812)
(('account', 'of', 'her'), 3, 0, 1.7785588752196837)
(('of', 'her', 'beauty'), 1, 0, 0.17687017067164812)
(('her', 'beauty', '.'), 1, 0, 0.17687017067164812)
(('beauty', '.', ''), 3, 0, 1.7785588752196837)
(('', 'A', 'very'), 10, 0, 9.36024844720497)
(('A', 'very', 'gracious'), 1, 0, 0.17687017067164812)
(('very', 'gracious', 'invitation'), 1, 0, 0.17687017067164812)
(('gracious', 'invitation', 'was'), 1, 0, 0.17687017067164812)
(('invitation', 'was', 'returned'), 1, 0, 0.17687017067164812)
(('was', 'returned', ','), 3, 0, 1.7785588752196837)
(('returned', ',', 'and'), 3, 0, 1.7785588752196837)
(('and', 'the', 'evening'), 1, 0, 0.17687017067164812)
(('the', 'evening', 'no'), 1, 0, 0.17687017067164812)
(('evening', 'no', 'longer'), 1, 0, 0.17687017067164812)
(('no', 'longer', 'dreaded'), 1, 0, 0.17687017067164812)
(('longer', 'dreaded', 'by'), 1, 0, 0.17687017067164812)
(('dreaded', 'by', 'the'), 1, 0, 0.17687017067164812)
(('by', 'the', 'fair'), 1, 0, 0.17687017067164812)
(('the', 'fair', 'mistress'), 1, 0, 0.17687017067164812)
(('fair', 'mistress', 'of'), 1, 0, 0.17687017067164812)
(('mistress', 'of', 'the'), 4, 0, 2.9150197628458496)
(('of', 'the', 'mansion'), 1, 0, 0.17687017067164812)
(('the', 'mansion', '.'), 1, 0, 0.17687017067164812)
(('mansion', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Harriet'), 69, 0, 70.0)
(('', 'Harriet', 'Smith'), 5, 0, 3.7220338983050847)
(('Harriet', 'Smith', 'was'), 1, 0, 0.17687017067164812)
(('Smith', 'was', 'the'), 1, 0, 0.17687017067164812)
(('was', 'the', 'natural'), 1, 0, 0.17687017067164812)
(('the', 'natural', 'daughter'), 2, 0, 0.983389342294767)
(('natural', 'daughter', 'of'), 2, 0, 0.983389342294767)
(('daughter', 'of', 'somebody'), 1, 0, 0.17687017067164812)
(('of', 'somebody', '.'), 1, 0, 0.17687017067164812)
(('somebody', '.', ''), 2, 0, 0.983389342294767)
(('', '', 'Somebody'), 3, 0, 1.7785588752196837)
(('', 'Somebody', 'had'), 1, 0, 0.17687017067164812)
(('Somebody', 'had', 'placed'), 1, 0, 0.17687017067164812)
(('had', 'placed', 'her'), 1, 0, 0.17687017067164812)
(('placed', 'her', ','), 1, 0, 0.17687017067164812)
(('her', ',', 'several'), 1, 0, 0.17687017067164812)
((',', 'several', 'years'), 1, 0, 0.17687017067164812)
(('several', 'years', 'back'), 1, 0, 0.17687017067164812)
(('years', 'back', ','), 1, 0, 0.17687017067164812)
(('back', ',', 'at'), 1, 0, 0.17687017067164812)
((',', 'at', 'Mrs'), 1, 0, 0.17687017067164812)
(('at', 'Mrs', '.'), 20, 0, 21.0)
(('s', 'school', ','), 1, 0, 0.17687017067164812)
(('school', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'somebody'), 1, 0, 0.17687017067164812)
(('and', 'somebody', 'had'), 1, 0, 0.17687017067164812)
(('somebody', 'had', 'lately'), 1, 0, 0.17687017067164812)
(('had', 'lately', 'raised'), 1, 0, 0.17687017067164812)
(('lately', 'raised', 'her'), 1, 0, 0.17687017067164812)
(('raised', 'her', 'from'), 1, 0, 0.17687017067164812)
(('her', 'from', 'the'), 4, 0, 2.9150197628458496)
(('from', 'the', 'condition'), 1, 0, 0.17687017067164812)
(('the', 'condition', 'of'), 2, 0, 0.983389342294767)
(('condition', 'of', 'scholar'), 1, 0, 0.17687017067164812)
(('of', 'scholar', 'to'), 1, 0, 0.17687017067164812)
(('scholar', 'to', 'that'), 1, 0, 0.17687017067164812)
(('to', 'that', 'of'), 1, 0, 0.17687017067164812)
(('that', 'of', 'parlour'), 1, 0, 0.17687017067164812)
(('of', 'parlour', '-'), 1, 0, 0.17687017067164812)
(('parlour', '-', 'boarder'), 3, 0, 1.7785588752196837)
(('-', 'boarder', '.'), 1, 0, 0.17687017067164812)
(('boarder', '.', ''), 1, 0, 0.17687017067164812)
(('', 'This', 'was'), 23, 0, 14.608695652173914)
(('This', 'was', 'all'), 3, 0, 1.7785588752196837)
(('was', 'all', 'that'), 5, 0, 3.7220338983050847)
(('all', 'that', 'was'), 8, 0, 7.927797833935018)
(('that', 'was', 'generally'), 1, 0, 0.17687017067164812)
(('was', 'generally', 'known'), 1, 0, 0.17687017067164812)
(('generally', 'known', 'of'), 1, 0, 0.17687017067164812)
(('known', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'history'), 1, 0, 0.17687017067164812)
(('her', 'history', '.'), 1, 0, 0.17687017067164812)
(('history', '.', ''), 2, 0, 0.983389342294767)
(('She', 'had', 'no'), 9, 0, 6.5983606557377055)
(('had', 'no', 'visible'), 1, 0, 0.17687017067164812)
(('no', 'visible', 'friends'), 1, 0, 0.17687017067164812)
(('visible', 'friends', 'but'), 1, 0, 0.17687017067164812)
(('friends', 'but', 'what'), 1, 0, 0.17687017067164812)
(('but', 'what', 'had'), 2, 0, 0.983389342294767)
(('what', 'had', 'been'), 3, 0, 1.7785588752196837)
(('had', 'been', 'acquired'), 1, 0, 0.17687017067164812)
(('been', 'acquired', 'at'), 1, 0, 0.17687017067164812)
(('acquired', 'at', 'Highbury'), 1, 0, 0.17687017067164812)
(('at', 'Highbury', ','), 5, 0, 3.7220338983050847)
(('and', 'was', 'now'), 2, 0, 0.983389342294767)
(('was', 'now', 'just'), 1, 0, 0.17687017067164812)
(('now', 'just', 'returned'), 1, 0, 0.17687017067164812)
(('just', 'returned', 'from'), 1, 0, 0.17687017067164812)
(('returned', 'from', 'a'), 1, 0, 0.17687017067164812)
(('from', 'a', 'long'), 1, 0, 0.17687017067164812)
(('a', 'long', 'visit'), 1, 0, 0.17687017067164812)
(('long', 'visit', 'in'), 1, 0, 0.17687017067164812)
(('visit', 'in', 'the'), 2, 0, 0.983389342294767)
(('in', 'the', 'country'), 4, 0, 2.9150197628458496)
(('the', 'country', 'to'), 2, 0, 0.983389342294767)
(('country', 'to', 'some'), 1, 0, 0.17687017067164812)
(('to', 'some', 'young'), 1, 0, 0.17687017067164812)
(('some', 'young', 'ladies'), 1, 0, 0.17687017067164812)
(('young', 'ladies', 'who'), 1, 0, 0.17687017067164812)
(('ladies', 'who', 'had'), 1, 0, 0.17687017067164812)
(('been', 'at', 'school'), 1, 0, 0.17687017067164812)
(('at', 'school', 'there'), 1, 0, 0.17687017067164812)
(('school', 'there', 'with'), 1, 0, 0.17687017067164812)
(('there', 'with', 'her'), 1, 0, 0.17687017067164812)
(('very', 'pretty', 'girl'), 2, 0, 0.983389342294767)
(('pretty', 'girl', ','), 1, 0, 0.17687017067164812)
(('girl', ',', 'and'), 4, 0, 2.9150197628458496)
(('and', 'her', 'beauty'), 1, 0, 0.17687017067164812)
(('her', 'beauty', 'happened'), 1, 0, 0.17687017067164812)
(('beauty', 'happened', 'to'), 1, 0, 0.17687017067164812)
(('happened', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'of'), 5, 0, 3.7220338983050847)
(('be', 'of', 'a'), 3, 0, 1.7785588752196837)
(('a', 'sort', 'which'), 1, 0, 0.17687017067164812)
(('sort', 'which', 'Emma'), 1, 0, 0.17687017067164812)
(('which', 'Emma', 'particularly'), 1, 0, 0.17687017067164812)
(('Emma', 'particularly', 'admired'), 1, 0, 0.17687017067164812)
(('particularly', 'admired', '.'), 1, 0, 0.17687017067164812)
(('admired', '.', ''), 1, 0, 0.17687017067164812)
(('She', 'was', 'short'), 1, 0, 0.17687017067164812)
(('was', 'short', ','), 2, 0, 0.983389342294767)
(('short', ',', 'plump'), 1, 0, 0.17687017067164812)
((',', 'plump', ','), 1, 0, 0.17687017067164812)
(('plump', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'fair'), 1, 0, 0.17687017067164812)
(('and', 'fair', ','), 1, 0, 0.17687017067164812)
(('fair', ',', 'with'), 1, 0, 0.17687017067164812)
(('with', 'a', 'fine'), 1, 0, 0.17687017067164812)
(('a', 'fine', 'bloom'), 1, 0, 0.17687017067164812)
(('fine', 'bloom', ','), 1, 0, 0.17687017067164812)
(('bloom', ',', 'blue'), 1, 0, 0.17687017067164812)
((',', 'blue', 'eyes'), 1, 0, 0.17687017067164812)
(('blue', 'eyes', ','), 3, 0, 1.7785588752196837)
(('eyes', ',', 'light'), 1, 0, 0.17687017067164812)
((',', 'light', 'hair'), 1, 0, 0.17687017067164812)
(('light', 'hair', ','), 1, 0, 0.17687017067164812)
(('hair', ',', 'regular'), 1, 0, 0.17687017067164812)
((',', 'regular', 'features'), 1, 0, 0.17687017067164812)
(('regular', 'features', ','), 2, 0, 0.983389342294767)
(('features', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'a', 'look'), 1, 0, 0.17687017067164812)
(('a', 'look', 'of'), 8, 0, 7.927797833935018)
(('look', 'of', 'great'), 1, 0, 0.17687017067164812)
(('of', 'great', 'sweetness'), 1, 0, 0.17687017067164812)
(('great', 'sweetness', ','), 1, 0, 0.17687017067164812)
(('sweetness', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', ',', 'before'), 3, 0, 1.7785588752196837)
((',', 'before', 'the'), 6, 0, 4.48816029143898)
(('before', 'the', 'end'), 2, 0, 0.983389342294767)
(('the', 'end', 'of'), 13, 0, 10.137931034482758)
(('end', 'of', 'the'), 11, 0, 8.671532846715328)
(('of', 'the', 'evening'), 9, 0, 6.5983606557377055)
(('evening', ',', 'Emma'), 1, 0, 0.17687017067164812)
((',', 'Emma', 'was'), 7, 0, 6.295454545454546)
(('Emma', 'was', 'as'), 1, 0, 0.17687017067164812)
(('was', 'as', 'much'), 4, 0, 2.9150197628458496)
(('as', 'much', 'pleased'), 1, 0, 0.17687017067164812)
(('pleased', 'with', 'her'), 2, 0, 0.983389342294767)
(('with', 'her', 'manners'), 1, 0, 0.17687017067164812)
(('her', 'manners', 'as'), 1, 0, 0.17687017067164812)
(('manners', 'as', 'her'), 1, 0, 0.17687017067164812)
(('as', 'her', 'person'), 1, 0, 0.17687017067164812)
(('her', 'person', ','), 1, 0, 0.17687017067164812)
(('person', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'quite'), 7, 0, 6.295454545454546)
(('and', 'quite', 'determined'), 1, 0, 0.17687017067164812)
(('quite', 'determined', 'to'), 3, 0, 1.7785588752196837)
(('determined', 'to', 'continue'), 1, 0, 0.17687017067164812)
(('to', 'continue', 'the'), 1, 0, 0.17687017067164812)
(('continue', 'the', 'acquaintance'), 1, 0, 0.17687017067164812)
(('the', 'acquaintance', '.'), 3, 0, 1.7785588752196837)
(('acquaintance', '.', ''), 13, 0, 10.137931034482758)
(('She', 'was', 'not'), 11, 0, 8.671532846715328)
(('was', 'not', 'struck'), 1, 0, 0.17687017067164812)
(('not', 'struck', 'by'), 1, 0, 0.17687017067164812)
(('struck', 'by', 'any'), 1, 0, 0.17687017067164812)
(('by', 'any', 'thing'), 3, 0, 1.7785588752196837)
(('any', 'thing', 'remarkably'), 1, 0, 0.17687017067164812)
(('thing', 'remarkably', 'clever'), 1, 0, 0.17687017067164812)
(('remarkably', 'clever', 'in'), 1, 0, 0.17687017067164812)
(('clever', 'in', 'Miss'), 1, 0, 0.17687017067164812)
(('in', 'Miss', 'Smith'), 1, 0, 0.17687017067164812)
(('Miss', 'Smith', "'"), 7, 0, 6.295454545454546)
(('Smith', "'", 's'), 11, 0, 8.671532846715328)
(("'", 's', 'conversation'), 3, 0, 1.7785588752196837)
(('s', 'conversation', ','), 2, 0, 0.983389342294767)
(('conversation', ',', 'but'), 1, 0, 0.17687017067164812)
(('but', 'she', 'found'), 1, 0, 0.17687017067164812)
(('she', 'found', 'her'), 5, 0, 3.7220338983050847)
(('found', 'her', 'altogether'), 1, 0, 0.17687017067164812)
(('her', 'altogether', 'very'), 1, 0, 0.17687017067164812)
(('altogether', 'very', 'engaging'), 1, 0, 0.17687017067164812)
(('very', 'engaging', '--'), 1, 0, 0.17687017067164812)
(('engaging', '--', 'not'), 1, 0, 0.17687017067164812)
(('--', 'not', 'inconveniently'), 1, 0, 0.17687017067164812)
(('not', 'inconveniently', 'shy'), 1, 0, 0.17687017067164812)
(('inconveniently', 'shy', ','), 1, 0, 0.17687017067164812)
(('shy', ',', 'not'), 1, 0, 0.17687017067164812)
((',', 'not', 'unwilling'), 1, 0, 0.17687017067164812)
(('not', 'unwilling', 'to'), 2, 0, 0.983389342294767)
(('unwilling', 'to', 'talk'), 1, 0, 0.17687017067164812)
(('to', 'talk', '--'), 2, 0, 0.983389342294767)
(('talk', '--', 'and'), 1, 0, 0.17687017067164812)
(('--', 'and', 'yet'), 3, 0, 1.7785588752196837)
(('and', 'yet', 'so'), 2, 0, 0.983389342294767)
(('yet', 'so', 'far'), 1, 0, 0.17687017067164812)
(('so', 'far', 'from'), 4, 0, 2.9150197628458496)
(('far', 'from', 'pushing'), 1, 0, 0.17687017067164812)
(('from', 'pushing', ','), 1, 0, 0.17687017067164812)
(('pushing', ',', 'shewing'), 1, 0, 0.17687017067164812)
((',', 'shewing', 'so'), 1, 0, 0.17687017067164812)
(('shewing', 'so', 'proper'), 1, 0, 0.17687017067164812)
(('so', 'proper', 'and'), 1, 0, 0.17687017067164812)
(('proper', 'and', 'becoming'), 1, 0, 0.17687017067164812)
(('and', 'becoming', 'a'), 1, 0, 0.17687017067164812)
(('becoming', 'a', 'deference'), 1, 0, 0.17687017067164812)
(('a', 'deference', ','), 1, 0, 0.17687017067164812)
(('deference', ',', 'seeming'), 1, 0, 0.17687017067164812)
((',', 'seeming', 'so'), 1, 0, 0.17687017067164812)
(('seeming', 'so', 'pleasantly'), 1, 0, 0.17687017067164812)
(('so', 'pleasantly', 'grateful'), 1, 0, 0.17687017067164812)
(('pleasantly', 'grateful', 'for'), 1, 0, 0.17687017067164812)
(('grateful', 'for', 'being'), 1, 0, 0.17687017067164812)
(('for', 'being', 'admitted'), 1, 0, 0.17687017067164812)
(('being', 'admitted', 'to'), 1, 0, 0.17687017067164812)
(('admitted', 'to', 'Hartfield'), 1, 0, 0.17687017067164812)
(('to', 'Hartfield', ','), 13, 0, 10.137931034482758)
(('and', 'so', 'artlessly'), 1, 0, 0.17687017067164812)
(('so', 'artlessly', 'impressed'), 1, 0, 0.17687017067164812)
(('artlessly', 'impressed', 'by'), 1, 0, 0.17687017067164812)
(('impressed', 'by', 'the'), 2, 0, 0.983389342294767)
(('by', 'the', 'appearance'), 1, 0, 0.17687017067164812)
(('the', 'appearance', 'of'), 8, 0, 7.927797833935018)
(('appearance', 'of', 'every'), 1, 0, 0.17687017067164812)
(('of', 'every', 'thing'), 11, 0, 8.671532846715328)
(('every', 'thing', 'in'), 8, 0, 7.927797833935018)
(('thing', 'in', 'so'), 1, 0, 0.17687017067164812)
(('in', 'so', 'superior'), 1, 0, 0.17687017067164812)
(('so', 'superior', 'a'), 1, 0, 0.17687017067164812)
(('superior', 'a', 'style'), 1, 0, 0.17687017067164812)
(('a', 'style', 'to'), 1, 0, 0.17687017067164812)
(('style', 'to', 'what'), 1, 0, 0.17687017067164812)
(('to', 'what', 'she'), 3, 0, 1.7785588752196837)
(('she', 'had', 'been'), 46, 0, 28.2)
(('had', 'been', 'used'), 8, 0, 7.927797833935018)
(('to', ',', 'that'), 2, 0, 0.983389342294767)
(('she', 'must', 'have'), 4, 0, 2.9150197628458496)
(('must', 'have', 'good'), 1, 0, 0.17687017067164812)
(('have', 'good', 'sense'), 1, 0, 0.17687017067164812)
((',', 'and', 'deserve'), 1, 0, 0.17687017067164812)
(('and', 'deserve', 'encouragement'), 1, 0, 0.17687017067164812)
(('deserve', 'encouragement', '.'), 1, 0, 0.17687017067164812)
(('encouragement', '.', ''), 2, 0, 0.983389342294767)
(('', '', 'Encouragement'), 1, 0, 0.17687017067164812)
(('', 'Encouragement', 'should'), 1, 0, 0.17687017067164812)
(('Encouragement', 'should', 'be'), 1, 0, 0.17687017067164812)
(('should', 'be', 'given'), 1, 0, 0.17687017067164812)
(('be', 'given', '.'), 2, 0, 0.983389342294767)
(('given', '.', ''), 2, 0, 0.983389342294767)
(('', '', 'Those'), 3, 0, 1.7785588752196837)
(('', 'Those', 'soft'), 1, 0, 0.17687017067164812)
(('Those', 'soft', 'blue'), 1, 0, 0.17687017067164812)
(('soft', 'blue', 'eyes'), 2, 0, 0.983389342294767)
(('eyes', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'all'), 24, 0, 39.285714285714285)
(('and', 'all', 'those'), 1, 0, 0.17687017067164812)
(('all', 'those', 'natural'), 1, 0, 0.17687017067164812)
(('those', 'natural', 'graces'), 1, 0, 0.17687017067164812)
(('natural', 'graces', ','), 1, 0, 0.17687017067164812)
(('graces', ',', 'should'), 1, 0, 0.17687017067164812)
((',', 'should', 'not'), 4, 0, 2.9150197628458496)
(('should', 'not', 'be'), 13, 0, 10.137931034482758)
(('not', 'be', 'wasted'), 1, 0, 0.17687017067164812)
(('be', 'wasted', 'on'), 1, 0, 0.17687017067164812)
(('wasted', 'on', 'the'), 1, 0, 0.17687017067164812)
(('on', 'the', 'inferior'), 1, 0, 0.17687017067164812)
(('the', 'inferior', 'society'), 1, 0, 0.17687017067164812)
(('inferior', 'society', 'of'), 1, 0, 0.17687017067164812)
(('society', 'of', 'Highbury'), 2, 0, 0.983389342294767)
(('of', 'Highbury', 'and'), 2, 0, 0.983389342294767)
(('Highbury', 'and', 'its'), 1, 0, 0.17687017067164812)
(('and', 'its', 'connexions'), 1, 0, 0.17687017067164812)
(('its', 'connexions', '.'), 1, 0, 0.17687017067164812)
(('connexions', '.', ''), 1, 0, 0.17687017067164812)
(('', 'The', 'acquaintance'), 2, 0, 0.983389342294767)
(('The', 'acquaintance', 'she'), 1, 0, 0.17687017067164812)
(('acquaintance', 'she', 'had'), 1, 0, 0.17687017067164812)
(('she', 'had', 'already'), 1, 0, 0.17687017067164812)
(('had', 'already', 'formed'), 1, 0, 0.17687017067164812)
(('already', 'formed', 'were'), 1, 0, 0.17687017067164812)
(('formed', 'were', 'unworthy'), 1, 0, 0.17687017067164812)
(('were', 'unworthy', 'of'), 1, 0, 0.17687017067164812)
(('unworthy', 'of', 'her'), 1, 0, 0.17687017067164812)
(('', 'The', 'friends'), 1, 0, 0.17687017067164812)
(('The', 'friends', 'from'), 1, 0, 0.17687017067164812)
(('friends', 'from', 'whom'), 1, 0, 0.17687017067164812)
(('from', 'whom', 'she'), 1, 0, 0.17687017067164812)
(('whom', 'she', 'had'), 6, 0, 4.48816029143898)
(('she', 'had', 'just'), 2, 0, 0.983389342294767)
(('had', 'just', 'parted'), 1, 0, 0.17687017067164812)
(('just', 'parted', ','), 1, 0, 0.17687017067164812)
(('parted', ',', 'though'), 1, 0, 0.17687017067164812)
((',', 'though', 'very'), 3, 0, 1.7785588752196837)
(('though', 'very', 'good'), 1, 0, 0.17687017067164812)
(('very', 'good', 'sort'), 6, 0, 4.48816029143898)
(('good', 'sort', 'of'), 7, 0, 6.295454545454546)
(('sort', 'of', 'people'), 3, 0, 1.7785588752196837)
(('of', 'people', ','), 3, 0, 1.7785588752196837)
(('people', ',', 'must'), 1, 0, 0.17687017067164812)
((',', 'must', 'be'), 13, 0, 10.137931034482758)
(('must', 'be', 'doing'), 2, 0, 0.983389342294767)
(('be', 'doing', 'her'), 1, 0, 0.17687017067164812)
(('doing', 'her', 'harm'), 1, 0, 0.17687017067164812)
(('her', 'harm', '.'), 1, 0, 0.17687017067164812)
(('harm', '.', ''), 5, 0, 3.7220338983050847)
(('', 'They', 'were'), 26, 0, 24.157894736842106)
(('They', 'were', 'a'), 2, 0, 0.983389342294767)
(('were', 'a', 'family'), 1, 0, 0.17687017067164812)
(('a', 'family', 'of'), 4, 0, 2.9150197628458496)
(('family', 'of', 'the'), 2, 0, 0.983389342294767)
(('of', 'the', 'name'), 4, 0, 2.9150197628458496)
(('name', 'of', 'Martin'), 1, 0, 0.17687017067164812)
(('of', 'Martin', ','), 1, 0, 0.17687017067164812)
(('Martin', ',', 'whom'), 1, 0, 0.17687017067164812)
(('whom', 'Emma', 'well'), 1, 0, 0.17687017067164812)
(('Emma', 'well', 'knew'), 1, 0, 0.17687017067164812)
(('well', 'knew', 'by'), 1, 0, 0.17687017067164812)
(('knew', 'by', 'character'), 1, 0, 0.17687017067164812)
(('by', 'character', ','), 1, 0, 0.17687017067164812)
(('character', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'renting'), 1, 0, 0.17687017067164812)
(('as', 'renting', 'a'), 1, 0, 0.17687017067164812)
(('renting', 'a', 'large'), 1, 0, 0.17687017067164812)
(('a', 'large', 'farm'), 1, 0, 0.17687017067164812)
(('large', 'farm', 'of'), 1, 0, 0.17687017067164812)
(('farm', 'of', 'Mr'), 1, 0, 0.17687017067164812)
(('Knightley', ',', 'and'), 6, 0, 4.48816029143898)
((',', 'and', 'residing'), 1, 0, 0.17687017067164812)
(('and', 'residing', 'in'), 1, 0, 0.17687017067164812)
(('residing', 'in', 'the'), 1, 0, 0.17687017067164812)
(('the', 'parish', 'of'), 1, 0, 0.17687017067164812)
(('parish', 'of', 'Donwell'), 1, 0, 0.17687017067164812)
(('of', 'Donwell', '--'), 1, 0, 0.17687017067164812)
(('Donwell', '--', 'very'), 1, 0, 0.17687017067164812)
(('--', 'very', 'creditably'), 1, 0, 0.17687017067164812)
(('very', 'creditably', ','), 1, 0, 0.17687017067164812)
(('creditably', ',', 'she'), 1, 0, 0.17687017067164812)
((',', 'she', 'believed'), 3, 0, 1.7785588752196837)
(('she', 'believed', '--'), 1, 0, 0.17687017067164812)
(('believed', '--', 'she'), 1, 0, 0.17687017067164812)
(('--', 'she', 'knew'), 1, 0, 0.17687017067164812)
(('she', 'knew', 'Mr'), 2, 0, 0.983389342294767)
(('knew', 'Mr', '.'), 2, 0, 0.983389342294767)
(('.', 'Knightley', 'thought'), 2, 0, 0.983389342294767)
(('Knightley', 'thought', 'highly'), 1, 0, 0.17687017067164812)
(('thought', 'highly', 'of'), 2, 0, 0.983389342294767)
(('highly', 'of', 'them'), 1, 0, 0.17687017067164812)
(('of', 'them', '--'), 2, 0, 0.983389342294767)
(('them', '--', 'but'), 1, 0, 0.17687017067164812)
(('--', 'but', 'they'), 1, 0, 0.17687017067164812)
(('but', 'they', 'must'), 1, 0, 0.17687017067164812)
(('they', 'must', 'be'), 5, 0, 3.7220338983050847)
(('must', 'be', 'coarse'), 1, 0, 0.17687017067164812)
(('be', 'coarse', 'and'), 1, 0, 0.17687017067164812)
(('coarse', 'and', 'unpolished'), 1, 0, 0.17687017067164812)
(('and', 'unpolished', ','), 1, 0, 0.17687017067164812)
(('unpolished', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'very', 'unfit'), 1, 0, 0.17687017067164812)
(('very', 'unfit', 'to'), 1, 0, 0.17687017067164812)
(('unfit', 'to', 'be'), 1, 0, 0.17687017067164812)
(('be', 'the', 'intimates'), 1, 0, 0.17687017067164812)
(('the', 'intimates', 'of'), 1, 0, 0.17687017067164812)
(('intimates', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'girl'), 2, 0, 0.983389342294767)
(('a', 'girl', 'who'), 3, 0, 1.7785588752196837)
(('girl', 'who', 'wanted'), 1, 0, 0.17687017067164812)
(('who', 'wanted', 'only'), 1, 0, 0.17687017067164812)
(('wanted', 'only', 'a'), 1, 0, 0.17687017067164812)
(('only', 'a', 'little'), 5, 0, 3.7220338983050847)
(('a', 'little', 'more'), 11, 0, 8.671532846715328)
(('little', 'more', 'knowledge'), 1, 0, 0.17687017067164812)
(('more', 'knowledge', 'and'), 1, 0, 0.17687017067164812)
(('knowledge', 'and', 'elegance'), 1, 0, 0.17687017067164812)
(('and', 'elegance', 'to'), 1, 0, 0.17687017067164812)
(('elegance', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'quite'), 8, 0, 7.927797833935018)
(('be', 'quite', 'perfect'), 1, 0, 0.17687017067164812)
(('quite', 'perfect', '.'), 1, 0, 0.17687017067164812)
(('perfect', '.', ''), 3, 0, 1.7785588752196837)
(('', '', '_She_'), 6, 0, 4.48816029143898)
(('', '_She_', 'would'), 1, 0, 0.17687017067164812)
(('_She_', 'would', 'notice'), 1, 0, 0.17687017067164812)
(('would', 'notice', 'her'), 1, 0, 0.17687017067164812)
(('notice', 'her', ';'), 1, 0, 0.17687017067164812)
(('her', ';', 'she'), 4, 0, 2.9150197628458496)
((';', 'she', 'would'), 5, 0, 3.7220338983050847)
(('she', 'would', 'improve'), 1, 0, 0.17687017067164812)
(('would', 'improve', 'her'), 1, 0, 0.17687017067164812)
(('improve', 'her', ';'), 1, 0, 0.17687017067164812)
(('she', 'would', 'detach'), 1, 0, 0.17687017067164812)
(('would', 'detach', 'her'), 1, 0, 0.17687017067164812)
(('detach', 'her', 'from'), 1, 0, 0.17687017067164812)
(('her', 'from', 'her'), 2, 0, 0.983389342294767)
(('from', 'her', 'bad'), 1, 0, 0.17687017067164812)
(('her', 'bad', 'acquaintance'), 1, 0, 0.17687017067164812)
(('bad', 'acquaintance', ','), 1, 0, 0.17687017067164812)
(('acquaintance', ',', 'and'), 4, 0, 2.9150197628458496)
((',', 'and', 'introduce'), 1, 0, 0.17687017067164812)
(('and', 'introduce', 'her'), 1, 0, 0.17687017067164812)
(('introduce', 'her', 'into'), 2, 0, 0.983389342294767)
(('her', 'into', 'good'), 2, 0, 0.983389342294767)
(('into', 'good', 'society'), 1, 0, 0.17687017067164812)
(('good', 'society', ';'), 1, 0, 0.17687017067164812)
(('society', ';', 'she'), 1, 0, 0.17687017067164812)
(('she', 'would', 'form'), 1, 0, 0.17687017067164812)
(('would', 'form', 'her'), 1, 0, 0.17687017067164812)
(('form', 'her', 'opinions'), 1, 0, 0.17687017067164812)
(('her', 'opinions', 'and'), 1, 0, 0.17687017067164812)
(('opinions', 'and', 'her'), 1, 0, 0.17687017067164812)
(('and', 'her', 'manners'), 1, 0, 0.17687017067164812)
(('her', 'manners', '.'), 1, 0, 0.17687017067164812)
(('manners', '.', ''), 4, 0, 2.9150197628458496)
(('', 'It', 'would'), 21, 0, 29.040000000000003)
(('It', 'would', 'be'), 18, 0, 11.585365853658537)
(('would', 'be', 'an'), 4, 0, 2.9150197628458496)
(('be', 'an', 'interesting'), 1, 0, 0.17687017067164812)
(('an', 'interesting', ','), 1, 0, 0.17687017067164812)
(('interesting', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'certainly'), 3, 0, 1.7785588752196837)
(('and', 'certainly', 'a'), 1, 0, 0.17687017067164812)
(('certainly', 'a', 'very'), 2, 0, 0.983389342294767)
(('a', 'very', 'kind'), 4, 0, 2.9150197628458496)
(('very', 'kind', 'undertaking'), 1, 0, 0.17687017067164812)
(('kind', 'undertaking', ';'), 1, 0, 0.17687017067164812)
(('undertaking', ';', 'highly'), 1, 0, 0.17687017067164812)
((';', 'highly', 'becoming'), 1, 0, 0.17687017067164812)
(('highly', 'becoming', 'her'), 1, 0, 0.17687017067164812)
(('becoming', 'her', 'own'), 1, 0, 0.17687017067164812)
(('her', 'own', 'situation'), 1, 0, 0.17687017067164812)
(('own', 'situation', 'in'), 1, 0, 0.17687017067164812)
(('situation', 'in', 'life'), 5, 0, 3.7220338983050847)
(('in', 'life', ','), 3, 0, 1.7785588752196837)
(('life', ',', 'her'), 1, 0, 0.17687017067164812)
((',', 'her', 'leisure'), 1, 0, 0.17687017067164812)
(('her', 'leisure', ','), 1, 0, 0.17687017067164812)
(('leisure', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'powers'), 1, 0, 0.17687017067164812)
(('and', 'powers', '.'), 1, 0, 0.17687017067164812)
(('powers', '.', ''), 1, 0, 0.17687017067164812)
(('She', 'was', 'so'), 3, 0, 1.7785588752196837)
(('was', 'so', 'busy'), 2, 0, 0.983389342294767)
(('so', 'busy', 'in'), 1, 0, 0.17687017067164812)
(('busy', 'in', 'admiring'), 1, 0, 0.17687017067164812)
(('in', 'admiring', 'those'), 1, 0, 0.17687017067164812)
(('admiring', 'those', 'soft'), 1, 0, 0.17687017067164812)
(('those', 'soft', 'blue'), 1, 0, 0.17687017067164812)
(('eyes', ',', 'in'), 2, 0, 0.983389342294767)
((',', 'in', 'talking'), 1, 0, 0.17687017067164812)
(('in', 'talking', 'and'), 1, 0, 0.17687017067164812)
(('talking', 'and', 'listening'), 1, 0, 0.17687017067164812)
(('and', 'listening', ','), 1, 0, 0.17687017067164812)
(('listening', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'forming'), 1, 0, 0.17687017067164812)
(('and', 'forming', 'all'), 1, 0, 0.17687017067164812)
(('forming', 'all', 'these'), 1, 0, 0.17687017067164812)
(('all', 'these', 'schemes'), 1, 0, 0.17687017067164812)
(('these', 'schemes', 'in'), 1, 0, 0.17687017067164812)
(('schemes', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'in'), 1, 0, 0.17687017067164812)
(('the', 'in', '-'), 1, 0, 0.17687017067164812)
(('in', '-', 'betweens'), 1, 0, 0.17687017067164812)
(('-', 'betweens', ','), 1, 0, 0.17687017067164812)
(('betweens', ',', 'that'), 1, 0, 0.17687017067164812)
(('that', 'the', 'evening'), 1, 0, 0.17687017067164812)
(('the', 'evening', 'flew'), 1, 0, 0.17687017067164812)
(('evening', 'flew', 'away'), 1, 0, 0.17687017067164812)
(('flew', 'away', 'at'), 1, 0, 0.17687017067164812)
(('away', 'at', 'a'), 1, 0, 0.17687017067164812)
(('at', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'unusual'), 1, 0, 0.17687017067164812)
(('very', 'unusual', 'rate'), 1, 0, 0.17687017067164812)
(('unusual', 'rate', ';'), 1, 0, 0.17687017067164812)
(('rate', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'the', 'supper'), 1, 0, 0.17687017067164812)
(('the', 'supper', '-'), 1, 0, 0.17687017067164812)
(('supper', '-', 'table'), 1, 0, 0.17687017067164812)
(('-', 'table', ','), 1, 0, 0.17687017067164812)
(('table', ',', 'which'), 1, 0, 0.17687017067164812)
(('which', 'always', 'closed'), 1, 0, 0.17687017067164812)
(('always', 'closed', 'such'), 1, 0, 0.17687017067164812)
(('closed', 'such', 'parties'), 1, 0, 0.17687017067164812)
(('such', 'parties', ','), 1, 0, 0.17687017067164812)
(('parties', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'for'), 7, 0, 6.295454545454546)
(('and', 'for', 'which'), 1, 0, 0.17687017067164812)
(('for', 'which', 'she'), 1, 0, 0.17687017067164812)
(('which', 'she', 'had'), 20, 0, 21.0)
(('used', 'to', 'sit'), 1, 0, 0.17687017067164812)
(('sit', 'and', 'watch'), 1, 0, 0.17687017067164812)
(('and', 'watch', 'the'), 1, 0, 0.17687017067164812)
(('watch', 'the', 'due'), 1, 0, 0.17687017067164812)
(('the', 'due', 'time'), 1, 0, 0.17687017067164812)
(('due', 'time', ','), 1, 0, 0.17687017067164812)
(('time', ',', 'was'), 1, 0, 0.17687017067164812)
(('was', 'all', 'set'), 1, 0, 0.17687017067164812)
(('all', 'set', 'out'), 1, 0, 0.17687017067164812)
(('set', 'out', 'and'), 1, 0, 0.17687017067164812)
(('out', 'and', 'ready'), 1, 0, 0.17687017067164812)
(('and', 'ready', ','), 1, 0, 0.17687017067164812)
(('ready', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'moved'), 1, 0, 0.17687017067164812)
(('and', 'moved', 'forwards'), 1, 0, 0.17687017067164812)
(('moved', 'forwards', 'to'), 1, 0, 0.17687017067164812)
(('forwards', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'fire'), 1, 0, 0.17687017067164812)
(('the', 'fire', ','), 4, 0, 2.9150197628458496)
(('fire', ',', 'before'), 1, 0, 0.17687017067164812)
((',', 'before', 'she'), 9, 0, 6.5983606557377055)
(('before', 'she', 'was'), 3, 0, 1.7785588752196837)
(('she', 'was', 'aware'), 1, 0, 0.17687017067164812)
(('was', 'aware', '.'), 1, 0, 0.17687017067164812)
(('aware', '.', ''), 2, 0, 0.983389342294767)
(('', 'With', 'an'), 1, 0, 0.17687017067164812)
(('With', 'an', 'alacrity'), 1, 0, 0.17687017067164812)
(('an', 'alacrity', 'beyond'), 1, 0, 0.17687017067164812)
(('alacrity', 'beyond', 'the'), 1, 0, 0.17687017067164812)
(('beyond', 'the', 'common'), 1, 0, 0.17687017067164812)
(('the', 'common', 'impulse'), 1, 0, 0.17687017067164812)
(('common', 'impulse', 'of'), 1, 0, 0.17687017067164812)
(('impulse', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'spirit'), 1, 0, 0.17687017067164812)
(('a', 'spirit', 'which'), 1, 0, 0.17687017067164812)
(('spirit', 'which', 'yet'), 1, 0, 0.17687017067164812)
(('which', 'yet', 'was'), 1, 0, 0.17687017067164812)
(('yet', 'was', 'never'), 1, 0, 0.17687017067164812)
(('was', 'never', 'indifferent'), 1, 0, 0.17687017067164812)
(('never', 'indifferent', 'to'), 1, 0, 0.17687017067164812)
(('indifferent', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'credit'), 2, 0, 0.983389342294767)
(('the', 'credit', 'of'), 2, 0, 0.983389342294767)
(('credit', 'of', 'doing'), 1, 0, 0.17687017067164812)
(('of', 'doing', 'every'), 1, 0, 0.17687017067164812)
(('doing', 'every', 'thing'), 1, 0, 0.17687017067164812)
(('every', 'thing', 'well'), 1, 0, 0.17687017067164812)
(('thing', 'well', 'and'), 1, 0, 0.17687017067164812)
(('well', 'and', 'attentively'), 1, 0, 0.17687017067164812)
(('and', 'attentively', ','), 1, 0, 0.17687017067164812)
(('attentively', ',', 'with'), 1, 0, 0.17687017067164812)
(('with', 'the', 'real'), 1, 0, 0.17687017067164812)
(('the', 'real', 'good'), 1, 0, 0.17687017067164812)
(('real', 'good', '-'), 1, 0, 0.17687017067164812)
(('-', 'will', 'of'), 1, 0, 0.17687017067164812)
(('will', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'mind'), 4, 0, 2.9150197628458496)
(('a', 'mind', 'delighted'), 1, 0, 0.17687017067164812)
(('mind', 'delighted', 'with'), 1, 0, 0.17687017067164812)
(('delighted', 'with', 'its'), 1, 0, 0.17687017067164812)
(('with', 'its', 'own'), 1, 0, 0.17687017067164812)
(('its', 'own', 'ideas'), 1, 0, 0.17687017067164812)
(('own', 'ideas', ','), 1, 0, 0.17687017067164812)
(('ideas', ',', 'did'), 1, 0, 0.17687017067164812)
((',', 'did', 'she'), 2, 0, 0.983389342294767)
(('did', 'she', 'then'), 1, 0, 0.17687017067164812)
(('she', 'then', 'do'), 1, 0, 0.17687017067164812)
(('then', 'do', 'all'), 1, 0, 0.17687017067164812)
(('do', 'all', 'the'), 1, 0, 0.17687017067164812)
(('all', 'the', 'honours'), 1, 0, 0.17687017067164812)
(('the', 'honours', 'of'), 1, 0, 0.17687017067164812)
(('honours', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'meal'), 1, 0, 0.17687017067164812)
(('the', 'meal', ','), 1, 0, 0.17687017067164812)
(('meal', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'help', 'and'), 1, 0, 0.17687017067164812)
(('help', 'and', 'recommend'), 1, 0, 0.17687017067164812)
(('and', 'recommend', 'the'), 1, 0, 0.17687017067164812)
(('recommend', 'the', 'minced'), 1, 0, 0.17687017067164812)
(('the', 'minced', 'chicken'), 1, 0, 0.17687017067164812)
(('minced', 'chicken', 'and'), 1, 0, 0.17687017067164812)
(('chicken', 'and', 'scalloped'), 1, 0, 0.17687017067164812)
(('and', 'scalloped', 'oysters'), 1, 0, 0.17687017067164812)
(('scalloped', 'oysters', ','), 1, 0, 0.17687017067164812)
(('oysters', ',', 'with'), 1, 0, 0.17687017067164812)
((',', 'with', 'an'), 6, 0, 4.48816029143898)
(('with', 'an', 'urgency'), 1, 0, 0.17687017067164812)
(('an', 'urgency', 'which'), 1, 0, 0.17687017067164812)
(('urgency', 'which', 'she'), 1, 0, 0.17687017067164812)
(('which', 'she', 'knew'), 3, 0, 1.7785588752196837)
(('she', 'knew', 'would'), 2, 0, 0.983389342294767)
(('knew', 'would', 'be'), 2, 0, 0.983389342294767)
(('would', 'be', 'acceptable'), 1, 0, 0.17687017067164812)
(('be', 'acceptable', 'to'), 1, 0, 0.17687017067164812)
(('acceptable', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'early'), 1, 0, 0.17687017067164812)
(('the', 'early', 'hours'), 1, 0, 0.17687017067164812)
(('early', 'hours', 'and'), 1, 0, 0.17687017067164812)
(('hours', 'and', 'civil'), 1, 0, 0.17687017067164812)
(('and', 'civil', 'scruples'), 1, 0, 0.17687017067164812)
(('civil', 'scruples', 'of'), 1, 0, 0.17687017067164812)
(('scruples', 'of', 'their'), 1, 0, 0.17687017067164812)
(('of', 'their', 'guests'), 1, 0, 0.17687017067164812)
(('their', 'guests', '.'), 1, 0, 0.17687017067164812)
(('guests', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Upon'), 10, 0, 9.36024844720497)
(('', 'Upon', 'such'), 1, 0, 0.17687017067164812)
(('Upon', 'such', 'occasions'), 1, 0, 0.17687017067164812)
(('such', 'occasions', 'poor'), 1, 0, 0.17687017067164812)
(('occasions', 'poor', 'Mr'), 1, 0, 0.17687017067164812)
(('poor', 'Mr', '.'), 6, 0, 4.48816029143898)
(('Mr', '.', 'Woodhouses'), 1, 0, 0.17687017067164812)
(('.', 'Woodhouses', 'feelings'), 1, 0, 0.17687017067164812)
(('Woodhouses', 'feelings', 'were'), 1, 0, 0.17687017067164812)
(('feelings', 'were', 'in'), 1, 0, 0.17687017067164812)
(('were', 'in', 'sad'), 1, 0, 0.17687017067164812)
(('in', 'sad', 'warfare'), 1, 0, 0.17687017067164812)
(('sad', 'warfare', '.'), 1, 0, 0.17687017067164812)
(('warfare', '.', ''), 1, 0, 0.17687017067164812)
(('', 'He', 'loved'), 1, 0, 0.17687017067164812)
(('He', 'loved', 'to'), 1, 0, 0.17687017067164812)
(('loved', 'to', 'have'), 1, 0, 0.17687017067164812)
(('have', 'the', 'cloth'), 1, 0, 0.17687017067164812)
(('the', 'cloth', 'laid'), 1, 0, 0.17687017067164812)
(('cloth', 'laid', ','), 1, 0, 0.17687017067164812)
(('laid', ',', 'because'), 1, 0, 0.17687017067164812)
(('because', 'it', 'had'), 1, 0, 0.17687017067164812)
(('had', 'been', 'the'), 14, 0, 11.428571428571427)
(('been', 'the', 'fashion'), 1, 0, 0.17687017067164812)
(('the', 'fashion', 'of'), 1, 0, 0.17687017067164812)
(('fashion', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'youth'), 1, 0, 0.17687017067164812)
(('his', 'youth', ','), 1, 0, 0.17687017067164812)
(('youth', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'his'), 5, 0, 3.7220338983050847)
(('but', 'his', 'conviction'), 1, 0, 0.17687017067164812)
(('his', 'conviction', 'of'), 1, 0, 0.17687017067164812)
(('conviction', 'of', 'suppers'), 1, 0, 0.17687017067164812)
(('of', 'suppers', 'being'), 1, 0, 0.17687017067164812)
(('suppers', 'being', 'very'), 1, 0, 0.17687017067164812)
(('being', 'very', 'unwholesome'), 1, 0, 0.17687017067164812)
(('very', 'unwholesome', 'made'), 1, 0, 0.17687017067164812)
(('unwholesome', 'made', 'him'), 1, 0, 0.17687017067164812)
(('made', 'him', 'rather'), 1, 0, 0.17687017067164812)
(('him', 'rather', 'sorry'), 1, 0, 0.17687017067164812)
(('rather', 'sorry', 'to'), 2, 0, 0.983389342294767)
(('sorry', 'to', 'see'), 4, 0, 2.9150197628458496)
(('to', 'see', 'any'), 3, 0, 1.7785588752196837)
(('see', 'any', 'thing'), 3, 0, 1.7785588752196837)
(('any', 'thing', 'put'), 1, 0, 0.17687017067164812)
(('thing', 'put', 'on'), 1, 0, 0.17687017067164812)
(('put', 'on', 'it'), 1, 0, 0.17687017067164812)
(('on', 'it', ';'), 2, 0, 0.983389342294767)
(('it', ';', 'and'), 15, 0, 14.666666666666666)
((';', 'and', 'while'), 9, 0, 6.5983606557377055)
(('and', 'while', 'his'), 1, 0, 0.17687017067164812)
(('while', 'his', 'hospitality'), 1, 0, 0.17687017067164812)
(('his', 'hospitality', 'would'), 1, 0, 0.17687017067164812)
(('hospitality', 'would', 'have'), 1, 0, 0.17687017067164812)
(('would', 'have', 'welcomed'), 1, 0, 0.17687017067164812)
(('have', 'welcomed', 'his'), 1, 0, 0.17687017067164812)
(('welcomed', 'his', 'visitors'), 1, 0, 0.17687017067164812)
(('his', 'visitors', 'to'), 1, 0, 0.17687017067164812)
(('visitors', 'to', 'every'), 1, 0, 0.17687017067164812)
(('to', 'every', 'thing'), 1, 0, 0.17687017067164812)
(('every', 'thing', ','), 8, 0, 7.927797833935018)
(('thing', ',', 'his'), 1, 0, 0.17687017067164812)
((',', 'his', 'care'), 1, 0, 0.17687017067164812)
(('his', 'care', 'for'), 1, 0, 0.17687017067164812)
(('care', 'for', 'their'), 1, 0, 0.17687017067164812)
(('for', 'their', 'health'), 1, 0, 0.17687017067164812)
(('their', 'health', 'made'), 1, 0, 0.17687017067164812)
(('health', 'made', 'him'), 1, 0, 0.17687017067164812)
(('made', 'him', 'grieve'), 1, 0, 0.17687017067164812)
(('him', 'grieve', 'that'), 1, 0, 0.17687017067164812)
(('grieve', 'that', 'they'), 1, 0, 0.17687017067164812)
(('that', 'they', 'would'), 1, 0, 0.17687017067164812)
(('they', 'would', 'eat'), 1, 0, 0.17687017067164812)
(('would', 'eat', '.'), 1, 0, 0.17687017067164812)
(('eat', '.', ''), 2, 0, 0.983389342294767)
(('', '', 'Such'), 27, 0, 14.823529411764707)
(('', 'Such', 'another'), 2, 0, 0.983389342294767)
(('Such', 'another', 'small'), 1, 0, 0.17687017067164812)
(('another', 'small', 'basin'), 1, 0, 0.17687017067164812)
(('small', 'basin', 'of'), 1, 0, 0.17687017067164812)
(('basin', 'of', 'thin'), 1, 0, 0.17687017067164812)
(('of', 'thin', 'gruel'), 1, 0, 0.17687017067164812)
(('thin', 'gruel', 'as'), 1, 0, 0.17687017067164812)
(('gruel', 'as', 'his'), 1, 0, 0.17687017067164812)
(('as', 'his', 'own'), 2, 0, 0.983389342294767)
(('his', 'own', 'was'), 1, 0, 0.17687017067164812)
(('own', 'was', 'all'), 1, 0, 0.17687017067164812)
(('all', 'that', 'he'), 8, 0, 7.927797833935018)
(('that', 'he', 'could'), 14, 0, 11.428571428571427)
(('he', 'could', ','), 7, 0, 6.295454545454546)
(('could', ',', 'with'), 2, 0, 0.983389342294767)
((',', 'with', 'thorough'), 1, 0, 0.17687017067164812)
(('with', 'thorough', 'self'), 1, 0, 0.17687017067164812)
(('thorough', 'self', '-'), 1, 0, 0.17687017067164812)
(('self', '-', 'approbation'), 2, 0, 0.983389342294767)
(('-', 'approbation', ','), 1, 0, 0.17687017067164812)
(('approbation', ',', 'recommend'), 1, 0, 0.17687017067164812)
((',', 'recommend', ';'), 1, 0, 0.17687017067164812)
(('recommend', ';', 'though'), 1, 0, 0.17687017067164812)
((';', 'though', 'he'), 1, 0, 0.17687017067164812)
(('though', 'he', 'might'), 2, 0, 0.983389342294767)
(('he', 'might', 'constrain'), 1, 0, 0.17687017067164812)
(('might', 'constrain', 'himself'), 1, 0, 0.17687017067164812)
(('constrain', 'himself', ','), 1, 0, 0.17687017067164812)
(('himself', ',', 'while'), 1, 0, 0.17687017067164812)
((',', 'while', 'the'), 3, 0, 1.7785588752196837)
(('while', 'the', 'ladies'), 1, 0, 0.17687017067164812)
(('the', 'ladies', 'were'), 2, 0, 0.983389342294767)
(('ladies', 'were', 'comfortably'), 1, 0, 0.17687017067164812)
(('were', 'comfortably', 'clearing'), 1, 0, 0.17687017067164812)
(('comfortably', 'clearing', 'the'), 1, 0, 0.17687017067164812)
(('clearing', 'the', 'nicer'), 1, 0, 0.17687017067164812)
(('the', 'nicer', 'things'), 1, 0, 0.17687017067164812)
(('nicer', 'things', ','), 1, 0, 0.17687017067164812)
(('things', ',', 'to'), 1, 0, 0.17687017067164812)
((',', 'to', 'say'), 10, 0, 9.36024844720497)
(('to', 'say', ':'), 1, 0, 0.17687017067164812)
(('say', ':', ''), 1, 0, 0.17687017067164812)
((':', '', ''), 6, 0, 4.48816029143898)
(('', '"', 'Mrs'), 8, 0, 7.927797833935018)
(('"', 'Mrs', '.'), 9, 0, 6.5983606557377055)
(('Bates', ',', 'let'), 2, 0, 0.983389342294767)
((',', 'let', 'me'), 4, 0, 2.9150197628458496)
(('let', 'me', 'propose'), 1, 0, 0.17687017067164812)
(('me', 'propose', 'your'), 1, 0, 0.17687017067164812)
(('propose', 'your', 'venturing'), 1, 0, 0.17687017067164812)
(('your', 'venturing', 'on'), 1, 0, 0.17687017067164812)
(('venturing', 'on', 'one'), 1, 0, 0.17687017067164812)
(('on', 'one', 'of'), 1, 0, 0.17687017067164812)
(('one', 'of', 'these'), 2, 0, 0.983389342294767)
(('of', 'these', 'eggs'), 1, 0, 0.17687017067164812)
(('these', 'eggs', '.'), 1, 0, 0.17687017067164812)
(('eggs', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'An'), 9, 0, 6.5983606557377055)
(('', 'An', 'egg'), 1, 0, 0.17687017067164812)
(('An', 'egg', 'boiled'), 1, 0, 0.17687017067164812)
(('egg', 'boiled', 'very'), 1, 0, 0.17687017067164812)
(('boiled', 'very', 'soft'), 1, 0, 0.17687017067164812)
(('very', 'soft', 'is'), 1, 0, 0.17687017067164812)
(('soft', 'is', 'not'), 1, 0, 0.17687017067164812)
(('is', 'not', 'unwholesome'), 1, 0, 0.17687017067164812)
(('not', 'unwholesome', '.'), 1, 0, 0.17687017067164812)
(('unwholesome', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Serle'), 1, 0, 0.17687017067164812)
(('', 'Serle', 'understands'), 1, 0, 0.17687017067164812)
(('Serle', 'understands', 'boiling'), 1, 0, 0.17687017067164812)
(('understands', 'boiling', 'an'), 1, 0, 0.17687017067164812)
(('boiling', 'an', 'egg'), 1, 0, 0.17687017067164812)
(('an', 'egg', 'better'), 1, 0, 0.17687017067164812)
(('egg', 'better', 'than'), 1, 0, 0.17687017067164812)
(('better', 'than', 'any'), 1, 0, 0.17687017067164812)
(('than', 'any', 'body'), 5, 0, 3.7220338983050847)
(('', 'I', 'would'), 10, 0, 9.36024844720497)
(('would', 'not', 'recommend'), 1, 0, 0.17687017067164812)
(('not', 'recommend', 'an'), 1, 0, 0.17687017067164812)
(('recommend', 'an', 'egg'), 1, 0, 0.17687017067164812)
(('an', 'egg', 'boiled'), 1, 0, 0.17687017067164812)
(('egg', 'boiled', 'by'), 1, 0, 0.17687017067164812)
(('boiled', 'by', 'any'), 1, 0, 0.17687017067164812)
(('by', 'any', 'body'), 3, 0, 1.7785588752196837)
(('any', 'body', 'else'), 17, 0, 19.42105263157895)
(('body', 'else', ';'), 3, 0, 1.7785588752196837)
(('else', ';', 'but'), 4, 0, 2.9150197628458496)
((';', 'but', 'you'), 9, 0, 6.5983606557377055)
(('but', 'you', 'need'), 1, 0, 0.17687017067164812)
(('you', 'need', 'not'), 7, 0, 6.295454545454546)
(('need', 'not', 'be'), 13, 0, 10.137931034482758)
(('not', 'be', 'afraid'), 7, 0, 6.295454545454546)
(('be', 'afraid', ','), 1, 0, 0.17687017067164812)
(('afraid', ',', 'they'), 1, 0, 0.17687017067164812)
((',', 'they', 'are'), 5, 0, 3.7220338983050847)
(('they', 'are', 'very'), 2, 0, 0.983389342294767)
(('are', 'very', 'small'), 1, 0, 0.17687017067164812)
(('very', 'small', ','), 3, 0, 1.7785588752196837)
(('small', ',', 'you'), 1, 0, 0.17687017067164812)
((',', 'you', 'see'), 11, 0, 8.671532846715328)
(('you', 'see', '--'), 4, 0, 2.9150197628458496)
(('see', '--', 'one'), 1, 0, 0.17687017067164812)
(('--', 'one', 'of'), 2, 0, 0.983389342294767)
(('one', 'of', 'our'), 3, 0, 1.7785588752196837)
(('of', 'our', 'small'), 1, 0, 0.17687017067164812)
(('our', 'small', 'eggs'), 1, 0, 0.17687017067164812)
(('small', 'eggs', 'will'), 1, 0, 0.17687017067164812)
(('eggs', 'will', 'not'), 1, 0, 0.17687017067164812)
(('will', 'not', 'hurt'), 1, 0, 0.17687017067164812)
(('not', 'hurt', 'you'), 1, 0, 0.17687017067164812)
(('hurt', 'you', '.'), 1, 0, 0.17687017067164812)
(('you', '.', ''), 66, 0, 201.0)
((',', 'let', 'Emma'), 1, 0, 0.17687017067164812)
(('let', 'Emma', 'help'), 1, 0, 0.17687017067164812)
(('Emma', 'help', 'you'), 1, 0, 0.17687017067164812)
(('help', 'you', 'to'), 1, 0, 0.17687017067164812)
(('you', 'to', 'a'), 1, 0, 0.17687017067164812)
(('to', 'a', '_little_'), 1, 0, 0.17687017067164812)
(('a', '_little_', 'bit'), 1, 0, 0.17687017067164812)
(('_little_', 'bit', 'of'), 1, 0, 0.17687017067164812)
(('bit', 'of', 'tart'), 1, 0, 0.17687017067164812)
(('of', 'tart', '--'), 1, 0, 0.17687017067164812)
(('tart', '--', 'a'), 1, 0, 0.17687017067164812)
(('--', 'a', '_very_'), 1, 0, 0.17687017067164812)
(('a', '_very_', 'little'), 1, 0, 0.17687017067164812)
(('_very_', 'little', 'bit'), 1, 0, 0.17687017067164812)
(('little', 'bit', '.'), 1, 0, 0.17687017067164812)
(('bit', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Ours'), 1, 0, 0.17687017067164812)
(('', 'Ours', 'are'), 1, 0, 0.17687017067164812)
(('Ours', 'are', 'all'), 1, 0, 0.17687017067164812)
(('are', 'all', 'apple'), 1, 0, 0.17687017067164812)
(('all', 'apple', '-'), 1, 0, 0.17687017067164812)
(('apple', '-', 'tarts'), 1, 0, 0.17687017067164812)
(('-', 'tarts', '.'), 1, 0, 0.17687017067164812)
(('tarts', '.', ''), 1, 0, 0.17687017067164812)
(('', 'You', 'need'), 2, 0, 0.983389342294767)
(('You', 'need', 'not'), 3, 0, 1.7785588752196837)
(('be', 'afraid', 'of'), 7, 0, 6.295454545454546)
(('afraid', 'of', 'unwholesome'), 1, 0, 0.17687017067164812)
(('of', 'unwholesome', 'preserves'), 1, 0, 0.17687017067164812)
(('unwholesome', 'preserves', 'here'), 1, 0, 0.17687017067164812)
(('preserves', 'here', '.'), 1, 0, 0.17687017067164812)
(('', 'I', 'do'), 34, 0, 40.833333333333336)
(('do', 'not', 'advise'), 2, 0, 0.983389342294767)
(('not', 'advise', 'the'), 1, 0, 0.17687017067164812)
(('advise', 'the', 'custard'), 1, 0, 0.17687017067164812)
(('the', 'custard', '.'), 1, 0, 0.17687017067164812)
(('custard', '.', ''), 1, 0, 0.17687017067164812)
(('Goddard', ',', 'what'), 1, 0, 0.17687017067164812)
((',', 'what', 'say'), 1, 0, 0.17687017067164812)
(('what', 'say', 'you'), 1, 0, 0.17687017067164812)
(('say', 'you', 'to'), 2, 0, 0.983389342294767)
(('you', 'to', '_half_'), 1, 0, 0.17687017067164812)
(('to', '_half_', 'a'), 1, 0, 0.17687017067164812)
(('_half_', 'a', 'glass'), 1, 0, 0.17687017067164812)
(('a', 'glass', 'of'), 1, 0, 0.17687017067164812)
(('glass', 'of', 'wine'), 1, 0, 0.17687017067164812)
(('of', 'wine', '?'), 1, 0, 0.17687017067164812)
(('wine', '?', ''), 1, 0, 0.17687017067164812)
(('', 'A', '_small_'), 1, 0, 0.17687017067164812)
(('A', '_small_', 'half'), 1, 0, 0.17687017067164812)
(('_small_', 'half', '-'), 1, 0, 0.17687017067164812)
(('half', '-', 'glass'), 1, 0, 0.17687017067164812)
(('-', 'glass', ','), 1, 0, 0.17687017067164812)
(('glass', ',', 'put'), 1, 0, 0.17687017067164812)
((',', 'put', 'into'), 1, 0, 0.17687017067164812)
(('put', 'into', 'a'), 1, 0, 0.17687017067164812)
(('into', 'a', 'tumbler'), 1, 0, 0.17687017067164812)
(('a', 'tumbler', 'of'), 1, 0, 0.17687017067164812)
(('tumbler', 'of', 'water'), 1, 0, 0.17687017067164812)
(('of', 'water', '?'), 1, 0, 0.17687017067164812)
(('water', '?', ''), 1, 0, 0.17687017067164812)
(('not', 'think', 'it'), 9, 0, 6.5983606557377055)
(('think', 'it', 'could'), 1, 0, 0.17687017067164812)
(('it', 'could', 'disagree'), 1, 0, 0.17687017067164812)
(('could', 'disagree', 'with'), 1, 0, 0.17687017067164812)
(('disagree', 'with', 'you'), 1, 0, 0.17687017067164812)
(('with', 'you', '."'), 3, 0, 1.7785588752196837)
(('you', '."', ''), 33, 0, 22.666666666666664)
(('', 'Emma', 'allowed'), 1, 0, 0.17687017067164812)
(('Emma', 'allowed', 'her'), 1, 0, 0.17687017067164812)
(('allowed', 'her', 'father'), 1, 0, 0.17687017067164812)
(('her', 'father', 'to'), 2, 0, 0.983389342294767)
(('father', 'to', 'talk'), 1, 0, 0.17687017067164812)
(('talk', '--', 'but'), 1, 0, 0.17687017067164812)
(('--', 'but', 'supplied'), 1, 0, 0.17687017067164812)
(('but', 'supplied', 'her'), 1, 0, 0.17687017067164812)
(('supplied', 'her', 'visitors'), 1, 0, 0.17687017067164812)
(('her', 'visitors', 'in'), 1, 0, 0.17687017067164812)
(('visitors', 'in', 'a'), 1, 0, 0.17687017067164812)
(('in', 'a', 'much'), 1, 0, 0.17687017067164812)
(('a', 'much', 'more'), 3, 0, 1.7785588752196837)
(('much', 'more', 'satisfactory'), 1, 0, 0.17687017067164812)
(('more', 'satisfactory', 'style'), 1, 0, 0.17687017067164812)
(('satisfactory', 'style', ','), 1, 0, 0.17687017067164812)
(('style', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'on'), 7, 0, 6.295454545454546)
(('and', 'on', 'the'), 4, 0, 2.9150197628458496)
(('on', 'the', 'present'), 2, 0, 0.983389342294767)
(('the', 'present', 'evening'), 1, 0, 0.17687017067164812)
(('present', 'evening', 'had'), 1, 0, 0.17687017067164812)
(('evening', 'had', 'particular'), 1, 0, 0.17687017067164812)
(('had', 'particular', 'pleasure'), 2, 0, 0.983389342294767)
(('particular', 'pleasure', 'in'), 1, 0, 0.17687017067164812)
(('pleasure', 'in', 'sending'), 1, 0, 0.17687017067164812)
(('in', 'sending', 'them'), 1, 0, 0.17687017067164812)
(('sending', 'them', 'away'), 1, 0, 0.17687017067164812)
(('them', 'away', 'happy'), 1, 0, 0.17687017067164812)
(('away', 'happy', '.'), 1, 0, 0.17687017067164812)
(('happy', '.', ''), 12, 0, 11.424242424242424)
(('', 'The', 'happiness'), 2, 0, 0.983389342294767)
(('The', 'happiness', 'of'), 2, 0, 0.983389342294767)
(('happiness', 'of', 'Miss'), 1, 0, 0.17687017067164812)
(('of', 'Miss', 'Smith'), 7, 0, 6.295454545454546)
(('Smith', 'was', 'quite'), 1, 0, 0.17687017067164812)
(('was', 'quite', 'equal'), 1, 0, 0.17687017067164812)
(('quite', 'equal', 'to'), 1, 0, 0.17687017067164812)
(('to', 'her', 'intentions'), 1, 0, 0.17687017067164812)
(('her', 'intentions', '.'), 1, 0, 0.17687017067164812)
(('intentions', '.', ''), 2, 0, 0.983389342294767)
(('', 'Miss', 'Woodhouse'), 20, 0, 21.0)
(('Miss', 'Woodhouse', 'was'), 3, 0, 1.7785588752196837)
(('Woodhouse', 'was', 'so'), 1, 0, 0.17687017067164812)
(('was', 'so', 'great'), 1, 0, 0.17687017067164812)
(('so', 'great', 'a'), 6, 0, 4.48816029143898)
(('great', 'a', 'personage'), 1, 0, 0.17687017067164812)
(('a', 'personage', 'in'), 1, 0, 0.17687017067164812)
(('personage', 'in', 'Highbury'), 1, 0, 0.17687017067164812)
(('Highbury', ',', 'that'), 2, 0, 0.983389342294767)
(('that', 'the', 'prospect'), 1, 0, 0.17687017067164812)
(('the', 'prospect', 'of'), 6, 0, 4.48816029143898)
(('prospect', 'of', 'the'), 3, 0, 1.7785588752196837)
(('of', 'the', 'introduction'), 1, 0, 0.17687017067164812)
(('the', 'introduction', 'had'), 2, 0, 0.983389342294767)
(('introduction', 'had', 'given'), 1, 0, 0.17687017067164812)
(('had', 'given', 'as'), 1, 0, 0.17687017067164812)
(('given', 'as', 'much'), 1, 0, 0.17687017067164812)
(('as', 'much', 'panic'), 1, 0, 0.17687017067164812)
(('much', 'panic', 'as'), 1, 0, 0.17687017067164812)
(('panic', 'as', 'pleasure'), 1, 0, 0.17687017067164812)
(('as', 'pleasure', ';'), 1, 0, 0.17687017067164812)
(('pleasure', ';', 'but'), 3, 0, 1.7785588752196837)
(('but', 'the', 'humble'), 1, 0, 0.17687017067164812)
(('the', 'humble', ','), 1, 0, 0.17687017067164812)
(('humble', ',', 'grateful'), 1, 0, 0.17687017067164812)
((',', 'grateful', 'little'), 1, 0, 0.17687017067164812)
(('grateful', 'little', 'girl'), 1, 0, 0.17687017067164812)
(('little', 'girl', 'went'), 1, 0, 0.17687017067164812)
(('girl', 'went', 'off'), 1, 0, 0.17687017067164812)
(('went', 'off', 'with'), 1, 0, 0.17687017067164812)
(('off', 'with', 'highly'), 1, 0, 0.17687017067164812)
(('with', 'highly', 'gratified'), 1, 0, 0.17687017067164812)
(('highly', 'gratified', 'feelings'), 1, 0, 0.17687017067164812)
(('gratified', 'feelings', ','), 1, 0, 0.17687017067164812)
(('feelings', ',', 'delighted'), 1, 0, 0.17687017067164812)
((',', 'delighted', 'with'), 1, 0, 0.17687017067164812)
(('delighted', 'with', 'the'), 2, 0, 0.983389342294767)
(('with', 'the', 'affability'), 1, 0, 0.17687017067164812)
(('the', 'affability', 'with'), 1, 0, 0.17687017067164812)
(('affability', 'with', 'which'), 1, 0, 0.17687017067164812)
(('with', 'which', 'Miss'), 1, 0, 0.17687017067164812)
(('which', 'Miss', 'Woodhouse'), 2, 0, 0.983389342294767)
(('Miss', 'Woodhouse', 'had'), 1, 0, 0.17687017067164812)
(('Woodhouse', 'had', 'treated'), 1, 0, 0.17687017067164812)
(('had', 'treated', 'her'), 1, 0, 0.17687017067164812)
(('treated', 'her', 'all'), 1, 0, 0.17687017067164812)
(('her', 'all', 'the'), 2, 0, 0.983389342294767)
(('all', 'the', 'evening'), 3, 0, 1.7785588752196837)
((',', 'and', 'actually'), 2, 0, 0.983389342294767)
(('and', 'actually', 'shaken'), 1, 0, 0.17687017067164812)
(('actually', 'shaken', 'hands'), 1, 0, 0.17687017067164812)
(('shaken', 'hands', 'with'), 2, 0, 0.983389342294767)
(('hands', 'with', 'her'), 1, 0, 0.17687017067164812)
(('with', 'her', 'at'), 2, 0, 0.983389342294767)
(('her', 'at', 'last'), 2, 0, 0.983389342294767)
(('at', 'last', '!'), 1, 0, 0.17687017067164812)
(('last', '!', ''), 1, 0, 0.17687017067164812)
(('', 'CHAPTER', 'IV'), 3, 0, 1.7785588752196837)
(('CHAPTER', 'IV', ''), 3, 0, 1.7785588752196837)
(('IV', '', ''), 3, 0, 1.7785588752196837)
(('Harriet', 'Smith', "'"), 4, 0, 2.9150197628458496)
(("'", 's', 'intimacy'), 2, 0, 0.983389342294767)
(('s', 'intimacy', 'at'), 1, 0, 0.17687017067164812)
(('intimacy', 'at', 'Hartfield'), 1, 0, 0.17687017067164812)
(('at', 'Hartfield', 'was'), 1, 0, 0.17687017067164812)
(('Hartfield', 'was', 'soon'), 1, 0, 0.17687017067164812)
(('was', 'soon', 'a'), 1, 0, 0.17687017067164812)
(('soon', 'a', 'settled'), 1, 0, 0.17687017067164812)
(('a', 'settled', 'thing'), 1, 0, 0.17687017067164812)
(('settled', 'thing', '.'), 1, 0, 0.17687017067164812)
(('', '', 'Quick'), 1, 0, 0.17687017067164812)
(('', 'Quick', 'and'), 1, 0, 0.17687017067164812)
(('Quick', 'and', 'decided'), 1, 0, 0.17687017067164812)
(('and', 'decided', 'in'), 1, 0, 0.17687017067164812)
(('decided', 'in', 'her'), 1, 0, 0.17687017067164812)
(('in', 'her', 'ways'), 1, 0, 0.17687017067164812)
(('her', 'ways', ','), 1, 0, 0.17687017067164812)
(('ways', ',', 'Emma'), 1, 0, 0.17687017067164812)
((',', 'Emma', 'lost'), 1, 0, 0.17687017067164812)
(('Emma', 'lost', 'no'), 1, 0, 0.17687017067164812)
(('lost', 'no', 'time'), 2, 0, 0.983389342294767)
(('no', 'time', 'in'), 3, 0, 1.7785588752196837)
(('time', 'in', 'inviting'), 1, 0, 0.17687017067164812)
(('in', 'inviting', ','), 1, 0, 0.17687017067164812)
(('inviting', ',', 'encouraging'), 1, 0, 0.17687017067164812)
((',', 'encouraging', ','), 1, 0, 0.17687017067164812)
(('encouraging', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'telling'), 1, 0, 0.17687017067164812)
(('and', 'telling', 'her'), 1, 0, 0.17687017067164812)
(('telling', 'her', 'to'), 1, 0, 0.17687017067164812)
(('her', 'to', 'come'), 2, 0, 0.983389342294767)
(('to', 'come', 'very'), 1, 0, 0.17687017067164812)
(('come', 'very', 'often'), 1, 0, 0.17687017067164812)
(('very', 'often', ';'), 1, 0, 0.17687017067164812)
(('often', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'as'), 22, 0, 16.03030303030303)
(('and', 'as', 'their'), 1, 0, 0.17687017067164812)
(('as', 'their', 'acquaintance'), 1, 0, 0.17687017067164812)
(('their', 'acquaintance', 'increased'), 1, 0, 0.17687017067164812)
(('acquaintance', 'increased', ','), 1, 0, 0.17687017067164812)
(('increased', ',', 'so'), 1, 0, 0.17687017067164812)
((',', 'so', 'did'), 1, 0, 0.17687017067164812)
(('so', 'did', 'their'), 1, 0, 0.17687017067164812)
(('did', 'their', 'satisfaction'), 1, 0, 0.17687017067164812)
(('their', 'satisfaction', 'in'), 1, 0, 0.17687017067164812)
(('satisfaction', 'in', 'each'), 1, 0, 0.17687017067164812)
(('in', 'each', 'other'), 1, 0, 0.17687017067164812)
(('each', 'other', '.'), 3, 0, 1.7785588752196837)
(('other', '.', ''), 20, 0, 21.0)
(('', 'As', 'a'), 5, 0, 3.7220338983050847)
(('As', 'a', 'walking'), 1, 0, 0.17687017067164812)
(('a', 'walking', 'companion'), 1, 0, 0.17687017067164812)
(('walking', 'companion', ','), 1, 0, 0.17687017067164812)
(('companion', ',', 'Emma'), 1, 0, 0.17687017067164812)
((',', 'Emma', 'had'), 8, 0, 7.927797833935018)
(('Emma', 'had', 'very'), 1, 0, 0.17687017067164812)
(('had', 'very', 'early'), 1, 0, 0.17687017067164812)
(('very', 'early', 'foreseen'), 1, 0, 0.17687017067164812)
(('early', 'foreseen', 'how'), 1, 0, 0.17687017067164812)
(('foreseen', 'how', 'useful'), 1, 0, 0.17687017067164812)
(('how', 'useful', 'she'), 1, 0, 0.17687017067164812)
(('useful', 'she', 'might'), 1, 0, 0.17687017067164812)
(('she', 'might', 'find'), 1, 0, 0.17687017067164812)
(('might', 'find', 'her'), 1, 0, 0.17687017067164812)
(('find', 'her', '.'), 1, 0, 0.17687017067164812)
(('', '', 'In'), 54, 0, 137.5)
(('', 'In', 'that'), 3, 0, 1.7785588752196837)
(('In', 'that', 'respect'), 2, 0, 0.983389342294767)
(('that', 'respect', 'Mrs'), 1, 0, 0.17687017067164812)
(('respect', 'Mrs', '.'), 2, 0, 0.983389342294767)
(('s', 'loss', 'had'), 1, 0, 0.17687017067164812)
(('loss', 'had', 'been'), 1, 0, 0.17687017067164812)
(('had', 'been', 'important'), 1, 0, 0.17687017067164812)
(('been', 'important', '.'), 1, 0, 0.17687017067164812)
(('important', '.', ''), 2, 0, 0.983389342294767)
(('Her', 'father', 'never'), 1, 0, 0.17687017067164812)
(('father', 'never', 'went'), 1, 0, 0.17687017067164812)
(('never', 'went', 'beyond'), 1, 0, 0.17687017067164812)
(('went', 'beyond', 'the'), 1, 0, 0.17687017067164812)
(('beyond', 'the', 'shrubbery'), 2, 0, 0.983389342294767)
(('the', 'shrubbery', ','), 1, 0, 0.17687017067164812)
(('shrubbery', ',', 'where'), 1, 0, 0.17687017067164812)
((',', 'where', 'two'), 1, 0, 0.17687017067164812)
(('where', 'two', 'divisions'), 1, 0, 0.17687017067164812)
(('two', 'divisions', 'of'), 1, 0, 0.17687017067164812)
(('divisions', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'ground'), 2, 0, 0.983389342294767)
(('the', 'ground', 'sufficed'), 1, 0, 0.17687017067164812)
(('ground', 'sufficed', 'him'), 1, 0, 0.17687017067164812)
(('sufficed', 'him', 'for'), 1, 0, 0.17687017067164812)
(('him', 'for', 'his'), 3, 0, 1.7785588752196837)
(('for', 'his', 'long'), 1, 0, 0.17687017067164812)
(('his', 'long', 'walk'), 1, 0, 0.17687017067164812)
(('long', 'walk', ','), 1, 0, 0.17687017067164812)
(('walk', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'his'), 2, 0, 0.983389342294767)
(('or', 'his', 'short'), 1, 0, 0.17687017067164812)
(('his', 'short', ','), 3, 0, 1.7785588752196837)
(('short', ',', 'as'), 1, 0, 0.17687017067164812)
(('as', 'the', 'year'), 1, 0, 0.17687017067164812)
(('the', 'year', 'varied'), 1, 0, 0.17687017067164812)
(('year', 'varied', ';'), 1, 0, 0.17687017067164812)
(('varied', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'since'), 1, 0, 0.17687017067164812)
(('and', 'since', 'Mrs'), 1, 0, 0.17687017067164812)
(('since', 'Mrs', '.'), 1, 0, 0.17687017067164812)
(('s', 'marriage', 'her'), 1, 0, 0.17687017067164812)
(('marriage', 'her', 'exercise'), 1, 0, 0.17687017067164812)
(('her', 'exercise', 'had'), 1, 0, 0.17687017067164812)
(('exercise', 'had', 'been'), 1, 0, 0.17687017067164812)
(('had', 'been', 'too'), 2, 0, 0.983389342294767)
(('been', 'too', 'much'), 2, 0, 0.983389342294767)
(('too', 'much', 'confined'), 1, 0, 0.17687017067164812)
(('much', 'confined', '.'), 1, 0, 0.17687017067164812)
(('confined', '.', ''), 1, 0, 0.17687017067164812)
(('She', 'had', 'ventured'), 1, 0, 0.17687017067164812)
(('had', 'ventured', 'once'), 1, 0, 0.17687017067164812)
(('ventured', 'once', 'alone'), 1, 0, 0.17687017067164812)
(('once', 'alone', 'to'), 1, 0, 0.17687017067164812)
(('alone', 'to', 'Randalls'), 1, 0, 0.17687017067164812)
(('Randalls', ',', 'but'), 2, 0, 0.983389342294767)
((',', 'but', 'it'), 18, 0, 11.585365853658537)
(('was', 'not', 'pleasant'), 1, 0, 0.17687017067164812)
(('not', 'pleasant', ';'), 1, 0, 0.17687017067164812)
(('pleasant', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'a'), 7, 0, 6.295454545454546)
(('and', 'a', 'Harriet'), 1, 0, 0.17687017067164812)
(('a', 'Harriet', 'Smith'), 1, 0, 0.17687017067164812)
(('Harriet', 'Smith', ','), 6, 0, 4.48816029143898)
(('Smith', ',', 'therefore'), 1, 0, 0.17687017067164812)
(('therefore', ',', 'one'), 1, 0, 0.17687017067164812)
((',', 'one', 'whom'), 1, 0, 0.17687017067164812)
(('one', 'whom', 'she'), 1, 0, 0.17687017067164812)
(('she', 'could', 'summon'), 2, 0, 0.983389342294767)
(('could', 'summon', 'at'), 1, 0, 0.17687017067164812)
(('summon', 'at', 'any'), 1, 0, 0.17687017067164812)
(('any', 'time', 'to'), 3, 0, 1.7785588752196837)
(('time', 'to', 'a'), 2, 0, 0.983389342294767)
(('to', 'a', 'walk'), 1, 0, 0.17687017067164812)
(('a', 'walk', ','), 1, 0, 0.17687017067164812)
(('walk', ',', 'would'), 1, 0, 0.17687017067164812)
((',', 'would', 'be'), 12, 0, 11.424242424242424)
(('be', 'a', 'valuable'), 1, 0, 0.17687017067164812)
(('a', 'valuable', 'addition'), 1, 0, 0.17687017067164812)
(('valuable', 'addition', 'to'), 1, 0, 0.17687017067164812)
(('addition', 'to', 'her'), 1, 0, 0.17687017067164812)
(('to', 'her', 'privileges'), 1, 0, 0.17687017067164812)
(('her', 'privileges', '.'), 1, 0, 0.17687017067164812)
(('privileges', '.', ''), 1, 0, 0.17687017067164812)
(('', 'But', 'in'), 2, 0, 0.983389342294767)
(('But', 'in', 'every'), 1, 0, 0.17687017067164812)
(('in', 'every', 'respect'), 4, 0, 2.9150197628458496)
(('every', 'respect', ','), 3, 0, 1.7785588752196837)
(('respect', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'she'), 19, 0, 20.0)
(('as', 'she', 'saw'), 1, 0, 0.17687017067164812)
(('she', 'saw', 'more'), 1, 0, 0.17687017067164812)
(('saw', 'more', 'of'), 1, 0, 0.17687017067164812)
(('more', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', ','), 9, 0, 6.5983606557377055)
((',', 'she', 'approved'), 1, 0, 0.17687017067164812)
(('she', 'approved', 'her'), 1, 0, 0.17687017067164812)
(('approved', 'her', ','), 1, 0, 0.17687017067164812)
(('her', ',', 'and'), 37, 0, 44.333333333333336)
(('and', 'was', 'confirmed'), 1, 0, 0.17687017067164812)
(('was', 'confirmed', 'in'), 1, 0, 0.17687017067164812)
(('confirmed', 'in', 'all'), 1, 0, 0.17687017067164812)
(('in', 'all', 'her'), 5, 0, 3.7220338983050847)
(('all', 'her', 'kind'), 1, 0, 0.17687017067164812)
(('her', 'kind', 'designs'), 1, 0, 0.17687017067164812)
(('kind', 'designs', '.'), 1, 0, 0.17687017067164812)
(('designs', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Harriet', 'certainly'), 1, 0, 0.17687017067164812)
(('Harriet', 'certainly', 'was'), 1, 0, 0.17687017067164812)
(('certainly', 'was', 'not'), 1, 0, 0.17687017067164812)
(('was', 'not', 'clever'), 1, 0, 0.17687017067164812)
(('not', 'clever', ','), 1, 0, 0.17687017067164812)
(('clever', ',', 'but'), 1, 0, 0.17687017067164812)
(('but', 'she', 'had'), 5, 0, 3.7220338983050847)
(('had', 'a', 'sweet'), 1, 0, 0.17687017067164812)
(('a', 'sweet', ','), 1, 0, 0.17687017067164812)
(('sweet', ',', 'docile'), 1, 0, 0.17687017067164812)
((',', 'docile', ','), 1, 0, 0.17687017067164812)
(('docile', ',', 'grateful'), 1, 0, 0.17687017067164812)
((',', 'grateful', 'disposition'), 1, 0, 0.17687017067164812)
(('grateful', 'disposition', ','), 1, 0, 0.17687017067164812)
(('disposition', ',', 'was'), 1, 0, 0.17687017067164812)
((',', 'was', 'totally'), 1, 0, 0.17687017067164812)
(('was', 'totally', 'free'), 1, 0, 0.17687017067164812)
(('totally', 'free', 'from'), 1, 0, 0.17687017067164812)
(('free', 'from', 'conceit'), 1, 0, 0.17687017067164812)
(('from', 'conceit', ','), 1, 0, 0.17687017067164812)
(('conceit', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'only'), 18, 0, 11.585365853658537)
(('and', 'only', 'desiring'), 1, 0, 0.17687017067164812)
(('only', 'desiring', 'to'), 1, 0, 0.17687017067164812)
(('desiring', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'guided'), 2, 0, 0.983389342294767)
(('be', 'guided', 'by'), 1, 0, 0.17687017067164812)
(('guided', 'by', 'any'), 1, 0, 0.17687017067164812)
(('by', 'any', 'one'), 2, 0, 0.983389342294767)
(('any', 'one', 'she'), 2, 0, 0.983389342294767)
(('one', 'she', 'looked'), 1, 0, 0.17687017067164812)
(('she', 'looked', 'up'), 2, 0, 0.983389342294767)
(('up', 'to', '.'), 1, 0, 0.17687017067164812)
(('to', '.', ''), 13, 0, 10.137931034482758)
(('', 'Her', 'early'), 1, 0, 0.17687017067164812)
(('Her', 'early', 'attachment'), 1, 0, 0.17687017067164812)
(('early', 'attachment', 'to'), 1, 0, 0.17687017067164812)
(('attachment', 'to', 'herself'), 2, 0, 0.983389342294767)
(('to', 'herself', 'was'), 2, 0, 0.983389342294767)
(('herself', 'was', 'very'), 1, 0, 0.17687017067164812)
(('was', 'very', 'amiable'), 1, 0, 0.17687017067164812)
(('very', 'amiable', ';'), 1, 0, 0.17687017067164812)
(('amiable', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'her', 'inclination'), 1, 0, 0.17687017067164812)
(('her', 'inclination', 'for'), 1, 0, 0.17687017067164812)
(('inclination', 'for', 'good'), 1, 0, 0.17687017067164812)
(('for', 'good', 'company'), 1, 0, 0.17687017067164812)
(('good', 'company', ','), 2, 0, 0.983389342294767)
(('company', ',', 'and'), 5, 0, 3.7220338983050847)
((',', 'and', 'power'), 1, 0, 0.17687017067164812)
(('and', 'power', 'of'), 1, 0, 0.17687017067164812)
(('power', 'of', 'appreciating'), 1, 0, 0.17687017067164812)
(('of', 'appreciating', 'what'), 1, 0, 0.17687017067164812)
(('appreciating', 'what', 'was'), 1, 0, 0.17687017067164812)
(('what', 'was', 'elegant'), 1, 0, 0.17687017067164812)
(('was', 'elegant', 'and'), 1, 0, 0.17687017067164812)
(('elegant', 'and', 'clever'), 1, 0, 0.17687017067164812)
(('and', 'clever', ','), 1, 0, 0.17687017067164812)
(('clever', ',', 'shewed'), 1, 0, 0.17687017067164812)
((',', 'shewed', 'that'), 2, 0, 0.983389342294767)
(('shewed', 'that', 'there'), 1, 0, 0.17687017067164812)
(('that', 'there', 'was'), 13, 0, 10.137931034482758)
(('was', 'no', 'want'), 2, 0, 0.983389342294767)
(('no', 'want', 'of'), 3, 0, 1.7785588752196837)
(('want', 'of', 'taste'), 2, 0, 0.983389342294767)
(('of', 'taste', ','), 2, 0, 0.983389342294767)
(('taste', ',', 'though'), 1, 0, 0.17687017067164812)
((',', 'though', 'strength'), 1, 0, 0.17687017067164812)
(('though', 'strength', 'of'), 1, 0, 0.17687017067164812)
(('strength', 'of', 'understanding'), 1, 0, 0.17687017067164812)
(('of', 'understanding', 'must'), 1, 0, 0.17687017067164812)
(('understanding', 'must', 'not'), 1, 0, 0.17687017067164812)
(('must', 'not', 'be'), 14, 0, 11.428571428571427)
(('not', 'be', 'expected'), 3, 0, 1.7785588752196837)
(('be', 'expected', '.'), 1, 0, 0.17687017067164812)
(('expected', '.', ''), 6, 0, 4.48816029143898)
(('', '', 'Altogether'), 1, 0, 0.17687017067164812)
(('', 'Altogether', 'she'), 1, 0, 0.17687017067164812)
(('Altogether', 'she', 'was'), 1, 0, 0.17687017067164812)
(('she', 'was', 'quite'), 5, 0, 3.7220338983050847)
(('was', 'quite', 'convinced'), 2, 0, 0.983389342294767)
(('quite', 'convinced', 'of'), 2, 0, 0.983389342294767)
(('convinced', 'of', 'Harriet'), 1, 0, 0.17687017067164812)
(('of', 'Harriet', 'Smith'), 2, 0, 0.983389342294767)
(('s', 'being', 'exactly'), 1, 0, 0.17687017067164812)
(('being', 'exactly', 'the'), 1, 0, 0.17687017067164812)
(('exactly', 'the', 'young'), 1, 0, 0.17687017067164812)
(('the', 'young', 'friend'), 1, 0, 0.17687017067164812)
(('young', 'friend', 'she'), 1, 0, 0.17687017067164812)
(('friend', 'she', 'wanted'), 1, 0, 0.17687017067164812)
(('she', 'wanted', '--'), 1, 0, 0.17687017067164812)
(('wanted', '--', 'exactly'), 1, 0, 0.17687017067164812)
(('--', 'exactly', 'the'), 1, 0, 0.17687017067164812)
(('exactly', 'the', 'something'), 1, 0, 0.17687017067164812)
(('the', 'something', 'which'), 1, 0, 0.17687017067164812)
(('something', 'which', 'her'), 1, 0, 0.17687017067164812)
(('which', 'her', 'home'), 1, 0, 0.17687017067164812)
(('her', 'home', 'required'), 1, 0, 0.17687017067164812)
(('home', 'required', '.'), 1, 0, 0.17687017067164812)
(('required', '.', ''), 2, 0, 0.983389342294767)
(('', 'Such', 'a'), 10, 0, 9.36024844720497)
(('Such', 'a', 'friend'), 1, 0, 0.17687017067164812)
(('a', 'friend', 'as'), 3, 0, 1.7785588752196837)
(('friend', 'as', 'Mrs'), 1, 0, 0.17687017067164812)
(('as', 'Mrs', '.'), 13, 0, 10.137931034482758)
(('Weston', 'was', 'out'), 1, 0, 0.17687017067164812)
(('was', 'out', 'of'), 3, 0, 1.7785588752196837)
(('of', 'the', 'question'), 9, 0, 6.5983606557377055)
(('the', 'question', '.'), 3, 0, 1.7785588752196837)
(('question', '.', ''), 9, 0, 6.5983606557377055)
(('', '', 'Two'), 7, 0, 6.295454545454546)
(('', 'Two', 'such'), 2, 0, 0.983389342294767)
(('Two', 'such', 'could'), 1, 0, 0.17687017067164812)
(('such', 'could', 'never'), 1, 0, 0.17687017067164812)
(('could', 'never', 'be'), 1, 0, 0.17687017067164812)
(('never', 'be', 'granted'), 1, 0, 0.17687017067164812)
(('be', 'granted', '.'), 1, 0, 0.17687017067164812)
(('granted', '.', ''), 1, 0, 0.17687017067164812)
(('Two', 'such', 'she'), 1, 0, 0.17687017067164812)
(('such', 'she', 'did'), 1, 0, 0.17687017067164812)
(('did', 'not', 'want'), 5, 0, 3.7220338983050847)
(('not', 'want', '.'), 1, 0, 0.17687017067164812)
(('want', '.', ''), 1, 0, 0.17687017067164812)
(('It', 'was', 'quite'), 2, 0, 0.983389342294767)
(('was', 'quite', 'a'), 4, 0, 2.9150197628458496)
(('quite', 'a', 'different'), 5, 0, 3.7220338983050847)
(('a', 'different', 'sort'), 3, 0, 1.7785588752196837)
(('different', 'sort', 'of'), 1, 0, 0.17687017067164812)
(('sort', 'of', 'thing'), 9, 0, 6.5983606557377055)
(('of', 'thing', ','), 1, 0, 0.17687017067164812)
(('thing', ',', 'a'), 1, 0, 0.17687017067164812)
((',', 'a', 'sentiment'), 1, 0, 0.17687017067164812)
(('a', 'sentiment', 'distinct'), 1, 0, 0.17687017067164812)
(('sentiment', 'distinct', 'and'), 1, 0, 0.17687017067164812)
(('distinct', 'and', 'independent'), 1, 0, 0.17687017067164812)
(('and', 'independent', '.'), 1, 0, 0.17687017067164812)
(('independent', '.', ''), 2, 0, 0.983389342294767)
(('Weston', 'was', 'the'), 2, 0, 0.983389342294767)
(('was', 'the', 'object'), 1, 0, 0.17687017067164812)
(('the', 'object', 'of'), 7, 0, 6.295454545454546)
(('object', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'regard'), 1, 0, 0.17687017067164812)
(('a', 'regard', 'which'), 1, 0, 0.17687017067164812)
(('regard', 'which', 'had'), 1, 0, 0.17687017067164812)
(('which', 'had', 'its'), 1, 0, 0.17687017067164812)
(('had', 'its', 'basis'), 1, 0, 0.17687017067164812)
(('its', 'basis', 'in'), 1, 0, 0.17687017067164812)
(('basis', 'in', 'gratitude'), 1, 0, 0.17687017067164812)
(('in', 'gratitude', 'and'), 1, 0, 0.17687017067164812)
(('gratitude', 'and', 'esteem'), 1, 0, 0.17687017067164812)
(('and', 'esteem', '.'), 1, 0, 0.17687017067164812)
(('esteem', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Harriet', 'would'), 3, 0, 1.7785588752196837)
(('Harriet', 'would', 'be'), 4, 0, 2.9150197628458496)
(('would', 'be', 'loved'), 1, 0, 0.17687017067164812)
(('be', 'loved', 'as'), 1, 0, 0.17687017067164812)
(('loved', 'as', 'one'), 1, 0, 0.17687017067164812)
(('as', 'one', 'to'), 1, 0, 0.17687017067164812)
(('she', 'could', 'be'), 7, 0, 6.295454545454546)
(('could', 'be', 'useful'), 1, 0, 0.17687017067164812)
(('be', 'useful', '.'), 1, 0, 0.17687017067164812)
(('useful', '.', ''), 2, 0, 0.983389342294767)
(('', 'For', 'Mrs'), 1, 0, 0.17687017067164812)
(('For', 'Mrs', '.'), 1, 0, 0.17687017067164812)
(('.', 'Weston', 'there'), 1, 0, 0.17687017067164812)
(('Weston', 'there', 'was'), 1, 0, 0.17687017067164812)
(('there', 'was', 'nothing'), 5, 0, 3.7220338983050847)
(('was', 'nothing', 'to'), 4, 0, 2.9150197628458496)
(('nothing', 'to', 'be'), 7, 0, 6.295454545454546)
(('to', 'be', 'done'), 18, 0, 11.585365853658537)
(('be', 'done', ';'), 2, 0, 0.983389342294767)
(('done', ';', 'for'), 1, 0, 0.17687017067164812)
((';', 'for', 'Harriet'), 2, 0, 0.983389342294767)
(('for', 'Harriet', 'every'), 1, 0, 0.17687017067164812)
(('Harriet', 'every', 'thing'), 1, 0, 0.17687017067164812)
(('every', 'thing', '.'), 11, 0, 8.671532846715328)
(('', 'Her', 'first'), 1, 0, 0.17687017067164812)
(('Her', 'first', 'attempts'), 1, 0, 0.17687017067164812)
(('first', 'attempts', 'at'), 1, 0, 0.17687017067164812)
(('attempts', 'at', 'usefulness'), 1, 0, 0.17687017067164812)
(('at', 'usefulness', 'were'), 1, 0, 0.17687017067164812)
(('usefulness', 'were', 'in'), 1, 0, 0.17687017067164812)
(('were', 'in', 'an'), 1, 0, 0.17687017067164812)
(('in', 'an', 'endeavour'), 1, 0, 0.17687017067164812)
(('an', 'endeavour', 'to'), 3, 0, 1.7785588752196837)
(('endeavour', 'to', 'find'), 1, 0, 0.17687017067164812)
(('to', 'find', 'out'), 1, 0, 0.17687017067164812)
(('find', 'out', 'who'), 1, 0, 0.17687017067164812)
(('out', 'who', 'were'), 1, 0, 0.17687017067164812)
(('who', 'were', 'the'), 1, 0, 0.17687017067164812)
(('were', 'the', 'parents'), 1, 0, 0.17687017067164812)
(('the', 'parents', ','), 1, 0, 0.17687017067164812)
(('parents', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'Harriet'), 1, 0, 0.17687017067164812)
(('but', 'Harriet', 'could'), 1, 0, 0.17687017067164812)
(('Harriet', 'could', 'not'), 5, 0, 3.7220338983050847)
(('could', 'not', 'tell'), 3, 0, 1.7785588752196837)
(('not', 'tell', '.'), 3, 0, 1.7785588752196837)
(('tell', '.', ''), 6, 0, 4.48816029143898)
(('She', 'was', 'ready'), 1, 0, 0.17687017067164812)
(('was', 'ready', 'to'), 5, 0, 3.7220338983050847)
(('ready', 'to', 'tell'), 1, 0, 0.17687017067164812)
(('to', 'tell', 'every'), 2, 0, 0.983389342294767)
(('tell', 'every', 'thing'), 2, 0, 0.983389342294767)
(('thing', 'in', 'her'), 2, 0, 0.983389342294767)
(('in', 'her', 'power'), 5, 0, 3.7220338983050847)
(('her', 'power', ','), 3, 0, 1.7785588752196837)
(('power', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'on'), 2, 0, 0.983389342294767)
(('but', 'on', 'this'), 1, 0, 0.17687017067164812)
(('on', 'this', 'subject'), 5, 0, 3.7220338983050847)
(('this', 'subject', 'questions'), 1, 0, 0.17687017067164812)
(('subject', 'questions', 'were'), 1, 0, 0.17687017067164812)
(('questions', 'were', 'vain'), 1, 0, 0.17687017067164812)
(('were', 'vain', '.'), 1, 0, 0.17687017067164812)
(('vain', '.', ''), 6, 0, 4.48816029143898)
(('', 'Emma', 'was'), 39, 0, 18.18181818181818)
(('Emma', 'was', 'obliged'), 7, 0, 6.295454545454546)
(('was', 'obliged', 'to'), 22, 0, 16.03030303030303)
(('obliged', 'to', 'fancy'), 1, 0, 0.17687017067164812)
(('to', 'fancy', 'what'), 1, 0, 0.17687017067164812)
(('fancy', 'what', 'she'), 1, 0, 0.17687017067164812)
(('she', 'liked', '--'), 1, 0, 0.17687017067164812)
(('liked', '--', 'but'), 1, 0, 0.17687017067164812)
(('--', 'but', 'she'), 8, 0, 7.927797833935018)
(('but', 'she', 'could'), 4, 0, 2.9150197628458496)
(('she', 'could', 'never'), 2, 0, 0.983389342294767)
(('never', 'believe', 'that'), 1, 0, 0.17687017067164812)
(('believe', 'that', 'in'), 1, 0, 0.17687017067164812)
(('that', 'in', 'the'), 5, 0, 3.7220338983050847)
(('the', 'same', 'situation'), 2, 0, 0.983389342294767)
(('same', 'situation', '_she_'), 1, 0, 0.17687017067164812)
(('situation', '_she_', 'should'), 1, 0, 0.17687017067164812)
(('_she_', 'should', 'not'), 1, 0, 0.17687017067164812)
(('should', 'not', 'have'), 21, 0, 29.040000000000003)
(('not', 'have', 'discovered'), 1, 0, 0.17687017067164812)
(('have', 'discovered', 'the'), 1, 0, 0.17687017067164812)
(('discovered', 'the', 'truth'), 1, 0, 0.17687017067164812)
(('the', 'truth', '.'), 2, 0, 0.983389342294767)
(('truth', '.', ''), 5, 0, 3.7220338983050847)
(('', 'Harriet', 'had'), 6, 0, 4.48816029143898)
(('Harriet', 'had', 'no'), 2, 0, 0.983389342294767)
(('had', 'no', 'penetration'), 1, 0, 0.17687017067164812)
(('no', 'penetration', '.'), 1, 0, 0.17687017067164812)
(('penetration', '.', ''), 2, 0, 0.983389342294767)
(('had', 'been', 'satisfied'), 2, 0, 0.983389342294767)
(('been', 'satisfied', 'to'), 1, 0, 0.17687017067164812)
(('satisfied', 'to', 'hear'), 1, 0, 0.17687017067164812)
(('to', 'hear', 'and'), 1, 0, 0.17687017067164812)
(('hear', 'and', 'believe'), 1, 0, 0.17687017067164812)
(('and', 'believe', 'just'), 1, 0, 0.17687017067164812)
(('believe', 'just', 'what'), 1, 0, 0.17687017067164812)
(('just', 'what', 'Mrs'), 1, 0, 0.17687017067164812)
(('what', 'Mrs', '.'), 2, 0, 0.983389342294767)
(('.', 'Goddard', 'chose'), 1, 0, 0.17687017067164812)
(('Goddard', 'chose', 'to'), 1, 0, 0.17687017067164812)
(('chose', 'to', 'tell'), 1, 0, 0.17687017067164812)
(('tell', 'her', ';'), 2, 0, 0.983389342294767)
(('her', ';', 'and'), 21, 0, 29.040000000000003)
((';', 'and', 'looked'), 1, 0, 0.17687017067164812)
(('and', 'looked', 'no'), 1, 0, 0.17687017067164812)
(('looked', 'no', 'farther'), 1, 0, 0.17687017067164812)
(('no', 'farther', '.'), 1, 0, 0.17687017067164812)
(('farther', '.', ''), 2, 0, 0.983389342294767)
(('Goddard', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'the', 'teachers'), 1, 0, 0.17687017067164812)
(('the', 'teachers', ','), 1, 0, 0.17687017067164812)
(('teachers', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'the', 'girls'), 1, 0, 0.17687017067164812)
(('the', 'girls', 'and'), 1, 0, 0.17687017067164812)
(('girls', 'and', 'the'), 1, 0, 0.17687017067164812)
(('and', 'the', 'affairs'), 1, 0, 0.17687017067164812)
(('the', 'affairs', 'of'), 1, 0, 0.17687017067164812)
(('affairs', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'school'), 2, 0, 0.983389342294767)
(('the', 'school', 'in'), 1, 0, 0.17687017067164812)
(('school', 'in', 'general'), 1, 0, 0.17687017067164812)
(('in', 'general', ','), 10, 0, 9.36024844720497)
(('general', ',', 'formed'), 1, 0, 0.17687017067164812)
((',', 'formed', 'naturally'), 1, 0, 0.17687017067164812)
(('formed', 'naturally', 'a'), 1, 0, 0.17687017067164812)
(('naturally', 'a', 'great'), 1, 0, 0.17687017067164812)
(('a', 'great', 'part'), 2, 0, 0.983389342294767)
(('great', 'part', 'of'), 2, 0, 0.983389342294767)
(('part', 'of', 'the'), 12, 0, 11.424242424242424)
(('of', 'the', 'conversation'), 1, 0, 0.17687017067164812)
(('the', 'conversation', '--'), 2, 0, 0.983389342294767)
(('conversation', '--', 'and'), 1, 0, 0.17687017067164812)
(('--', 'and', 'but'), 1, 0, 0.17687017067164812)
(('and', 'but', 'for'), 2, 0, 0.983389342294767)
(('but', 'for', 'her'), 6, 0, 4.48816029143898)
(('for', 'her', 'acquaintance'), 1, 0, 0.17687017067164812)
(('her', 'acquaintance', 'with'), 1, 0, 0.17687017067164812)
(('acquaintance', 'with', 'the'), 1, 0, 0.17687017067164812)
(('with', 'the', 'Martins'), 4, 0, 2.9150197628458496)
(('the', 'Martins', 'of'), 1, 0, 0.17687017067164812)
(('Martins', 'of', 'Abbey'), 1, 0, 0.17687017067164812)
(('of', 'Abbey', '-'), 2, 0, 0.983389342294767)
(('Abbey', '-', 'Mill'), 7, 0, 6.295454545454546)
(('-', 'Mill', 'Farm'), 3, 0, 1.7785588752196837)
(('Mill', 'Farm', ','), 2, 0, 0.983389342294767)
(('Farm', ',', 'it'), 1, 0, 0.17687017067164812)
(('it', 'must', 'have'), 6, 0, 4.48816029143898)
(('must', 'have', 'been'), 23, 0, 14.608695652173914)
(('have', 'been', 'the'), 12, 0, 11.424242424242424)
(('been', 'the', 'whole'), 1, 0, 0.17687017067164812)
(('the', 'whole', '.'), 3, 0, 1.7785588752196837)
(('whole', '.', ''), 3, 0, 1.7785588752196837)
(('', 'But', 'the'), 8, 0, 7.927797833935018)
(('But', 'the', 'Martins'), 1, 0, 0.17687017067164812)
(('the', 'Martins', 'occupied'), 1, 0, 0.17687017067164812)
(('Martins', 'occupied', 'her'), 1, 0, 0.17687017067164812)
(('occupied', 'her', 'thoughts'), 1, 0, 0.17687017067164812)
(('her', 'thoughts', 'a'), 1, 0, 0.17687017067164812)
(('thoughts', 'a', 'good'), 1, 0, 0.17687017067164812)
(('a', 'good', 'deal'), 21, 0, 29.040000000000003)
(('good', 'deal', ';'), 2, 0, 0.983389342294767)
(('deal', ';', 'she'), 1, 0, 0.17687017067164812)
((';', 'she', 'had'), 8, 0, 7.927797833935018)
(('had', 'spent', 'two'), 1, 0, 0.17687017067164812)
(('spent', 'two', 'very'), 1, 0, 0.17687017067164812)
(('two', 'very', 'happy'), 1, 0, 0.17687017067164812)
(('very', 'happy', 'months'), 1, 0, 0.17687017067164812)
(('happy', 'months', 'with'), 1, 0, 0.17687017067164812)
(('months', 'with', 'them'), 1, 0, 0.17687017067164812)
(('with', 'them', ','), 10, 0, 9.36024844720497)
(('and', 'now', 'loved'), 1, 0, 0.17687017067164812)
(('now', 'loved', 'to'), 1, 0, 0.17687017067164812)
(('loved', 'to', 'talk'), 1, 0, 0.17687017067164812)
(('to', 'talk', 'of'), 6, 0, 4.48816029143898)
(('talk', 'of', 'the'), 3, 0, 1.7785588752196837)
(('of', 'the', 'pleasures'), 1, 0, 0.17687017067164812)
(('pleasures', 'of', 'her'), 2, 0, 0.983389342294767)
(('of', 'her', 'visit'), 1, 0, 0.17687017067164812)
(('her', 'visit', ','), 3, 0, 1.7785588752196837)
(('visit', ',', 'and'), 4, 0, 2.9150197628458496)
((',', 'and', 'describe'), 1, 0, 0.17687017067164812)
(('and', 'describe', 'the'), 1, 0, 0.17687017067164812)
(('describe', 'the', 'many'), 1, 0, 0.17687017067164812)
(('the', 'many', 'comforts'), 1, 0, 0.17687017067164812)
(('many', 'comforts', 'and'), 1, 0, 0.17687017067164812)
(('comforts', 'and', 'wonders'), 1, 0, 0.17687017067164812)
(('and', 'wonders', 'of'), 1, 0, 0.17687017067164812)
(('wonders', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'place'), 6, 0, 4.48816029143898)
(('the', 'place', '.'), 4, 0, 2.9150197628458496)
(('', 'Emma', 'encouraged'), 1, 0, 0.17687017067164812)
(('Emma', 'encouraged', 'her'), 1, 0, 0.17687017067164812)
(('encouraged', 'her', 'talkativeness'), 1, 0, 0.17687017067164812)
(('her', 'talkativeness', '--'), 1, 0, 0.17687017067164812)
(('talkativeness', '--', 'amused'), 1, 0, 0.17687017067164812)
(('--', 'amused', 'by'), 1, 0, 0.17687017067164812)
(('amused', 'by', 'such'), 1, 0, 0.17687017067164812)
(('by', 'such', 'a'), 4, 0, 2.9150197628458496)
(('such', 'a', 'picture'), 1, 0, 0.17687017067164812)
(('a', 'picture', 'of'), 1, 0, 0.17687017067164812)
(('picture', 'of', 'another'), 1, 0, 0.17687017067164812)
(('of', 'another', 'set'), 1, 0, 0.17687017067164812)
(('another', 'set', 'of'), 1, 0, 0.17687017067164812)
(('set', 'of', 'beings'), 1, 0, 0.17687017067164812)
(('of', 'beings', ','), 1, 0, 0.17687017067164812)
(('beings', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'enjoying'), 1, 0, 0.17687017067164812)
(('and', 'enjoying', 'the'), 1, 0, 0.17687017067164812)
(('enjoying', 'the', 'youthful'), 1, 0, 0.17687017067164812)
(('the', 'youthful', 'simplicity'), 1, 0, 0.17687017067164812)
(('youthful', 'simplicity', 'which'), 1, 0, 0.17687017067164812)
(('simplicity', 'which', 'could'), 1, 0, 0.17687017067164812)
(('which', 'could', 'speak'), 1, 0, 0.17687017067164812)
(('could', 'speak', 'with'), 1, 0, 0.17687017067164812)
(('speak', 'with', 'so'), 1, 0, 0.17687017067164812)
(('so', 'much', 'exultation'), 1, 0, 0.17687017067164812)
(('much', 'exultation', 'of'), 1, 0, 0.17687017067164812)
(('exultation', 'of', 'Mrs'), 1, 0, 0.17687017067164812)
(('Mrs', '.', 'Martin'), 8, 0, 7.927797833935018)
(('.', 'Martin', "'"), 6, 0, 4.48816029143898)
(('Martin', "'", 's'), 13, 0, 10.137931034482758)
(("'", 's', 'having'), 7, 0, 6.295454545454546)
(('s', 'having', '"'), 1, 0, 0.17687017067164812)
(('having', '"', '_two_'), 1, 0, 0.17687017067164812)
(('"', '_two_', 'parlours'), 1, 0, 0.17687017067164812)
(('_two_', 'parlours', ','), 1, 0, 0.17687017067164812)
(('parlours', ',', 'two'), 1, 0, 0.17687017067164812)
((',', 'two', 'very'), 1, 0, 0.17687017067164812)
(('two', 'very', 'good'), 1, 0, 0.17687017067164812)
(('very', 'good', 'parlours'), 1, 0, 0.17687017067164812)
(('good', 'parlours', ','), 1, 0, 0.17687017067164812)
(('parlours', ',', 'indeed'), 1, 0, 0.17687017067164812)
((',', 'indeed', ';'), 4, 0, 2.9150197628458496)
(('indeed', ';', 'one'), 1, 0, 0.17687017067164812)
((';', 'one', 'of'), 1, 0, 0.17687017067164812)
(('one', 'of', 'them'), 4, 0, 2.9150197628458496)
(('of', 'them', 'quite'), 1, 0, 0.17687017067164812)
(('them', 'quite', 'as'), 1, 0, 0.17687017067164812)
(('quite', 'as', 'large'), 1, 0, 0.17687017067164812)
(('as', 'large', 'as'), 1, 0, 0.17687017067164812)
(('large', 'as', 'Mrs'), 1, 0, 0.17687017067164812)
(('-', 'room', ';'), 1, 0, 0.17687017067164812)
(('room', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'of'), 7, 0, 6.295454545454546)
(('and', 'of', 'her'), 2, 0, 0.983389342294767)
(('of', 'her', 'having'), 4, 0, 2.9150197628458496)
(('her', 'having', 'an'), 1, 0, 0.17687017067164812)
(('having', 'an', 'upper'), 1, 0, 0.17687017067164812)
(('an', 'upper', 'maid'), 1, 0, 0.17687017067164812)
(('upper', 'maid', 'who'), 1, 0, 0.17687017067164812)
(('maid', 'who', 'had'), 1, 0, 0.17687017067164812)
(('who', 'had', 'lived'), 1, 0, 0.17687017067164812)
(('had', 'lived', 'five'), 1, 0, 0.17687017067164812)
(('lived', 'five', '-'), 1, 0, 0.17687017067164812)
(('five', '-', 'and'), 2, 0, 0.983389342294767)
(('-', 'twenty', 'years'), 2, 0, 0.983389342294767)
(('twenty', 'years', 'with'), 1, 0, 0.17687017067164812)
(('years', 'with', 'her'), 1, 0, 0.17687017067164812)
(('and', 'of', 'their'), 4, 0, 2.9150197628458496)
(('of', 'their', 'having'), 3, 0, 1.7785588752196837)
(('their', 'having', 'eight'), 1, 0, 0.17687017067164812)
(('having', 'eight', 'cows'), 1, 0, 0.17687017067164812)
(('eight', 'cows', ','), 1, 0, 0.17687017067164812)
(('cows', ',', 'two'), 1, 0, 0.17687017067164812)
((',', 'two', 'of'), 1, 0, 0.17687017067164812)
(('two', 'of', 'them'), 2, 0, 0.983389342294767)
(('of', 'them', 'Alderneys'), 1, 0, 0.17687017067164812)
(('them', 'Alderneys', ','), 1, 0, 0.17687017067164812)
(('Alderneys', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'one'), 4, 0, 2.9150197628458496)
(('and', 'one', 'a'), 1, 0, 0.17687017067164812)
(('one', 'a', 'little'), 1, 0, 0.17687017067164812)
(('a', 'little', 'Welch'), 1, 0, 0.17687017067164812)
(('little', 'Welch', 'cow'), 2, 0, 0.983389342294767)
(('Welch', 'cow', ','), 1, 0, 0.17687017067164812)
(('cow', ',', 'a'), 1, 0, 0.17687017067164812)
((',', 'a', 'very'), 9, 0, 6.5983606557377055)
(('very', 'pretty', 'little'), 1, 0, 0.17687017067164812)
(('pretty', 'little', 'Welch'), 1, 0, 0.17687017067164812)
(('Welch', 'cow', 'indeed'), 1, 0, 0.17687017067164812)
(('cow', 'indeed', ';'), 1, 0, 0.17687017067164812)
(('indeed', ';', 'and'), 2, 0, 0.983389342294767)
(('and', 'of', 'Mrs'), 1, 0, 0.17687017067164812)
(("'", 's', 'saying'), 3, 0, 1.7785588752196837)
(('s', 'saying', 'as'), 1, 0, 0.17687017067164812)
(('saying', 'as', 'she'), 1, 0, 0.17687017067164812)
(('she', 'was', 'so'), 8, 0, 7.927797833935018)
(('was', 'so', 'fond'), 1, 0, 0.17687017067164812)
(('so', 'fond', 'of'), 7, 0, 6.295454545454546)
(('fond', 'of', 'it'), 2, 0, 0.983389342294767)
(('of', 'it', ','), 26, 0, 24.157894736842106)
(('it', ',', 'it'), 3, 0, 1.7785588752196837)
((',', 'it', 'should'), 2, 0, 0.983389342294767)
(('it', 'should', 'be'), 10, 0, 9.36024844720497)
(('should', 'be', 'called'), 1, 0, 0.17687017067164812)
(('be', 'called', '_her_'), 1, 0, 0.17687017067164812)
(('called', '_her_', 'cow'), 1, 0, 0.17687017067164812)
(('_her_', 'cow', ';'), 1, 0, 0.17687017067164812)
(('cow', ';', 'and'), 1, 0, 0.17687017067164812)
(('their', 'having', 'a'), 1, 0, 0.17687017067164812)
(('having', 'a', 'very'), 2, 0, 0.983389342294767)
(('very', 'handsome', 'summer'), 2, 0, 0.983389342294767)
(('handsome', 'summer', '-'), 2, 0, 0.983389342294767)
(('summer', '-', 'house'), 2, 0, 0.983389342294767)
(('-', 'house', 'in'), 1, 0, 0.17687017067164812)
(('house', 'in', 'their'), 1, 0, 0.17687017067164812)
(('in', 'their', 'garden'), 1, 0, 0.17687017067164812)
(('their', 'garden', ','), 1, 0, 0.17687017067164812)
(('garden', ',', 'where'), 1, 0, 0.17687017067164812)
((',', 'where', 'some'), 1, 0, 0.17687017067164812)
(('where', 'some', 'day'), 1, 0, 0.17687017067164812)
(('some', 'day', 'next'), 1, 0, 0.17687017067164812)
(('day', 'next', 'year'), 1, 0, 0.17687017067164812)
(('next', 'year', 'they'), 1, 0, 0.17687017067164812)
(('year', 'they', 'were'), 1, 0, 0.17687017067164812)
(('they', 'were', 'all'), 10, 0, 9.36024844720497)
(('were', 'all', 'to'), 2, 0, 0.983389342294767)
(('all', 'to', 'drink'), 1, 0, 0.17687017067164812)
(('to', 'drink', 'tea'), 1, 0, 0.17687017067164812)
(('drink', 'tea', ':--'), 1, 0, 0.17687017067164812)
(('tea', ':--', 'a'), 1, 0, 0.17687017067164812)
((':--', 'a', 'very'), 1, 0, 0.17687017067164812)
(('-', 'house', ','), 1, 0, 0.17687017067164812)
(('house', ',', 'large'), 1, 0, 0.17687017067164812)
((',', 'large', 'enough'), 1, 0, 0.17687017067164812)
(('large', 'enough', 'to'), 1, 0, 0.17687017067164812)
(('enough', 'to', 'hold'), 1, 0, 0.17687017067164812)
(('to', 'hold', 'a'), 2, 0, 0.983389342294767)
(('hold', 'a', 'dozen'), 1, 0, 0.17687017067164812)
(('a', 'dozen', 'people'), 1, 0, 0.17687017067164812)
(('dozen', 'people', '."'), 1, 0, 0.17687017067164812)
(('people', '."', ''), 3, 0, 1.7785588752196837)
(('', 'For', 'some'), 2, 0, 0.983389342294767)
(('For', 'some', 'time'), 1, 0, 0.17687017067164812)
(('some', 'time', 'she'), 2, 0, 0.983389342294767)
(('time', 'she', 'was'), 1, 0, 0.17687017067164812)
(('she', 'was', 'amused'), 1, 0, 0.17687017067164812)
(('was', 'amused', ','), 1, 0, 0.17687017067164812)
(('amused', ',', 'without'), 1, 0, 0.17687017067164812)
((',', 'without', 'thinking'), 2, 0, 0.983389342294767)
(('without', 'thinking', 'beyond'), 1, 0, 0.17687017067164812)
(('thinking', 'beyond', 'the'), 1, 0, 0.17687017067164812)
(('beyond', 'the', 'immediate'), 1, 0, 0.17687017067164812)
(('the', 'immediate', 'cause'), 1, 0, 0.17687017067164812)
(('immediate', 'cause', ';'), 1, 0, 0.17687017067164812)
(('cause', ';', 'but'), 2, 0, 0.983389342294767)
(('but', 'as', 'she'), 3, 0, 1.7785588752196837)
(('as', 'she', 'came'), 3, 0, 1.7785588752196837)
(('she', 'came', 'to'), 4, 0, 2.9150197628458496)
(('came', 'to', 'understand'), 1, 0, 0.17687017067164812)
(('to', 'understand', 'the'), 7, 0, 6.295454545454546)
(('understand', 'the', 'family'), 1, 0, 0.17687017067164812)
(('the', 'family', 'better'), 1, 0, 0.17687017067164812)
(('family', 'better', ','), 1, 0, 0.17687017067164812)
(('better', ',', 'other'), 1, 0, 0.17687017067164812)
((',', 'other', 'feelings'), 1, 0, 0.17687017067164812)
(('other', 'feelings', 'arose'), 1, 0, 0.17687017067164812)
(('feelings', 'arose', '.'), 1, 0, 0.17687017067164812)
(('arose', '.', ''), 2, 0, 0.983389342294767)
(('She', 'had', 'taken'), 2, 0, 0.983389342294767)
(('had', 'taken', 'up'), 2, 0, 0.983389342294767)
(('taken', 'up', 'a'), 1, 0, 0.17687017067164812)
(('up', 'a', 'wrong'), 1, 0, 0.17687017067164812)
(('a', 'wrong', 'idea'), 1, 0, 0.17687017067164812)
(('wrong', 'idea', ','), 1, 0, 0.17687017067164812)
(('idea', ',', 'fancying'), 1, 0, 0.17687017067164812)
((',', 'fancying', 'it'), 1, 0, 0.17687017067164812)
(('fancying', 'it', 'was'), 1, 0, 0.17687017067164812)
(('was', 'a', 'mother'), 1, 0, 0.17687017067164812)
(('a', 'mother', 'and'), 1, 0, 0.17687017067164812)
(('mother', 'and', 'daughter'), 2, 0, 0.983389342294767)
(('and', 'daughter', ','), 1, 0, 0.17687017067164812)
(('daughter', ',', 'a'), 1, 0, 0.17687017067164812)
((',', 'a', 'son'), 1, 0, 0.17687017067164812)
(('a', 'son', 'and'), 1, 0, 0.17687017067164812)
(('son', 'and', 'son'), 1, 0, 0.17687017067164812)
(('and', 'son', "'"), 1, 0, 0.17687017067164812)
(('son', "'", 's'), 3, 0, 1.7785588752196837)
(("'", 's', 'wife'), 2, 0, 0.983389342294767)
(('s', 'wife', ','), 1, 0, 0.17687017067164812)
((',', 'who', 'all'), 1, 0, 0.17687017067164812)
(('who', 'all', 'lived'), 1, 0, 0.17687017067164812)
(('all', 'lived', 'together'), 1, 0, 0.17687017067164812)
(('lived', 'together', ';'), 1, 0, 0.17687017067164812)
(('together', ';', 'but'), 1, 0, 0.17687017067164812)
(('when', 'it', 'appeared'), 1, 0, 0.17687017067164812)
(('it', 'appeared', 'that'), 2, 0, 0.983389342294767)
(('appeared', 'that', 'the'), 1, 0, 0.17687017067164812)
(('that', 'the', 'Mr'), 1, 0, 0.17687017067164812)
(('the', 'Mr', '.'), 5, 0, 3.7220338983050847)
(('Mr', '.', 'Martin'), 37, 0, 44.333333333333336)
(('.', 'Martin', ','), 8, 0, 7.927797833935018)
(('Martin', ',', 'who'), 2, 0, 0.983389342294767)
((',', 'who', 'bore'), 1, 0, 0.17687017067164812)
(('who', 'bore', 'a'), 1, 0, 0.17687017067164812)
(('bore', 'a', 'part'), 1, 0, 0.17687017067164812)
(('a', 'part', 'in'), 2, 0, 0.983389342294767)
(('part', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'narrative'), 1, 0, 0.17687017067164812)
(('the', 'narrative', ','), 1, 0, 0.17687017067164812)
(('narrative', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'was', 'always'), 1, 0, 0.17687017067164812)
(('was', 'always', 'mentioned'), 1, 0, 0.17687017067164812)
(('always', 'mentioned', 'with'), 1, 0, 0.17687017067164812)
(('mentioned', 'with', 'approbation'), 1, 0, 0.17687017067164812)
(('with', 'approbation', 'for'), 1, 0, 0.17687017067164812)
(('approbation', 'for', 'his'), 1, 0, 0.17687017067164812)
(('for', 'his', 'great'), 2, 0, 0.983389342294767)
(('great', 'good', '-'), 1, 0, 0.17687017067164812)
(('good', '-', 'nature'), 4, 0, 2.9150197628458496)
(('-', 'nature', 'in'), 1, 0, 0.17687017067164812)
(('nature', 'in', 'doing'), 1, 0, 0.17687017067164812)
(('in', 'doing', 'something'), 1, 0, 0.17687017067164812)
(('doing', 'something', 'or'), 1, 0, 0.17687017067164812)
(('something', 'or', 'other'), 3, 0, 1.7785588752196837)
(('or', 'other', ','), 9, 0, 6.5983606557377055)
(('was', 'a', 'single'), 1, 0, 0.17687017067164812)
(('a', 'single', 'man'), 1, 0, 0.17687017067164812)
(('single', 'man', ';'), 1, 0, 0.17687017067164812)
(('man', ';', 'that'), 1, 0, 0.17687017067164812)
((';', 'that', 'there'), 2, 0, 0.983389342294767)
(('was', 'no', 'young'), 1, 0, 0.17687017067164812)
(('no', 'young', 'Mrs'), 1, 0, 0.17687017067164812)
(('young', 'Mrs', '.'), 1, 0, 0.17687017067164812)
(('Martin', ',', 'no'), 1, 0, 0.17687017067164812)
((',', 'no', 'wife'), 1, 0, 0.17687017067164812)
(('no', 'wife', 'in'), 1, 0, 0.17687017067164812)
(('wife', 'in', 'the'), 2, 0, 0.983389342294767)
(('in', 'the', 'case'), 7, 0, 6.295454545454546)
(('the', 'case', ';'), 3, 0, 1.7785588752196837)
(('case', ';', 'she'), 1, 0, 0.17687017067164812)
((';', 'she', 'did'), 1, 0, 0.17687017067164812)
(('she', 'did', 'suspect'), 1, 0, 0.17687017067164812)
(('did', 'suspect', 'danger'), 1, 0, 0.17687017067164812)
(('suspect', 'danger', 'to'), 1, 0, 0.17687017067164812)
(('danger', 'to', 'her'), 1, 0, 0.17687017067164812)
(('to', 'her', 'poor'), 1, 0, 0.17687017067164812)
(('her', 'poor', 'little'), 1, 0, 0.17687017067164812)
(('poor', 'little', 'friend'), 1, 0, 0.17687017067164812)
(('little', 'friend', 'from'), 1, 0, 0.17687017067164812)
(('friend', 'from', 'all'), 1, 0, 0.17687017067164812)
(('from', 'all', 'this'), 1, 0, 0.17687017067164812)
(('all', 'this', 'hospitality'), 1, 0, 0.17687017067164812)
(('this', 'hospitality', 'and'), 1, 0, 0.17687017067164812)
(('hospitality', 'and', 'kindness'), 1, 0, 0.17687017067164812)
(('and', 'kindness', ','), 3, 0, 1.7785588752196837)
(('kindness', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'that'), 46, 0, 28.2)
(('and', 'that', ','), 4, 0, 2.9150197628458496)
(('that', ',', 'if'), 3, 0, 1.7785588752196837)
(('if', 'she', 'were'), 6, 0, 4.48816029143898)
(('she', 'were', 'not'), 3, 0, 1.7785588752196837)
(('were', 'not', 'taken'), 1, 0, 0.17687017067164812)
(('not', 'taken', 'care'), 1, 0, 0.17687017067164812)
(('taken', 'care', 'of'), 1, 0, 0.17687017067164812)
(('care', 'of', ','), 1, 0, 0.17687017067164812)
(('of', ',', 'she'), 1, 0, 0.17687017067164812)
((',', 'she', 'might'), 6, 0, 4.48816029143898)
(('she', 'might', 'be'), 3, 0, 1.7785588752196837)
(('might', 'be', 'required'), 1, 0, 0.17687017067164812)
(('be', 'required', 'to'), 1, 0, 0.17687017067164812)
(('required', 'to', 'sink'), 1, 0, 0.17687017067164812)
(('to', 'sink', 'herself'), 1, 0, 0.17687017067164812)
(('sink', 'herself', 'forever'), 1, 0, 0.17687017067164812)
(('herself', 'forever', '.'), 1, 0, 0.17687017067164812)
(('forever', '.', ''), 1, 0, 0.17687017067164812)
(('', 'With', 'this'), 2, 0, 0.983389342294767)
(('With', 'this', 'inspiriting'), 1, 0, 0.17687017067164812)
(('this', 'inspiriting', 'notion'), 1, 0, 0.17687017067164812)
(('inspiriting', 'notion', ','), 1, 0, 0.17687017067164812)
(('notion', ',', 'her'), 1, 0, 0.17687017067164812)
((',', 'her', 'questions'), 1, 0, 0.17687017067164812)
(('her', 'questions', 'increased'), 1, 0, 0.17687017067164812)
(('questions', 'increased', 'in'), 1, 0, 0.17687017067164812)
(('increased', 'in', 'number'), 1, 0, 0.17687017067164812)
(('in', 'number', 'and'), 1, 0, 0.17687017067164812)
(('number', 'and', 'meaning'), 1, 0, 0.17687017067164812)
(('and', 'meaning', ';'), 1, 0, 0.17687017067164812)
(('meaning', ';', 'and'), 2, 0, 0.983389342294767)
(('and', 'she', 'particularly'), 1, 0, 0.17687017067164812)
(('she', 'particularly', 'led'), 1, 0, 0.17687017067164812)
(('particularly', 'led', 'Harriet'), 1, 0, 0.17687017067164812)
(('led', 'Harriet', 'to'), 1, 0, 0.17687017067164812)
(('Harriet', 'to', 'talk'), 1, 0, 0.17687017067164812)
(('to', 'talk', 'more'), 1, 0, 0.17687017067164812)
(('talk', 'more', 'of'), 1, 0, 0.17687017067164812)
(('more', 'of', 'Mr'), 1, 0, 0.17687017067164812)
(('Martin', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'there'), 10, 0, 9.36024844720497)
(('there', 'was', 'evidently'), 1, 0, 0.17687017067164812)
(('was', 'evidently', 'no'), 1, 0, 0.17687017067164812)
(('evidently', 'no', 'dislike'), 1, 0, 0.17687017067164812)
(('no', 'dislike', 'to'), 1, 0, 0.17687017067164812)
(('dislike', 'to', 'it'), 1, 0, 0.17687017067164812)
(('', 'Harriet', 'was'), 14, 0, 11.428571428571427)
(('Harriet', 'was', 'very'), 2, 0, 0.983389342294767)
(('was', 'very', 'ready'), 3, 0, 1.7785588752196837)
(('very', 'ready', 'to'), 5, 0, 3.7220338983050847)
(('ready', 'to', 'speak'), 3, 0, 1.7785588752196837)
(('to', 'speak', 'of'), 11, 0, 8.671532846715328)
(('speak', 'of', 'the'), 3, 0, 1.7785588752196837)
(('of', 'the', 'share'), 1, 0, 0.17687017067164812)
(('the', 'share', 'he'), 1, 0, 0.17687017067164812)
(('share', 'he', 'had'), 1, 0, 0.17687017067164812)
(('he', 'had', 'had'), 3, 0, 1.7785588752196837)
(('had', 'had', 'in'), 1, 0, 0.17687017067164812)
(('had', 'in', 'their'), 1, 0, 0.17687017067164812)
(('in', 'their', 'moonlight'), 1, 0, 0.17687017067164812)
(('their', 'moonlight', 'walks'), 1, 0, 0.17687017067164812)
(('moonlight', 'walks', 'and'), 1, 0, 0.17687017067164812)
(('walks', 'and', 'merry'), 1, 0, 0.17687017067164812)
(('and', 'merry', 'evening'), 1, 0, 0.17687017067164812)
(('merry', 'evening', 'games'), 1, 0, 0.17687017067164812)
(('evening', 'games', ';'), 1, 0, 0.17687017067164812)
(('games', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'dwelt'), 1, 0, 0.17687017067164812)
(('and', 'dwelt', 'a'), 1, 0, 0.17687017067164812)
(('dwelt', 'a', 'good'), 1, 0, 0.17687017067164812)
(('good', 'deal', 'upon'), 1, 0, 0.17687017067164812)
(('deal', 'upon', 'his'), 1, 0, 0.17687017067164812)
(('upon', 'his', 'being'), 1, 0, 0.17687017067164812)
(('his', 'being', 'so'), 4, 0, 2.9150197628458496)
(('being', 'so', 'very'), 2, 0, 0.983389342294767)
(('so', 'very', 'good'), 1, 0, 0.17687017067164812)
(('very', 'good', '-'), 3, 0, 1.7785588752196837)
(('-', 'humoured', 'and'), 1, 0, 0.17687017067164812)
(('humoured', 'and', 'obliging'), 1, 0, 0.17687017067164812)
(('and', 'obliging', '.'), 1, 0, 0.17687017067164812)
(('obliging', '.', ''), 3, 0, 1.7785588752196837)
(('He', 'had', 'gone'), 5, 0, 3.7220338983050847)
(('had', 'gone', 'three'), 1, 0, 0.17687017067164812)
(('gone', 'three', 'miles'), 1, 0, 0.17687017067164812)
(('three', 'miles', 'round'), 1, 0, 0.17687017067164812)
(('miles', 'round', 'one'), 1, 0, 0.17687017067164812)
(('round', 'one', 'day'), 1, 0, 0.17687017067164812)
(('one', 'day', 'in'), 1, 0, 0.17687017067164812)
(('day', 'in', 'order'), 1, 0, 0.17687017067164812)
(('in', 'order', 'to'), 4, 0, 2.9150197628458496)
(('order', 'to', 'bring'), 1, 0, 0.17687017067164812)
(('to', 'bring', 'her'), 3, 0, 1.7785588752196837)
(('bring', 'her', 'some'), 1, 0, 0.17687017067164812)
(('her', 'some', 'walnuts'), 1, 0, 0.17687017067164812)
(('some', 'walnuts', ','), 1, 0, 0.17687017067164812)
(('walnuts', ',', 'because'), 1, 0, 0.17687017067164812)
((',', 'because', 'she'), 5, 0, 3.7220338983050847)
(('because', 'she', 'had'), 3, 0, 1.7785588752196837)
(('she', 'had', 'said'), 4, 0, 2.9150197628458496)
(('had', 'said', 'how'), 1, 0, 0.17687017067164812)
(('said', 'how', 'fond'), 1, 0, 0.17687017067164812)
(('how', 'fond', 'she'), 1, 0, 0.17687017067164812)
(('fond', 'she', 'was'), 1, 0, 0.17687017067164812)
(('she', 'was', 'of'), 1, 0, 0.17687017067164812)
(('was', 'of', 'them'), 1, 0, 0.17687017067164812)
(('of', 'them', ','), 6, 0, 4.48816029143898)
(('and', 'in', 'every'), 2, 0, 0.983389342294767)
(('in', 'every', 'thing'), 5, 0, 3.7220338983050847)
(('every', 'thing', 'else'), 4, 0, 2.9150197628458496)
(('thing', 'else', 'he'), 1, 0, 0.17687017067164812)
(('else', 'he', 'was'), 1, 0, 0.17687017067164812)
(('he', 'was', 'so'), 8, 0, 7.927797833935018)
(('was', 'so', 'very'), 9, 0, 6.5983606557377055)
(('so', 'very', 'obliging'), 3, 0, 1.7785588752196837)
(('very', 'obliging', '.'), 1, 0, 0.17687017067164812)
(('He', 'had', 'his'), 1, 0, 0.17687017067164812)
(('had', 'his', 'shepherd'), 1, 0, 0.17687017067164812)
(('his', 'shepherd', "'"), 1, 0, 0.17687017067164812)
(('shepherd', "'", 's'), 1, 0, 0.17687017067164812)
(("'", 's', 'son'), 6, 0, 4.48816029143898)
(('s', 'son', 'into'), 1, 0, 0.17687017067164812)
(('son', 'into', 'the'), 1, 0, 0.17687017067164812)
(('into', 'the', 'parlour'), 1, 0, 0.17687017067164812)
(('the', 'parlour', 'one'), 1, 0, 0.17687017067164812)
(('parlour', 'one', 'night'), 1, 0, 0.17687017067164812)
(('one', 'night', 'on'), 1, 0, 0.17687017067164812)
(('night', 'on', 'purpose'), 1, 0, 0.17687017067164812)
(('on', 'purpose', 'to'), 6, 0, 4.48816029143898)
(('purpose', 'to', 'sing'), 1, 0, 0.17687017067164812)
(('to', 'sing', 'to'), 1, 0, 0.17687017067164812)
(('sing', 'to', 'her'), 1, 0, 0.17687017067164812)
(('to', 'her', '.'), 15, 0, 14.666666666666666)
(('She', 'was', 'very'), 2, 0, 0.983389342294767)
(('was', 'very', 'fond'), 1, 0, 0.17687017067164812)
(('fond', 'of', 'singing'), 1, 0, 0.17687017067164812)
(('of', 'singing', '.'), 1, 0, 0.17687017067164812)
(('singing', '.', ''), 3, 0, 1.7785588752196837)
(('He', 'could', 'sing'), 1, 0, 0.17687017067164812)
(('could', 'sing', 'a'), 1, 0, 0.17687017067164812)
(('sing', 'a', 'little'), 1, 0, 0.17687017067164812)
(('a', 'little', 'himself'), 1, 0, 0.17687017067164812)
(('little', 'himself', '.'), 1, 0, 0.17687017067164812)
(('', 'She', 'believed'), 6, 0, 4.48816029143898)
(('She', 'believed', 'he'), 4, 0, 2.9150197628458496)
(('believed', 'he', 'was'), 3, 0, 1.7785588752196837)
(('was', 'very', 'clever'), 1, 0, 0.17687017067164812)
(('very', 'clever', ','), 3, 0, 1.7785588752196837)
((',', 'and', 'understood'), 2, 0, 0.983389342294767)
(('and', 'understood', 'every'), 1, 0, 0.17687017067164812)
(('understood', 'every', 'thing'), 1, 0, 0.17687017067164812)
(('He', 'had', 'a'), 4, 0, 2.9150197628458496)
(('had', 'a', 'very'), 4, 0, 2.9150197628458496)
(('very', 'fine', 'flock'), 1, 0, 0.17687017067164812)
(('fine', 'flock', ','), 1, 0, 0.17687017067164812)
(('flock', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', ',', 'while'), 3, 0, 1.7785588752196837)
((',', 'while', 'she'), 6, 0, 4.48816029143898)
(('while', 'she', 'was'), 4, 0, 2.9150197628458496)
(('she', 'was', 'with'), 1, 0, 0.17687017067164812)
(('was', 'with', 'them'), 2, 0, 0.983389342294767)
(('them', ',', 'he'), 3, 0, 1.7785588752196837)
(('he', 'had', 'been'), 22, 0, 16.03030303030303)
(('had', 'been', 'bid'), 1, 0, 0.17687017067164812)
(('been', 'bid', 'more'), 1, 0, 0.17687017067164812)
(('bid', 'more', 'for'), 1, 0, 0.17687017067164812)
(('more', 'for', 'his'), 1, 0, 0.17687017067164812)
(('for', 'his', 'wool'), 1, 0, 0.17687017067164812)
(('his', 'wool', 'than'), 1, 0, 0.17687017067164812)
(('wool', 'than', 'any'), 1, 0, 0.17687017067164812)
(('any', 'body', 'in'), 1, 0, 0.17687017067164812)
(('body', 'in', 'the'), 2, 0, 0.983389342294767)
(('the', 'country', '.'), 2, 0, 0.983389342294767)
(('country', '.', ''), 2, 0, 0.983389342294767)
(('She', 'believed', 'every'), 2, 0, 0.983389342294767)
(('believed', 'every', 'body'), 2, 0, 0.983389342294767)
(('every', 'body', 'spoke'), 1, 0, 0.17687017067164812)
(('body', 'spoke', 'well'), 1, 0, 0.17687017067164812)
(('spoke', 'well', 'of'), 1, 0, 0.17687017067164812)
(('well', 'of', 'him'), 1, 0, 0.17687017067164812)
(('of', 'him', '.'), 11, 0, 8.671532846715328)
(('', 'His', 'mother'), 2, 0, 0.983389342294767)
(('His', 'mother', 'and'), 1, 0, 0.17687017067164812)
(('mother', 'and', 'sisters'), 4, 0, 2.9150197628458496)
(('and', 'sisters', 'were'), 1, 0, 0.17687017067164812)
(('sisters', 'were', 'very'), 1, 0, 0.17687017067164812)
(('were', 'very', 'fond'), 1, 0, 0.17687017067164812)
(('fond', 'of', 'him'), 3, 0, 1.7785588752196837)
(('.', 'Martin', 'had'), 2, 0, 0.983389342294767)
(('Martin', 'had', 'told'), 1, 0, 0.17687017067164812)
(('had', 'told', 'her'), 5, 0, 3.7220338983050847)
(('told', 'her', 'one'), 1, 0, 0.17687017067164812)
(('her', 'one', 'day'), 1, 0, 0.17687017067164812)
(('one', 'day', '('), 1, 0, 0.17687017067164812)
(('day', '(', 'and'), 1, 0, 0.17687017067164812)
(('(', 'and', 'there'), 1, 0, 0.17687017067164812)
(('there', 'was', 'a'), 25, 0, 22.454545454545453)
(('was', 'a', 'blush'), 2, 0, 0.983389342294767)
(('a', 'blush', 'as'), 1, 0, 0.17687017067164812)
(('blush', 'as', 'she'), 1, 0, 0.17687017067164812)
(('as', 'she', 'said'), 1, 0, 0.17687017067164812)
(('she', 'said', 'it'), 1, 0, 0.17687017067164812)
(('said', 'it', ',)'), 1, 0, 0.17687017067164812)
(('it', ',)', 'that'), 1, 0, 0.17687017067164812)
((',)', 'that', 'it'), 1, 0, 0.17687017067164812)
(('that', 'it', 'was'), 25, 0, 22.454545454545453)
(('impossible', 'for', 'any'), 2, 0, 0.983389342294767)
(('any', 'body', 'to'), 4, 0, 2.9150197628458496)
(('body', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'a'), 22, 0, 16.03030303030303)
(('be', 'a', 'better'), 3, 0, 1.7785588752196837)
(('a', 'better', 'son'), 1, 0, 0.17687017067164812)
(('better', 'son', ','), 1, 0, 0.17687017067164812)
(('son', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'therefore', 'she'), 3, 0, 1.7785588752196837)
(('therefore', 'she', 'was'), 1, 0, 0.17687017067164812)
(('she', 'was', 'sure'), 5, 0, 3.7220338983050847)
(('was', 'sure', ','), 1, 0, 0.17687017067164812)
(('sure', ',', 'whenever'), 1, 0, 0.17687017067164812)
((',', 'whenever', 'he'), 3, 0, 1.7785588752196837)
(('whenever', 'he', 'married'), 1, 0, 0.17687017067164812)
(('he', 'married', ','), 1, 0, 0.17687017067164812)
(('married', ',', 'he'), 1, 0, 0.17687017067164812)
((',', 'he', 'would'), 26, 0, 24.157894736842106)
(('he', 'would', 'make'), 1, 0, 0.17687017067164812)
(('would', 'make', 'a'), 1, 0, 0.17687017067164812)
(('make', 'a', 'good'), 1, 0, 0.17687017067164812)
(('a', 'good', 'husband'), 1, 0, 0.17687017067164812)
(('good', 'husband', '.'), 1, 0, 0.17687017067164812)
(('', 'Not', 'that'), 6, 0, 4.48816029143898)
(('Not', 'that', 'she'), 1, 0, 0.17687017067164812)
(('that', 'she', '_wanted_'), 1, 0, 0.17687017067164812)
(('she', '_wanted_', 'him'), 1, 0, 0.17687017067164812)
(('_wanted_', 'him', 'to'), 1, 0, 0.17687017067164812)
(('him', 'to', 'marry'), 3, 0, 1.7785588752196837)
(('to', 'marry', '.'), 4, 0, 2.9150197628458496)
(('marry', '.', ''), 5, 0, 3.7220338983050847)
(('She', 'was', 'in'), 4, 0, 2.9150197628458496)
(('no', 'hurry', 'at'), 2, 0, 0.983389342294767)
(('hurry', 'at', 'all'), 2, 0, 0.983389342294767)
(('at', 'all', '.'), 17, 0, 19.42105263157895)
(('"', 'Well', 'done'), 1, 0, 0.17687017067164812)
(('Well', 'done', ','), 1, 0, 0.17687017067164812)
(('done', ',', 'Mrs'), 1, 0, 0.17687017067164812)
((',', 'Mrs', '.'), 50, 0, 102.0)
(('Mrs', '.', ''), 31, 0, 20.571428571428573)
(('', '', 'Martin'), 2, 0, 0.983389342294767)
(('', 'Martin', '!"'), 1, 0, 0.17687017067164812)
(('Martin', '!"', ''), 1, 0, 0.17687017067164812)
(('', '', 'thought'), 2, 0, 0.983389342294767)
(('', 'thought', 'Emma'), 2, 0, 0.983389342294767)
(('thought', 'Emma', '.'), 2, 0, 0.983389342294767)
(('', '"', 'You'), 86, 0, 87.0)
(('"', 'You', 'know'), 3, 0, 1.7785588752196837)
(('You', 'know', 'what'), 1, 0, 0.17687017067164812)
(('know', 'what', 'you'), 4, 0, 2.9150197628458496)
(('what', 'you', 'are'), 6, 0, 4.48816029143898)
(('you', 'are', 'about'), 2, 0, 0.983389342294767)
(('are', 'about', '."'), 1, 0, 0.17687017067164812)
(('about', '."', ''), 2, 0, 0.983389342294767)
(('"', 'And', 'when'), 3, 0, 1.7785588752196837)
(('And', 'when', 'she'), 1, 0, 0.17687017067164812)
(('when', 'she', 'had'), 2, 0, 0.983389342294767)
(('she', 'had', 'come'), 2, 0, 0.983389342294767)
(('had', 'come', 'away'), 1, 0, 0.17687017067164812)
(('come', 'away', ','), 1, 0, 0.17687017067164812)
(('away', ',', 'Mrs'), 1, 0, 0.17687017067164812)
(('.', 'Martin', 'was'), 1, 0, 0.17687017067164812)
(('Martin', 'was', 'so'), 1, 0, 0.17687017067164812)
(('so', 'very', 'kind'), 1, 0, 0.17687017067164812)
(('very', 'kind', 'as'), 1, 0, 0.17687017067164812)
(('as', 'to', 'send'), 2, 0, 0.983389342294767)
(('to', 'send', 'Mrs'), 1, 0, 0.17687017067164812)
(('send', 'Mrs', '.'), 1, 0, 0.17687017067164812)
(('.', 'Goddard', 'a'), 1, 0, 0.17687017067164812)
(('Goddard', 'a', 'beautiful'), 1, 0, 0.17687017067164812)
(('a', 'beautiful', 'goose'), 1, 0, 0.17687017067164812)
(('beautiful', 'goose', '--'), 1, 0, 0.17687017067164812)
(('goose', '--', 'the'), 1, 0, 0.17687017067164812)
(('--', 'the', 'finest'), 1, 0, 0.17687017067164812)
(('the', 'finest', 'goose'), 1, 0, 0.17687017067164812)
(('finest', 'goose', 'Mrs'), 1, 0, 0.17687017067164812)
(('goose', 'Mrs', '.'), 1, 0, 0.17687017067164812)
(('.', 'Goddard', 'had'), 2, 0, 0.983389342294767)
(('Goddard', 'had', 'ever'), 1, 0, 0.17687017067164812)
(('had', 'ever', 'seen'), 2, 0, 0.983389342294767)
(('ever', 'seen', '.'), 1, 0, 0.17687017067164812)
(('Goddard', 'had', 'dressed'), 1, 0, 0.17687017067164812)
(('had', 'dressed', 'it'), 1, 0, 0.17687017067164812)
(('dressed', 'it', 'on'), 1, 0, 0.17687017067164812)
(('it', 'on', 'a'), 1, 0, 0.17687017067164812)
(('on', 'a', 'Sunday'), 1, 0, 0.17687017067164812)
(('a', 'Sunday', ','), 1, 0, 0.17687017067164812)
(('Sunday', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'asked'), 3, 0, 1.7785588752196837)
(('and', 'asked', 'all'), 1, 0, 0.17687017067164812)
(('asked', 'all', 'the'), 1, 0, 0.17687017067164812)
(('all', 'the', 'three'), 2, 0, 0.983389342294767)
(('the', 'three', 'teachers'), 1, 0, 0.17687017067164812)
(('three', 'teachers', ','), 1, 0, 0.17687017067164812)
(('teachers', ',', 'Miss'), 1, 0, 0.17687017067164812)
((',', 'Miss', 'Nash'), 1, 0, 0.17687017067164812)
(('Miss', 'Nash', ','), 3, 0, 1.7785588752196837)
(('Nash', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'Miss', 'Prince'), 1, 0, 0.17687017067164812)
(('Miss', 'Prince', ','), 1, 0, 0.17687017067164812)
(('Prince', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'Miss', 'Richardson'), 1, 0, 0.17687017067164812)
(('Miss', 'Richardson', ','), 1, 0, 0.17687017067164812)
(('Richardson', ',', 'to'), 1, 0, 0.17687017067164812)
((',', 'to', 'sup'), 1, 0, 0.17687017067164812)
(('to', 'sup', 'with'), 1, 0, 0.17687017067164812)
(('sup', 'with', 'her'), 1, 0, 0.17687017067164812)
(('with', 'her', '."'), 3, 0, 1.7785588752196837)
(('her', '."', ''), 25, 0, 22.454545454545453)
(('Martin', ',', 'I'), 2, 0, 0.983389342294767)
((',', 'I', 'suppose'), 24, 0, 39.285714285714285)
(('I', 'suppose', ','), 15, 0, 14.666666666666666)
(('suppose', ',', 'is'), 2, 0, 0.983389342294767)
((',', 'is', 'not'), 14, 0, 11.428571428571427)
(('is', 'not', 'a'), 11, 0, 8.671532846715328)
(('not', 'a', 'man'), 2, 0, 0.983389342294767)
(('man', 'of', 'information'), 2, 0, 0.983389342294767)
(('of', 'information', 'beyond'), 1, 0, 0.17687017067164812)
(('information', 'beyond', 'the'), 1, 0, 0.17687017067164812)
(('beyond', 'the', 'line'), 1, 0, 0.17687017067164812)
(('the', 'line', 'of'), 2, 0, 0.983389342294767)
(('line', 'of', 'his'), 1, 0, 0.17687017067164812)
(('his', 'own', 'business'), 1, 0, 0.17687017067164812)
(('own', 'business', '?'), 1, 0, 0.17687017067164812)
(('business', '?', ''), 1, 0, 0.17687017067164812)
(('', 'He', 'does'), 3, 0, 1.7785588752196837)
(('He', 'does', 'not'), 3, 0, 1.7785588752196837)
(('does', 'not', 'read'), 1, 0, 0.17687017067164812)
(('not', 'read', '?"'), 1, 0, 0.17687017067164812)
(('read', '?"', ''), 1, 0, 0.17687017067164812)
(('', '"', 'Oh'), 99, 0, 100.0)
(('"', 'Oh', 'yes'), 5, 0, 3.7220338983050847)
(('Oh', 'yes', '!--'), 2, 0, 0.983389342294767)
(('yes', '!--', 'that'), 1, 0, 0.17687017067164812)
(('!--', 'that', 'is'), 2, 0, 0.983389342294767)
(('that', 'is', ','), 13, 0, 10.137931034482758)
(('is', ',', 'no'), 1, 0, 0.17687017067164812)
((',', 'no', '--'), 2, 0, 0.983389342294767)
(('no', '--', 'I'), 5, 0, 3.7220338983050847)
(('--', 'I', 'do'), 11, 0, 8.671532846715328)
(('not', 'know', '--'), 4, 0, 2.9150197628458496)
(('know', '--', 'but'), 1, 0, 0.17687017067164812)
(('--', 'but', 'I'), 18, 0, 11.585365853658537)
(('but', 'I', 'believe'), 2, 0, 0.983389342294767)
(('I', 'believe', 'he'), 2, 0, 0.983389342294767)
(('believe', 'he', 'has'), 1, 0, 0.17687017067164812)
(('he', 'has', 'read'), 2, 0, 0.983389342294767)
(('has', 'read', 'a'), 1, 0, 0.17687017067164812)
(('read', 'a', 'good'), 1, 0, 0.17687017067164812)
(('good', 'deal', '--'), 1, 0, 0.17687017067164812)
(('deal', '--', 'but'), 2, 0, 0.983389342294767)
(('but', 'not', 'what'), 1, 0, 0.17687017067164812)
(('not', 'what', 'you'), 1, 0, 0.17687017067164812)
(('you', 'would', 'think'), 1, 0, 0.17687017067164812)
(('would', 'think', 'any'), 1, 0, 0.17687017067164812)
(('think', 'any', 'thing'), 1, 0, 0.17687017067164812)
(('any', 'thing', 'of'), 13, 0, 10.137931034482758)
(('thing', 'of', '.'), 1, 0, 0.17687017067164812)
(('of', '.', ''), 17, 0, 19.42105263157895)
(('', 'He', 'reads'), 1, 0, 0.17687017067164812)
(('He', 'reads', 'the'), 1, 0, 0.17687017067164812)
(('reads', 'the', 'Agricultural'), 1, 0, 0.17687017067164812)
(('the', 'Agricultural', 'Reports'), 1, 0, 0.17687017067164812)
(('Agricultural', 'Reports', ','), 1, 0, 0.17687017067164812)
(('Reports', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'some'), 4, 0, 2.9150197628458496)
(('and', 'some', 'other'), 1, 0, 0.17687017067164812)
(('some', 'other', 'books'), 1, 0, 0.17687017067164812)
(('other', 'books', 'that'), 1, 0, 0.17687017067164812)
(('books', 'that', 'lay'), 1, 0, 0.17687017067164812)
(('that', 'lay', 'in'), 1, 0, 0.17687017067164812)
(('lay', 'in', 'one'), 1, 0, 0.17687017067164812)
(('in', 'one', 'of'), 6, 0, 4.48816029143898)
(('of', 'the', 'window'), 1, 0, 0.17687017067164812)
(('the', 'window', 'seats'), 1, 0, 0.17687017067164812)
(('window', 'seats', '--'), 1, 0, 0.17687017067164812)
(('seats', '--', 'but'), 1, 0, 0.17687017067164812)
(('--', 'but', 'he'), 4, 0, 2.9150197628458496)
(('but', 'he', 'reads'), 1, 0, 0.17687017067164812)
(('he', 'reads', 'all'), 1, 0, 0.17687017067164812)
(('reads', 'all', '_them_'), 1, 0, 0.17687017067164812)
(('all', '_them_', 'to'), 1, 0, 0.17687017067164812)
(('_them_', 'to', 'himself'), 1, 0, 0.17687017067164812)
(('to', 'himself', '.'), 3, 0, 1.7785588752196837)
(('', 'But', 'sometimes'), 1, 0, 0.17687017067164812)
(('But', 'sometimes', 'of'), 1, 0, 0.17687017067164812)
(('sometimes', 'of', 'an'), 1, 0, 0.17687017067164812)
(('of', 'an', 'evening'), 2, 0, 0.983389342294767)
(('an', 'evening', ','), 2, 0, 0.983389342294767)
(('evening', ',', 'before'), 1, 0, 0.17687017067164812)
((',', 'before', 'we'), 4, 0, 2.9150197628458496)
(('before', 'we', 'went'), 1, 0, 0.17687017067164812)
(('we', 'went', 'to'), 1, 0, 0.17687017067164812)
(('went', 'to', 'cards'), 1, 0, 0.17687017067164812)
(('to', 'cards', ','), 1, 0, 0.17687017067164812)
(('cards', ',', 'he'), 1, 0, 0.17687017067164812)
(('he', 'would', 'read'), 1, 0, 0.17687017067164812)
(('would', 'read', 'something'), 1, 0, 0.17687017067164812)
(('read', 'something', 'aloud'), 1, 0, 0.17687017067164812)
(('something', 'aloud', 'out'), 1, 0, 0.17687017067164812)
(('aloud', 'out', 'of'), 1, 0, 0.17687017067164812)
(('of', 'the', 'Elegant'), 1, 0, 0.17687017067164812)
(('the', 'Elegant', 'Extracts'), 2, 0, 0.983389342294767)
(('Elegant', 'Extracts', ','), 1, 0, 0.17687017067164812)
(('Extracts', ',', 'very'), 1, 0, 0.17687017067164812)
((',', 'very', 'entertaining'), 1, 0, 0.17687017067164812)
(('very', 'entertaining', '.'), 1, 0, 0.17687017067164812)
(('entertaining', '.', ''), 1, 0, 0.17687017067164812)
(('', 'And', 'I'), 11, 0, 8.671532846715328)
(('And', 'I', 'know'), 1, 0, 0.17687017067164812)
(('I', 'know', 'he'), 4, 0, 2.9150197628458496)
(('know', 'he', 'has'), 1, 0, 0.17687017067164812)
(('has', 'read', 'the'), 1, 0, 0.17687017067164812)
(('read', 'the', 'Vicar'), 1, 0, 0.17687017067164812)
(('the', 'Vicar', 'of'), 1, 0, 0.17687017067164812)
(('Vicar', 'of', 'Wakefield'), 1, 0, 0.17687017067164812)
(('of', 'Wakefield', '.'), 1, 0, 0.17687017067164812)
(('Wakefield', '.', ''), 1, 0, 0.17687017067164812)
(('', 'He', 'never'), 3, 0, 1.7785588752196837)
(('He', 'never', 'read'), 1, 0, 0.17687017067164812)
(('never', 'read', 'the'), 1, 0, 0.17687017067164812)
(('read', 'the', 'Romance'), 1, 0, 0.17687017067164812)
(('the', 'Romance', 'of'), 2, 0, 0.983389342294767)
(('Romance', 'of', 'the'), 2, 0, 0.983389342294767)
(('of', 'the', 'Forest'), 2, 0, 0.983389342294767)
(('the', 'Forest', ','), 1, 0, 0.17687017067164812)
(('Forest', ',', 'nor'), 1, 0, 0.17687017067164812)
((',', 'nor', 'The'), 1, 0, 0.17687017067164812)
(('nor', 'The', 'Children'), 1, 0, 0.17687017067164812)
(('The', 'Children', 'of'), 1, 0, 0.17687017067164812)
(('Children', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'Abbey'), 2, 0, 0.983389342294767)
(('the', 'Abbey', '.'), 2, 0, 0.983389342294767)
(('Abbey', '.', ''), 5, 0, 3.7220338983050847)
(('had', 'never', 'heard'), 1, 0, 0.17687017067164812)
(('never', 'heard', 'of'), 4, 0, 2.9150197628458496)
(('heard', 'of', 'such'), 3, 0, 1.7785588752196837)
(('of', 'such', 'books'), 1, 0, 0.17687017067164812)
(('such', 'books', 'before'), 1, 0, 0.17687017067164812)
(('books', 'before', 'I'), 1, 0, 0.17687017067164812)
(('before', 'I', 'mentioned'), 1, 0, 0.17687017067164812)
(('I', 'mentioned', 'them'), 1, 0, 0.17687017067164812)
(('mentioned', 'them', ','), 1, 0, 0.17687017067164812)
(('them', ',', 'but'), 1, 0, 0.17687017067164812)
(('but', 'he', 'is'), 8, 0, 7.927797833935018)
(('he', 'is', 'determined'), 1, 0, 0.17687017067164812)
(('is', 'determined', 'to'), 1, 0, 0.17687017067164812)
(('determined', 'to', 'get'), 1, 0, 0.17687017067164812)
(('to', 'get', 'them'), 1, 0, 0.17687017067164812)
(('get', 'them', 'now'), 1, 0, 0.17687017067164812)
(('them', 'now', 'as'), 1, 0, 0.17687017067164812)
(('now', 'as', 'soon'), 1, 0, 0.17687017067164812)
(('as', 'soon', 'as'), 29, 0, 32.30769230769231)
(('soon', 'as', 'ever'), 2, 0, 0.983389342294767)
(('as', 'ever', 'he'), 1, 0, 0.17687017067164812)
(('ever', 'he', 'can'), 1, 0, 0.17687017067164812)
(('he', 'can', '."'), 3, 0, 1.7785588752196837)
(('can', '."', ''), 7, 0, 6.295454545454546)
(('', 'The', 'next'), 4, 0, 2.9150197628458496)
(('The', 'next', 'question'), 1, 0, 0.17687017067164812)
(('next', 'question', 'was'), 1, 0, 0.17687017067164812)
(('question', 'was', '--'), 1, 0, 0.17687017067164812)
(('was', '--', ''), 3, 0, 1.7785588752196837)
(('--', '', ''), 31, 0, 20.571428571428573)
(('', '"', 'What'), 24, 0, 39.285714285714285)
(('"', 'What', 'sort'), 1, 0, 0.17687017067164812)
(('What', 'sort', 'of'), 1, 0, 0.17687017067164812)
(('sort', 'of', 'looking'), 1, 0, 0.17687017067164812)
(('of', 'looking', 'man'), 1, 0, 0.17687017067164812)
(('looking', 'man', 'is'), 1, 0, 0.17687017067164812)
(('man', 'is', 'Mr'), 1, 0, 0.17687017067164812)
(('is', 'Mr', '.'), 3, 0, 1.7785588752196837)
(('Mr', '.', ''), 62, 0, 21.0)
(('', 'Martin', '?"'), 1, 0, 0.17687017067164812)
(('Martin', '?"', ''), 1, 0, 0.17687017067164812)
(('"', 'Oh', '!'), 83, 0, 84.0)
(('Oh', '!', ''), 146, 0, 0.0)
(('', '', 'not'), 1, 0, 0.17687017067164812)
(('', 'not', 'handsome'), 1, 0, 0.17687017067164812)
(('not', 'handsome', '--'), 1, 0, 0.17687017067164812)
(('handsome', '--', 'not'), 1, 0, 0.17687017067164812)
(('--', 'not', 'at'), 1, 0, 0.17687017067164812)
(('at', 'all', 'handsome'), 1, 0, 0.17687017067164812)
(('all', 'handsome', '.'), 1, 0, 0.17687017067164812)
(('handsome', '.', ''), 1, 0, 0.17687017067164812)
(('', 'I', 'thought'), 9, 0, 6.5983606557377055)
(('I', 'thought', 'him'), 1, 0, 0.17687017067164812)
(('thought', 'him', 'very'), 1, 0, 0.17687017067164812)
(('him', 'very', 'plain'), 1, 0, 0.17687017067164812)
(('very', 'plain', 'at'), 1, 0, 0.17687017067164812)
(('plain', 'at', 'first'), 1, 0, 0.17687017067164812)
(('first', ',', 'but'), 2, 0, 0.983389342294767)
(('but', 'I', 'do'), 6, 0, 4.48816029143898)
(('not', 'think', 'him'), 3, 0, 1.7785588752196837)
(('think', 'him', 'so'), 2, 0, 0.983389342294767)
(('him', 'so', 'plain'), 1, 0, 0.17687017067164812)
(('so', 'plain', 'now'), 1, 0, 0.17687017067164812)
(('plain', 'now', '.'), 1, 0, 0.17687017067164812)
(('now', '.', ''), 18, 0, 11.585365853658537)
(('', '', 'One'), 27, 0, 14.823529411764707)
(('', 'One', 'does'), 1, 0, 0.17687017067164812)
(('One', 'does', 'not'), 1, 0, 0.17687017067164812)
(('does', 'not', ','), 1, 0, 0.17687017067164812)
(('not', ',', 'you'), 1, 0, 0.17687017067164812)
(('know', ',', 'after'), 1, 0, 0.17687017067164812)
(('after', 'a', 'time'), 3, 0, 1.7785588752196837)
(('a', 'time', '.'), 2, 0, 0.983389342294767)
(('', 'But', 'did'), 1, 0, 0.17687017067164812)
(('But', 'did', 'you'), 1, 0, 0.17687017067164812)
(('did', 'you', 'never'), 1, 0, 0.17687017067164812)
(('you', 'never', 'see'), 1, 0, 0.17687017067164812)
(('never', 'see', 'him'), 1, 0, 0.17687017067164812)
(('see', 'him', '?'), 1, 0, 0.17687017067164812)
(('him', '?', ''), 2, 0, 0.983389342294767)
(('', 'He', 'is'), 15, 0, 14.666666666666666)
(('He', 'is', 'in'), 1, 0, 0.17687017067164812)
(('is', 'in', 'Highbury'), 1, 0, 0.17687017067164812)
(('in', 'Highbury', 'every'), 1, 0, 0.17687017067164812)
(('Highbury', 'every', 'now'), 1, 0, 0.17687017067164812)
(('and', 'then', ','), 12, 0, 11.424242424242424)
(('then', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'he', 'is'), 3, 0, 1.7785588752196837)
(('he', 'is', 'sure'), 1, 0, 0.17687017067164812)
(('is', 'sure', 'to'), 2, 0, 0.983389342294767)
(('sure', 'to', 'ride'), 1, 0, 0.17687017067164812)
(('to', 'ride', 'through'), 1, 0, 0.17687017067164812)
(('ride', 'through', 'every'), 1, 0, 0.17687017067164812)
(('through', 'every', 'week'), 1, 0, 0.17687017067164812)
(('every', 'week', 'in'), 1, 0, 0.17687017067164812)
(('week', 'in', 'his'), 1, 0, 0.17687017067164812)
(('in', 'his', 'way'), 5, 0, 3.7220338983050847)
(('his', 'way', 'to'), 2, 0, 0.983389342294767)
(('way', 'to', 'Kingston'), 1, 0, 0.17687017067164812)
(('to', 'Kingston', '.'), 3, 0, 1.7785588752196837)
(('Kingston', '.', ''), 3, 0, 1.7785588752196837)
(('', 'He', 'has'), 14, 0, 11.428571428571427)
(('He', 'has', 'passed'), 1, 0, 0.17687017067164812)
(('has', 'passed', 'you'), 1, 0, 0.17687017067164812)
(('passed', 'you', 'very'), 1, 0, 0.17687017067164812)
(('you', 'very', 'often'), 1, 0, 0.17687017067164812)
(('very', 'often', '."'), 2, 0, 0.983389342294767)
(('often', '."', ''), 2, 0, 0.983389342294767)
(('"', 'That', 'may'), 3, 0, 1.7785588752196837)
(('That', 'may', 'be'), 3, 0, 1.7785588752196837)
(('may', 'be', ','), 3, 0, 1.7785588752196837)
(('and', 'I', 'may'), 1, 0, 0.17687017067164812)
(('I', 'may', 'have'), 2, 0, 0.983389342294767)
(('may', 'have', 'seen'), 1, 0, 0.17687017067164812)
(('have', 'seen', 'him'), 1, 0, 0.17687017067164812)
(('seen', 'him', 'fifty'), 1, 0, 0.17687017067164812)
(('him', 'fifty', 'times'), 1, 0, 0.17687017067164812)
(('fifty', 'times', ','), 1, 0, 0.17687017067164812)
(('times', ',', 'but'), 1, 0, 0.17687017067164812)
((',', 'but', 'without'), 4, 0, 2.9150197628458496)
(('but', 'without', 'having'), 1, 0, 0.17687017067164812)
(('without', 'having', 'any'), 3, 0, 1.7785588752196837)
(('having', 'any', 'idea'), 1, 0, 0.17687017067164812)
(('any', 'idea', 'of'), 4, 0, 2.9150197628458496)
(('idea', 'of', 'his'), 4, 0, 2.9150197628458496)
(('of', 'his', 'name'), 1, 0, 0.17687017067164812)
(('his', 'name', '.'), 1, 0, 0.17687017067164812)
(('name', '.', ''), 6, 0, 4.48816029143898)
(('', 'A', 'young'), 3, 0, 1.7785588752196837)
(('A', 'young', 'farmer'), 1, 0, 0.17687017067164812)
(('young', 'farmer', ','), 1, 0, 0.17687017067164812)
(('farmer', ',', 'whether'), 1, 0, 0.17687017067164812)
((',', 'whether', 'on'), 1, 0, 0.17687017067164812)
(('whether', 'on', 'horseback'), 1, 0, 0.17687017067164812)
(('on', 'horseback', 'or'), 1, 0, 0.17687017067164812)
(('horseback', 'or', 'on'), 1, 0, 0.17687017067164812)
(('or', 'on', 'foot'), 1, 0, 0.17687017067164812)
(('on', 'foot', ','), 3, 0, 1.7785588752196837)
(('foot', ',', 'is'), 1, 0, 0.17687017067164812)
((',', 'is', 'the'), 2, 0, 0.983389342294767)
(('is', 'the', 'very'), 8, 0, 7.927797833935018)
(('the', 'very', 'last'), 6, 0, 4.48816029143898)
(('very', 'last', 'sort'), 1, 0, 0.17687017067164812)
(('last', 'sort', 'of'), 1, 0, 0.17687017067164812)
(('sort', 'of', 'person'), 1, 0, 0.17687017067164812)
(('of', 'person', 'to'), 1, 0, 0.17687017067164812)
(('person', 'to', 'raise'), 1, 0, 0.17687017067164812)
(('to', 'raise', 'my'), 1, 0, 0.17687017067164812)
(('raise', 'my', 'curiosity'), 1, 0, 0.17687017067164812)
(('my', 'curiosity', '.'), 1, 0, 0.17687017067164812)
(('curiosity', '.', ''), 3, 0, 1.7785588752196837)
(('', 'The', 'yeomanry'), 1, 0, 0.17687017067164812)
(('The', 'yeomanry', 'are'), 1, 0, 0.17687017067164812)
(('yeomanry', 'are', 'precisely'), 1, 0, 0.17687017067164812)
(('are', 'precisely', 'the'), 1, 0, 0.17687017067164812)
(('precisely', 'the', 'order'), 1, 0, 0.17687017067164812)
(('the', 'order', 'of'), 1, 0, 0.17687017067164812)
(('order', 'of', 'people'), 1, 0, 0.17687017067164812)
(('of', 'people', 'with'), 1, 0, 0.17687017067164812)
(('people', 'with', 'whom'), 1, 0, 0.17687017067164812)
(('with', 'whom', 'I'), 1, 0, 0.17687017067164812)
(('whom', 'I', 'feel'), 1, 0, 0.17687017067164812)
(('I', 'feel', 'I'), 1, 0, 0.17687017067164812)
(('feel', 'I', 'can'), 1, 0, 0.17687017067164812)
(('I', 'can', 'have'), 3, 0, 1.7785588752196837)
(('can', 'have', 'nothing'), 1, 0, 0.17687017067164812)
(('have', 'nothing', 'to'), 8, 0, 7.927797833935018)
(('nothing', 'to', 'do'), 7, 0, 6.295454545454546)
(('to', 'do', '.'), 8, 0, 7.927797833935018)
(('do', '.', ''), 26, 0, 24.157894736842106)
(('', 'A', 'degree'), 1, 0, 0.17687017067164812)
(('A', 'degree', 'or'), 1, 0, 0.17687017067164812)
(('degree', 'or', 'two'), 2, 0, 0.983389342294767)
(('or', 'two', 'lower'), 1, 0, 0.17687017067164812)
(('two', 'lower', ','), 1, 0, 0.17687017067164812)
(('lower', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'a', 'creditable'), 1, 0, 0.17687017067164812)
(('a', 'creditable', 'appearance'), 1, 0, 0.17687017067164812)
(('creditable', 'appearance', 'might'), 1, 0, 0.17687017067164812)
(('appearance', 'might', 'interest'), 1, 0, 0.17687017067164812)
(('might', 'interest', 'me'), 1, 0, 0.17687017067164812)
(('interest', 'me', ';'), 1, 0, 0.17687017067164812)
(('me', ';', 'I'), 1, 0, 0.17687017067164812)
((';', 'I', 'might'), 1, 0, 0.17687017067164812)
(('I', 'might', 'hope'), 1, 0, 0.17687017067164812)
(('might', 'hope', 'to'), 2, 0, 0.983389342294767)
(('hope', 'to', 'be'), 4, 0, 2.9150197628458496)
(('to', 'be', 'useful'), 3, 0, 1.7785588752196837)
(('be', 'useful', 'to'), 1, 0, 0.17687017067164812)
(('useful', 'to', 'their'), 1, 0, 0.17687017067164812)
(('to', 'their', 'families'), 1, 0, 0.17687017067164812)
(('their', 'families', 'in'), 1, 0, 0.17687017067164812)
(('families', 'in', 'some'), 1, 0, 0.17687017067164812)
(('in', 'some', 'way'), 1, 0, 0.17687017067164812)
(('some', 'way', 'or'), 1, 0, 0.17687017067164812)
(('way', 'or', 'other'), 1, 0, 0.17687017067164812)
(('or', 'other', '.'), 3, 0, 1.7785588752196837)
(('', 'But', 'a'), 1, 0, 0.17687017067164812)
(('But', 'a', 'farmer'), 1, 0, 0.17687017067164812)
(('a', 'farmer', 'can'), 1, 0, 0.17687017067164812)
(('farmer', 'can', 'need'), 1, 0, 0.17687017067164812)
(('can', 'need', 'none'), 1, 0, 0.17687017067164812)
(('need', 'none', 'of'), 1, 0, 0.17687017067164812)
(('none', 'of', 'my'), 1, 0, 0.17687017067164812)
(('of', 'my', 'help'), 1, 0, 0.17687017067164812)
(('my', 'help', ','), 1, 0, 0.17687017067164812)
(('help', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'is'), 7, 0, 6.295454545454546)
(('and', 'is', ','), 1, 0, 0.17687017067164812)
(('is', ',', 'therefore'), 1, 0, 0.17687017067164812)
(('therefore', ',', 'in'), 2, 0, 0.983389342294767)
((',', 'in', 'one'), 2, 0, 0.983389342294767)
(('in', 'one', 'sense'), 1, 0, 0.17687017067164812)
(('one', 'sense', ','), 1, 0, 0.17687017067164812)
(('sense', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'much'), 2, 0, 0.983389342294767)
(('as', 'much', 'above'), 1, 0, 0.17687017067164812)
(('much', 'above', 'my'), 1, 0, 0.17687017067164812)
(('above', 'my', 'notice'), 1, 0, 0.17687017067164812)
(('my', 'notice', 'as'), 1, 0, 0.17687017067164812)
(('notice', 'as', 'in'), 1, 0, 0.17687017067164812)
(('as', 'in', 'every'), 1, 0, 0.17687017067164812)
(('in', 'every', 'other'), 2, 0, 0.983389342294767)
(('every', 'other', 'he'), 1, 0, 0.17687017067164812)
(('other', 'he', 'is'), 1, 0, 0.17687017067164812)
(('he', 'is', 'below'), 1, 0, 0.17687017067164812)
(('is', 'below', 'it'), 1, 0, 0.17687017067164812)
(('below', 'it', '."'), 1, 0, 0.17687017067164812)
(('it', '."', ''), 44, 0, 33.75)
(('', '"', 'To'), 11, 0, 8.671532846715328)
(('"', 'To', 'be'), 8, 0, 7.927797833935018)
(('To', 'be', 'sure'), 9, 0, 6.5983606557377055)
(('be', 'sure', '.'), 7, 0, 6.295454545454546)
(('sure', '.', ''), 10, 0, 9.36024844720497)
(('', 'Oh', 'yes'), 2, 0, 0.983389342294767)
(('Oh', 'yes', '!'), 1, 0, 0.17687017067164812)
(('yes', '!', ''), 1, 0, 0.17687017067164812)
(('It', 'is', 'not'), 15, 0, 14.666666666666666)
(('is', 'not', 'likely'), 4, 0, 2.9150197628458496)
(('not', 'likely', 'you'), 1, 0, 0.17687017067164812)
(('likely', 'you', 'should'), 2, 0, 0.983389342294767)
(('you', 'should', 'ever'), 1, 0, 0.17687017067164812)
(('should', 'ever', 'have'), 1, 0, 0.17687017067164812)
(('ever', 'have', 'observed'), 1, 0, 0.17687017067164812)
(('have', 'observed', 'him'), 2, 0, 0.983389342294767)
(('observed', 'him', ';'), 1, 0, 0.17687017067164812)
(('but', 'he', 'knows'), 1, 0, 0.17687017067164812)
(('he', 'knows', 'you'), 1, 0, 0.17687017067164812)
(('knows', 'you', 'very'), 1, 0, 0.17687017067164812)
(('you', 'very', 'well'), 2, 0, 0.983389342294767)
(('very', 'well', 'indeed'), 2, 0, 0.983389342294767)
(('well', 'indeed', '--'), 1, 0, 0.17687017067164812)
(('indeed', '--', 'I'), 3, 0, 1.7785588752196837)
(('--', 'I', 'mean'), 3, 0, 1.7785588752196837)
(('I', 'mean', 'by'), 1, 0, 0.17687017067164812)
(('mean', 'by', 'sight'), 1, 0, 0.17687017067164812)
(('by', 'sight', '."'), 2, 0, 0.983389342294767)
(('sight', '."', ''), 2, 0, 0.983389342294767)
(('"', 'I', 'have'), 40, 0, 32.800000000000004)
(('I', 'have', 'no'), 35, 0, 25.714285714285715)
(('have', 'no', 'doubt'), 20, 0, 21.0)
(('no', 'doubt', 'of'), 21, 0, 29.040000000000003)
(('doubt', 'of', 'his'), 6, 0, 4.48816029143898)
(('of', 'his', 'being'), 11, 0, 8.671532846715328)
(('his', 'being', 'a'), 5, 0, 3.7220338983050847)
(('being', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'respectable'), 3, 0, 1.7785588752196837)
(('very', 'respectable', 'young'), 2, 0, 0.983389342294767)
(('respectable', 'young', 'man'), 3, 0, 1.7785588752196837)
(('young', 'man', '.'), 5, 0, 3.7220338983050847)
(('man', '.', ''), 13, 0, 10.137931034482758)
(('', 'I', 'know'), 17, 0, 19.42105263157895)
(('I', 'know', ','), 2, 0, 0.983389342294767)
(('know', ',', 'indeed'), 1, 0, 0.17687017067164812)
(('indeed', ',', 'that'), 5, 0, 3.7220338983050847)
(('that', 'he', 'is'), 12, 0, 11.424242424242424)
(('he', 'is', 'so'), 6, 0, 4.48816029143898)
(('is', 'so', ','), 2, 0, 0.983389342294767)
(('so', ',', 'and'), 4, 0, 2.9150197628458496)
((',', 'as', 'such'), 2, 0, 0.983389342294767)
(('as', 'such', ','), 2, 0, 0.983389342294767)
(('such', ',', 'wish'), 1, 0, 0.17687017067164812)
((',', 'wish', 'him'), 1, 0, 0.17687017067164812)
(('wish', 'him', 'well'), 2, 0, 0.983389342294767)
(('him', 'well', '.'), 3, 0, 1.7785588752196837)
(('', 'What', 'do'), 3, 0, 1.7785588752196837)
(('What', 'do', 'you'), 8, 0, 7.927797833935018)
(('do', 'you', 'imagine'), 1, 0, 0.17687017067164812)
(('you', 'imagine', 'his'), 1, 0, 0.17687017067164812)
(('imagine', 'his', 'age'), 1, 0, 0.17687017067164812)
(('his', 'age', 'to'), 1, 0, 0.17687017067164812)
(('age', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', '?"'), 2, 0, 0.983389342294767)
(('be', '?"', ''), 3, 0, 1.7785588752196837)
(('', '"', 'He'), 32, 0, 33.0)
(('"', 'He', 'was'), 4, 0, 2.9150197628458496)
(('He', 'was', 'four'), 1, 0, 0.17687017067164812)
(('was', 'four', '-'), 1, 0, 0.17687017067164812)
(('four', '-', 'and'), 4, 0, 2.9150197628458496)
(('-', 'twenty', 'the'), 1, 0, 0.17687017067164812)
(('twenty', 'the', '8th'), 1, 0, 0.17687017067164812)
(('the', '8th', 'of'), 1, 0, 0.17687017067164812)
(('8th', 'of', 'last'), 1, 0, 0.17687017067164812)
(('of', 'last', 'June'), 1, 0, 0.17687017067164812)
(('last', 'June', ','), 1, 0, 0.17687017067164812)
(('June', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'my'), 6, 0, 4.48816029143898)
(('and', 'my', 'birthday'), 1, 0, 0.17687017067164812)
(('my', 'birthday', 'is'), 1, 0, 0.17687017067164812)
(('birthday', 'is', 'the'), 1, 0, 0.17687017067164812)
(('is', 'the', '23rd'), 1, 0, 0.17687017067164812)
(('the', '23rd', 'just'), 1, 0, 0.17687017067164812)
(('23rd', 'just', 'a'), 1, 0, 0.17687017067164812)
(('just', 'a', 'fortnight'), 1, 0, 0.17687017067164812)
(('a', 'fortnight', 'and'), 1, 0, 0.17687017067164812)
(('fortnight', 'and', 'a'), 1, 0, 0.17687017067164812)
(('and', 'a', 'day'), 1, 0, 0.17687017067164812)
(('a', 'day', "'"), 1, 0, 0.17687017067164812)
(('day', "'", 's'), 6, 0, 4.48816029143898)
(("'", 's', 'difference'), 1, 0, 0.17687017067164812)
(('s', 'difference', '--'), 1, 0, 0.17687017067164812)
(('difference', '--', 'which'), 1, 0, 0.17687017067164812)
(('--', 'which', 'is'), 4, 0, 2.9150197628458496)
(('which', 'is', 'very'), 2, 0, 0.983389342294767)
(('is', 'very', 'odd'), 2, 0, 0.983389342294767)
(('very', 'odd', '."'), 1, 0, 0.17687017067164812)
(('odd', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'Only', 'four'), 1, 0, 0.17687017067164812)
(('Only', 'four', '-'), 1, 0, 0.17687017067164812)
(('-', 'twenty', '.'), 3, 0, 1.7785588752196837)
(('twenty', '.', ''), 3, 0, 1.7785588752196837)
(('', 'That', 'is'), 11, 0, 8.671532846715328)
(('That', 'is', 'too'), 1, 0, 0.17687017067164812)
(('is', 'too', 'young'), 2, 0, 0.983389342294767)
(('too', 'young', 'to'), 2, 0, 0.983389342294767)
(('young', 'to', 'settle'), 2, 0, 0.983389342294767)
(('to', 'settle', '.'), 1, 0, 0.17687017067164812)
(('settle', '.', ''), 1, 0, 0.17687017067164812)
(('His', 'mother', 'is'), 1, 0, 0.17687017067164812)
(('mother', 'is', 'perfectly'), 1, 0, 0.17687017067164812)
(('is', 'perfectly', 'right'), 1, 0, 0.17687017067164812)
(('perfectly', 'right', 'not'), 1, 0, 0.17687017067164812)
(('right', 'not', 'to'), 1, 0, 0.17687017067164812)
(('to', 'be', 'in'), 12, 0, 11.424242424242424)
(('be', 'in', 'a'), 4, 0, 2.9150197628458496)
(('in', 'a', 'hurry'), 9, 0, 6.5983606557377055)
(('a', 'hurry', '.'), 4, 0, 2.9150197628458496)
(('hurry', '.', ''), 6, 0, 4.48816029143898)
(('', 'They', 'seem'), 3, 0, 1.7785588752196837)
(('They', 'seem', 'very'), 1, 0, 0.17687017067164812)
(('seem', 'very', 'comfortable'), 1, 0, 0.17687017067164812)
(('very', 'comfortable', 'as'), 1, 0, 0.17687017067164812)
(('comfortable', 'as', 'they'), 1, 0, 0.17687017067164812)
(('as', 'they', 'are'), 3, 0, 1.7785588752196837)
(('they', 'are', ','), 5, 0, 3.7220338983050847)
(('are', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'if'), 4, 0, 2.9150197628458496)
(('and', 'if', 'she'), 4, 0, 2.9150197628458496)
(('she', 'were', 'to'), 2, 0, 0.983389342294767)
(('were', 'to', 'take'), 1, 0, 0.17687017067164812)
(('to', 'take', 'any'), 2, 0, 0.983389342294767)
(('take', 'any', 'pains'), 1, 0, 0.17687017067164812)
(('any', 'pains', 'to'), 2, 0, 0.983389342294767)
(('pains', 'to', 'marry'), 1, 0, 0.17687017067164812)
(('to', 'marry', 'him'), 5, 0, 3.7220338983050847)
(('marry', 'him', ','), 2, 0, 0.983389342294767)
(('him', ',', 'she'), 4, 0, 2.9150197628458496)
((',', 'she', 'would'), 13, 0, 10.137931034482758)
(('she', 'would', 'probably'), 1, 0, 0.17687017067164812)
(('would', 'probably', 'repent'), 1, 0, 0.17687017067164812)
(('probably', 'repent', 'it'), 1, 0, 0.17687017067164812)
(('repent', 'it', '.'), 1, 0, 0.17687017067164812)
(('', '', 'Six'), 1, 0, 0.17687017067164812)
(('', 'Six', 'years'), 1, 0, 0.17687017067164812)
(('Six', 'years', 'hence'), 2, 0, 0.983389342294767)
(('years', 'hence', ','), 1, 0, 0.17687017067164812)
(('hence', ',', 'if'), 1, 0, 0.17687017067164812)
((',', 'if', 'he'), 13, 0, 10.137931034482758)
(('if', 'he', 'could'), 7, 0, 6.295454545454546)
(('he', 'could', 'meet'), 1, 0, 0.17687017067164812)
(('could', 'meet', 'with'), 2, 0, 0.983389342294767)
(('meet', 'with', 'a'), 1, 0, 0.17687017067164812)
(('with', 'a', 'good'), 2, 0, 0.983389342294767)
(('a', 'good', 'sort'), 1, 0, 0.17687017067164812)
(('sort', 'of', 'young'), 3, 0, 1.7785588752196837)
(('of', 'young', 'woman'), 1, 0, 0.17687017067164812)
(('young', 'woman', 'in'), 2, 0, 0.983389342294767)
(('woman', 'in', 'the'), 4, 0, 2.9150197628458496)
(('the', 'same', 'rank'), 1, 0, 0.17687017067164812)
(('same', 'rank', 'as'), 1, 0, 0.17687017067164812)
(('rank', 'as', 'his'), 1, 0, 0.17687017067164812)
(('own', ',', 'with'), 2, 0, 0.983389342294767)
(('with', 'a', 'little'), 4, 0, 2.9150197628458496)
(('a', 'little', 'money'), 1, 0, 0.17687017067164812)
(('little', 'money', ','), 1, 0, 0.17687017067164812)
(('money', ',', 'it'), 1, 0, 0.17687017067164812)
(('it', 'might', 'be'), 11, 0, 8.671532846715328)
(('might', 'be', 'very'), 3, 0, 1.7785588752196837)
(('be', 'very', 'desirable'), 1, 0, 0.17687017067164812)
(('very', 'desirable', '."'), 1, 0, 0.17687017067164812)
(('desirable', '."', ''), 1, 0, 0.17687017067164812)
(('', '"', 'Six'), 1, 0, 0.17687017067164812)
(('"', 'Six', 'years'), 1, 0, 0.17687017067164812)
(('years', 'hence', '!'), 1, 0, 0.17687017067164812)
(('hence', '!', ''), 1, 0, 0.17687017067164812)
(('', '', 'Dear'), 11, 0, 8.671532846715328)
(('', 'Dear', 'Miss'), 3, 0, 1.7785588752196837)
(('Dear', 'Miss', 'Woodhouse'), 8, 0, 7.927797833935018)
(('Woodhouse', ',', 'he'), 3, 0, 1.7785588752196837)
(('he', 'would', 'be'), 12, 0, 11.424242424242424)
(('would', 'be', 'thirty'), 1, 0, 0.17687017067164812)
(('be', 'thirty', 'years'), 1, 0, 0.17687017067164812)
(('thirty', 'years', 'old'), 1, 0, 0.17687017067164812)
(('years', 'old', '!"'), 1, 0, 0.17687017067164812)
(('old', '!"', ''), 1, 0, 0.17687017067164812)
(('"', 'Well', ','), 30, 0, 31.0)
(('Well', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'that', 'is'), 3, 0, 1.7785588752196837)
(('that', 'is', 'as'), 1, 0, 0.17687017067164812)
(('is', 'as', 'early'), 1, 0, 0.17687017067164812)
(('as', 'early', 'as'), 1, 0, 0.17687017067164812)
(('early', 'as', 'most'), 1, 0, 0.17687017067164812)
(('as', 'most', 'men'), 1, 0, 0.17687017067164812)
(('most', 'men', 'can'), 1, 0, 0.17687017067164812)
(('men', 'can', 'afford'), 1, 0, 0.17687017067164812)
(('can', 'afford', 'to'), 1, 0, 0.17687017067164812)
(('afford', 'to', 'marry'), 1, 0, 0.17687017067164812)
(('to', 'marry', ','), 12, 0, 11.424242424242424)
(('marry', ',', 'who'), 1, 0, 0.17687017067164812)
((',', 'who', 'are'), 4, 0, 2.9150197628458496)
(('who', 'are', 'not'), 1, 0, 0.17687017067164812)
(('are', 'not', 'born'), 1, 0, 0.17687017067164812)
(('not', 'born', 'to'), 1, 0, 0.17687017067164812)
(('born', 'to', 'an'), 1, 0, 0.17687017067164812)
(('to', 'an', 'independence'), 1, 0, 0.17687017067164812)
(('an', 'independence', '.'), 1, 0, 0.17687017067164812)
(('independence', '.', ''), 1, 0, 0.17687017067164812)
((',', 'I', 'imagine'), 2, 0, 0.983389342294767)
(('I', 'imagine', ','), 1, 0, 0.17687017067164812)
(('imagine', ',', 'has'), 1, 0, 0.17687017067164812)
((',', 'has', 'his'), 1, 0, 0.17687017067164812)
(('has', 'his', 'fortune'), 1, 0, 0.17687017067164812)
(('his', 'fortune', 'entirely'), 1, 0, 0.17687017067164812)
(('fortune', 'entirely', 'to'), 1, 0, 0.17687017067164812)
(('entirely', 'to', 'make'), 1, 0, 0.17687017067164812)
(('to', 'make', '--'), 3, 0, 1.7785588752196837)
(('make', '--', 'cannot'), 1, 0, 0.17687017067164812)
(('--', 'cannot', 'be'), 2, 0, 0.983389342294767)
(('cannot', 'be', 'at'), 1, 0, 0.17687017067164812)
(('be', 'at', 'all'), 6, 0, 4.48816029143898)
(('at', 'all', 'beforehand'), 1, 0, 0.17687017067164812)
(('all', 'beforehand', 'with'), 1, 0, 0.17687017067164812)
(('beforehand', 'with', 'the'), 1, 0, 0.17687017067164812)
(('with', 'the', 'world'), 1, 0, 0.17687017067164812)
(('the', 'world', '.'), 10, 0, 9.36024844720497)
(('world', '.', ''), 10, 0, 9.36024844720497)
(('', '', 'Whatever'), 1, 0, 0.17687017067164812)
(('', 'Whatever', 'money'), 1, 0, 0.17687017067164812)
(('Whatever', 'money', 'he'), 1, 0, 0.17687017067164812)
(('money', 'he', 'might'), 1, 0, 0.17687017067164812)
(('he', 'might', 'come'), 3, 0, 1.7785588752196837)
(('might', 'come', 'into'), 1, 0, 0.17687017067164812)
(('come', 'into', 'when'), 1, 0, 0.17687017067164812)
(('into', 'when', 'his'), 1, 0, 0.17687017067164812)
(('when', 'his', 'father'), 1, 0, 0.17687017067164812)
(('his', 'father', 'died'), 1, 0, 0.17687017067164812)
(('father', 'died', ','), 1, 0, 0.17687017067164812)
(('died', ',', 'whatever'), 1, 0, 0.17687017067164812)
((',', 'whatever', 'his'), 1, 0, 0.17687017067164812)
(('whatever', 'his', 'share'), 1, 0, 0.17687017067164812)
(('his', 'share', 'of'), 2, 0, 0.983389342294767)
(('share', 'of', 'the'), 2, 0, 0.983389342294767)
(('the', 'family', 'property'), 1, 0, 0.17687017067164812)
(('family', 'property', ','), 1, 0, 0.17687017067164812)
(('property', ',', 'it'), 1, 0, 0.17687017067164812)
((',', 'it', 'is'), 42, 0, 129.0)
(('it', 'is', ','), 11, 0, 8.671532846715328)
(('is', ',', 'I'), 7, 0, 6.295454545454546)
((',', 'I', 'dare'), 16, 0, 14.681818181818182)
(('dare', 'say', ','), 11, 0, 8.671532846715328)
(('say', ',', 'all'), 1, 0, 0.17687017067164812)
((',', 'all', 'afloat'), 1, 0, 0.17687017067164812)
(('all', 'afloat', ','), 1, 0, 0.17687017067164812)
(('afloat', ',', 'all'), 1, 0, 0.17687017067164812)
((',', 'all', 'employed'), 1, 0, 0.17687017067164812)
(('all', 'employed', 'in'), 1, 0, 0.17687017067164812)
(('employed', 'in', 'his'), 1, 0, 0.17687017067164812)
(('in', 'his', 'stock'), 1, 0, 0.17687017067164812)
(('his', 'stock', ','), 1, 0, 0.17687017067164812)
(('stock', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'so', 'forth'), 2, 0, 0.983389342294767)
(('so', 'forth', ';'), 1, 0, 0.17687017067164812)
(('forth', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'though', ','), 1, 0, 0.17687017067164812)
(('though', ',', 'with'), 1, 0, 0.17687017067164812)
((',', 'with', 'diligence'), 1, 0, 0.17687017067164812)
(('with', 'diligence', 'and'), 1, 0, 0.17687017067164812)
(('diligence', 'and', 'good'), 1, 0, 0.17687017067164812)
(('and', 'good', 'luck'), 1, 0, 0.17687017067164812)
(('good', 'luck', ','), 1, 0, 0.17687017067164812)
(('luck', ',', 'he'), 1, 0, 0.17687017067164812)
((',', 'he', 'may'), 3, 0, 1.7785588752196837)
(('he', 'may', 'be'), 3, 0, 1.7785588752196837)
(('may', 'be', 'rich'), 1, 0, 0.17687017067164812)
(('be', 'rich', 'in'), 1, 0, 0.17687017067164812)
(('rich', 'in', 'time'), 1, 0, 0.17687017067164812)
(('in', 'time', ','), 3, 0, 1.7785588752196837)
(('time', ',', 'it'), 2, 0, 0.983389342294767)
(('it', 'is', 'next'), 1, 0, 0.17687017067164812)
(('is', 'next', 'to'), 1, 0, 0.17687017067164812)
(('next', 'to', 'impossible'), 1, 0, 0.17687017067164812)
(('to', 'impossible', 'that'), 1, 0, 0.17687017067164812)
(('impossible', 'that', 'he'), 1, 0, 0.17687017067164812)
(('he', 'should', 'have'), 7, 0, 6.295454545454546)
(('should', 'have', 'realised'), 1, 0, 0.17687017067164812)
(('have', 'realised', 'any'), 1, 0, 0.17687017067164812)
(('realised', 'any', 'thing'), 1, 0, 0.17687017067164812)
(('any', 'thing', 'yet'), 1, 0, 0.17687017067164812)
(('thing', 'yet', '."'), 1, 0, 0.17687017067164812)
(('yet', '."', ''), 2, 0, 0.983389342294767)
(('sure', ',', 'so'), 1, 0, 0.17687017067164812)
((',', 'so', 'it'), 2, 0, 0.983389342294767)
(('so', 'it', 'is'), 1, 0, 0.17687017067164812)
(('it', 'is', '.'), 6, 0, 4.48816029143898)
(('is', '.', ''), 9, 0, 6.5983606557377055)
(('', 'But', 'they'), 2, 0, 0.983389342294767)
(('But', 'they', 'live'), 1, 0, 0.17687017067164812)
(('they', 'live', 'very'), 1, 0, 0.17687017067164812)
(('live', 'very', 'comfortably'), 1, 0, 0.17687017067164812)
(('very', 'comfortably', '.'), 2, 0, 0.983389342294767)
(('comfortably', '.', ''), 2, 0, 0.983389342294767)
(('', 'They', 'have'), 3, 0, 1.7785588752196837)
(('They', 'have', 'no'), 2, 0, 0.983389342294767)
(('have', 'no', 'indoors'), 1, 0, 0.17687017067164812)
(('no', 'indoors', 'man'), 1, 0, 0.17687017067164812)
(('indoors', 'man', ','), 1, 0, 0.17687017067164812)
(('man', ',', 'else'), 1, 0, 0.17687017067164812)
((',', 'else', 'they'), 1, 0, 0.17687017067164812)
(('else', 'they', 'do'), 1, 0, 0.17687017067164812)
(('they', 'do', 'not'), 2, 0, 0.983389342294767)
(('do', 'not', 'want'), 10, 0, 9.36024844720497)
(('not', 'want', 'for'), 1, 0, 0.17687017067164812)
(('want', 'for', 'any'), 1, 0, 0.17687017067164812)
(('any', 'thing', ';'), 4, 0, 2.9150197628458496)
(('thing', ';', 'and'), 3, 0, 1.7785588752196837)
((';', 'and', 'Mrs'), 13, 0, 10.137931034482758)
(('.', 'Martin', 'talks'), 1, 0, 0.17687017067164812)
(('Martin', 'talks', 'of'), 1, 0, 0.17687017067164812)
(('talks', 'of', 'taking'), 1, 0, 0.17687017067164812)
(('of', 'taking', 'a'), 2, 0, 0.983389342294767)
(('taking', 'a', 'boy'), 1, 0, 0.17687017067164812)
(('a', 'boy', 'another'), 1, 0, 0.17687017067164812)
(('boy', 'another', 'year'), 1, 0, 0.17687017067164812)
(('another', 'year', '."'), 1, 0, 0.17687017067164812)
(('year', '."', ''), 2, 0, 0.983389342294767)
(('"', 'I', 'wish'), 6, 0, 4.48816029143898)
(('may', 'not', 'get'), 1, 0, 0.17687017067164812)
(('not', 'get', 'into'), 1, 0, 0.17687017067164812)
(('get', 'into', 'a'), 2, 0, 0.983389342294767)
(('into', 'a', 'scrape'), 1, 0, 0.17687017067164812)
(('a', 'scrape', ','), 1, 0, 0.17687017067164812)
(('scrape', ',', 'Harriet'), 1, 0, 0.17687017067164812)
((',', 'Harriet', ','), 21, 0, 29.040000000000003)
(('Harriet', ',', 'whenever'), 2, 0, 0.983389342294767)
(('whenever', 'he', 'does'), 1, 0, 0.17687017067164812)
(('he', 'does', 'marry'), 1, 0, 0.17687017067164812)
(('does', 'marry', ';--'), 1, 0, 0.17687017067164812)
(('marry', ';--', 'I'), 1, 0, 0.17687017067164812)
((';--', 'I', 'mean'), 1, 0, 0.17687017067164812)
(('I', 'mean', ','), 4, 0, 2.9150197628458496)
(('mean', ',', 'as'), 3, 0, 1.7785588752196837)
((',', 'as', 'to'), 26, 0, 24.157894736842106)
(('as', 'to', 'being'), 1, 0, 0.17687017067164812)
(('to', 'being', 'acquainted'), 1, 0, 0.17687017067164812)
(('being', 'acquainted', 'with'), 2, 0, 0.983389342294767)
(('acquainted', 'with', 'his'), 2, 0, 0.983389342294767)
(('with', 'his', 'wife'), 2, 0, 0.983389342294767)
(('his', 'wife', '--'), 1, 0, 0.17687017067164812)
(('wife', '--', 'for'), 1, 0, 0.17687017067164812)
(('--', 'for', 'though'), 1, 0, 0.17687017067164812)
(('for', 'though', 'his'), 2, 0, 0.983389342294767)
(('though', 'his', 'sisters'), 1, 0, 0.17687017067164812)
(('his', 'sisters', ','), 2, 0, 0.983389342294767)
(('sisters', ',', 'from'), 1, 0, 0.17687017067164812)
((',', 'from', 'a'), 2, 0, 0.983389342294767)
(('from', 'a', 'superior'), 1, 0, 0.17687017067164812)
(('a', 'superior', 'education'), 1, 0, 0.17687017067164812)
(('superior', 'education', ','), 1, 0, 0.17687017067164812)
(('education', ',', 'are'), 1, 0, 0.17687017067164812)
((',', 'are', 'not'), 3, 0, 1.7785588752196837)
(('are', 'not', 'to'), 4, 0, 2.9150197628458496)
(('to', 'be', 'altogether'), 2, 0, 0.983389342294767)
(('be', 'altogether', 'objected'), 1, 0, 0.17687017067164812)
(('altogether', 'objected', 'to'), 1, 0, 0.17687017067164812)
(('objected', 'to', ','), 1, 0, 0.17687017067164812)
(('to', ',', 'it'), 1, 0, 0.17687017067164812)
((',', 'it', 'does'), 4, 0, 2.9150197628458496)
(('it', 'does', 'not'), 7, 0, 6.295454545454546)
(('does', 'not', 'follow'), 2, 0, 0.983389342294767)
(('not', 'follow', 'that'), 2, 0, 0.983389342294767)
(('follow', 'that', 'he'), 1, 0, 0.17687017067164812)
(('that', 'he', 'might'), 9, 0, 6.5983606557377055)
(('he', 'might', 'marry'), 1, 0, 0.17687017067164812)
(('might', 'marry', 'any'), 2, 0, 0.983389342294767)
(('marry', 'any', 'body'), 3, 0, 1.7785588752196837)
(('any', 'body', 'at'), 2, 0, 0.983389342294767)
(('body', 'at', 'all'), 2, 0, 0.983389342294767)
(('at', 'all', 'fit'), 1, 0, 0.17687017067164812)
(('all', 'fit', 'for'), 1, 0, 0.17687017067164812)
(('fit', 'for', 'you'), 1, 0, 0.17687017067164812)
(('for', 'you', 'to'), 4, 0, 2.9150197628458496)
(('you', 'to', 'notice'), 1, 0, 0.17687017067164812)
(('to', 'notice', '.'), 1, 0, 0.17687017067164812)
(('notice', '.', ''), 1, 0, 0.17687017067164812)
(('', 'The', 'misfortune'), 2, 0, 0.983389342294767)
(('The', 'misfortune', 'of'), 2, 0, 0.983389342294767)
(('misfortune', 'of', 'your'), 1, 0, 0.17687017067164812)
(('of', 'your', 'birth'), 1, 0, 0.17687017067164812)
(('your', 'birth', 'ought'), 1, 0, 0.17687017067164812)
(('birth', 'ought', 'to'), 1, 0, 0.17687017067164812)
(('ought', 'to', 'make'), 1, 0, 0.17687017067164812)
(('to', 'make', 'you'), 2, 0, 0.983389342294767)
(('make', 'you', 'particularly'), 1, 0, 0.17687017067164812)
(('you', 'particularly', 'careful'), 1, 0, 0.17687017067164812)
(('particularly', 'careful', 'as'), 1, 0, 0.17687017067164812)
(('careful', 'as', 'to'), 1, 0, 0.17687017067164812)
(('as', 'to', 'your'), 2, 0, 0.983389342294767)
(('to', 'your', 'associates'), 1, 0, 0.17687017067164812)
(('your', 'associates', '.'), 1, 0, 0.17687017067164812)
(('associates', '.', ''), 1, 0, 0.17687017067164812)
(('', 'There', 'can'), 2, 0, 0.983389342294767)
(('There', 'can', 'be'), 3, 0, 1.7785588752196837)
(('can', 'be', 'no'), 10, 0, 9.36024844720497)
(('be', 'no', 'doubt'), 5, 0, 3.7220338983050847)
(('doubt', 'of', 'your'), 4, 0, 2.9150197628458496)
(('of', 'your', 'being'), 4, 0, 2.9150197628458496)
(('your', 'being', 'a'), 1, 0, 0.17687017067164812)
(('being', 'a', 'gentleman'), 1, 0, 0.17687017067164812)
(('a', 'gentleman', "'"), 3, 0, 1.7785588752196837)
(('gentleman', "'", 's'), 9, 0, 6.5983606557377055)
(("'", 's', 'daughter'), 3, 0, 1.7785588752196837)
(('s', 'daughter', ','), 3, 0, 1.7785588752196837)
(('daughter', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'you'), 11, 0, 8.671532846715328)
(('and', 'you', 'must'), 2, 0, 0.983389342294767)
(('you', 'must', 'support'), 1, 0, 0.17687017067164812)
(('must', 'support', 'your'), 1, 0, 0.17687017067164812)
(('support', 'your', 'claim'), 1, 0, 0.17687017067164812)
(('your', 'claim', 'to'), 1, 0, 0.17687017067164812)
(('claim', 'to', 'that'), 1, 0, 0.17687017067164812)
(('to', 'that', 'station'), 1, 0, 0.17687017067164812)
(('that', 'station', 'by'), 1, 0, 0.17687017067164812)
(('station', 'by', 'every'), 1, 0, 0.17687017067164812)
(('by', 'every', 'thing'), 3, 0, 1.7785588752196837)
(('every', 'thing', 'within'), 1, 0, 0.17687017067164812)
(('thing', 'within', 'your'), 1, 0, 0.17687017067164812)
(('within', 'your', 'own'), 1, 0, 0.17687017067164812)
(('your', 'own', 'power'), 1, 0, 0.17687017067164812)
(('own', 'power', ','), 1, 0, 0.17687017067164812)
(('power', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'there'), 1, 0, 0.17687017067164812)
(('or', 'there', 'will'), 1, 0, 0.17687017067164812)
(('there', 'will', 'be'), 14, 0, 11.428571428571427)
(('will', 'be', 'plenty'), 3, 0, 1.7785588752196837)
(('be', 'plenty', 'of'), 3, 0, 1.7785588752196837)
(('plenty', 'of', 'people'), 1, 0, 0.17687017067164812)
(('of', 'people', 'who'), 1, 0, 0.17687017067164812)
(('people', 'who', 'would'), 1, 0, 0.17687017067164812)
(('who', 'would', 'take'), 1, 0, 0.17687017067164812)
(('would', 'take', 'pleasure'), 1, 0, 0.17687017067164812)
(('take', 'pleasure', 'in'), 1, 0, 0.17687017067164812)
(('pleasure', 'in', 'degrading'), 1, 0, 0.17687017067164812)
(('in', 'degrading', 'you'), 1, 0, 0.17687017067164812)
(('degrading', 'you', '."'), 1, 0, 0.17687017067164812)
(('', '"', 'Yes'), 62, 0, 21.0)
(('"', 'Yes', ','), 31, 0, 20.571428571428573)
(('Yes', ',', 'to'), 1, 0, 0.17687017067164812)
(('sure', ',', 'I'), 1, 0, 0.17687017067164812)
(('I', 'suppose', 'there'), 6, 0, 4.48816029143898)
(('suppose', 'there', 'are'), 1, 0, 0.17687017067164812)
(('there', 'are', '.'), 1, 0, 0.17687017067164812)
(('are', '.', ''), 6, 0, 4.48816029143898)
(('', 'But', 'while'), 2, 0, 0.983389342294767)
(('But', 'while', 'I'), 1, 0, 0.17687017067164812)
(('while', 'I', 'visit'), 1, 0, 0.17687017067164812)
(('I', 'visit', 'at'), 1, 0, 0.17687017067164812)
(('visit', 'at', 'Hartfield'), 1, 0, 0.17687017067164812)
(('and', 'you', 'are'), 2, 0, 0.983389342294767)
(('you', 'are', 'so'), 5, 0, 3.7220338983050847)
(('are', 'so', 'kind'), 3, 0, 1.7785588752196837)
(('so', 'kind', 'to'), 1, 0, 0.17687017067164812)
(('kind', 'to', 'me'), 1, 0, 0.17687017067164812)
(('to', 'me', ','), 20, 0, 21.0)
(('me', ',', 'Miss'), 2, 0, 0.983389342294767)
((',', 'Miss', 'Woodhouse'), 49, 0, 25.0)
(('Woodhouse', ',', 'I'), 12, 0, 11.424242424242424)
((',', 'I', 'am'), 77, 0, 234.0)
(('I', 'am', 'not'), 32, 0, 33.0)
(('am', 'not', 'afraid'), 3, 0, 1.7785588752196837)
(('not', 'afraid', 'of'), 4, 0, 2.9150197628458496)
(('afraid', 'of', 'what'), 1, 0, 0.17687017067164812)
(('of', 'what', 'any'), 1, 0, 0.17687017067164812)
(('what', 'any', 'body'), 1, 0, 0.17687017067164812)
(('any', 'body', 'can'), 3, 0, 1.7785588752196837)
(('body', 'can', 'do'), 1, 0, 0.17687017067164812)
(('can', 'do', '."'), 1, 0, 0.17687017067164812)
(('do', '."', ''), 10, 0, 9.36024844720497)
(('"', 'You', 'understand'), 1, 0, 0.17687017067164812)
(('You', 'understand', 'the'), 1, 0, 0.17687017067164812)
(('understand', 'the', 'force'), 1, 0, 0.17687017067164812)
(('the', 'force', 'of'), 2, 0, 0.983389342294767)
(('force', 'of', 'influence'), 1, 0, 0.17687017067164812)
(('of', 'influence', 'pretty'), 1, 0, 0.17687017067164812)
(('influence', 'pretty', 'well'), 1, 0, 0.17687017067164812)
(('pretty', 'well', ','), 3, 0, 1.7785588752196837)
(('well', ',', 'Harriet'), 1, 0, 0.17687017067164812)
((',', 'Harriet', ';'), 2, 0, 0.983389342294767)
(('Harriet', ';', 'but'), 3, 0, 1.7785588752196837)
(('but', 'I', 'would'), 5, 0, 3.7220338983050847)
(('I', 'would', 'have'), 4, 0, 2.9150197628458496)
(('would', 'have', 'you'), 1, 0, 0.17687017067164812)
(('have', 'you', 'so'), 1, 0, 0.17687017067164812)
(('you', 'so', 'firmly'), 1, 0, 0.17687017067164812)
(('so', 'firmly', 'established'), 1, 0, 0.17687017067164812)
(('firmly', 'established', 'in'), 1, 0, 0.17687017067164812)
(('established', 'in', 'good'), 1, 0, 0.17687017067164812)
(('in', 'good', 'society'), 1, 0, 0.17687017067164812)
(('good', 'society', ','), 1, 0, 0.17687017067164812)
(('society', ',', 'as'), 1, 0, 0.17687017067164812)
(('as', 'to', 'be'), 5, 0, 3.7220338983050847)
(('to', 'be', 'independent'), 1, 0, 0.17687017067164812)
(('be', 'independent', 'even'), 1, 0, 0.17687017067164812)
(('independent', 'even', 'of'), 1, 0, 0.17687017067164812)
(('even', 'of', 'Hartfield'), 1, 0, 0.17687017067164812)
(('of', 'Hartfield', 'and'), 2, 0, 0.983389342294767)
(('Hartfield', 'and', 'Miss'), 1, 0, 0.17687017067164812)
(('Miss', 'Woodhouse', '.'), 7, 0, 6.295454545454546)
(('', 'I', 'want'), 6, 0, 4.48816029143898)
(('I', 'want', 'to'), 7, 0, 6.295454545454546)
(('want', 'to', 'see'), 2, 0, 0.983389342294767)
(('to', 'see', 'you'), 9, 0, 6.5983606557377055)
(('see', 'you', 'permanently'), 1, 0, 0.17687017067164812)
(('you', 'permanently', 'well'), 1, 0, 0.17687017067164812)
(('permanently', 'well', 'connected'), 1, 0, 0.17687017067164812)
(('well', 'connected', ','), 1, 0, 0.17687017067164812)
(('connected', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'to', 'that'), 1, 0, 0.17687017067164812)
(('to', 'that', 'end'), 1, 0, 0.17687017067164812)
(('that', 'end', 'it'), 1, 0, 0.17687017067164812)
(('end', 'it', 'will'), 1, 0, 0.17687017067164812)
(('will', 'be', 'advisable'), 1, 0, 0.17687017067164812)
(('be', 'advisable', 'to'), 1, 0, 0.17687017067164812)
(('advisable', 'to', 'have'), 1, 0, 0.17687017067164812)
(('to', 'have', 'as'), 1, 0, 0.17687017067164812)
(('have', 'as', 'few'), 1, 0, 0.17687017067164812)
(('as', 'few', 'odd'), 1, 0, 0.17687017067164812)
(('few', 'odd', 'acquaintance'), 1, 0, 0.17687017067164812)
(('odd', 'acquaintance', 'as'), 1, 0, 0.17687017067164812)
(('acquaintance', 'as', 'may'), 1, 0, 0.17687017067164812)
(('as', 'may', 'be'), 2, 0, 0.983389342294767)
(('may', 'be', ';'), 2, 0, 0.983389342294767)
(('be', ';', 'and'), 6, 0, 4.48816029143898)
(('and', ',', 'therefore'), 5, 0, 3.7220338983050847)
(('therefore', ',', 'I'), 2, 0, 0.983389342294767)
((',', 'I', 'say'), 2, 0, 0.983389342294767)
(('I', 'say', 'that'), 2, 0, 0.983389342294767)
(('say', 'that', 'if'), 1, 0, 0.17687017067164812)
(('that', 'if', 'you'), 2, 0, 0.983389342294767)
(('if', 'you', 'should'), 1, 0, 0.17687017067164812)
(('you', 'should', 'still'), 1, 0, 0.17687017067164812)
(('should', 'still', 'be'), 1, 0, 0.17687017067164812)
(('still', 'be', 'in'), 1, 0, 0.17687017067164812)
(('be', 'in', 'this'), 1, 0, 0.17687017067164812)
(('in', 'this', 'country'), 1, 0, 0.17687017067164812)
(('this', 'country', 'when'), 1, 0, 0.17687017067164812)
(('country', 'when', 'Mr'), 1, 0, 0.17687017067164812)
(('when', 'Mr', '.'), 12, 0, 11.424242424242424)
(('.', 'Martin', 'marries'), 1, 0, 0.17687017067164812)
(('Martin', 'marries', ','), 1, 0, 0.17687017067164812)
(('marries', ',', 'I'), 1, 0, 0.17687017067164812)
(('may', 'not', 'be'), 6, 0, 4.48816029143898)
(('not', 'be', 'drawn'), 1, 0, 0.17687017067164812)
(('be', 'drawn', 'in'), 1, 0, 0.17687017067164812)
(('drawn', 'in', 'by'), 1, 0, 0.17687017067164812)
(('in', 'by', 'your'), 1, 0, 0.17687017067164812)
(('by', 'your', 'intimacy'), 1, 0, 0.17687017067164812)
(('your', 'intimacy', 'with'), 1, 0, 0.17687017067164812)
(('intimacy', 'with', 'the'), 2, 0, 0.983389342294767)
(('with', 'the', 'sisters'), 1, 0, 0.17687017067164812)
(('the', 'sisters', ','), 1, 0, 0.17687017067164812)
(('sisters', ',', 'to'), 1, 0, 0.17687017067164812)
(('to', 'be', 'acquainted'), 6, 0, 4.48816029143898)
(('be', 'acquainted', 'with'), 5, 0, 3.7220338983050847)
(('acquainted', 'with', 'the'), 3, 0, 1.7785588752196837)
(('with', 'the', 'wife'), 1, 0, 0.17687017067164812)
(('the', 'wife', ','), 1, 0, 0.17687017067164812)
((',', 'who', 'will'), 1, 0, 0.17687017067164812)
(('who', 'will', 'probably'), 1, 0, 0.17687017067164812)
(('will', 'probably', 'be'), 2, 0, 0.983389342294767)
(('probably', 'be', 'some'), 1, 0, 0.17687017067164812)
(('be', 'some', 'mere'), 1, 0, 0.17687017067164812)
(('some', 'mere', 'farmer'), 1, 0, 0.17687017067164812)
(('mere', 'farmer', "'"), 1, 0, 0.17687017067164812)
(('farmer', "'", 's'), 1, 0, 0.17687017067164812)
(('daughter', ',', 'without'), 1, 0, 0.17687017067164812)
((',', 'without', 'education'), 1, 0, 0.17687017067164812)
(('without', 'education', '."'), 1, 0, 0.17687017067164812)
(('education', '."', ''), 1, 0, 0.17687017067164812)
(('', '', 'Yes'), 12, 0, 11.424242424242424)
(('', 'Yes', '.'), 1, 0, 0.17687017067164812)
(('Yes', '.', ''), 3, 0, 1.7785588752196837)
(('Not', 'that', 'I'), 4, 0, 2.9150197628458496)
(('that', 'I', 'think'), 4, 0, 2.9150197628458496)
(('I', 'think', 'Mr'), 2, 0, 0.983389342294767)
(('think', 'Mr', '.'), 5, 0, 3.7220338983050847)
(('.', 'Martin', 'would'), 1, 0, 0.17687017067164812)
(('Martin', 'would', 'ever'), 1, 0, 0.17687017067164812)
(('would', 'ever', 'marry'), 1, 0, 0.17687017067164812)
(('ever', 'marry', 'any'), 1, 0, 0.17687017067164812)
(('any', 'body', 'but'), 2, 0, 0.983389342294767)
(('body', 'but', 'what'), 1, 0, 0.17687017067164812)
(('what', 'had', 'had'), 1, 0, 0.17687017067164812)
(('had', 'had', 'some'), 1, 0, 0.17687017067164812)
(('had', 'some', 'education'), 1, 0, 0.17687017067164812)
(('some', 'education', '--'), 1, 0, 0.17687017067164812)
(('education', '--', 'and'), 1, 0, 0.17687017067164812)
(('--', 'and', 'been'), 1, 0, 0.17687017067164812)
(('and', 'been', 'very'), 1, 0, 0.17687017067164812)
(('been', 'very', 'well'), 1, 0, 0.17687017067164812)
(('very', 'well', 'brought'), 1, 0, 0.17687017067164812)
(('well', 'brought', 'up'), 1, 0, 0.17687017067164812)
(('brought', 'up', '.'), 1, 0, 0.17687017067164812)
(('', '', 'However'), 12, 0, 11.424242424242424)
(('', 'However', ','), 12, 0, 11.424242424242424)
(('However', ',', 'I'), 5, 0, 3.7220338983050847)
(('do', 'not', 'mean'), 10, 0, 9.36024844720497)
(('not', 'mean', 'to'), 11, 0, 8.671532846715328)
(('mean', 'to', 'set'), 2, 0, 0.983389342294767)
(('to', 'set', 'up'), 2, 0, 0.983389342294767)
(('set', 'up', 'my'), 1, 0, 0.17687017067164812)
(('up', 'my', 'opinion'), 1, 0, 0.17687017067164812)
(('my', 'opinion', 'against'), 1, 0, 0.17687017067164812)
(('opinion', 'against', 'your'), 1, 0, 0.17687017067164812)
(('against', 'your', "'"), 1, 0, 0.17687017067164812)
(('your', "'", 's'), 2, 0, 0.983389342294767)
(("'", 's', '--'), 7, 0, 6.295454545454546)
(('s', '--', 'and'), 1, 0, 0.17687017067164812)
(('am', 'sure', 'I'), 18, 0, 11.585365853658537)
(('sure', 'I', 'shall'), 3, 0, 1.7785588752196837)
(('I', 'shall', 'not'), 18, 0, 11.585365853658537)
(('shall', 'not', 'wish'), 1, 0, 0.17687017067164812)
(('not', 'wish', 'for'), 1, 0, 0.17687017067164812)
(('wish', 'for', 'the'), 1, 0, 0.17687017067164812)
(('for', 'the', 'acquaintance'), 1, 0, 0.17687017067164812)
(('the', 'acquaintance', 'of'), 1, 0, 0.17687017067164812)
(('acquaintance', 'of', 'his'), 1, 0, 0.17687017067164812)
(('of', 'his', 'wife'), 5, 0, 3.7220338983050847)
(('his', 'wife', '.'), 4, 0, 2.9150197628458496)
(('', 'I', 'shall'), 30, 0, 31.0)
(('I', 'shall', 'always'), 7, 0, 6.295454545454546)
(('shall', 'always', 'have'), 1, 0, 0.17687017067164812)
(('always', 'have', 'a'), 1, 0, 0.17687017067164812)
(('regard', 'for', 'the'), 3, 0, 1.7785588752196837)
(('for', 'the', 'Miss'), 1, 0, 0.17687017067164812)
(('the', 'Miss', 'Martins'), 1, 0, 0.17687017067164812)
(('Miss', 'Martins', ','), 1, 0, 0.17687017067164812)
(('Martins', ',', 'especially'), 1, 0, 0.17687017067164812)
((',', 'especially', 'Elizabeth'), 1, 0, 0.17687017067164812)
(('especially', 'Elizabeth', ','), 1, 0, 0.17687017067164812)
(('Elizabeth', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'should'), 5, 0, 3.7220338983050847)
(('and', 'should', 'be'), 4, 0, 2.9150197628458496)
(('should', 'be', 'very'), 4, 0, 2.9150197628458496)
(('be', 'very', 'sorry'), 2, 0, 0.983389342294767)
(('sorry', 'to', 'give'), 1, 0, 0.17687017067164812)
(('to', 'give', 'them'), 3, 0, 1.7785588752196837)
(('give', 'them', 'up'), 1, 0, 0.17687017067164812)
(('them', 'up', ','), 1, 0, 0.17687017067164812)
(('up', ',', 'for'), 1, 0, 0.17687017067164812)
((',', 'for', 'they'), 1, 0, 0.17687017067164812)
(('for', 'they', 'are'), 1, 0, 0.17687017067164812)
(('they', 'are', 'quite'), 3, 0, 1.7785588752196837)
(('are', 'quite', 'as'), 2, 0, 0.983389342294767)
(('quite', 'as', 'well'), 4, 0, 2.9150197628458496)
(('as', 'well', 'educated'), 1, 0, 0.17687017067164812)
(('well', 'educated', 'as'), 1, 0, 0.17687017067164812)
(('educated', 'as', 'me'), 1, 0, 0.17687017067164812)
(('as', 'me', '.'), 1, 0, 0.17687017067164812)
(('me', '.', ''), 58, 0, 59.0)
(('But', 'if', 'he'), 1, 0, 0.17687017067164812)
(('if', 'he', 'marries'), 1, 0, 0.17687017067164812)
(('he', 'marries', 'a'), 1, 0, 0.17687017067164812)
(('marries', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'ignorant'), 1, 0, 0.17687017067164812)
(('very', 'ignorant', ','), 1, 0, 0.17687017067164812)
(('ignorant', ',', 'vulgar'), 1, 0, 0.17687017067164812)
((',', 'vulgar', 'woman'), 1, 0, 0.17687017067164812)
(('vulgar', 'woman', ','), 1, 0, 0.17687017067164812)
(('woman', ',', 'certainly'), 1, 0, 0.17687017067164812)
((',', 'certainly', 'I'), 1, 0, 0.17687017067164812)
(('certainly', 'I', 'had'), 1, 0, 0.17687017067164812)
(('I', 'had', 'better'), 3, 0, 1.7785588752196837)
(('had', 'better', 'not'), 4, 0, 2.9150197628458496)
(('better', 'not', 'visit'), 1, 0, 0.17687017067164812)
(('not', 'visit', 'her'), 1, 0, 0.17687017067164812)
(('visit', 'her', ','), 1, 0, 0.17687017067164812)
(('her', ',', 'if'), 3, 0, 1.7785588752196837)
((',', 'if', 'I'), 12, 0, 11.424242424242424)
(('if', 'I', 'can'), 3, 0, 1.7785588752196837)
(('I', 'can', 'help'), 1, 0, 0.17687017067164812)
(('can', 'help', 'it'), 1, 0, 0.17687017067164812)
(('help', 'it', '."'), 1, 0, 0.17687017067164812)
(('', 'Emma', 'watched'), 4, 0, 2.9150197628458496)
(('Emma', 'watched', 'her'), 1, 0, 0.17687017067164812)
(('watched', 'her', 'through'), 1, 0, 0.17687017067164812)
(('through', 'the', 'fluctuations'), 1, 0, 0.17687017067164812)
(('the', 'fluctuations', 'of'), 1, 0, 0.17687017067164812)
(('fluctuations', 'of', 'this'), 1, 0, 0.17687017067164812)
(('of', 'this', 'speech'), 2, 0, 0.983389342294767)
(('this', 'speech', ','), 4, 0, 2.9150197628458496)
(('speech', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'saw'), 5, 0, 3.7220338983050847)
(('and', 'saw', 'no'), 1, 0, 0.17687017067164812)
(('saw', 'no', 'alarming'), 1, 0, 0.17687017067164812)
(('no', 'alarming', 'symptoms'), 1, 0, 0.17687017067164812)
(('alarming', 'symptoms', 'of'), 1, 0, 0.17687017067164812)
(('symptoms', 'of', 'love'), 1, 0, 0.17687017067164812)
(('of', 'love', '.'), 2, 0, 0.983389342294767)
(('love', '.', ''), 9, 0, 6.5983606557377055)
(('', 'The', 'young'), 3, 0, 1.7785588752196837)
(('The', 'young', 'man'), 2, 0, 0.983389342294767)
(('man', 'had', 'been'), 2, 0, 0.983389342294767)
(('been', 'the', 'first'), 1, 0, 0.17687017067164812)
(('the', 'first', 'admirer'), 1, 0, 0.17687017067164812)
(('first', 'admirer', ','), 1, 0, 0.17687017067164812)
(('admirer', ',', 'but'), 1, 0, 0.17687017067164812)
(('but', 'she', 'trusted'), 1, 0, 0.17687017067164812)
(('she', 'trusted', 'there'), 1, 0, 0.17687017067164812)
(('trusted', 'there', 'was'), 1, 0, 0.17687017067164812)
(('was', 'no', 'other'), 2, 0, 0.983389342294767)
(('no', 'other', 'hold'), 1, 0, 0.17687017067164812)
(('other', 'hold', ','), 1, 0, 0.17687017067164812)
(('hold', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'that', 'there'), 4, 0, 2.9150197628458496)
(('that', 'there', 'would'), 3, 0, 1.7785588752196837)
(('there', 'would', 'be'), 13, 0, 10.137931034482758)
(('would', 'be', 'no'), 7, 0, 6.295454545454546)
(('be', 'no', 'serious'), 1, 0, 0.17687017067164812)
(('no', 'serious', 'difficulty'), 1, 0, 0.17687017067164812)
(('serious', 'difficulty', ','), 1, 0, 0.17687017067164812)
(('difficulty', ',', 'on'), 1, 0, 0.17687017067164812)
((',', 'on', 'Harriet'), 1, 0, 0.17687017067164812)
(('on', 'Harriet', "'"), 11, 0, 8.671532846715328)
(('Harriet', "'", 's'), 91, 0, 92.0)
(("'", 's', 'side'), 14, 0, 11.428571428571427)
(('s', 'side', ','), 8, 0, 7.927797833935018)
(('side', ',', 'to'), 2, 0, 0.983389342294767)
((',', 'to', 'oppose'), 1, 0, 0.17687017067164812)
(('to', 'oppose', 'any'), 1, 0, 0.17687017067164812)
(('oppose', 'any', 'friendly'), 1, 0, 0.17687017067164812)
(('any', 'friendly', 'arrangement'), 1, 0, 0.17687017067164812)
(('friendly', 'arrangement', 'of'), 1, 0, 0.17687017067164812)
(('arrangement', 'of', 'her'), 1, 0, 0.17687017067164812)
(('', 'They', 'met'), 3, 0, 1.7785588752196837)
(('They', 'met', 'Mr'), 1, 0, 0.17687017067164812)
(('met', 'Mr', '.'), 3, 0, 1.7785588752196837)
(('.', 'Martin', 'the'), 1, 0, 0.17687017067164812)
(('Martin', 'the', 'very'), 1, 0, 0.17687017067164812)
(('the', 'very', 'next'), 3, 0, 1.7785588752196837)
(('very', 'next', 'day'), 3, 0, 1.7785588752196837)
(('next', 'day', ','), 4, 0, 2.9150197628458496)
(('day', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'they'), 11, 0, 8.671532846715328)
(('they', 'were', 'walking'), 2, 0, 0.983389342294767)
(('were', 'walking', 'on'), 1, 0, 0.17687017067164812)
(('walking', 'on', 'the'), 1, 0, 0.17687017067164812)
(('on', 'the', 'Donwell'), 1, 0, 0.17687017067164812)
(('the', 'Donwell', 'road'), 1, 0, 0.17687017067164812)
(('Donwell', 'road', '.'), 1, 0, 0.17687017067164812)
(('road', '.', ''), 4, 0, 2.9150197628458496)
(('He', 'was', 'on'), 2, 0, 0.983389342294767)
(('was', 'on', 'foot'), 1, 0, 0.17687017067164812)
(('foot', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'after'), 5, 0, 3.7220338983050847)
(('and', 'after', 'looking'), 1, 0, 0.17687017067164812)
(('after', 'looking', 'very'), 1, 0, 0.17687017067164812)
(('looking', 'very', 'respectfully'), 1, 0, 0.17687017067164812)
(('very', 'respectfully', 'at'), 1, 0, 0.17687017067164812)
(('respectfully', 'at', 'her'), 1, 0, 0.17687017067164812)
(('at', 'her', ','), 11, 0, 8.671532846715328)
(('her', ',', 'looked'), 1, 0, 0.17687017067164812)
((',', 'looked', 'with'), 1, 0, 0.17687017067164812)
(('looked', 'with', 'most'), 1, 0, 0.17687017067164812)
(('with', 'most', 'unfeigned'), 1, 0, 0.17687017067164812)
(('most', 'unfeigned', 'satisfaction'), 1, 0, 0.17687017067164812)
(('unfeigned', 'satisfaction', 'at'), 1, 0, 0.17687017067164812)
(('satisfaction', 'at', 'her'), 1, 0, 0.17687017067164812)
(('at', 'her', 'companion'), 1, 0, 0.17687017067164812)
(('her', 'companion', '.'), 2, 0, 0.983389342294767)
(('companion', '.', ''), 2, 0, 0.983389342294767)
(('Emma', 'was', 'not'), 5, 0, 3.7220338983050847)
(('was', 'not', 'sorry'), 3, 0, 1.7785588752196837)
(('not', 'sorry', 'to'), 3, 0, 1.7785588752196837)
(('sorry', 'to', 'have'), 2, 0, 0.983389342294767)
(('to', 'have', 'such'), 2, 0, 0.983389342294767)
(('have', 'such', 'an'), 1, 0, 0.17687017067164812)
(('such', 'an', 'opportunity'), 2, 0, 0.983389342294767)
(('an', 'opportunity', 'of'), 4, 0, 2.9150197628458496)
(('opportunity', 'of', 'survey'), 1, 0, 0.17687017067164812)
(('of', 'survey', ';'), 1, 0, 0.17687017067164812)
(('survey', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'walking'), 1, 0, 0.17687017067164812)
(('and', 'walking', 'a'), 1, 0, 0.17687017067164812)
(('walking', 'a', 'few'), 1, 0, 0.17687017067164812)
(('a', 'few', 'yards'), 1, 0, 0.17687017067164812)
(('few', 'yards', 'forward'), 1, 0, 0.17687017067164812)
(('yards', 'forward', ','), 1, 0, 0.17687017067164812)
(('forward', ',', 'while'), 1, 0, 0.17687017067164812)
((',', 'while', 'they'), 1, 0, 0.17687017067164812)
(('while', 'they', 'talked'), 1, 0, 0.17687017067164812)
(('they', 'talked', 'together'), 1, 0, 0.17687017067164812)
(('talked', 'together', ','), 1, 0, 0.17687017067164812)
(('together', ',', 'soon'), 1, 0, 0.17687017067164812)
((',', 'soon', 'made'), 1, 0, 0.17687017067164812)
(('soon', 'made', 'her'), 1, 0, 0.17687017067164812)
(('made', 'her', 'quick'), 1, 0, 0.17687017067164812)
(('her', 'quick', 'eye'), 2, 0, 0.983389342294767)
(('quick', 'eye', 'sufficiently'), 1, 0, 0.17687017067164812)
(('eye', 'sufficiently', 'acquainted'), 1, 0, 0.17687017067164812)
(('sufficiently', 'acquainted', 'with'), 1, 0, 0.17687017067164812)
(('acquainted', 'with', 'Mr'), 1, 0, 0.17687017067164812)
(('Mr', '.', 'Robert'), 2, 0, 0.983389342294767)
(('.', 'Robert', 'Martin'), 4, 0, 2.9150197628458496)
(('Robert', 'Martin', '.'), 4, 0, 2.9150197628458496)
(('Martin', '.', ''), 11, 0, 8.671532846715328)
(('', 'His', 'appearance'), 2, 0, 0.983389342294767)
(('His', 'appearance', 'was'), 1, 0, 0.17687017067164812)
(('appearance', 'was', 'very'), 1, 0, 0.17687017067164812)
(('was', 'very', 'neat'), 1, 0, 0.17687017067164812)
(('very', 'neat', ','), 1, 0, 0.17687017067164812)
(('neat', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'he', 'looked'), 1, 0, 0.17687017067164812)
(('he', 'looked', 'like'), 1, 0, 0.17687017067164812)
(('looked', 'like', 'a'), 1, 0, 0.17687017067164812)
(('like', 'a', 'sensible'), 2, 0, 0.983389342294767)
(('a', 'sensible', 'young'), 2, 0, 0.983389342294767)
(('sensible', 'young', 'man'), 2, 0, 0.983389342294767)
(('man', ',', 'but'), 4, 0, 2.9150197628458496)
(('but', 'his', 'person'), 1, 0, 0.17687017067164812)
(('his', 'person', 'had'), 1, 0, 0.17687017067164812)
(('person', 'had', 'no'), 1, 0, 0.17687017067164812)
(('had', 'no', 'other'), 1, 0, 0.17687017067164812)
(('no', 'other', 'advantage'), 1, 0, 0.17687017067164812)
(('other', 'advantage', ';'), 1, 0, 0.17687017067164812)
(('advantage', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'when', 'he'), 6, 0, 4.48816029143898)
(('when', 'he', 'came'), 3, 0, 1.7785588752196837)
(('he', 'came', 'to'), 6, 0, 4.48816029143898)
(('came', 'to', 'be'), 3, 0, 1.7785588752196837)
(('to', 'be', 'contrasted'), 1, 0, 0.17687017067164812)
(('be', 'contrasted', 'with'), 1, 0, 0.17687017067164812)
(('contrasted', 'with', 'gentlemen'), 1, 0, 0.17687017067164812)
(('with', 'gentlemen', ','), 1, 0, 0.17687017067164812)
(('gentlemen', ',', 'she'), 1, 0, 0.17687017067164812)
((',', 'she', 'thought'), 10, 0, 9.36024844720497)
(('she', 'thought', 'he'), 1, 0, 0.17687017067164812)
(('thought', 'he', 'must'), 1, 0, 0.17687017067164812)
(('he', 'must', 'lose'), 1, 0, 0.17687017067164812)
(('must', 'lose', 'all'), 1, 0, 0.17687017067164812)
(('lose', 'all', 'the'), 1, 0, 0.17687017067164812)
(('all', 'the', 'ground'), 1, 0, 0.17687017067164812)
(('the', 'ground', 'he'), 1, 0, 0.17687017067164812)
(('ground', 'he', 'had'), 1, 0, 0.17687017067164812)
(('he', 'had', 'gained'), 3, 0, 1.7785588752196837)
(('had', 'gained', 'in'), 1, 0, 0.17687017067164812)
(('gained', 'in', 'Harriet'), 1, 0, 0.17687017067164812)
(('in', 'Harriet', "'"), 5, 0, 3.7220338983050847)
(("'", 's', 'inclination'), 1, 0, 0.17687017067164812)
(('s', 'inclination', '.'), 1, 0, 0.17687017067164812)
(('inclination', '.', ''), 1, 0, 0.17687017067164812)
(('Harriet', 'was', 'not'), 1, 0, 0.17687017067164812)
(('was', 'not', 'insensible'), 1, 0, 0.17687017067164812)
(('not', 'insensible', 'of'), 1, 0, 0.17687017067164812)
(('insensible', 'of', 'manner'), 1, 0, 0.17687017067164812)
(('of', 'manner', ';'), 1, 0, 0.17687017067164812)
(('manner', ';', 'she'), 1, 0, 0.17687017067164812)
(('she', 'had', 'voluntarily'), 1, 0, 0.17687017067164812)
(('had', 'voluntarily', 'noticed'), 1, 0, 0.17687017067164812)
(('voluntarily', 'noticed', 'her'), 1, 0, 0.17687017067164812)
(('noticed', 'her', 'father'), 1, 0, 0.17687017067164812)
(("'", 's', 'gentleness'), 1, 0, 0.17687017067164812)
(('s', 'gentleness', 'with'), 1, 0, 0.17687017067164812)
(('gentleness', 'with', 'admiration'), 1, 0, 0.17687017067164812)
(('with', 'admiration', 'as'), 1, 0, 0.17687017067164812)
(('admiration', 'as', 'well'), 1, 0, 0.17687017067164812)
(('as', 'well', 'as'), 36, 0, 44.4)
(('well', 'as', 'wonder'), 1, 0, 0.17687017067164812)
(('as', 'wonder', '.'), 1, 0, 0.17687017067164812)
(('wonder', '.', ''), 3, 0, 1.7785588752196837)
(('.', 'Martin', 'looked'), 1, 0, 0.17687017067164812)
(('Martin', 'looked', 'as'), 1, 0, 0.17687017067164812)
(('looked', 'as', 'if'), 9, 0, 6.5983606557377055)
(('did', 'not', 'know'), 22, 0, 16.03030303030303)
(('not', 'know', 'what'), 15, 0, 14.666666666666666)
(('know', 'what', 'manner'), 1, 0, 0.17687017067164812)
(('what', 'manner', 'was'), 1, 0, 0.17687017067164812)
(('manner', 'was', '.'), 1, 0, 0.17687017067164812)
(('was', '.', ''), 8, 0, 7.927797833935018)
(('', 'They', 'remained'), 1, 0, 0.17687017067164812)
(('They', 'remained', 'but'), 1, 0, 0.17687017067164812)
(('remained', 'but', 'a'), 1, 0, 0.17687017067164812)
(('a', 'few', 'minutes'), 11, 0, 8.671532846715328)
(('few', 'minutes', 'together'), 1, 0, 0.17687017067164812)
(('minutes', 'together', ','), 1, 0, 0.17687017067164812)
(('together', ',', 'as'), 2, 0, 0.983389342294767)
((',', 'as', 'Miss'), 1, 0, 0.17687017067164812)
(('as', 'Miss', 'Woodhouse'), 6, 0, 4.48816029143898)
(('Miss', 'Woodhouse', 'must'), 2, 0, 0.983389342294767)
(('Woodhouse', 'must', 'not'), 2, 0, 0.983389342294767)
(('not', 'be', 'kept'), 1, 0, 0.17687017067164812)
(('be', 'kept', 'waiting'), 1, 0, 0.17687017067164812)
(('kept', 'waiting', ';'), 1, 0, 0.17687017067164812)
(('waiting', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'Harriet'), 11, 0, 8.671532846715328)
(('and', 'Harriet', 'then'), 1, 0, 0.17687017067164812)
(('Harriet', 'then', 'came'), 1, 0, 0.17687017067164812)
(('then', 'came', 'running'), 1, 0, 0.17687017067164812)
(('came', 'running', 'to'), 1, 0, 0.17687017067164812)
(('running', 'to', 'her'), 1, 0, 0.17687017067164812)
(('to', 'her', 'with'), 2, 0, 0.983389342294767)
(('her', 'with', 'a'), 6, 0, 4.48816029143898)
(('with', 'a', 'smiling'), 2, 0, 0.983389342294767)
(('a', 'smiling', 'face'), 1, 0, 0.17687017067164812)
(('smiling', 'face', ','), 1, 0, 0.17687017067164812)
(('face', ',', 'and'), 5, 0, 3.7220338983050847)
(('and', 'in', 'a'), 7, 0, 6.295454545454546)
(('in', 'a', 'flutter'), 2, 0, 0.983389342294767)
(('a', 'flutter', 'of'), 2, 0, 0.983389342294767)
(('flutter', 'of', 'spirits'), 2, 0, 0.983389342294767)
(('of', 'spirits', ','), 7, 0, 6.295454545454546)
(('spirits', ',', 'which'), 3, 0, 1.7785588752196837)
((',', 'which', 'Miss'), 1, 0, 0.17687017067164812)
(('Miss', 'Woodhouse', 'hoped'), 1, 0, 0.17687017067164812)
(('Woodhouse', 'hoped', 'very'), 1, 0, 0.17687017067164812)
(('hoped', 'very', 'soon'), 1, 0, 0.17687017067164812)
(('very', 'soon', 'to'), 1, 0, 0.17687017067164812)
(('soon', 'to', 'compose'), 1, 0, 0.17687017067164812)
(('to', 'compose', '.'), 1, 0, 0.17687017067164812)
(('compose', '.', ''), 1, 0, 0.17687017067164812)
(('"', 'Only', 'think'), 2, 0, 0.983389342294767)
(('Only', 'think', 'of'), 3, 0, 1.7785588752196837)
(('think', 'of', 'our'), 1, 0, 0.17687017067164812)
(('of', 'our', 'happening'), 1, 0, 0.17687017067164812)
(('our', 'happening', 'to'), 1, 0, 0.17687017067164812)
(('happening', 'to', 'meet'), 1, 0, 0.17687017067164812)
(('meet', 'him', '!--'), 1, 0, 0.17687017067164812)
(('him', '!--', 'How'), 1, 0, 0.17687017067164812)
(('!--', 'How', 'very'), 2, 0, 0.983389342294767)
(('How', 'very', 'odd'), 3, 0, 1.7785588752196837)
(('very', 'odd', '!'), 2, 0, 0.983389342294767)
(('odd', '!', ''), 4, 0, 2.9150197628458496)
(('quite', 'a', 'chance'), 1, 0, 0.17687017067164812)
(('a', 'chance', ','), 2, 0, 0.983389342294767)
(('chance', ',', 'he'), 1, 0, 0.17687017067164812)
((',', 'he', 'said'), 9, 0, 6.5983606557377055)
(('he', 'said', ','), 13, 0, 10.137931034482758)
(('said', ',', 'that'), 3, 0, 1.7785588752196837)
(('he', 'had', 'not'), 15, 0, 14.666666666666666)
(('had', 'not', 'gone'), 2, 0, 0.983389342294767)
(('not', 'gone', 'round'), 1, 0, 0.17687017067164812)
(('gone', 'round', 'by'), 1, 0, 0.17687017067164812)
(('round', 'by', 'Randalls'), 1, 0, 0.17687017067164812)
(('by', 'Randalls', '.'), 1, 0, 0.17687017067164812)
(('Randalls', '.', ''), 16, 0, 14.681818181818182)
(('', 'He', 'did'), 13, 0, 10.137931034482758)
(('He', 'did', 'not'), 9, 0, 6.5983606557377055)
(('did', 'not', 'think'), 6, 0, 4.48816029143898)
(('not', 'think', 'we'), 1, 0, 0.17687017067164812)
(('think', 'we', 'ever'), 1, 0, 0.17687017067164812)
(('we', 'ever', 'walked'), 1, 0, 0.17687017067164812)
(('ever', 'walked', 'this'), 1, 0, 0.17687017067164812)
(('walked', 'this', 'road'), 1, 0, 0.17687017067164812)
(('this', 'road', '.'), 1, 0, 0.17687017067164812)
(('', 'He', 'thought'), 5, 0, 3.7220338983050847)
(('He', 'thought', 'we'), 1, 0, 0.17687017067164812)
(('thought', 'we', 'walked'), 1, 0, 0.17687017067164812)
(('we', 'walked', 'towards'), 1, 0, 0.17687017067164812)
(('walked', 'towards', 'Randalls'), 1, 0, 0.17687017067164812)
(('towards', 'Randalls', 'most'), 1, 0, 0.17687017067164812)
(('Randalls', 'most', 'days'), 1, 0, 0.17687017067164812)
(('most', 'days', '.'), 1, 0, 0.17687017067164812)
(('days', '.', ''), 8, 0, 7.927797833935018)
(('He', 'has', 'not'), 3, 0, 1.7785588752196837)
(('has', 'not', 'been'), 7, 0, 6.295454545454546)
(('not', 'been', 'able'), 4, 0, 2.9150197628458496)
(('been', 'able', 'to'), 13, 0, 10.137931034482758)
(('able', 'to', 'get'), 6, 0, 4.48816029143898)
(('to', 'get', 'the'), 3, 0, 1.7785588752196837)
(('get', 'the', 'Romance'), 1, 0, 0.17687017067164812)
(('the', 'Forest', 'yet'), 1, 0, 0.17687017067164812)
(('Forest', 'yet', '.'), 1, 0, 0.17687017067164812)
(('yet', '.', ''), 5, 0, 3.7220338983050847)
(('He', 'was', 'so'), 2, 0, 0.983389342294767)
(('so', 'busy', 'the'), 1, 0, 0.17687017067164812)
(('busy', 'the', 'last'), 1, 0, 0.17687017067164812)
(('the', 'last', 'time'), 1, 0, 0.17687017067164812)
(('last', 'time', 'he'), 1, 0, 0.17687017067164812)
(('time', 'he', 'was'), 1, 0, 0.17687017067164812)
(('he', 'was', 'at'), 4, 0, 2.9150197628458496)
(('was', 'at', 'Kingston'), 1, 0, 0.17687017067164812)
(('at', 'Kingston', 'that'), 1, 0, 0.17687017067164812)
(('Kingston', 'that', 'he'), 1, 0, 0.17687017067164812)
(('that', 'he', 'quite'), 1, 0, 0.17687017067164812)
(('he', 'quite', 'forgot'), 1, 0, 0.17687017067164812)
(('quite', 'forgot', 'it'), 1, 0, 0.17687017067164812)
(('forgot', 'it', ','), 1, 0, 0.17687017067164812)
(('it', ',', 'but'), 5, 0, 3.7220338983050847)
(('but', 'he', 'goes'), 1, 0, 0.17687017067164812)
(('he', 'goes', 'again'), 1, 0, 0.17687017067164812)
(('goes', 'again', 'to'), 1, 0, 0.17687017067164812)
(('again', 'to', '-'), 2, 0, 0.983389342294767)
(('to', '-', 'morrow'), 27, 0, 14.823529411764707)
(('-', 'morrow', '.'), 5, 0, 3.7220338983050847)
(('morrow', '.', ''), 5, 0, 3.7220338983050847)
(('', '', 'So'), 22, 0, 16.03030303030303)
(('', 'So', 'very'), 3, 0, 1.7785588752196837)
(('So', 'very', 'odd'), 1, 0, 0.17687017067164812)
(('very', 'odd', 'we'), 1, 0, 0.17687017067164812)
(('odd', 'we', 'should'), 1, 0, 0.17687017067164812)
(('we', 'should', 'happen'), 1, 0, 0.17687017067164812)
(('should', 'happen', 'to'), 1, 0, 0.17687017067164812)
(('happen', 'to', 'meet'), 1, 0, 0.17687017067164812)
(('to', 'meet', '!'), 2, 0, 0.983389342294767)
(('meet', '!', ''), 2, 0, 0.983389342294767)
(('', '', 'Well'), 18, 0, 11.585365853658537)
(('', 'Well', ','), 17, 0, 19.42105263157895)
(('Well', ',', 'Miss'), 5, 0, 3.7220338983050847)
(('Woodhouse', ',', 'is'), 1, 0, 0.17687017067164812)
((',', 'is', 'he'), 2, 0, 0.983389342294767)
(('is', 'he', 'like'), 1, 0, 0.17687017067164812)
(('he', 'like', 'what'), 1, 0, 0.17687017067164812)
(('like', 'what', 'you'), 1, 0, 0.17687017067164812)
(('what', 'you', 'expected'), 1, 0, 0.17687017067164812)
(('you', 'expected', '?'), 1, 0, 0.17687017067164812)
(('expected', '?', ''), 1, 0, 0.17687017067164812)
(('do', 'you', 'think'), 8, 0, 7.927797833935018)
(('you', 'think', 'of'), 4, 0, 2.9150197628458496)
(('think', 'of', 'him'), 5, 0, 3.7220338983050847)
(('of', 'him', '?'), 1, 0, 0.17687017067164812)
(('', '', 'Do'), 39, 0, 18.18181818181818)
(('', 'Do', 'you'), 12, 0, 11.424242424242424)
(('Do', 'you', 'think'), 6, 0, 4.48816029143898)
(('you', 'think', 'him'), 2, 0, 0.983389342294767)
(('him', 'so', 'very'), 2, 0, 0.983389342294767)
(('so', 'very', 'plain'), 1, 0, 0.17687017067164812)
(('very', 'plain', '?"'), 1, 0, 0.17687017067164812)
(('plain', '?"', ''), 1, 0, 0.17687017067164812)
(('"', 'He', 'is'), 5, 0, 3.7220338983050847)
(('He', 'is', 'very'), 3, 0, 1.7785588752196837)
(('is', 'very', 'plain'), 3, 0, 1.7785588752196837)
(('very', 'plain', ','), 1, 0, 0.17687017067164812)
(('plain', ',', 'undoubtedly'), 1, 0, 0.17687017067164812)
((',', 'undoubtedly', '--'), 1, 0, 0.17687017067164812)
(('undoubtedly', '--', 'remarkably'), 1, 0, 0.17687017067164812)
(('--', 'remarkably', 'plain'), 1, 0, 0.17687017067164812)
(('remarkably', 'plain', ':--'), 1, 0, 0.17687017067164812)
(('plain', ':--', 'but'), 1, 0, 0.17687017067164812)
((':--', 'but', 'that'), 1, 0, 0.17687017067164812)
(('but', 'that', 'is'), 5, 0, 3.7220338983050847)
(('that', 'is', 'nothing'), 2, 0, 0.983389342294767)
(('is', 'nothing', 'compared'), 1, 0, 0.17687017067164812)
(('nothing', 'compared', 'with'), 1, 0, 0.17687017067164812)
(('compared', 'with', 'his'), 2, 0, 0.983389342294767)
(('with', 'his', 'entire'), 1, 0, 0.17687017067164812)
(('his', 'entire', 'want'), 1, 0, 0.17687017067164812)
(('entire', 'want', 'of'), 1, 0, 0.17687017067164812)
(('want', 'of', 'gentility'), 1, 0, 0.17687017067164812)
(('of', 'gentility', '.'), 1, 0, 0.17687017067164812)
(('gentility', '.', ''), 1, 0, 0.17687017067164812)
(('', 'I', 'had'), 12, 0, 11.424242424242424)
(('I', 'had', 'no'), 12, 0, 11.424242424242424)
(('had', 'no', 'right'), 1, 0, 0.17687017067164812)
(('no', 'right', 'to'), 2, 0, 0.983389342294767)
(('right', 'to', 'expect'), 1, 0, 0.17687017067164812)
(('to', 'expect', 'much'), 1, 0, 0.17687017067164812)
(('expect', 'much', ','), 1, 0, 0.17687017067164812)
(('much', ',', 'and'), 5, 0, 3.7220338983050847)
(('and', 'I', 'did'), 1, 0, 0.17687017067164812)
(('I', 'did', 'not'), 26, 0, 24.157894736842106)
(('did', 'not', 'expect'), 1, 0, 0.17687017067164812)
(('not', 'expect', 'much'), 1, 0, 0.17687017067164812)
(('expect', 'much', ';'), 1, 0, 0.17687017067164812)
(('much', ';', 'but'), 3, 0, 1.7785588752196837)
(('but', 'I', 'had'), 4, 0, 2.9150197628458496)
(('had', 'no', 'idea'), 5, 0, 3.7220338983050847)
(('no', 'idea', 'that'), 4, 0, 2.9150197628458496)
(('idea', 'that', 'he'), 1, 0, 0.17687017067164812)
(('he', 'could', 'be'), 4, 0, 2.9150197628458496)
(('could', 'be', 'so'), 5, 0, 3.7220338983050847)
(('be', 'so', 'very'), 13, 0, 10.137931034482758)
(('so', 'very', 'clownish'), 1, 0, 0.17687017067164812)
(('very', 'clownish', ','), 1, 0, 0.17687017067164812)
(('clownish', ',', 'so'), 1, 0, 0.17687017067164812)
((',', 'so', 'totally'), 1, 0, 0.17687017067164812)
(('so', 'totally', 'without'), 1, 0, 0.17687017067164812)
(('totally', 'without', 'air'), 1, 0, 0.17687017067164812)
(('without', 'air', '.'), 1, 0, 0.17687017067164812)
(('air', '.', ''), 5, 0, 3.7220338983050847)
(('I', 'had', 'imagined'), 2, 0, 0.983389342294767)
(('had', 'imagined', 'him'), 1, 0, 0.17687017067164812)
(('imagined', 'him', ','), 1, 0, 0.17687017067164812)
(('him', ',', 'I'), 4, 0, 2.9150197628458496)
((',', 'I', 'confess'), 4, 0, 2.9150197628458496)
(('I', 'confess', ','), 3, 0, 1.7785588752196837)
(('confess', ',', 'a'), 1, 0, 0.17687017067164812)
((',', 'a', 'degree'), 1, 0, 0.17687017067164812)
(('a', 'degree', 'or'), 1, 0, 0.17687017067164812)
(('or', 'two', 'nearer'), 1, 0, 0.17687017067164812)
(('two', 'nearer', 'gentility'), 1, 0, 0.17687017067164812)
(('nearer', 'gentility', '."'), 1, 0, 0.17687017067164812)
(('gentility', '."', ''), 1, 0, 0.17687017067164812)
(('be', 'sure', ',"'), 3, 0, 1.7785588752196837)
(('sure', ',"', 'said'), 2, 0, 0.983389342294767)
((',"', 'said', 'Harriet'), 11, 0, 8.671532846715328)
(('said', 'Harriet', ','), 7, 0, 6.295454545454546)
(('Harriet', ',', 'in'), 2, 0, 0.983389342294767)
(('in', 'a', 'mortified'), 1, 0, 0.17687017067164812)
(('a', 'mortified', 'voice'), 1, 0, 0.17687017067164812)
(('mortified', 'voice', ','), 1, 0, 0.17687017067164812)
(('voice', ',', '"'), 2, 0, 0.983389342294767)
((',', '"', 'he'), 3, 0, 1.7785588752196837)
(('"', 'he', 'is'), 1, 0, 0.17687017067164812)
(('he', 'is', 'not'), 10, 0, 9.36024844720497)
(('is', 'not', 'so'), 3, 0, 1.7785588752196837)
(('not', 'so', 'genteel'), 1, 0, 0.17687017067164812)
(('so', 'genteel', 'as'), 1, 0, 0.17687017067164812)
(('genteel', 'as', 'real'), 1, 0, 0.17687017067164812)
(('as', 'real', 'gentlemen'), 1, 0, 0.17687017067164812)
(('real', 'gentlemen', '."'), 1, 0, 0.17687017067164812)
(('gentlemen', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'I', 'think'), 11, 0, 8.671532846715328)
(('I', 'think', ','), 22, 0, 16.03030303030303)
(('think', ',', 'Harriet'), 1, 0, 0.17687017067164812)
(('Harriet', ',', 'since'), 1, 0, 0.17687017067164812)
((',', 'since', 'your'), 1, 0, 0.17687017067164812)
(('since', 'your', 'acquaintance'), 1, 0, 0.17687017067164812)
(('your', 'acquaintance', 'with'), 2, 0, 0.983389342294767)
(('acquaintance', 'with', 'us'), 1, 0, 0.17687017067164812)
(('with', 'us', ','), 5, 0, 3.7220338983050847)
(('us', ',', 'you'), 1, 0, 0.17687017067164812)
((',', 'you', 'have'), 12, 0, 11.424242424242424)
(('have', 'been', 'repeatedly'), 1, 0, 0.17687017067164812)
(('been', 'repeatedly', 'in'), 1, 0, 0.17687017067164812)
(('repeatedly', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'company'), 3, 0, 1.7785588752196837)
(('the', 'company', 'of'), 3, 0, 1.7785588752196837)
(('company', 'of', 'some'), 1, 0, 0.17687017067164812)
(('of', 'some', 'such'), 1, 0, 0.17687017067164812)
(('some', 'such', 'very'), 1, 0, 0.17687017067164812)
(('such', 'very', 'real'), 1, 0, 0.17687017067164812)
(('very', 'real', 'gentlemen'), 1, 0, 0.17687017067164812)
(('real', 'gentlemen', ','), 1, 0, 0.17687017067164812)
(('gentlemen', ',', 'that'), 1, 0, 0.17687017067164812)
((',', 'that', 'you'), 13, 0, 10.137931034482758)
(('that', 'you', 'must'), 2, 0, 0.983389342294767)
(('you', 'must', 'yourself'), 1, 0, 0.17687017067164812)
(('must', 'yourself', 'be'), 1, 0, 0.17687017067164812)
(('yourself', 'be', 'struck'), 1, 0, 0.17687017067164812)
(('be', 'struck', 'with'), 1, 0, 0.17687017067164812)
(('struck', 'with', 'the'), 4, 0, 2.9150197628458496)
(('with', 'the', 'difference'), 1, 0, 0.17687017067164812)
(('the', 'difference', 'in'), 1, 0, 0.17687017067164812)
(('difference', 'in', 'Mr'), 1, 0, 0.17687017067164812)
(('.', 'Martin', '.'), 6, 0, 4.48816029143898)
(('', '', 'At'), 27, 0, 14.823529411764707)
(('', 'At', 'Hartfield'), 1, 0, 0.17687017067164812)
(('At', 'Hartfield', ','), 1, 0, 0.17687017067164812)
(('Hartfield', ',', 'you'), 2, 0, 0.983389342294767)
(('have', 'had', 'very'), 2, 0, 0.983389342294767)
(('had', 'very', 'good'), 2, 0, 0.983389342294767)
(('very', 'good', 'specimens'), 1, 0, 0.17687017067164812)
(('good', 'specimens', 'of'), 1, 0, 0.17687017067164812)
(('specimens', 'of', 'well'), 1, 0, 0.17687017067164812)
(('of', 'well', 'educated'), 1, 0, 0.17687017067164812)
(('well', 'educated', ','), 1, 0, 0.17687017067164812)
(('educated', ',', 'well'), 1, 0, 0.17687017067164812)
((',', 'well', 'bred'), 1, 0, 0.17687017067164812)
(('well', 'bred', 'men'), 1, 0, 0.17687017067164812)
(('bred', 'men', '.'), 1, 0, 0.17687017067164812)
(('men', '.', ''), 2, 0, 0.983389342294767)
(('', 'I', 'should'), 23, 0, 14.608695652173914)
(('I', 'should', 'be'), 17, 0, 19.42105263157895)
(('should', 'be', 'surprized'), 1, 0, 0.17687017067164812)
(('be', 'surprized', 'if'), 1, 0, 0.17687017067164812)
(('surprized', 'if', ','), 1, 0, 0.17687017067164812)
(('if', ',', 'after'), 1, 0, 0.17687017067164812)
((',', 'after', 'seeing'), 2, 0, 0.983389342294767)
(('after', 'seeing', 'them'), 1, 0, 0.17687017067164812)
(('seeing', 'them', ','), 1, 0, 0.17687017067164812)
(('them', ',', 'you'), 1, 0, 0.17687017067164812)
((',', 'you', 'could'), 3, 0, 1.7785588752196837)
(('you', 'could', 'be'), 1, 0, 0.17687017067164812)
(('could', 'be', 'in'), 2, 0, 0.983389342294767)
(('be', 'in', 'company'), 2, 0, 0.983389342294767)
(('in', 'company', 'with'), 3, 0, 1.7785588752196837)
(('company', 'with', 'Mr'), 1, 0, 0.17687017067164812)
(('.', 'Martin', 'again'), 1, 0, 0.17687017067164812)
(('Martin', 'again', 'without'), 1, 0, 0.17687017067164812)
(('again', 'without', 'perceiving'), 1, 0, 0.17687017067164812)
(('without', 'perceiving', 'him'), 1, 0, 0.17687017067164812)
(('perceiving', 'him', 'to'), 1, 0, 0.17687017067164812)
(('him', 'to', 'be'), 10, 0, 9.36024844720497)
(('a', 'very', 'inferior'), 1, 0, 0.17687017067164812)
(('very', 'inferior', 'creature'), 1, 0, 0.17687017067164812)
(('inferior', 'creature', '--'), 1, 0, 0.17687017067164812)
(('creature', '--', 'and'), 1, 0, 0.17687017067164812)
(('--', 'and', 'rather'), 1, 0, 0.17687017067164812)
(('and', 'rather', 'wondering'), 1, 0, 0.17687017067164812)
(('rather', 'wondering', 'at'), 1, 0, 0.17687017067164812)
(('wondering', 'at', 'yourself'), 1, 0, 0.17687017067164812)
(('at', 'yourself', 'for'), 1, 0, 0.17687017067164812)
(('yourself', 'for', 'having'), 1, 0, 0.17687017067164812)
(('for', 'having', 'ever'), 1, 0, 0.17687017067164812)
(('having', 'ever', 'thought'), 1, 0, 0.17687017067164812)
(('ever', 'thought', 'him'), 2, 0, 0.983389342294767)
(('thought', 'him', 'at'), 1, 0, 0.17687017067164812)
(('him', 'at', 'all'), 4, 0, 2.9150197628458496)
(('at', 'all', 'agreeable'), 2, 0, 0.983389342294767)
(('all', 'agreeable', 'before'), 1, 0, 0.17687017067164812)
(('agreeable', 'before', '.'), 1, 0, 0.17687017067164812)
(('before', '.', ''), 21, 0, 29.040000000000003)
(('', 'Do', 'not'), 22, 0, 16.03030303030303)
(('Do', 'not', 'you'), 13, 0, 10.137931034482758)
(('not', 'you', 'begin'), 1, 0, 0.17687017067164812)
(('you', 'begin', 'to'), 1, 0, 0.17687017067164812)
(('begin', 'to', 'feel'), 2, 0, 0.983389342294767)
(('to', 'feel', 'that'), 9, 0, 6.5983606557377055)
(('feel', 'that', 'now'), 1, 0, 0.17687017067164812)
(('that', 'now', '?'), 1, 0, 0.17687017067164812)
(('now', '?', ''), 1, 0, 0.17687017067164812)
(('', '', 'Were'), 7, 0, 6.295454545454546)
(('', 'Were', 'not'), 1, 0, 0.17687017067164812)
(('Were', 'not', 'you'), 1, 0, 0.17687017067164812)
(('not', 'you', 'struck'), 1, 0, 0.17687017067164812)
(('you', 'struck', '?'), 1, 0, 0.17687017067164812)
(('struck', '?', ''), 1, 0, 0.17687017067164812)
(('am', 'sure', 'you'), 16, 0, 14.681818181818182)
(('sure', 'you', 'must'), 3, 0, 1.7785588752196837)
(('have', 'been', 'struck'), 1, 0, 0.17687017067164812)
(('been', 'struck', 'by'), 2, 0, 0.983389342294767)
(('struck', 'by', 'his'), 3, 0, 1.7785588752196837)
(('by', 'his', 'awkward'), 1, 0, 0.17687017067164812)
(('his', 'awkward', 'look'), 1, 0, 0.17687017067164812)
(('awkward', 'look', 'and'), 1, 0, 0.17687017067164812)
(('look', 'and', 'abrupt'), 1, 0, 0.17687017067164812)
(('and', 'abrupt', 'manner'), 1, 0, 0.17687017067164812)
(('abrupt', 'manner', ','), 1, 0, 0.17687017067164812)
(('manner', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'the', 'uncouthness'), 1, 0, 0.17687017067164812)
(('the', 'uncouthness', 'of'), 1, 0, 0.17687017067164812)
(('uncouthness', 'of', 'a'), 1, 0, 0.17687017067164812)
(('of', 'a', 'voice'), 1, 0, 0.17687017067164812)
(('a', 'voice', 'which'), 1, 0, 0.17687017067164812)
(('voice', 'which', 'I'), 1, 0, 0.17687017067164812)
(('which', 'I', 'heard'), 1, 0, 0.17687017067164812)
(('I', 'heard', 'to'), 1, 0, 0.17687017067164812)
(('heard', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'wholly'), 1, 0, 0.17687017067164812)
(('be', 'wholly', 'unmodulated'), 1, 0, 0.17687017067164812)
(('wholly', 'unmodulated', 'as'), 1, 0, 0.17687017067164812)
(('unmodulated', 'as', 'I'), 1, 0, 0.17687017067164812)
(('as', 'I', 'stood'), 1, 0, 0.17687017067164812)
(('I', 'stood', 'here'), 1, 0, 0.17687017067164812)
(('stood', 'here', '."'), 1, 0, 0.17687017067164812)
(('here', '."', ''), 8, 0, 7.927797833935018)
(('', '"', 'Certainly'), 6, 0, 4.48816029143898)
(('"', 'Certainly', ','), 2, 0, 0.983389342294767)
(('Certainly', ',', 'he'), 1, 0, 0.17687017067164812)
((',', 'he', 'is'), 10, 0, 9.36024844720497)
(('is', 'not', 'like'), 4, 0, 2.9150197628458496)
(('not', 'like', 'Mr'), 2, 0, 0.983389342294767)
(('has', 'not', 'such'), 1, 0, 0.17687017067164812)
(('not', 'such', 'a'), 3, 0, 1.7785588752196837)
(('such', 'a', 'fine'), 1, 0, 0.17687017067164812)
(('a', 'fine', 'air'), 1, 0, 0.17687017067164812)
(('fine', 'air', 'and'), 1, 0, 0.17687017067164812)
(('air', 'and', 'way'), 1, 0, 0.17687017067164812)
(('and', 'way', 'of'), 1, 0, 0.17687017067164812)
(('way', 'of', 'walking'), 1, 0, 0.17687017067164812)
(('of', 'walking', 'as'), 1, 0, 0.17687017067164812)
(('walking', 'as', 'Mr'), 1, 0, 0.17687017067164812)
(('as', 'Mr', '.'), 13, 0, 10.137931034482758)
(('', 'I', 'see'), 5, 0, 3.7220338983050847)
(('I', 'see', 'the'), 1, 0, 0.17687017067164812)
(('see', 'the', 'difference'), 2, 0, 0.983389342294767)
(('the', 'difference', 'plain'), 1, 0, 0.17687017067164812)
(('difference', 'plain', 'enough'), 1, 0, 0.17687017067164812)
(('plain', 'enough', '.'), 1, 0, 0.17687017067164812)
(('', 'But', 'Mr'), 5, 0, 3.7220338983050847)
(('But', 'Mr', '.'), 7, 0, 6.295454545454546)
(('.', 'Knightley', 'is'), 5, 0, 3.7220338983050847)
(('Knightley', 'is', 'so'), 1, 0, 0.17687017067164812)
(('is', 'so', 'very'), 12, 0, 11.424242424242424)
(('so', 'very', 'fine'), 1, 0, 0.17687017067164812)
(('very', 'fine', 'a'), 1, 0, 0.17687017067164812)
(('fine', 'a', 'man'), 1, 0, 0.17687017067164812)
(('a', 'man', '!"'), 1, 0, 0.17687017067164812)
(('man', '!"', ''), 2, 0, 0.983389342294767)
(('.', 'Knightley', "'"), 28, 0, 41.888888888888886)
(('Knightley', "'", 's'), 33, 0, 22.666666666666664)
(("'", 's', 'air'), 1, 0, 0.17687017067164812)
(('s', 'air', 'is'), 1, 0, 0.17687017067164812)
(('air', 'is', 'so'), 1, 0, 0.17687017067164812)
(('is', 'so', 'remarkably'), 1, 0, 0.17687017067164812)
(('so', 'remarkably', 'good'), 1, 0, 0.17687017067164812)
(('remarkably', 'good', 'that'), 1, 0, 0.17687017067164812)
(('good', 'that', 'it'), 1, 0, 0.17687017067164812)
(('that', 'it', 'is'), 4, 0, 2.9150197628458496)
(('it', 'is', 'not'), 24, 0, 39.285714285714285)
(('is', 'not', 'fair'), 2, 0, 0.983389342294767)
(('not', 'fair', 'to'), 2, 0, 0.983389342294767)
(('fair', 'to', 'compare'), 1, 0, 0.17687017067164812)
(('to', 'compare', 'Mr'), 1, 0, 0.17687017067164812)
(('compare', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('.', 'Martin', 'with'), 2, 0, 0.983389342294767)
(('Martin', 'with', '_him_'), 1, 0, 0.17687017067164812)
(('with', '_him_', '.'), 1, 0, 0.17687017067164812)
(('_him_', '.', ''), 3, 0, 1.7785588752196837)
(('', 'You', 'might'), 2, 0, 0.983389342294767)
(('You', 'might', 'not'), 3, 0, 1.7785588752196837)
(('might', 'not', 'see'), 1, 0, 0.17687017067164812)
(('not', 'see', 'one'), 1, 0, 0.17687017067164812)
(('see', 'one', 'in'), 1, 0, 0.17687017067164812)
(('one', 'in', 'a'), 3, 0, 1.7785588752196837)
(('in', 'a', 'hundred'), 1, 0, 0.17687017067164812)
(('a', 'hundred', 'with'), 1, 0, 0.17687017067164812)
(('hundred', 'with', '_gentleman_'), 1, 0, 0.17687017067164812)
(('with', '_gentleman_', 'so'), 1, 0, 0.17687017067164812)
(('_gentleman_', 'so', 'plainly'), 1, 0, 0.17687017067164812)
(('so', 'plainly', 'written'), 1, 0, 0.17687017067164812)
(('plainly', 'written', 'as'), 1, 0, 0.17687017067164812)
(('written', 'as', 'in'), 1, 0, 0.17687017067164812)
(('as', 'in', 'Mr'), 1, 0, 0.17687017067164812)
(('', 'But', 'he'), 2, 0, 0.983389342294767)
(('But', 'he', 'is'), 1, 0, 0.17687017067164812)
(('is', 'not', 'the'), 8, 0, 7.927797833935018)
(('not', 'the', 'only'), 2, 0, 0.983389342294767)
(('the', 'only', 'gentleman'), 1, 0, 0.17687017067164812)
(('only', 'gentleman', 'you'), 1, 0, 0.17687017067164812)
(('gentleman', 'you', 'have'), 1, 0, 0.17687017067164812)
(('have', 'been', 'lately'), 1, 0, 0.17687017067164812)
(('been', 'lately', 'used'), 1, 0, 0.17687017067164812)
(('lately', 'used', 'to'), 1, 0, 0.17687017067164812)
(('used', 'to', '.'), 2, 0, 0.983389342294767)
(('', 'What', 'say'), 2, 0, 0.983389342294767)
(('What', 'say', 'you'), 2, 0, 0.983389342294767)
(('you', 'to', 'Mr'), 1, 0, 0.17687017067164812)
(('.', 'Weston', 'and'), 16, 0, 14.681818181818182)
(('Weston', 'and', 'Mr'), 3, 0, 1.7785588752196837)
(('.', 'Elton', '?'), 1, 0, 0.17687017067164812)
(('Elton', '?', ''), 1, 0, 0.17687017067164812)
(('', '', 'Compare'), 2, 0, 0.983389342294767)
(('', 'Compare', 'Mr'), 1, 0, 0.17687017067164812)
(('Compare', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('Martin', 'with', 'either'), 1, 0, 0.17687017067164812)
(('with', 'either', 'of'), 3, 0, 1.7785588752196837)
(('either', 'of', '_them_'), 1, 0, 0.17687017067164812)
(('of', '_them_', '.'), 1, 0, 0.17687017067164812)
(('_them_', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Compare', 'their'), 1, 0, 0.17687017067164812)
(('Compare', 'their', 'manner'), 1, 0, 0.17687017067164812)
(('their', 'manner', 'of'), 1, 0, 0.17687017067164812)
(('manner', 'of', 'carrying'), 1, 0, 0.17687017067164812)
(('of', 'carrying', 'themselves'), 1, 0, 0.17687017067164812)
(('carrying', 'themselves', ';'), 1, 0, 0.17687017067164812)
(('themselves', ';', 'of'), 1, 0, 0.17687017067164812)
((';', 'of', 'walking'), 1, 0, 0.17687017067164812)
(('of', 'walking', ';'), 1, 0, 0.17687017067164812)
(('walking', ';', 'of'), 1, 0, 0.17687017067164812)
((';', 'of', 'speaking'), 1, 0, 0.17687017067164812)
(('of', 'speaking', ';'), 1, 0, 0.17687017067164812)
(('speaking', ';', 'of'), 1, 0, 0.17687017067164812)
((';', 'of', 'being'), 1, 0, 0.17687017067164812)
(('of', 'being', 'silent'), 1, 0, 0.17687017067164812)
(('being', 'silent', '.'), 2, 0, 0.983389342294767)
(('silent', '.', ''), 7, 0, 6.295454545454546)
(('', 'You', 'must'), 14, 0, 11.428571428571427)
(('You', 'must', 'see'), 1, 0, 0.17687017067164812)
(('must', 'see', 'the'), 1, 0, 0.17687017067164812)
(('the', 'difference', '."'), 1, 0, 0.17687017067164812)
(('difference', '."', ''), 2, 0, 0.983389342294767)
(('yes', '!--', 'there'), 1, 0, 0.17687017067164812)
(('!--', 'there', 'is'), 1, 0, 0.17687017067164812)
(('there', 'is', 'a'), 12, 0, 11.424242424242424)
(('is', 'a', 'great'), 8, 0, 7.927797833935018)
(('a', 'great', 'difference'), 3, 0, 1.7785588752196837)
(('great', 'difference', '.'), 1, 0, 0.17687017067164812)
(('difference', '.', ''), 3, 0, 1.7785588752196837)
(('Weston', 'is', 'almost'), 1, 0, 0.17687017067164812)
(('is', 'almost', 'an'), 1, 0, 0.17687017067164812)
(('almost', 'an', 'old'), 1, 0, 0.17687017067164812)
(('an', 'old', 'man'), 1, 0, 0.17687017067164812)
(('old', 'man', '.'), 1, 0, 0.17687017067164812)
(('.', 'Weston', 'must'), 4, 0, 2.9150197628458496)
(('Weston', 'must', 'be'), 2, 0, 0.983389342294767)
(('must', 'be', 'between'), 1, 0, 0.17687017067164812)
(('be', 'between', 'forty'), 1, 0, 0.17687017067164812)
(('between', 'forty', 'and'), 1, 0, 0.17687017067164812)
(('forty', 'and', 'fifty'), 1, 0, 0.17687017067164812)
(('and', 'fifty', '."'), 1, 0, 0.17687017067164812)
(('fifty', '."', ''), 1, 0, 0.17687017067164812)
(('', '"', 'Which'), 1, 0, 0.17687017067164812)
(('"', 'Which', 'makes'), 1, 0, 0.17687017067164812)
(('Which', 'makes', 'his'), 1, 0, 0.17687017067164812)
(('makes', 'his', 'good'), 1, 0, 0.17687017067164812)
(('his', 'good', 'manners'), 1, 0, 0.17687017067164812)
(('good', 'manners', 'the'), 1, 0, 0.17687017067164812)
(('manners', 'the', 'more'), 1, 0, 0.17687017067164812)
(('the', 'more', 'valuable'), 1, 0, 0.17687017067164812)
(('more', 'valuable', '.'), 2, 0, 0.983389342294767)
(('valuable', '.', ''), 2, 0, 0.983389342294767)
(('', 'The', 'older'), 1, 0, 0.17687017067164812)
(('The', 'older', 'a'), 1, 0, 0.17687017067164812)
(('older', 'a', 'person'), 1, 0, 0.17687017067164812)
(('a', 'person', 'grows'), 1, 0, 0.17687017067164812)
(('person', 'grows', ','), 1, 0, 0.17687017067164812)
(('grows', ',', 'Harriet'), 1, 0, 0.17687017067164812)
(('Harriet', ',', 'the'), 1, 0, 0.17687017067164812)
((',', 'the', 'more'), 4, 0, 2.9150197628458496)
(('the', 'more', 'important'), 1, 0, 0.17687017067164812)
(('more', 'important', 'it'), 1, 0, 0.17687017067164812)
(('important', 'it', 'is'), 1, 0, 0.17687017067164812)
(('is', 'that', 'their'), 1, 0, 0.17687017067164812)
(('that', 'their', 'manners'), 1, 0, 0.17687017067164812)
(('their', 'manners', 'should'), 1, 0, 0.17687017067164812)
(('manners', 'should', 'not'), 1, 0, 0.17687017067164812)
(('not', 'be', 'bad'), 1, 0, 0.17687017067164812)
(('be', 'bad', ';'), 1, 0, 0.17687017067164812)
(('bad', ';', 'the'), 1, 0, 0.17687017067164812)
((';', 'the', 'more'), 1, 0, 0.17687017067164812)
(('the', 'more', 'glaring'), 1, 0, 0.17687017067164812)
(('more', 'glaring', 'and'), 1, 0, 0.17687017067164812)
(('glaring', 'and', 'disgusting'), 1, 0, 0.17687017067164812)
(('and', 'disgusting', 'any'), 1, 0, 0.17687017067164812)
(('disgusting', 'any', 'loudness'), 1, 0, 0.17687017067164812)
(('any', 'loudness', ','), 1, 0, 0.17687017067164812)
(('loudness', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'coarseness'), 1, 0, 0.17687017067164812)
(('or', 'coarseness', ','), 1, 0, 0.17687017067164812)
(('coarseness', ',', 'or'), 1, 0, 0.17687017067164812)
((',', 'or', 'awkwardness'), 1, 0, 0.17687017067164812)
(('or', 'awkwardness', 'becomes'), 1, 0, 0.17687017067164812)
(('awkwardness', 'becomes', '.'), 1, 0, 0.17687017067164812)
(('becomes', '.', ''), 1, 0, 0.17687017067164812)
(('', 'What', 'is'), 7, 0, 6.295454545454546)
(('What', 'is', 'passable'), 1, 0, 0.17687017067164812)
(('is', 'passable', 'in'), 1, 0, 0.17687017067164812)
(('passable', 'in', 'youth'), 1, 0, 0.17687017067164812)
(('in', 'youth', 'is'), 1, 0, 0.17687017067164812)
(('youth', 'is', 'detestable'), 1, 0, 0.17687017067164812)
(('is', 'detestable', 'in'), 1, 0, 0.17687017067164812)
(('detestable', 'in', 'later'), 1, 0, 0.17687017067164812)
(('in', 'later', 'age'), 1, 0, 0.17687017067164812)
(('later', 'age', '.'), 1, 0, 0.17687017067164812)
(('.', 'Martin', 'is'), 4, 0, 2.9150197628458496)
(('Martin', 'is', 'now'), 1, 0, 0.17687017067164812)
(('is', 'now', 'awkward'), 1, 0, 0.17687017067164812)
(('now', 'awkward', 'and'), 1, 0, 0.17687017067164812)
(('awkward', 'and', 'abrupt'), 1, 0, 0.17687017067164812)
(('and', 'abrupt', ';'), 1, 0, 0.17687017067164812)
(('abrupt', ';', 'what'), 1, 0, 0.17687017067164812)
((';', 'what', 'will'), 1, 0, 0.17687017067164812)
(('what', 'will', 'he'), 1, 0, 0.17687017067164812)
(('will', 'he', 'be'), 1, 0, 0.17687017067164812)
(('he', 'be', 'at'), 1, 0, 0.17687017067164812)
(('be', 'at', 'Mr'), 1, 0, 0.17687017067164812)
(('at', 'Mr', '.'), 9, 0, 6.5983606557377055)
(('of', 'life', '?"'), 1, 0, 0.17687017067164812)
(('life', '?"', ''), 1, 0, 0.17687017067164812)
(('', '"', 'There'), 19, 0, 20.0)
(('"', 'There', 'is'), 11, 0, 8.671532846715328)
(('There', 'is', 'no'), 12, 0, 11.424242424242424)
(('is', 'no', 'saying'), 3, 0, 1.7785588752196837)
(('no', 'saying', ','), 1, 0, 0.17687017067164812)
(('saying', ',', 'indeed'), 1, 0, 0.17687017067164812)
(('indeed', ',"', 'replied'), 2, 0, 0.983389342294767)
((',"', 'replied', 'Harriet'), 3, 0, 1.7785588752196837)
(('replied', 'Harriet', 'rather'), 1, 0, 0.17687017067164812)
(('Harriet', 'rather', 'solemnly'), 1, 0, 0.17687017067164812)
(('rather', 'solemnly', '.'), 1, 0, 0.17687017067164812)
(('solemnly', '.', ''), 1, 0, 0.17687017067164812)
(('"', 'But', 'there'), 1, 0, 0.17687017067164812)
(('But', 'there', 'may'), 1, 0, 0.17687017067164812)
(('may', 'be', 'pretty'), 1, 0, 0.17687017067164812)
(('be', 'pretty', 'good'), 1, 0, 0.17687017067164812)
(('pretty', 'good', 'guessing'), 1, 0, 0.17687017067164812)
(('good', 'guessing', '.'), 1, 0, 0.17687017067164812)
(('guessing', '.', ''), 3, 0, 1.7785588752196837)
(('be', 'a', 'completely'), 1, 0, 0.17687017067164812)
(('a', 'completely', 'gross'), 1, 0, 0.17687017067164812)
(('completely', 'gross', ','), 1, 0, 0.17687017067164812)
(('gross', ',', 'vulgar'), 1, 0, 0.17687017067164812)
((',', 'vulgar', 'farmer'), 1, 0, 0.17687017067164812)
(('vulgar', 'farmer', ','), 1, 0, 0.17687017067164812)
(('farmer', ',', 'totally'), 1, 0, 0.17687017067164812)
((',', 'totally', 'inattentive'), 1, 0, 0.17687017067164812)
(('totally', 'inattentive', 'to'), 1, 0, 0.17687017067164812)
(('inattentive', 'to', 'appearances'), 1, 0, 0.17687017067164812)
(('to', 'appearances', ','), 1, 0, 0.17687017067164812)
(('appearances', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'thinking'), 3, 0, 1.7785588752196837)
(('and', 'thinking', 'of'), 1, 0, 0.17687017067164812)
(('thinking', 'of', 'nothing'), 1, 0, 0.17687017067164812)
(('of', 'nothing', 'but'), 4, 0, 2.9150197628458496)
(('nothing', 'but', 'profit'), 1, 0, 0.17687017067164812)
(('but', 'profit', 'and'), 1, 0, 0.17687017067164812)
(('profit', 'and', 'loss'), 1, 0, 0.17687017067164812)
(('and', 'loss', '."'), 1, 0, 0.17687017067164812)
(('loss', '."', ''), 2, 0, 0.983389342294767)
(('', '"', 'Will'), 5, 0, 3.7220338983050847)
(('"', 'Will', 'he'), 1, 0, 0.17687017067164812)
(('Will', 'he', ','), 1, 0, 0.17687017067164812)
(('he', ',', 'indeed'), 1, 0, 0.17687017067164812)
((',', 'indeed', '?'), 1, 0, 0.17687017067164812)
(('indeed', '?', ''), 1, 0, 0.17687017067164812)
(('will', 'be', 'very'), 6, 0, 4.48816029143898)
(('be', 'very', 'bad'), 1, 0, 0.17687017067164812)
(('very', 'bad', '."'), 2, 0, 0.983389342294767)
(('bad', '."', ''), 2, 0, 0.983389342294767)
(('"', 'How', 'much'), 3, 0, 1.7785588752196837)
(('How', 'much', 'his'), 1, 0, 0.17687017067164812)
(('much', 'his', 'business'), 1, 0, 0.17687017067164812)
(('his', 'business', 'engrosses'), 1, 0, 0.17687017067164812)
(('business', 'engrosses', 'him'), 1, 0, 0.17687017067164812)
(('engrosses', 'him', 'already'), 1, 0, 0.17687017067164812)
(('him', 'already', 'is'), 1, 0, 0.17687017067164812)
(('already', 'is', 'very'), 1, 0, 0.17687017067164812)
(('very', 'plain', 'from'), 1, 0, 0.17687017067164812)
(('plain', 'from', 'the'), 1, 0, 0.17687017067164812)
(('from', 'the', 'circumstance'), 3, 0, 1.7785588752196837)
(('the', 'circumstance', 'of'), 3, 0, 1.7785588752196837)
(('circumstance', 'of', 'his'), 2, 0, 0.983389342294767)
(('of', 'his', 'forgetting'), 1, 0, 0.17687017067164812)
(('his', 'forgetting', 'to'), 1, 0, 0.17687017067164812)
(('forgetting', 'to', 'inquire'), 1, 0, 0.17687017067164812)
(('to', 'inquire', 'for'), 1, 0, 0.17687017067164812)
(('inquire', 'for', 'the'), 1, 0, 0.17687017067164812)
(('for', 'the', 'book'), 1, 0, 0.17687017067164812)
(('the', 'book', 'you'), 1, 0, 0.17687017067164812)
(('book', 'you', 'recommended'), 1, 0, 0.17687017067164812)
(('you', 'recommended', '.'), 1, 0, 0.17687017067164812)
(('recommended', '.', ''), 1, 0, 0.17687017067164812)
(('great', 'deal', 'too'), 4, 0, 2.9150197628458496)
(('deal', 'too', 'full'), 1, 0, 0.17687017067164812)
(('too', 'full', 'of'), 2, 0, 0.983389342294767)
(('full', 'of', 'the'), 3, 0, 1.7785588752196837)
(('of', 'the', 'market'), 1, 0, 0.17687017067164812)
(('the', 'market', 'to'), 1, 0, 0.17687017067164812)
(('market', 'to', 'think'), 1, 0, 0.17687017067164812)
(('to', 'think', 'of'), 27, 0, 14.823529411764707)
(('think', 'of', 'any'), 2, 0, 0.983389342294767)
(('of', 'any', 'thing'), 9, 0, 6.5983606557377055)
(('any', 'thing', 'else'), 7, 0, 6.295454545454546)
(('thing', 'else', '--'), 1, 0, 0.17687017067164812)
(('else', '--', 'which'), 1, 0, 0.17687017067164812)
(('which', 'is', 'just'), 1, 0, 0.17687017067164812)
(('is', 'just', 'as'), 2, 0, 0.983389342294767)
(('just', 'as', 'it'), 1, 0, 0.17687017067164812)
(('as', 'it', 'should'), 4, 0, 2.9150197628458496)
(('should', 'be', ','), 1, 0, 0.17687017067164812)
(('be', ',', 'for'), 1, 0, 0.17687017067164812)
((',', 'for', 'a'), 8, 0, 7.927797833935018)
(('for', 'a', 'thriving'), 1, 0, 0.17687017067164812)
(('a', 'thriving', 'man'), 1, 0, 0.17687017067164812)
(('thriving', 'man', '.'), 1, 0, 0.17687017067164812)
(('', 'What', 'has'), 4, 0, 2.9150197628458496)
(('What', 'has', 'he'), 2, 0, 0.983389342294767)
(('has', 'he', 'to'), 2, 0, 0.983389342294767)
(('he', 'to', 'do'), 1, 0, 0.17687017067164812)
(('to', 'do', 'with'), 7, 0, 6.295454545454546)
(('do', 'with', 'books'), 1, 0, 0.17687017067164812)
(('with', 'books', '?'), 1, 0, 0.17687017067164812)
(('books', '?', ''), 1, 0, 0.17687017067164812)
(('And', 'I', 'have'), 3, 0, 1.7785588752196837)
(('no', 'doubt', 'that'), 4, 0, 2.9150197628458496)
(('doubt', 'that', 'he'), 1, 0, 0.17687017067164812)
(('that', 'he', '_will_'), 1, 0, 0.17687017067164812)
(('he', '_will_', 'thrive'), 1, 0, 0.17687017067164812)
(('_will_', 'thrive', ','), 1, 0, 0.17687017067164812)
(('thrive', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'be', 'a'), 1, 0, 0.17687017067164812)
(('a', 'very', 'rich'), 1, 0, 0.17687017067164812)
(('very', 'rich', 'man'), 1, 0, 0.17687017067164812)
(('rich', 'man', 'in'), 1, 0, 0.17687017067164812)
(('man', 'in', 'time'), 1, 0, 0.17687017067164812)
(('in', 'time', '--'), 2, 0, 0.983389342294767)
(('time', '--', 'and'), 5, 0, 3.7220338983050847)
(('--', 'and', 'his'), 3, 0, 1.7785588752196837)
(('and', 'his', 'being'), 3, 0, 1.7785588752196837)
(('his', 'being', 'illiterate'), 1, 0, 0.17687017067164812)
(('being', 'illiterate', 'and'), 1, 0, 0.17687017067164812)
(('illiterate', 'and', 'coarse'), 1, 0, 0.17687017067164812)
(('and', 'coarse', 'need'), 1, 0, 0.17687017067164812)
(('coarse', 'need', 'not'), 1, 0, 0.17687017067164812)
(('need', 'not', 'disturb'), 1, 0, 0.17687017067164812)
(('not', 'disturb', '_us_'), 1, 0, 0.17687017067164812)
(('disturb', '_us_', '."'), 1, 0, 0.17687017067164812)
(('_us_', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'I', 'wonder'), 2, 0, 0.983389342294767)
(('I', 'wonder', 'he'), 1, 0, 0.17687017067164812)
(('wonder', 'he', 'did'), 1, 0, 0.17687017067164812)
(('did', 'not', 'remember'), 1, 0, 0.17687017067164812)
(('not', 'remember', 'the'), 1, 0, 0.17687017067164812)
(('remember', 'the', 'book'), 1, 0, 0.17687017067164812)
(('the', 'book', '"--'), 1, 0, 0.17687017067164812)
(('book', '"--', 'was'), 1, 0, 0.17687017067164812)
(('"--', 'was', 'all'), 1, 0, 0.17687017067164812)
(('was', 'all', 'Harriet'), 1, 0, 0.17687017067164812)
(('all', 'Harriet', "'"), 3, 0, 1.7785588752196837)
(("'", 's', 'answer'), 5, 0, 3.7220338983050847)
(('s', 'answer', ','), 1, 0, 0.17687017067164812)
(('answer', ',', 'and'), 3, 0, 1.7785588752196837)
((',', 'and', 'spoken'), 1, 0, 0.17687017067164812)
(('and', 'spoken', 'with'), 1, 0, 0.17687017067164812)
(('spoken', 'with', 'a'), 2, 0, 0.983389342294767)
(('with', 'a', 'degree'), 4, 0, 2.9150197628458496)
(('a', 'degree', 'of'), 8, 0, 7.927797833935018)
(('degree', 'of', 'grave'), 1, 0, 0.17687017067164812)
(('of', 'grave', 'displeasure'), 1, 0, 0.17687017067164812)
(('grave', 'displeasure', 'which'), 1, 0, 0.17687017067164812)
(('displeasure', 'which', 'Emma'), 1, 0, 0.17687017067164812)
(('which', 'Emma', 'thought'), 3, 0, 1.7785588752196837)
(('Emma', 'thought', 'might'), 1, 0, 0.17687017067164812)
(('thought', 'might', 'be'), 1, 0, 0.17687017067164812)
(('might', 'be', 'safely'), 2, 0, 0.983389342294767)
(('left', 'to', 'itself'), 1, 0, 0.17687017067164812)
(('to', 'itself', '.'), 1, 0, 0.17687017067164812)
(('itself', '.', ''), 4, 0, 2.9150197628458496)
(('', 'She', ','), 1, 0, 0.17687017067164812)
(('She', ',', 'therefore'), 1, 0, 0.17687017067164812)
(('therefore', ',', 'said'), 1, 0, 0.17687017067164812)
((',', 'said', 'no'), 1, 0, 0.17687017067164812)
(('said', 'no', 'more'), 5, 0, 3.7220338983050847)
(('no', 'more', 'for'), 1, 0, 0.17687017067164812)
(('more', 'for', 'some'), 1, 0, 0.17687017067164812)
(('', 'Her', 'next'), 1, 0, 0.17687017067164812)
(('Her', 'next', 'beginning'), 1, 0, 0.17687017067164812)
(('next', 'beginning', 'was'), 1, 0, 0.17687017067164812)
(('beginning', 'was', ','), 1, 0, 0.17687017067164812)
(('was', ',', ''), 1, 0, 0.17687017067164812)
(('', '"', 'In'), 3, 0, 1.7785588752196837)
(('"', 'In', 'one'), 1, 0, 0.17687017067164812)
(('In', 'one', 'respect'), 4, 0, 2.9150197628458496)
(('one', 'respect', ','), 4, 0, 2.9150197628458496)
(('respect', ',', 'perhaps'), 1, 0, 0.17687017067164812)
((',', 'perhaps', ','), 28, 0, 41.888888888888886)
(('perhaps', ',', 'Mr'), 2, 0, 0.983389342294767)
(('.', 'Elton', "'"), 65, 0, 66.0)
(('Elton', "'", 's'), 67, 0, 22.666666666666664)
(("'", 's', 'manners'), 5, 0, 3.7220338983050847)
(('s', 'manners', 'are'), 2, 0, 0.983389342294767)
(('manners', 'are', 'superior'), 1, 0, 0.17687017067164812)
(('are', 'superior', 'to'), 1, 0, 0.17687017067164812)
(('superior', 'to', 'Mr'), 3, 0, 1.7785588752196837)
(("'", 's', 'or'), 1, 0, 0.17687017067164812)
(('s', 'or', 'Mr'), 1, 0, 0.17687017067164812)
(('or', 'Mr', '.'), 2, 0, 0.983389342294767)
(("'", 's', '.'), 19, 0, 20.0)
(('s', '.', ''), 19, 0, 20.0)
(('They', 'have', 'more'), 1, 0, 0.17687017067164812)
(('have', 'more', 'gentleness'), 1, 0, 0.17687017067164812)
(('more', 'gentleness', '.'), 1, 0, 0.17687017067164812)
(('gentleness', '.', ''), 1, 0, 0.17687017067164812)
(('', 'They', 'might'), 4, 0, 2.9150197628458496)
(('They', 'might', 'be'), 1, 0, 0.17687017067164812)
(('might', 'be', 'more'), 1, 0, 0.17687017067164812)
(('be', 'more', 'safely'), 1, 0, 0.17687017067164812)
(('more', 'safely', 'held'), 1, 0, 0.17687017067164812)
(('safely', 'held', 'up'), 1, 0, 0.17687017067164812)
(('held', 'up', 'as'), 1, 0, 0.17687017067164812)
(('up', 'as', 'a'), 1, 0, 0.17687017067164812)
(('as', 'a', 'pattern'), 1, 0, 0.17687017067164812)
(('a', 'pattern', '.'), 1, 0, 0.17687017067164812)
(('pattern', '.', ''), 2, 0, 0.983389342294767)
(('There', 'is', 'an'), 2, 0, 0.983389342294767)
(('is', 'an', 'openness'), 1, 0, 0.17687017067164812)
(('an', 'openness', ','), 1, 0, 0.17687017067164812)
(('openness', ',', 'a'), 1, 0, 0.17687017067164812)
((',', 'a', 'quickness'), 1, 0, 0.17687017067164812)
(('a', 'quickness', ','), 1, 0, 0.17687017067164812)
(('quickness', ',', 'almost'), 1, 0, 0.17687017067164812)
((',', 'almost', 'a'), 1, 0, 0.17687017067164812)
(('almost', 'a', 'bluntness'), 1, 0, 0.17687017067164812)
(('a', 'bluntness', 'in'), 1, 0, 0.17687017067164812)
(('bluntness', 'in', 'Mr'), 1, 0, 0.17687017067164812)
(('Weston', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'every'), 1, 0, 0.17687017067164812)
(('which', 'every', 'body'), 1, 0, 0.17687017067164812)
(('every', 'body', 'likes'), 1, 0, 0.17687017067164812)
(('body', 'likes', 'in'), 1, 0, 0.17687017067164812)
(('likes', 'in', '_him_'), 1, 0, 0.17687017067164812)
(('in', '_him_', ','), 1, 0, 0.17687017067164812)
(('_him_', ',', 'because'), 1, 0, 0.17687017067164812)
((',', 'because', 'there'), 1, 0, 0.17687017067164812)
(('because', 'there', 'is'), 1, 0, 0.17687017067164812)
(('there', 'is', 'so'), 1, 0, 0.17687017067164812)
(('is', 'so', 'much'), 4, 0, 2.9150197628458496)
(('so', 'much', 'good'), 1, 0, 0.17687017067164812)
(('much', 'good', '-'), 1, 0, 0.17687017067164812)
(('good', '-', 'humour'), 2, 0, 0.983389342294767)
(('-', 'humour', 'with'), 1, 0, 0.17687017067164812)
(('humour', 'with', 'it'), 1, 0, 0.17687017067164812)
(('with', 'it', '--'), 1, 0, 0.17687017067164812)
(('it', '--', 'but'), 9, 0, 6.5983606557377055)
(('--', 'but', 'that'), 5, 0, 3.7220338983050847)
(('but', 'that', 'would'), 1, 0, 0.17687017067164812)
(('that', 'would', 'not'), 3, 0, 1.7785588752196837)
(('would', 'not', 'do'), 12, 0, 11.424242424242424)
(('not', 'do', 'to'), 2, 0, 0.983389342294767)
(('do', 'to', 'be'), 1, 0, 0.17687017067164812)
(('to', 'be', 'copied'), 1, 0, 0.17687017067164812)
(('be', 'copied', '.'), 1, 0, 0.17687017067164812)
(('copied', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'Neither'), 4, 0, 2.9150197628458496)
(('', 'Neither', 'would'), 1, 0, 0.17687017067164812)
(('Neither', 'would', 'Mr'), 1, 0, 0.17687017067164812)
(('would', 'Mr', '.'), 2, 0, 0.983389342294767)
(("'", 's', 'downright'), 1, 0, 0.17687017067164812)
(('s', 'downright', ','), 1, 0, 0.17687017067164812)
(('downright', ',', 'decided'), 1, 0, 0.17687017067164812)
((',', 'decided', ','), 3, 0, 1.7785588752196837)
(('decided', ',', 'commanding'), 1, 0, 0.17687017067164812)
((',', 'commanding', 'sort'), 1, 0, 0.17687017067164812)
(('commanding', 'sort', 'of'), 1, 0, 0.17687017067164812)
(('sort', 'of', 'manner'), 2, 0, 0.983389342294767)
(('of', 'manner', ','), 4, 0, 2.9150197628458496)
(('manner', ',', 'though'), 1, 0, 0.17687017067164812)
(('though', 'it', 'suits'), 1, 0, 0.17687017067164812)
(('it', 'suits', '_him_'), 1, 0, 0.17687017067164812)
(('suits', '_him_', 'very'), 1, 0, 0.17687017067164812)
(('_him_', 'very', 'well'), 1, 0, 0.17687017067164812)
(('very', 'well', ';'), 6, 0, 4.48816029143898)
(('well', ';', 'his'), 1, 0, 0.17687017067164812)
((';', 'his', 'figure'), 1, 0, 0.17687017067164812)
(('his', 'figure', ','), 1, 0, 0.17687017067164812)
(('figure', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'look'), 2, 0, 0.983389342294767)
(('and', 'look', ','), 2, 0, 0.983389342294767)
(('look', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'situation'), 2, 0, 0.983389342294767)
(('and', 'situation', 'in'), 1, 0, 0.17687017067164812)
(('in', 'life', 'seem'), 1, 0, 0.17687017067164812)
(('life', 'seem', 'to'), 1, 0, 0.17687017067164812)
(('seem', 'to', 'allow'), 1, 0, 0.17687017067164812)
(('to', 'allow', 'it'), 1, 0, 0.17687017067164812)
(('allow', 'it', ';'), 1, 0, 0.17687017067164812)
((';', 'but', 'if'), 8, 0, 7.927797833935018)
(('but', 'if', 'any'), 2, 0, 0.983389342294767)
(('if', 'any', 'young'), 1, 0, 0.17687017067164812)
(('any', 'young', 'man'), 2, 0, 0.983389342294767)
(('young', 'man', 'were'), 1, 0, 0.17687017067164812)
(('man', 'were', 'to'), 1, 0, 0.17687017067164812)
(('were', 'to', 'set'), 1, 0, 0.17687017067164812)
(('to', 'set', 'about'), 2, 0, 0.983389342294767)
(('set', 'about', 'copying'), 1, 0, 0.17687017067164812)
(('about', 'copying', 'him'), 1, 0, 0.17687017067164812)
(('copying', 'him', ','), 1, 0, 0.17687017067164812)
(('him', ',', 'he'), 3, 0, 1.7785588752196837)
(('he', 'would', 'not'), 16, 0, 14.681818181818182)
(('would', 'not', 'be'), 12, 0, 11.424242424242424)
(('not', 'be', 'sufferable'), 1, 0, 0.17687017067164812)
(('be', 'sufferable', '.'), 1, 0, 0.17687017067164812)
(('sufferable', '.', ''), 1, 0, 0.17687017067164812)
(('', '', 'On'), 9, 0, 6.5983606557377055)
(('', 'On', 'the'), 3, 0, 1.7785588752196837)
(('On', 'the', 'contrary'), 2, 0, 0.983389342294767)
(('the', 'contrary', ','), 6, 0, 4.48816029143898)
(('contrary', ',', 'I'), 1, 0, 0.17687017067164812)
((',', 'I', 'think'), 35, 0, 25.714285714285715)
(('I', 'think', 'a'), 1, 0, 0.17687017067164812)
(('think', 'a', 'young'), 1, 0, 0.17687017067164812)
(('young', 'man', 'might'), 2, 0, 0.983389342294767)
(('man', 'might', 'be'), 2, 0, 0.983389342294767)
(('be', 'very', 'safely'), 1, 0, 0.17687017067164812)
(('very', 'safely', 'recommended'), 1, 0, 0.17687017067164812)
(('safely', 'recommended', 'to'), 1, 0, 0.17687017067164812)
(('recommended', 'to', 'take'), 1, 0, 0.17687017067164812)
(('to', 'take', 'Mr'), 2, 0, 0.983389342294767)
(('take', 'Mr', '.'), 2, 0, 0.983389342294767)
(('.', 'Elton', 'as'), 4, 0, 2.9150197628458496)
(('Elton', 'as', 'a'), 1, 0, 0.17687017067164812)
(('as', 'a', 'model'), 1, 0, 0.17687017067164812)
(('a', 'model', '.'), 1, 0, 0.17687017067164812)
(('model', '.', ''), 1, 0, 0.17687017067164812)
(('Elton', 'is', 'good'), 1, 0, 0.17687017067164812)
(('is', 'good', '-'), 1, 0, 0.17687017067164812)
(('humoured', ',', 'cheerful'), 1, 0, 0.17687017067164812)
((',', 'cheerful', ','), 3, 0, 1.7785588752196837)
(('cheerful', ',', 'obliging'), 1, 0, 0.17687017067164812)
((',', 'obliging', ','), 2, 0, 0.983389342294767)
(('obliging', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'gentle'), 1, 0, 0.17687017067164812)
(('and', 'gentle', '.'), 1, 0, 0.17687017067164812)
(('gentle', '.', ''), 1, 0, 0.17687017067164812)
(('', 'He', 'seems'), 3, 0, 1.7785588752196837)
(('He', 'seems', 'to'), 1, 0, 0.17687017067164812)
(('seems', 'to', 'me'), 1, 0, 0.17687017067164812)
(('to', 'me', 'to'), 7, 0, 6.295454545454546)
(('me', 'to', 'be'), 6, 0, 4.48816029143898)
(('to', 'be', 'grown'), 1, 0, 0.17687017067164812)
(('be', 'grown', 'particularly'), 1, 0, 0.17687017067164812)
(('grown', 'particularly', 'gentle'), 1, 0, 0.17687017067164812)
(('particularly', 'gentle', 'of'), 1, 0, 0.17687017067164812)
(('gentle', 'of', 'late'), 1, 0, 0.17687017067164812)
(('of', 'late', '.'), 2, 0, 0.983389342294767)
(('late', '.', ''), 5, 0, 3.7220338983050847)
(('not', 'know', 'whether'), 4, 0, 2.9150197628458496)
(('know', 'whether', 'he'), 1, 0, 0.17687017067164812)
(('whether', 'he', 'has'), 1, 0, 0.17687017067164812)
(('he', 'has', 'any'), 1, 0, 0.17687017067164812)
(('has', 'any', 'design'), 1, 0, 0.17687017067164812)
(('any', 'design', 'of'), 1, 0, 0.17687017067164812)
(('design', 'of', 'ingratiating'), 1, 0, 0.17687017067164812)
(('of', 'ingratiating', 'himself'), 1, 0, 0.17687017067164812)
(('ingratiating', 'himself', 'with'), 1, 0, 0.17687017067164812)
(('himself', 'with', 'either'), 1, 0, 0.17687017067164812)
(('either', 'of', 'us'), 2, 0, 0.983389342294767)
(('of', 'us', ','), 2, 0, 0.983389342294767)
(('us', ',', 'Harriet'), 1, 0, 0.17687017067164812)
(('Harriet', ',', 'by'), 1, 0, 0.17687017067164812)
((',', 'by', 'additional'), 1, 0, 0.17687017067164812)
(('by', 'additional', 'softness'), 1, 0, 0.17687017067164812)
(('additional', 'softness', ','), 1, 0, 0.17687017067164812)
(('softness', ',', 'but'), 1, 0, 0.17687017067164812)
(('but', 'it', 'strikes'), 1, 0, 0.17687017067164812)
(('it', 'strikes', 'me'), 2, 0, 0.983389342294767)
(('strikes', 'me', 'that'), 1, 0, 0.17687017067164812)
(('me', 'that', 'his'), 1, 0, 0.17687017067164812)
(('that', 'his', 'manners'), 2, 0, 0.983389342294767)
(('his', 'manners', 'are'), 2, 0, 0.983389342294767)
(('manners', 'are', 'softer'), 1, 0, 0.17687017067164812)
(('are', 'softer', 'than'), 1, 0, 0.17687017067164812)
(('softer', 'than', 'they'), 1, 0, 0.17687017067164812)
(('than', 'they', 'used'), 1, 0, 0.17687017067164812)
(('they', 'used', 'to'), 1, 0, 0.17687017067164812)
(('used', 'to', 'be'), 8, 0, 7.927797833935018)
(('to', 'be', '.'), 7, 0, 6.295454545454546)
(('be', '.', ''), 16, 0, 14.681818181818182)
(('', 'If', 'he'), 10, 0, 9.36024844720497)
(('If', 'he', 'means'), 1, 0, 0.17687017067164812)
(('he', 'means', 'any'), 1, 0, 0.17687017067164812)
(('means', 'any', 'thing'), 1, 0, 0.17687017067164812)
(('any', 'thing', ','), 8, 0, 7.927797833935018)
(('thing', ',', 'it'), 1, 0, 0.17687017067164812)
(('must', 'be', 'to'), 2, 0, 0.983389342294767)
(('be', 'to', 'please'), 1, 0, 0.17687017067164812)
(('to', 'please', 'you'), 1, 0, 0.17687017067164812)
(('please', 'you', '.'), 1, 0, 0.17687017067164812)
(('', '', 'Did'), 5, 0, 3.7220338983050847)
(('', 'Did', 'not'), 3, 0, 1.7785588752196837)
(('Did', 'not', 'I'), 1, 0, 0.17687017067164812)
(('not', 'I', 'tell'), 1, 0, 0.17687017067164812)
(('I', 'tell', 'you'), 3, 0, 1.7785588752196837)
(('tell', 'you', 'what'), 5, 0, 3.7220338983050847)
(('you', 'what', 'he'), 1, 0, 0.17687017067164812)
(('what', 'he', 'said'), 2, 0, 0.983389342294767)
(('he', 'said', 'of'), 1, 0, 0.17687017067164812)
(('said', 'of', 'you'), 1, 0, 0.17687017067164812)
(('of', 'you', 'the'), 1, 0, 0.17687017067164812)
(('you', 'the', 'other'), 3, 0, 1.7785588752196837)
(('the', 'other', 'day'), 10, 0, 9.36024844720497)
(('other', 'day', '?"'), 1, 0, 0.17687017067164812)
(('day', '?"', ''), 4, 0, 2.9150197628458496)
(('', 'She', 'then'), 6, 0, 4.48816029143898)
(('She', 'then', 'repeated'), 1, 0, 0.17687017067164812)
(('then', 'repeated', 'some'), 1, 0, 0.17687017067164812)
(('repeated', 'some', 'warm'), 1, 0, 0.17687017067164812)
(('some', 'warm', 'personal'), 1, 0, 0.17687017067164812)
(('warm', 'personal', 'praise'), 1, 0, 0.17687017067164812)
(('personal', 'praise', 'which'), 1, 0, 0.17687017067164812)
(('praise', 'which', 'she'), 1, 0, 0.17687017067164812)
(('she', 'had', 'drawn'), 2, 0, 0.983389342294767)
(('had', 'drawn', 'from'), 1, 0, 0.17687017067164812)
(('drawn', 'from', 'Mr'), 1, 0, 0.17687017067164812)

(('and', 'now', 'did'), 1, 0, 0.17687017067164812)
(('now', 'did', 'full'), 1, 0, 0.17687017067164812)
(('did', 'full', 'justice'), 1, 0, 0.17687017067164812)
(('full', 'justice', 'to'), 3, 0, 1.7785588752196837)
(('justice', 'to', ';'), 1, 0, 0.17687017067164812)
(('to', ';', 'and'), 2, 0, 0.983389342294767)
(('and', 'Harriet', 'blushed'), 1, 0, 0.17687017067164812)
(('Harriet', 'blushed', 'and'), 2, 0, 0.983389342294767)
(('blushed', 'and', 'smiled'), 2, 0, 0.983389342294767)
(('and', 'smiled', ','), 4, 0, 2.9150197628458496)
(('smiled', ',', 'and'), 6, 0, 4.48816029143898)
((',', 'and', 'said'), 14, 0, 11.428571428571427)
(('and', 'said', 'she'), 1, 0, 0.17687017067164812)
(('said', 'she', 'had'), 1, 0, 0.17687017067164812)
(('had', 'always', 'thought'), 1, 0, 0.17687017067164812)
(('always', 'thought', 'Mr'), 1, 0, 0.17687017067164812)
(('thought', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('.', 'Elton', 'very'), 1, 0, 0.17687017067164812)
(('Elton', 'very', 'agreeable'), 1, 0, 0.17687017067164812)
(('very', 'agreeable', '.'), 1, 0, 0.17687017067164812)
(('agreeable', '.', ''), 6, 0, 4.48816029143898)
(('.', 'Elton', 'was'), 29, 0, 32.30769230769231)
(('Elton', 'was', 'the'), 2, 0, 0.983389342294767)
(('was', 'the', 'very'), 8, 0, 7.927797833935018)
(('the', 'very', 'person'), 6, 0, 4.48816029143898)
(('very', 'person', 'fixed'), 1, 0, 0.17687017067164812)
(('person', 'fixed', 'on'), 1, 0, 0.17687017067164812)
(('fixed', 'on', 'by'), 2, 0, 0.983389342294767)
(('on', 'by', 'Emma'), 1, 0, 0.17687017067164812)
(('by', 'Emma', 'for'), 1, 0, 0.17687017067164812)
(('Emma', 'for', 'driving'), 1, 0, 0.17687017067164812)
(('for', 'driving', 'the'), 1, 0, 0.17687017067164812)
(('driving', 'the', 'young'), 1, 0, 0.17687017067164812)
(('the', 'young', 'farmer'), 1, 0, 0.17687017067164812)
(('young', 'farmer', 'out'), 1, 0, 0.17687017067164812)
(('farmer', 'out', 'of'), 1, 0, 0.17687017067164812)
(('out', 'of', 'Harriet'), 1, 0, 0.17687017067164812)
(('of', 'Harriet', "'"), 17, 0, 19.42105263157895)
(("'", 's', 'head'), 1, 0, 0.17687017067164812)
(('s', 'head', '.'), 1, 0, 0.17687017067164812)
(('head', '.', ''), 5, 0, 3.7220338983050847)
(('', 'She', 'thought'), 8, 0, 7.927797833935018)
(('She', 'thought', 'it'), 3, 0, 1.7785588752196837)
(('thought', 'it', 'would'), 6, 0, 4.48816029143898)
(('an', 'excellent', 'match'), 1, 0, 0.17687017067164812)
(('excellent', 'match', ';'), 1, 0, 0.17687017067164812)
(('match', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'only'), 2, 0, 0.983389342294767)
(('and', 'only', 'too'), 1, 0, 0.17687017067164812)
(('only', 'too', 'palpably'), 1, 0, 0.17687017067164812)
(('too', 'palpably', 'desirable'), 1, 0, 0.17687017067164812)
(('palpably', 'desirable', ','), 1, 0, 0.17687017067164812)
(('desirable', ',', 'natural'), 1, 0, 0.17687017067164812)
((',', 'natural', ','), 1, 0, 0.17687017067164812)
(('natural', ',', 'and'), 2, 0, 0.983389342294767)
((',', 'and', 'probable'), 1, 0, 0.17687017067164812)
(('and', 'probable', ','), 1, 0, 0.17687017067164812)
(('probable', ',', 'for'), 1, 0, 0.17687017067164812)
(('have', 'much', 'merit'), 1, 0, 0.17687017067164812)
(('much', 'merit', 'in'), 1, 0, 0.17687017067164812)
(('merit', 'in', 'planning'), 1, 0, 0.17687017067164812)
(('in', 'planning', 'it'), 1, 0, 0.17687017067164812)
(('planning', 'it', '.'), 1, 0, 0.17687017067164812)
(('', 'She', 'feared'), 1, 0, 0.17687017067164812)
(('She', 'feared', 'it'), 1, 0, 0.17687017067164812)
(('feared', 'it', 'was'), 1, 0, 0.17687017067164812)
(('it', 'was', 'what'), 1, 0, 0.17687017067164812)
(('was', 'what', 'every'), 1, 0, 0.17687017067164812)
(('what', 'every', 'body'), 3, 0, 1.7785588752196837)
(('every', 'body', 'else'), 6, 0, 4.48816029143898)
(('body', 'else', 'must'), 1, 0, 0.17687017067164812)
(('else', 'must', 'think'), 1, 0, 0.17687017067164812)
(('must', 'think', 'of'), 3, 0, 1.7785588752196837)
(('think', 'of', 'and'), 1, 0, 0.17687017067164812)
(('of', 'and', 'predict'), 1, 0, 0.17687017067164812)
(('and', 'predict', '.'), 1, 0, 0.17687017067164812)
(('predict', '.', ''), 1, 0, 0.17687017067164812)
(('It', 'was', 'not'), 17, 0, 19.42105263157895)
(('was', 'not', 'likely'), 1, 0, 0.17687017067164812)
(('not', 'likely', ','), 1, 0, 0.17687017067164812)
(('likely', ',', 'however'), 1, 0, 0.17687017067164812)
(('however', ',', 'that'), 4, 0, 2.9150197628458496)
((',', 'that', 'any'), 3, 0, 1.7785588752196837)
(('that', 'any', 'body'), 2, 0, 0.983389342294767)
(('any', 'body', 'should'), 1, 0, 0.17687017067164812)
(('body', 'should', 'have'), 1, 0, 0.17687017067164812)
(('should', 'have', 'equalled'), 1, 0, 0.17687017067164812)
(('have', 'equalled', 'her'), 1, 0, 0.17687017067164812)
(('equalled', 'her', 'in'), 1, 0, 0.17687017067164812)
(('her', 'in', 'the'), 10, 0, 9.36024844720497)
(('in', 'the', 'date'), 1, 0, 0.17687017067164812)
(('the', 'date', 'of'), 1, 0, 0.17687017067164812)
(('date', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'plan'), 2, 0, 0.983389342294767)
(('the', 'plan', ','), 1, 0, 0.17687017067164812)
(('plan', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'it'), 8, 0, 7.927797833935018)
(('as', 'it', 'had'), 2, 0, 0.983389342294767)
(('it', 'had', 'entered'), 1, 0, 0.17687017067164812)
(('had', 'entered', 'her'), 1, 0, 0.17687017067164812)
(('entered', 'her', 'brain'), 2, 0, 0.983389342294767)
(('her', 'brain', 'during'), 1, 0, 0.17687017067164812)
(('brain', 'during', 'the'), 1, 0, 0.17687017067164812)
(('during', 'the', 'very'), 2, 0, 0.983389342294767)
(('the', 'very', 'first'), 6, 0, 4.48816029143898)
(('very', 'first', 'evening'), 1, 0, 0.17687017067164812)
(('first', 'evening', 'of'), 1, 0, 0.17687017067164812)
(('evening', 'of', 'Harriet'), 1, 0, 0.17687017067164812)
(("'", 's', 'coming'), 12, 0, 11.424242424242424)
(('s', 'coming', 'to'), 4, 0, 2.9150197628458496)
(('coming', 'to', 'Hartfield'), 1, 0, 0.17687017067164812)
(('to', 'Hartfield', '.'), 5, 0, 3.7220338983050847)
(('', 'The', 'longer'), 1, 0, 0.17687017067164812)
(('The', 'longer', 'she'), 1, 0, 0.17687017067164812)
(('longer', 'she', 'considered'), 1, 0, 0.17687017067164812)
(('she', 'considered', 'it'), 1, 0, 0.17687017067164812)
(('considered', 'it', ','), 1, 0, 0.17687017067164812)
((',', 'the', 'greater'), 1, 0, 0.17687017067164812)
(('the', 'greater', 'was'), 1, 0, 0.17687017067164812)
(('greater', 'was', 'her'), 1, 0, 0.17687017067164812)
(('was', 'her', 'sense'), 1, 0, 0.17687017067164812)
(('her', 'sense', 'of'), 3, 0, 1.7785588752196837)
(('sense', 'of', 'its'), 1, 0, 0.17687017067164812)
(('of', 'its', 'expediency'), 1, 0, 0.17687017067164812)
(('its', 'expediency', '.'), 1, 0, 0.17687017067164812)
(('expediency', '.', ''), 2, 0, 0.983389342294767)
(('s', 'situation', 'was'), 1, 0, 0.17687017067164812)
(('situation', 'was', 'most'), 1, 0, 0.17687017067164812)
(('was', 'most', 'suitable'), 1, 0, 0.17687017067164812)
(('most', 'suitable', ','), 1, 0, 0.17687017067164812)
(('suitable', ',', 'quite'), 1, 0, 0.17687017067164812)
((',', 'quite', 'the'), 2, 0, 0.983389342294767)
(('quite', 'the', 'gentleman'), 2, 0, 0.983389342294767)
(('the', 'gentleman', 'himself'), 1, 0, 0.17687017067164812)
(('gentleman', 'himself', ','), 1, 0, 0.17687017067164812)
(('himself', ',', 'and'), 7, 0, 6.295454545454546)
((',', 'and', 'without'), 7, 0, 6.295454545454546)
(('and', 'without', 'low'), 1, 0, 0.17687017067164812)
(('without', 'low', 'connexions'), 1, 0, 0.17687017067164812)
(('low', 'connexions', ';'), 1, 0, 0.17687017067164812)
(('connexions', ';', 'at'), 1, 0, 0.17687017067164812)
((';', 'at', 'the'), 1, 0, 0.17687017067164812)
(('at', 'the', 'same'), 10, 0, 9.36024844720497)
(('the', 'same', 'time'), 9, 0, 6.5983606557377055)
(('same', 'time', ','), 5, 0, 3.7220338983050847)
(('time', ',', 'not'), 1, 0, 0.17687017067164812)
((',', 'not', 'of'), 1, 0, 0.17687017067164812)
(('not', 'of', 'any'), 1, 0, 0.17687017067164812)
(('of', 'any', 'family'), 1, 0, 0.17687017067164812)
(('any', 'family', 'that'), 1, 0, 0.17687017067164812)
(('family', 'that', 'could'), 1, 0, 0.17687017067164812)
(('that', 'could', 'fairly'), 1, 0, 0.17687017067164812)
(('could', 'fairly', 'object'), 1, 0, 0.17687017067164812)
(('fairly', 'object', 'to'), 1, 0, 0.17687017067164812)
(('object', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'doubtful'), 1, 0, 0.17687017067164812)
(('the', 'doubtful', 'birth'), 1, 0, 0.17687017067164812)
(('doubtful', 'birth', 'of'), 1, 0, 0.17687017067164812)
(('birth', 'of', 'Harriet'), 1, 0, 0.17687017067164812)
(('of', 'Harriet', '.'), 5, 0, 3.7220338983050847)
(('Harriet', '.', ''), 23, 0, 14.608695652173914)
(('had', 'a', 'comfortable'), 1, 0, 0.17687017067164812)
(('comfortable', 'home', 'for'), 1, 0, 0.17687017067164812)
(('home', 'for', 'her'), 1, 0, 0.17687017067164812)
(('for', 'her', ','), 13, 0, 10.137931034482758)
(('and', 'Emma', 'imagined'), 1, 0, 0.17687017067164812)
(('Emma', 'imagined', 'a'), 1, 0, 0.17687017067164812)
(('imagined', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'sufficient'), 1, 0, 0.17687017067164812)
(('very', 'sufficient', 'income'), 1, 0, 0.17687017067164812)
(('sufficient', 'income', ';'), 1, 0, 0.17687017067164812)
(('income', ';', 'for'), 1, 0, 0.17687017067164812)
((';', 'for', 'though'), 10, 0, 9.36024844720497)
(('for', 'though', 'the'), 3, 0, 1.7785588752196837)
(('though', 'the', 'vicarage'), 1, 0, 0.17687017067164812)
(('the', 'vicarage', 'of'), 1, 0, 0.17687017067164812)
(('vicarage', 'of', 'Highbury'), 1, 0, 0.17687017067164812)
(('of', 'Highbury', 'was'), 1, 0, 0.17687017067164812)
(('Highbury', 'was', 'not'), 1, 0, 0.17687017067164812)
(('was', 'not', 'large'), 1, 0, 0.17687017067164812)
(('not', 'large', ','), 1, 0, 0.17687017067164812)
(('large', ',', 'he'), 1, 0, 0.17687017067164812)
(('he', 'was', 'known'), 1, 0, 0.17687017067164812)
(('was', 'known', 'to'), 1, 0, 0.17687017067164812)
(('known', 'to', 'have'), 1, 0, 0.17687017067164812)
(('to', 'have', 'some'), 3, 0, 1.7785588752196837)
(('have', 'some', 'independent'), 1, 0, 0.17687017067164812)
(('some', 'independent', 'property'), 1, 0, 0.17687017067164812)
(('independent', 'property', ';'), 1, 0, 0.17687017067164812)
(('property', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'she', 'thought'), 2, 0, 0.983389342294767)
(('she', 'thought', 'very'), 1, 0, 0.17687017067164812)
(('thought', 'very', 'highly'), 1, 0, 0.17687017067164812)
(('very', 'highly', 'of'), 2, 0, 0.983389342294767)
(('highly', 'of', 'him'), 1, 0, 0.17687017067164812)
(('as', 'a', 'good'), 2, 0, 0.983389342294767)
(('humoured', ',', 'well'), 1, 0, 0.17687017067164812)
(('well', '-', 'meaning'), 3, 0, 1.7785588752196837)
(('-', 'meaning', ','), 2, 0, 0.983389342294767)
(('meaning', ',', 'respectable'), 1, 0, 0.17687017067164812)
((',', 'respectable', 'young'), 1, 0, 0.17687017067164812)
(('man', ',', 'without'), 1, 0, 0.17687017067164812)
(('without', 'any', 'deficiency'), 1, 0, 0.17687017067164812)
(('any', 'deficiency', 'of'), 1, 0, 0.17687017067164812)
(('deficiency', 'of', 'useful'), 1, 0, 0.17687017067164812)
(('of', 'useful', 'understanding'), 1, 0, 0.17687017067164812)
(('useful', 'understanding', 'or'), 1, 0, 0.17687017067164812)
(('understanding', 'or', 'knowledge'), 1, 0, 0.17687017067164812)
(('or', 'knowledge', 'of'), 1, 0, 0.17687017067164812)
(('knowledge', 'of', 'the'), 4, 0, 2.9150197628458496)
(('of', 'the', 'world'), 9, 0, 6.5983606557377055)
(('She', 'had', 'already'), 1, 0, 0.17687017067164812)
(('had', 'already', 'satisfied'), 1, 0, 0.17687017067164812)
(('already', 'satisfied', 'herself'), 1, 0, 0.17687017067164812)
(('satisfied', 'herself', 'that'), 1, 0, 0.17687017067164812)
(('herself', 'that', 'he'), 2, 0, 0.983389342294767)
(('that', 'he', 'thought'), 2, 0, 0.983389342294767)
(('he', 'thought', 'Harriet'), 1, 0, 0.17687017067164812)
(('thought', 'Harriet', 'a'), 1, 0, 0.17687017067164812)
(('Harriet', 'a', 'beautiful'), 1, 0, 0.17687017067164812)
(('a', 'beautiful', 'girl'), 2, 0, 0.983389342294767)
(('beautiful', 'girl', ','), 2, 0, 0.983389342294767)
(('girl', ',', 'which'), 1, 0, 0.17687017067164812)
((',', 'which', 'she'), 23, 0, 14.608695652173914)
(('which', 'she', 'trusted'), 1, 0, 0.17687017067164812)
(('she', 'trusted', ','), 2, 0, 0.983389342294767)
(('trusted', ',', 'with'), 1, 0, 0.17687017067164812)
((',', 'with', 'such'), 4, 0, 2.9150197628458496)
(('with', 'such', 'frequent'), 1, 0, 0.17687017067164812)
(('such', 'frequent', 'meetings'), 1, 0, 0.17687017067164812)
(('frequent', 'meetings', 'at'), 1, 0, 0.17687017067164812)
(('meetings', 'at', 'Hartfield'), 1, 0, 0.17687017067164812)
(('Hartfield', ',', 'was'), 4, 0, 2.9150197628458496)
((',', 'was', 'foundation'), 1, 0, 0.17687017067164812)
(('was', 'foundation', 'enough'), 1, 0, 0.17687017067164812)
(('foundation', 'enough', 'on'), 1, 0, 0.17687017067164812)
(('enough', 'on', 'his'), 1, 0, 0.17687017067164812)
(('on', 'his', 'side'), 9, 0, 6.5983606557377055)
(('his', 'side', ';'), 2, 0, 0.983389342294767)
(('side', ';', 'and'), 2, 0, 0.983389342294767)
((';', 'and', 'on'), 10, 0, 9.36024844720497)
(('and', 'on', 'Harriet'), 1, 0, 0.17687017067164812)
(("'", 's', 'there'), 1, 0, 0.17687017067164812)
(('s', 'there', 'could'), 1, 0, 0.17687017067164812)
(('there', 'could', 'be'), 8, 0, 7.927797833935018)
(('could', 'be', 'little'), 2, 0, 0.983389342294767)
(('be', 'little', 'doubt'), 1, 0, 0.17687017067164812)
(('little', 'doubt', 'that'), 2, 0, 0.983389342294767)
(('doubt', 'that', 'the'), 1, 0, 0.17687017067164812)
(('that', 'the', 'idea'), 1, 0, 0.17687017067164812)
(('the', 'idea', 'of'), 24, 0, 39.285714285714285)
(('idea', 'of', 'being'), 3, 0, 1.7785588752196837)
(('of', 'being', 'preferred'), 1, 0, 0.17687017067164812)
(('being', 'preferred', 'by'), 1, 0, 0.17687017067164812)
(('preferred', 'by', 'him'), 1, 0, 0.17687017067164812)
(('by', 'him', 'would'), 1, 0, 0.17687017067164812)
(('him', 'would', 'have'), 2, 0, 0.983389342294767)
(('would', 'have', 'all'), 1, 0, 0.17687017067164812)
(('have', 'all', 'the'), 3, 0, 1.7785588752196837)
(('all', 'the', 'usual'), 2, 0, 0.983389342294767)
(('the', 'usual', 'weight'), 1, 0, 0.17687017067164812)
(('usual', 'weight', 'and'), 1, 0, 0.17687017067164812)
(('weight', 'and', 'efficacy'), 1, 0, 0.17687017067164812)
(('and', 'efficacy', '.'), 1, 0, 0.17687017067164812)
(('efficacy', '.', ''), 1, 0, 0.17687017067164812)
(('', 'And', 'he'), 5, 0, 3.7220338983050847)
(('And', 'he', 'was'), 1, 0, 0.17687017067164812)
(('he', 'was', 'really'), 1, 0, 0.17687017067164812)
(('was', 'really', 'a'), 1, 0, 0.17687017067164812)
(('really', 'a', 'very'), 1, 0, 0.17687017067164812)
(('a', 'very', 'pleasing'), 2, 0, 0.983389342294767)
(('very', 'pleasing', 'young'), 2, 0, 0.983389342294767)
(('pleasing', 'young', 'man'), 2, 0, 0.983389342294767)
(('man', ',', 'a'), 2, 0, 0.983389342294767)
(('young', 'man', 'whom'), 2, 0, 0.983389342294767)
(('man', 'whom', 'any'), 1, 0, 0.17687017067164812)
(('whom', 'any', 'woman'), 1, 0, 0.17687017067164812)
(('any', 'woman', 'not'), 1, 0, 0.17687017067164812)
(('woman', 'not', 'fastidious'), 1, 0, 0.17687017067164812)
(('not', 'fastidious', 'might'), 1, 0, 0.17687017067164812)
(('fastidious', 'might', 'like'), 1, 0, 0.17687017067164812)
(('might', 'like', '.'), 1, 0, 0.17687017067164812)
(('like', '.', ''), 6, 0, 4.48816029143898)
(('He', 'was', 'reckoned'), 1, 0, 0.17687017067164812)
(('was', 'reckoned', 'very'), 1, 0, 0.17687017067164812)
(('reckoned', 'very', 'handsome'), 1, 0, 0.17687017067164812)
(('very', 'handsome', ';'), 1, 0, 0.17687017067164812)
(('handsome', ';', 'his'), 1, 0, 0.17687017067164812)
((';', 'his', 'person'), 1, 0, 0.17687017067164812)
(('his', 'person', 'much'), 1, 0, 0.17687017067164812)
(('person', 'much', 'admired'), 1, 0, 0.17687017067164812)
(('much', 'admired', 'in'), 1, 0, 0.17687017067164812)
(('admired', 'in', 'general'), 1, 0, 0.17687017067164812)
(('general', ',', 'though'), 1, 0, 0.17687017067164812)
((',', 'though', 'not'), 5, 0, 3.7220338983050847)
(('though', 'not', 'by'), 1, 0, 0.17687017067164812)
(('not', 'by', 'her'), 1, 0, 0.17687017067164812)
(('by', 'her', ','), 7, 0, 6.295454545454546)
(('her', ',', 'there'), 1, 0, 0.17687017067164812)
((',', 'there', 'being'), 1, 0, 0.17687017067164812)
(('there', 'being', 'a'), 3, 0, 1.7785588752196837)
(('being', 'a', 'want'), 1, 0, 0.17687017067164812)
(('a', 'want', 'of'), 4, 0, 2.9150197628458496)
(('want', 'of', 'elegance'), 1, 0, 0.17687017067164812)
(('of', 'elegance', 'of'), 1, 0, 0.17687017067164812)
(('elegance', 'of', 'feature'), 1, 0, 0.17687017067164812)
(('of', 'feature', 'which'), 1, 0, 0.17687017067164812)
(('feature', 'which', 'she'), 1, 0, 0.17687017067164812)
(('which', 'she', 'could'), 4, 0, 2.9150197628458496)
(('she', 'could', 'not'), 52, 0, 17.666666666666664)
(('could', 'not', 'dispense'), 1, 0, 0.17687017067164812)
(('not', 'dispense', 'with'), 1, 0, 0.17687017067164812)
(('dispense', 'with', ':--'), 1, 0, 0.17687017067164812)
(('with', ':--', 'but'), 1, 0, 0.17687017067164812)
((':--', 'but', 'the'), 1, 0, 0.17687017067164812)
(('but', 'the', 'girl'), 1, 0, 0.17687017067164812)
(('the', 'girl', 'who'), 2, 0, 0.983389342294767)
(('girl', 'who', 'could'), 1, 0, 0.17687017067164812)
(('could', 'be', 'gratified'), 1, 0, 0.17687017067164812)
(('be', 'gratified', 'by'), 2, 0, 0.983389342294767)
(('gratified', 'by', 'a'), 1, 0, 0.17687017067164812)
(('by', 'a', 'Robert'), 1, 0, 0.17687017067164812)
(('a', 'Robert', 'Martin'), 2, 0, 0.983389342294767)
(('Robert', 'Martin', "'"), 4, 0, 2.9150197628458496)
(("'", 's', 'riding'), 1, 0, 0.17687017067164812)
(('s', 'riding', 'about'), 1, 0, 0.17687017067164812)
(('riding', 'about', 'the'), 1, 0, 0.17687017067164812)
(('about', 'the', 'country'), 2, 0, 0.983389342294767)
(('country', 'to', 'get'), 1, 0, 0.17687017067164812)
(('to', 'get', 'walnuts'), 1, 0, 0.17687017067164812)
(('get', 'walnuts', 'for'), 1, 0, 0.17687017067164812)
(('walnuts', 'for', 'her'), 1, 0, 0.17687017067164812)
(('for', 'her', 'might'), 1, 0, 0.17687017067164812)
(('her', 'might', 'very'), 1, 0, 0.17687017067164812)
(('might', 'very', 'well'), 1, 0, 0.17687017067164812)
(('very', 'well', 'be'), 1, 0, 0.17687017067164812)
(('well', 'be', 'conquered'), 1, 0, 0.17687017067164812)
(('be', 'conquered', 'by'), 1, 0, 0.17687017067164812)
(('conquered', 'by', 'Mr'), 1, 0, 0.17687017067164812)
(("'", 's', 'admiration'), 1, 0, 0.17687017067164812)
(('s', 'admiration', '.'), 1, 0, 0.17687017067164812)
(('admiration', '.', ''), 2, 0, 0.983389342294767)
(('', 'CHAPTER', 'V'), 3, 0, 1.7785588752196837)
(('CHAPTER', 'V', ''), 3, 0, 1.7785588752196837)
(('V', '', ''), 3, 0, 1.7785588752196837)
(('know', 'what', 'your'), 2, 0, 0.983389342294767)
(('what', 'your', 'opinion'), 1, 0, 0.17687017067164812)
(('your', 'opinion', 'may'), 1, 0, 0.17687017067164812)
(('opinion', 'may', 'be'), 1, 0, 0.17687017067164812)
(('be', ',', 'Mrs'), 1, 0, 0.17687017067164812)
(('.', 'Weston', ',"'), 4, 0, 2.9150197628458496)
(('Weston', ',"', 'said'), 4, 0, 2.9150197628458496)
((',', '"', 'of'), 3, 0, 1.7785588752196837)
(('"', 'of', 'this'), 1, 0, 0.17687017067164812)
(('of', 'this', 'great'), 1, 0, 0.17687017067164812)
(('this', 'great', 'intimacy'), 1, 0, 0.17687017067164812)
(('great', 'intimacy', 'between'), 1, 0, 0.17687017067164812)
(('intimacy', 'between', 'Emma'), 1, 0, 0.17687017067164812)
(('between', 'Emma', 'and'), 1, 0, 0.17687017067164812)
(('Emma', 'and', 'Harriet'), 6, 0, 4.48816029143898)
(('and', 'Harriet', 'Smith'), 4, 0, 2.9150197628458496)
(('Smith', ',', 'but'), 1, 0, 0.17687017067164812)
(('think', 'it', 'a'), 6, 0, 4.48816029143898)
(('it', 'a', 'bad'), 3, 0, 1.7785588752196837)
(('a', 'bad', 'thing'), 3, 0, 1.7785588752196837)
(('bad', 'thing', '."'), 1, 0, 0.17687017067164812)
(('"', 'A', 'bad'), 1, 0, 0.17687017067164812)
(('A', 'bad', 'thing'), 1, 0, 0.17687017067164812)
(('bad', 'thing', '!'), 1, 0, 0.17687017067164812)
(('thing', '!', ''), 4, 0, 2.9150197628458496)
(('Do', 'you', 'really'), 1, 0, 0.17687017067164812)
(('you', 'really', 'think'), 1, 0, 0.17687017067164812)
(('really', 'think', 'it'), 1, 0, 0.17687017067164812)
(('bad', 'thing', '?--'), 1, 0, 0.17687017067164812)
(('thing', '?--', 'why'), 2, 0, 0.983389342294767)
(('?--', 'why', 'so'), 1, 0, 0.17687017067164812)
(('why', 'so', '?"'), 1, 0, 0.17687017067164812)
(('so', '?"', ''), 4, 0, 2.9150197628458496)
(('I', 'think', 'they'), 4, 0, 2.9150197628458496)
(('think', 'they', 'will'), 2, 0, 0.983389342294767)
(('they', 'will', 'neither'), 1, 0, 0.17687017067164812)
(('will', 'neither', 'of'), 1, 0, 0.17687017067164812)
(('neither', 'of', 'them'), 3, 0, 1.7785588752196837)
(('of', 'them', 'do'), 1, 0, 0.17687017067164812)
(('them', 'do', 'the'), 1, 0, 0.17687017067164812)
(('do', 'the', 'other'), 1, 0, 0.17687017067164812)
(('the', 'other', 'any'), 1, 0, 0.17687017067164812)
(('other', 'any', 'good'), 2, 0, 0.983389342294767)
(('any', 'good', '."'), 1, 0, 0.17687017067164812)
(('good', '."', ''), 5, 0, 3.7220338983050847)
(('"', 'You', 'surprize'), 1, 0, 0.17687017067164812)
(('You', 'surprize', 'me'), 1, 0, 0.17687017067164812)
(('surprize', 'me', '!'), 1, 0, 0.17687017067164812)
(('me', '!', ''), 15, 0, 14.666666666666666)
(('', 'Emma', 'must'), 2, 0, 0.983389342294767)
(('Emma', 'must', 'do'), 1, 0, 0.17687017067164812)
(('must', 'do', 'Harriet'), 1, 0, 0.17687017067164812)
(('do', 'Harriet', 'good'), 1, 0, 0.17687017067164812)
(('Harriet', 'good', ':'), 1, 0, 0.17687017067164812)
(('good', ':', 'and'), 1, 0, 0.17687017067164812)
((':', 'and', 'by'), 1, 0, 0.17687017067164812)
(('and', 'by', 'supplying'), 1, 0, 0.17687017067164812)
(('by', 'supplying', 'her'), 1, 0, 0.17687017067164812)
(('supplying', 'her', 'with'), 1, 0, 0.17687017067164812)
(('with', 'a', 'new'), 1, 0, 0.17687017067164812)
(('a', 'new', 'object'), 1, 0, 0.17687017067164812)
(('new', 'object', 'of'), 1, 0, 0.17687017067164812)
(('object', 'of', 'interest'), 2, 0, 0.983389342294767)
(('of', 'interest', ','), 2, 0, 0.983389342294767)
(('interest', ',', 'Harriet'), 1, 0, 0.17687017067164812)
((',', 'Harriet', 'may'), 1, 0, 0.17687017067164812)
(('Harriet', 'may', 'be'), 1, 0, 0.17687017067164812)
(('may', 'be', 'said'), 3, 0, 1.7785588752196837)
(('be', 'said', 'to'), 1, 0, 0.17687017067164812)
(('said', 'to', 'do'), 1, 0, 0.17687017067164812)
(('to', 'do', 'Emma'), 1, 0, 0.17687017067164812)
(('do', 'Emma', 'good'), 1, 0, 0.17687017067164812)
(('Emma', 'good', '.'), 1, 0, 0.17687017067164812)
(('good', '.', ''), 14, 0, 11.428571428571427)
(('have', 'been', 'seeing'), 1, 0, 0.17687017067164812)
(('been', 'seeing', 'their'), 1, 0, 0.17687017067164812)
(('seeing', 'their', 'intimacy'), 1, 0, 0.17687017067164812)
(('their', 'intimacy', 'with'), 1, 0, 0.17687017067164812)
(('with', 'the', 'greatest'), 3, 0, 1.7785588752196837)
(('the', 'greatest', 'pleasure'), 3, 0, 1.7785588752196837)
(('greatest', 'pleasure', '.'), 1, 0, 0.17687017067164812)
(('', 'How', 'very'), 4, 0, 2.9150197628458496)
(('How', 'very', 'differently'), 1, 0, 0.17687017067164812)
(('very', 'differently', 'we'), 1, 0, 0.17687017067164812)
(('differently', 'we', 'feel'), 1, 0, 0.17687017067164812)
(('we', 'feel', '!--'), 1, 0, 0.17687017067164812)
(('feel', '!--', 'Not'), 1, 0, 0.17687017067164812)
(('!--', 'Not', 'think'), 1, 0, 0.17687017067164812)
(('Not', 'think', 'they'), 1, 0, 0.17687017067164812)
(('they', 'will', 'do'), 2, 0, 0.983389342294767)
(('will', 'do', 'each'), 1, 0, 0.17687017067164812)
(('do', 'each', 'other'), 1, 0, 0.17687017067164812)
(('each', 'other', 'any'), 1, 0, 0.17687017067164812)
(('any', 'good', '!'), 1, 0, 0.17687017067164812)
(('good', '!', ''), 1, 0, 0.17687017067164812)
(('', 'This', 'will'), 2, 0, 0.983389342294767)
(('This', 'will', 'certainly'), 1, 0, 0.17687017067164812)
(('will', 'certainly', 'be'), 1, 0, 0.17687017067164812)
(('certainly', 'be', 'the'), 1, 0, 0.17687017067164812)
(('be', 'the', 'beginning'), 2, 0, 0.983389342294767)
(('the', 'beginning', 'of'), 2, 0, 0.983389342294767)
(('beginning', 'of', 'one'), 1, 0, 0.17687017067164812)
(('of', 'one', 'of'), 3, 0, 1.7785588752196837)
(('of', 'our', 'quarrels'), 1, 0, 0.17687017067164812)
(('our', 'quarrels', 'about'), 1, 0, 0.17687017067164812)
(('quarrels', 'about', 'Emma'), 1, 0, 0.17687017067164812)
(('about', 'Emma', ','), 1, 0, 0.17687017067164812)
(('Emma', ',', 'Mr'), 1, 0, 0.17687017067164812)
(('', '', 'Knightley'), 25, 0, 22.454545454545453)
(('', 'Knightley', '."'), 2, 0, 0.983389342294767)
(('Knightley', '."', ''), 3, 0, 1.7785588752196837)
(('', '"', 'Perhaps'), 6, 0, 4.48816029143898)
(('"', 'Perhaps', 'you'), 2, 0, 0.983389342294767)
(('Perhaps', 'you', 'think'), 1, 0, 0.17687017067164812)
(('you', 'think', 'I'), 5, 0, 3.7220338983050847)
(('think', 'I', 'am'), 3, 0, 1.7785588752196837)
(('I', 'am', 'come'), 1, 0, 0.17687017067164812)
(('am', 'come', 'on'), 1, 0, 0.17687017067164812)
(('come', 'on', 'purpose'), 1, 0, 0.17687017067164812)
(('purpose', 'to', 'quarrel'), 1, 0, 0.17687017067164812)
(('to', 'quarrel', 'with'), 4, 0, 2.9150197628458496)
(('quarrel', 'with', 'you'), 3, 0, 1.7785588752196837)
(('you', ',', 'knowing'), 1, 0, 0.17687017067164812)
((',', 'knowing', 'Weston'), 1, 0, 0.17687017067164812)
(('knowing', 'Weston', 'to'), 1, 0, 0.17687017067164812)
(('Weston', 'to', 'be'), 1, 0, 0.17687017067164812)
(('be', 'out', ','), 1, 0, 0.17687017067164812)
(('out', ',', 'and'), 4, 0, 2.9150197628458496)
(('and', 'that', 'you'), 4, 0, 2.9150197628458496)
(('you', 'must', 'still'), 1, 0, 0.17687017067164812)
(('must', 'still', 'fight'), 1, 0, 0.17687017067164812)
(('still', 'fight', 'your'), 1, 0, 0.17687017067164812)
(('fight', 'your', 'own'), 1, 0, 0.17687017067164812)
(('your', 'own', 'battle'), 1, 0, 0.17687017067164812)
(('own', 'battle', '."'), 1, 0, 0.17687017067164812)
(('battle', '."', ''), 1, 0, 0.17687017067164812)
(('Weston', 'would', 'undoubtedly'), 1, 0, 0.17687017067164812)
(('would', 'undoubtedly', 'support'), 1, 0, 0.17687017067164812)
(('undoubtedly', 'support', 'me'), 1, 0, 0.17687017067164812)
(('support', 'me', ','), 1, 0, 0.17687017067164812)
(('me', ',', 'if'), 1, 0, 0.17687017067164812)
(('if', 'he', 'were'), 9, 0, 6.5983606557377055)(('he', 'were', 'here'), 2, 0, 0.983389342294767)
(('were', 'here', ','), 1, 0, 0.17687017067164812)
(('here', ',', 'for'), 1, 0, 0.17687017067164812)
((',', 'for', 'he'), 5, 0, 3.7220338983050847)
(('for', 'he', 'thinks'), 1, 0, 0.17687017067164812)
(('he', 'thinks', 'exactly'), 1, 0, 0.17687017067164812)
(('thinks', 'exactly', 'as'), 1, 0, 0.17687017067164812)
(('exactly', 'as', 'I'), 1, 0, 0.17687017067164812)
(('as', 'I', 'do'), 6, 0, 4.48816029143898)
(('I', 'do', 'on'), 1, 0, 0.17687017067164812)
(('do', 'on', 'the'), 1, 0, 0.17687017067164812)
(('', 'We', 'were'), 5, 0, 3.7220338983050847)
(('We', 'were', 'speaking'), 2, 0, 0.983389342294767)
(('were', 'speaking', 'of'), 2, 0, 0.983389342294767)
(('speaking', 'of', 'it'), 3, 0, 1.7785588752196837)
(('of', 'it', 'only'), 1, 0, 0.17687017067164812)
(('it', 'only', 'yesterday'), 1, 0, 0.17687017067164812)
(('only', 'yesterday', ','), 1, 0, 0.17687017067164812)
(('yesterday', ',', 'and'), 6, 0, 4.48816029143898)
((',', 'and', 'agreeing'), 2, 0, 0.983389342294767)
(('and', 'agreeing', 'how'), 1, 0, 0.17687017067164812)
(('agreeing', 'how', 'fortunate'), 1, 0, 0.17687017067164812)
(('how', 'fortunate', 'it'), 1, 0, 0.17687017067164812)
(('fortunate', 'it', 'was'), 1, 0, 0.17687017067164812)
(('it', 'was', 'for'), 3, 0, 1.7785588752196837)
(('was', 'for', 'Emma'), 1, 0, 0.17687017067164812)
(('for', 'Emma', ','), 2, 0, 0.983389342294767)
(('Emma', ',', 'that'), 6, 0, 4.48816029143898)
((',', 'that', 'there'), 4, 0, 2.9150197628458496)
(('that', 'there', 'should'), 2, 0, 0.983389342294767)
(('there', 'should', 'be'), 3, 0, 1.7785588752196837)
(('should', 'be', 'such'), 1, 0, 0.17687017067164812)
(('be', 'such', 'a'), 4, 0, 2.9150197628458496)
(('such', 'a', 'girl'), 2, 0, 0.983389342294767)
(('a', 'girl', 'in'), 1, 0, 0.17687017067164812)
(('girl', 'in', 'Highbury'), 1, 0, 0.17687017067164812)
(('in', 'Highbury', 'for'), 1, 0, 0.17687017067164812)
(('Highbury', 'for', 'her'), 1, 0, 0.17687017067164812)
(('her', 'to', 'associate'), 1, 0, 0.17687017067164812)
(('to', 'associate', 'with'), 1, 0, 0.17687017067164812)
(('associate', 'with', '.'), 1, 0, 0.17687017067164812)
(('with', '.', ''), 8, 0, 7.927797833935018)
(('Knightley', ',', 'I'), 4, 0, 2.9150197628458496)
((',', 'I', 'shall'), 22, 0, 16.03030303030303)
(('shall', 'not', 'allow'), 1, 0, 0.17687017067164812)
(('not', 'allow', 'you'), 1, 0, 0.17687017067164812)
(('allow', 'you', 'to'), 2, 0, 0.983389342294767)
(('you', 'to', 'be'), 3, 0, 1.7785588752196837)
(('be', 'a', 'fair'), 1, 0, 0.17687017067164812)
(('a', 'fair', 'judge'), 1, 0, 0.17687017067164812)
(('fair', 'judge', 'in'), 1, 0, 0.17687017067164812)
(('judge', 'in', 'this'), 1, 0, 0.17687017067164812)
(('in', 'this', 'case'), 2, 0, 0.983389342294767)
(('this', 'case', '.'), 1, 0, 0.17687017067164812)
(('case', '.', ''), 4, 0, 2.9150197628458496)
(('You', 'are', 'so'), 3, 0, 1.7785588752196837)
(('are', 'so', 'much'), 2, 0, 0.983389342294767)
(('so', 'much', 'used'), 1, 0, 0.17687017067164812)
(('much', 'used', 'to'), 1, 0, 0.17687017067164812)
(('used', 'to', 'live'), 1, 0, 0.17687017067164812)
(('to', 'live', 'alone'), 1, 0, 0.17687017067164812)
(('live', 'alone', ','), 1, 0, 0.17687017067164812)
(('alone', ',', 'that'), 1, 0, 0.17687017067164812)
(('that', 'you', 'do'), 2, 0, 0.983389342294767)
(('you', 'do', 'not'), 12, 0, 11.424242424242424)
(('not', 'know', 'the'), 3, 0, 1.7785588752196837)
(('know', 'the', 'value'), 1, 0, 0.17687017067164812)
(('the', 'value', 'of'), 8, 0, 7.927797833935018)
(('value', 'of', 'a'), 2, 0, 0.983389342294767)
(('of', 'a', 'companion'), 1, 0, 0.17687017067164812)
(('a', 'companion', ';'), 2, 0, 0.983389342294767)
(('companion', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', ',', 'perhaps'), 2, 0, 0.983389342294767)
((',', 'perhaps', 'no'), 1, 0, 0.17687017067164812)
(('perhaps', 'no', 'man'), 1, 0, 0.17687017067164812)
(('no', 'man', 'can'), 1, 0, 0.17687017067164812)
(('man', 'can', 'be'), 2, 0, 0.983389342294767)
(('can', 'be', 'a'), 1, 0, 0.17687017067164812)
(('be', 'a', 'good'), 3, 0, 1.7785588752196837)
(('a', 'good', 'judge'), 1, 0, 0.17687017067164812)
(('good', 'judge', 'of'), 1, 0, 0.17687017067164812)
(('judge', 'of', 'the'), 3, 0, 1.7785588752196837)
(('of', 'the', 'comfort'), 1, 0, 0.17687017067164812)
(('the', 'comfort', 'a'), 1, 0, 0.17687017067164812)
(('comfort', 'a', 'woman'), 1, 0, 0.17687017067164812)
(('a', 'woman', 'feels'), 1, 0, 0.17687017067164812)
(('woman', 'feels', 'in'), 1, 0, 0.17687017067164812)
(('feels', 'in', 'the'), 1, 0, 0.17687017067164812)
(('in', 'the', 'society'), 1, 0, 0.17687017067164812)
(('the', 'society', 'of'), 4, 0, 2.9150197628458496)
(('society', 'of', 'one'), 1, 0, 0.17687017067164812)
(('one', 'of', 'her'), 5, 0, 3.7220338983050847)
(('her', 'own', 'sex'), 1, 0, 0.17687017067164812)
(('own', 'sex', ','), 1, 0, 0.17687017067164812)
(('sex', ',', 'after'), 1, 0, 0.17687017067164812)
((',', 'after', 'being'), 2, 0, 0.983389342294767)
(('after', 'being', 'used'), 1, 0, 0.17687017067164812)
(('being', 'used', 'to'), 2, 0, 0.983389342294767)
(('used', 'to', 'it'), 1, 0, 0.17687017067164812)
(('to', 'it', 'all'), 2, 0, 0.983389342294767)
(('it', 'all', 'her'), 1, 0, 0.17687017067164812)
(('all', 'her', 'life'), 1, 0, 0.17687017067164812)
(('her', 'life', '.'), 4, 0, 2.9150197628458496)
(('', 'I', 'can'), 14, 0, 11.428571428571427)
(('I', 'can', 'imagine'), 5, 0, 3.7220338983050847)
(('can', 'imagine', 'your'), 1, 0, 0.17687017067164812)
(('imagine', 'your', 'objection'), 1, 0, 0.17687017067164812)
(('your', 'objection', 'to'), 1, 0, 0.17687017067164812)
(('objection', 'to', 'Harriet'), 1, 0, 0.17687017067164812)
(('to', 'Harriet', 'Smith'), 4, 0, 2.9150197628458496)
(('Harriet', 'Smith', '.'), 2, 0, 0.983389342294767)
(('Smith', '.', ''), 6, 0, 4.48816029143898)
(('', 'She', 'is'), 21, 0, 29.040000000000003)
(('She', 'is', 'not'), 5, 0, 3.7220338983050847)
(('not', 'the', 'superior'), 2, 0, 0.983389342294767)
(('the', 'superior', 'young'), 1, 0, 0.17687017067164812)
(('superior', 'young', 'woman'), 1, 0, 0.17687017067164812)
(('young', 'woman', 'which'), 1, 0, 0.17687017067164812)
(('woman', 'which', 'Emma'), 1, 0, 0.17687017067164812)
(('which', 'Emma', "'"), 1, 0, 0.17687017067164812)
(("'", 's', 'friend'), 2, 0, 0.983389342294767)
(('s', 'friend', 'ought'), 1, 0, 0.17687017067164812)
(('friend', 'ought', 'to'), 1, 0, 0.17687017067164812)
(('ought', 'to', 'be'), 32, 0, 33.0)
(('', 'But', 'on'), 2, 0, 0.983389342294767)
(('But', 'on', 'the'), 1, 0, 0.17687017067164812)
(('on', 'the', 'other'), 7, 0, 6.295454545454546)
(('the', 'other', 'hand'), 3, 0, 1.7785588752196837)
(('other', 'hand', ','), 3, 0, 1.7785588752196837)
(('hand', ',', 'as'), 1, 0, 0.17687017067164812)
((',', 'as', 'Emma'), 4, 0, 2.9150197628458496)
(('as', 'Emma', 'wants'), 1, 0, 0.17687017067164812)
(('Emma', 'wants', 'to'), 1, 0, 0.17687017067164812)
(('wants', 'to', 'see'), 2, 0, 0.983389342294767)
(('see', 'her', 'better'), 1, 0, 0.17687017067164812)
(('her', 'better', 'informed'), 1, 0, 0.17687017067164812)
(('better', 'informed', ','), 1, 0, 0.17687017067164812)
(('informed', ',', 'it'), 1, 0, 0.17687017067164812)
((',', 'it', 'will'), 12, 0, 11.424242424242424)
(('be', 'an', 'inducement'), 2, 0, 0.983389342294767)
(('an', 'inducement', 'to'), 2, 0, 0.983389342294767)
(('inducement', 'to', 'her'), 1, 0, 0.17687017067164812)
(('her', 'to', 'read'), 2, 0, 0.983389342294767)
(('to', 'read', 'more'), 2, 0, 0.983389342294767)
(('read', 'more', 'herself'), 1, 0, 0.17687017067164812)
(('more', 'herself', '.'), 2, 0, 0.983389342294767)
(('', 'They', 'will'), 8, 0, 7.927797833935018)
(('They', 'will', 'read'), 1, 0, 0.17687017067164812)
(('will', 'read', 'together'), 1, 0, 0.17687017067164812)
(('read', 'together', '.'), 1, 0, 0.17687017067164812)
(('', 'She', 'means'), 1, 0, 0.17687017067164812)
(('She', 'means', 'it'), 1, 0, 0.17687017067164812)
(('means', 'it', ','), 1, 0, 0.17687017067164812)
(('it', ',', 'I'), 12, 0, 11.424242424242424)
(('I', 'know', '."'), 1, 0, 0.17687017067164812)
(('know', '."', ''), 8, 0, 7.927797833935018)
(('"', 'Emma', 'has'), 1, 0, 0.17687017067164812)
(('Emma', 'has', 'been'), 3, 0, 1.7785588752196837)
(('has', 'been', 'meaning'), 1, 0, 0.17687017067164812)
(('been', 'meaning', 'to'), 1, 0, 0.17687017067164812)
(('meaning', 'to', 'read'), 1, 0, 0.17687017067164812)
(('read', 'more', 'ever'), 1, 0, 0.17687017067164812)
(('more', 'ever', 'since'), 1, 0, 0.17687017067164812)
(('ever', 'since', 'she'), 2, 0, 0.983389342294767)
(('since', 'she', 'was'), 4, 0, 2.9150197628458496)
(('she', 'was', 'twelve'), 2, 0, 0.983389342294767)
(('was', 'twelve', 'years'), 1, 0, 0.17687017067164812)
(('twelve', 'years', 'old'), 1, 0, 0.17687017067164812)
(('years', 'old', '.'), 1, 0, 0.17687017067164812)
(('old', '.', ''), 1, 0, 0.17687017067164812)
(('I', 'have', 'seen'), 9, 0, 6.5983606557377055)
(('have', 'seen', 'a'), 1, 0, 0.17687017067164812)
(('seen', 'a', 'great'), 1, 0, 0.17687017067164812)
(('a', 'great', 'many'), 10, 0, 9.36024844720497)
(('great', 'many', 'lists'), 1, 0, 0.17687017067164812)
(('many', 'lists', 'of'), 1, 0, 0.17687017067164812)
(('lists', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'drawing'), 1, 0, 0.17687017067164812)
(('her', 'drawing', '-'), 2, 0, 0.983389342294767)
(('drawing', '-', 'up'), 1, 0, 0.17687017067164812)
(('-', 'up', 'at'), 1, 0, 0.17687017067164812)
(('up', 'at', 'various'), 1, 0, 0.17687017067164812)
(('at', 'various', 'times'), 1, 0, 0.17687017067164812)
(('various', 'times', 'of'), 1, 0, 0.17687017067164812)
(('times', 'of', 'books'), 1, 0, 0.17687017067164812)
(('of', 'books', 'that'), 1, 0, 0.17687017067164812)
(('books', 'that', 'she'), 1, 0, 0.17687017067164812)
(('that', 'she', 'meant'), 3, 0, 1.7785588752196837)
(('she', 'meant', 'to'), 4, 0, 2.9150197628458496)
(('meant', 'to', 'read'), 1, 0, 0.17687017067164812)
(('to', 'read', 'regularly'), 1, 0, 0.17687017067164812)
(('read', 'regularly', 'through'), 1, 0, 0.17687017067164812)
(('regularly', 'through', '--'), 1, 0, 0.17687017067164812)
(('through', '--', 'and'), 1, 0, 0.17687017067164812)
(('and', 'very', 'good'), 1, 0, 0.17687017067164812)
(('very', 'good', 'lists'), 1, 0, 0.17687017067164812)
(('good', 'lists', 'they'), 1, 0, 0.17687017067164812)
(('lists', 'they', 'were'), 1, 0, 0.17687017067164812)
(('they', 'were', '--'), 1, 0, 0.17687017067164812)
(('were', '--', 'very'), 1, 0, 0.17687017067164812)
(('--', 'very', 'well'), 1, 0, 0.17687017067164812)
(('very', 'well', 'chosen'), 1, 0, 0.17687017067164812)
(('well', 'chosen', ','), 1, 0, 0.17687017067164812)
(('chosen', ',', 'and'), 1, 0, 0.17687017067164812)
(('and', 'very', 'neatly'), 1, 0, 0.17687017067164812)
(('very', 'neatly', 'arranged'), 1, 0, 0.17687017067164812)
(('neatly', 'arranged', '--'), 1, 0, 0.17687017067164812)
(('arranged', '--', 'sometimes'), 1, 0, 0.17687017067164812)
(('--', 'sometimes', 'alphabetically'), 1, 0, 0.17687017067164812)
(('sometimes', 'alphabetically', ','), 1, 0, 0.17687017067164812)
(('alphabetically', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'sometimes'), 3, 0, 1.7785588752196837)
(('and', 'sometimes', 'by'), 1, 0, 0.17687017067164812)
(('sometimes', 'by', 'some'), 1, 0, 0.17687017067164812)
(('by', 'some', 'other'), 1, 0, 0.17687017067164812)
(('some', 'other', 'rule'), 1, 0, 0.17687017067164812)
(('other', 'rule', '.'), 1, 0, 0.17687017067164812)
(('rule', '.', ''), 1, 0, 0.17687017067164812)
(('', 'The', 'list'), 1, 0, 0.17687017067164812)
(('The', 'list', 'she'), 1, 0, 0.17687017067164812)
(('list', 'she', 'drew'), 1, 0, 0.17687017067164812)
(('she', 'drew', 'up'), 1, 0, 0.17687017067164812)
(('drew', 'up', 'when'), 1, 0, 0.17687017067164812)
(('up', 'when', 'only'), 1, 0, 0.17687017067164812)
(('when', 'only', 'fourteen'), 1, 0, 0.17687017067164812)
(('only', 'fourteen', '--'), 1, 0, 0.17687017067164812)
(('fourteen', '--', 'I'), 1, 0, 0.17687017067164812)
(('--', 'I', 'remember'), 2, 0, 0.983389342294767)
(('I', 'remember', 'thinking'), 2, 0, 0.983389342294767)
(('remember', 'thinking', 'it'), 1, 0, 0.17687017067164812)
(('thinking', 'it', 'did'), 1, 0, 0.17687017067164812)
(('it', 'did', 'her'), 1, 0, 0.17687017067164812)
(('did', 'her', 'judgment'), 1, 0, 0.17687017067164812)
(('her', 'judgment', 'so'), 1, 0, 0.17687017067164812)
(('judgment', 'so', 'much'), 1, 0, 0.17687017067164812)
(('so', 'much', 'credit'), 1, 0, 0.17687017067164812)
(('much', 'credit', ','), 1, 0, 0.17687017067164812)
(('credit', ',', 'that'), 1, 0, 0.17687017067164812)
((',', 'that', 'I'), 27, 0, 14.823529411764707)
(('that', 'I', 'preserved'), 1, 0, 0.17687017067164812)
(('I', 'preserved', 'it'), 1, 0, 0.17687017067164812)
(('preserved', 'it', 'some'), 1, 0, 0.17687017067164812)
(('it', 'some', 'time'), 1, 0, 0.17687017067164812)
(('some', 'time', ';'), 3, 0, 1.7785588752196837)
(('time', ';', 'and'), 1, 0, 0.17687017067164812)
(('and', 'I', 'dare'), 7, 0, 6.295454545454546)
(('dare', 'say', 'she'), 5, 0, 3.7220338983050847)
(('say', 'she', 'may'), 1, 0, 0.17687017067164812)
(('she', 'may', 'have'), 2, 0, 0.983389342294767)
(('may', 'have', 'made'), 1, 0, 0.17687017067164812)
(('have', 'made', 'out'), 1, 0, 0.17687017067164812)
(('made', 'out', 'a'), 1, 0, 0.17687017067164812)
(('out', 'a', 'very'), 1, 0, 0.17687017067164812)
(('very', 'good', 'list'), 1, 0, 0.17687017067164812)
(('good', 'list', 'now'), 1, 0, 0.17687017067164812)
(('list', 'now', '.'), 1, 0, 0.17687017067164812)
(('', 'But', 'I'), 29, 0, 32.30769230769231)
(('But', 'I', 'have'), 4, 0, 2.9150197628458496)
(('I', 'have', 'done'), 11, 0, 8.671532846715328)
(('have', 'done', 'with'), 4, 0, 2.9150197628458496)
(('done', 'with', 'expecting'), 1, 0, 0.17687017067164812)
(('with', 'expecting', 'any'), 1, 0, 0.17687017067164812)
(('expecting', 'any', 'course'), 1, 0, 0.17687017067164812)
(('any', 'course', 'of'), 1, 0, 0.17687017067164812)
(('course', 'of', 'steady'), 1, 0, 0.17687017067164812)
(('of', 'steady', 'reading'), 1, 0, 0.17687017067164812)
(('steady', 'reading', 'from'), 1, 0, 0.17687017067164812)
(('reading', 'from', 'Emma'), 1, 0, 0.17687017067164812)
(('from', 'Emma', '.'), 1, 0, 0.17687017067164812)
(('', 'She', 'will'), 8, 0, 7.927797833935018)
(('She', 'will', 'never'), 2, 0, 0.983389342294767)
(('will', 'never', 'submit'), 1, 0, 0.17687017067164812)
(('never', 'submit', 'to'), 1, 0, 0.17687017067164812)
(('submit', 'to', 'any'), 1, 0, 0.17687017067164812)
(('any', 'thing', 'requiring'), 1, 0, 0.17687017067164812)
(('thing', 'requiring', 'industry'), 1, 0, 0.17687017067164812)
(('requiring', 'industry', 'and'), 1, 0, 0.17687017067164812)
(('industry', 'and', 'patience'), 1, 0, 0.17687017067164812)
(('and', 'patience', ','), 2, 0, 0.983389342294767)
(('patience', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'a', 'subjection'), 1, 0, 0.17687017067164812)
(('a', 'subjection', 'of'), 1, 0, 0.17687017067164812)
(('subjection', 'of', 'the'), 1, 0, 0.17687017067164812)
(('of', 'the', 'fancy'), 1, 0, 0.17687017067164812)
(('the', 'fancy', 'to'), 1, 0, 0.17687017067164812)
(('fancy', 'to', 'the'), 1, 0, 0.17687017067164812)
(('to', 'the', 'understanding'), 1, 0, 0.17687017067164812)
(('the', 'understanding', '.'), 1, 0, 0.17687017067164812)
(('understanding', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Where', 'Miss'), 1, 0, 0.17687017067164812)
(('Where', 'Miss', 'Taylor'), 1, 0, 0.17687017067164812)
(('Miss', 'Taylor', 'failed'), 1, 0, 0.17687017067164812)
(('Taylor', 'failed', 'to'), 1, 0, 0.17687017067164812)
(('failed', 'to', 'stimulate'), 1, 0, 0.17687017067164812)
(('to', 'stimulate', ','), 1, 0, 0.17687017067164812)
(('stimulate', ',', 'I'), 1, 0, 0.17687017067164812)
((',', 'I', 'may'), 4, 0, 2.9150197628458496)
(('I', 'may', 'safely'), 1, 0, 0.17687017067164812)
(('may', 'safely', 'affirm'), 1, 0, 0.17687017067164812)
(('safely', 'affirm', 'that'), 1, 0, 0.17687017067164812)
(('affirm', 'that', 'Harriet'), 1, 0, 0.17687017067164812)
(('that', 'Harriet', 'Smith'), 3, 0, 1.7785588752196837)
(('Harriet', 'Smith', 'will'), 2, 0, 0.983389342294767)
(('Smith', 'will', 'do'), 1, 0, 0.17687017067164812)
(('will', 'do', 'nothing'), 1, 0, 0.17687017067164812)
(('do', 'nothing', '.--'), 1, 0, 0.17687017067164812)
(('nothing', '.--', 'You'), 1, 0, 0.17687017067164812)
(('.--', 'You', 'never'), 1, 0, 0.17687017067164812)
(('You', 'never', 'could'), 1, 0, 0.17687017067164812)
(('never', 'could', 'persuade'), 1, 0, 0.17687017067164812)
(('could', 'persuade', 'her'), 1, 0, 0.17687017067164812)
(('persuade', 'her', 'to'), 3, 0, 1.7785588752196837)
(('to', 'read', 'half'), 1, 0, 0.17687017067164812)
(('read', 'half', 'so'), 1, 0, 0.17687017067164812)
(('half', 'so', 'much'), 3, 0, 1.7785588752196837)
(('so', 'much', 'as'), 5, 0, 3.7220338983050847)
(('much', 'as', 'you'), 2, 0, 0.983389342294767)
(('as', 'you', 'wished'), 1, 0, 0.17687017067164812)
(('you', 'wished', '.--'), 1, 0, 0.17687017067164812)
(('wished', '.--', 'You'), 1, 0, 0.17687017067164812)
(('.--', 'You', 'know'), 1, 0, 0.17687017067164812)
(('You', 'know', 'you'), 1, 0, 0.17687017067164812)
(('know', 'you', 'could'), 1, 0, 0.17687017067164812)
(('you', 'could', 'not'), 4, 0, 2.9150197628458496)
(('could', 'not', '."'), 1, 0, 0.17687017067164812)
(('not', '."', ''), 5, 0, 3.7220338983050847)
(('"', 'I', 'dare'), 9, 0, 6.5983606557377055)
(('dare', 'say', ',"'), 2, 0, 0.983389342294767)
(('say', ',"', 'replied'), 1, 0, 0.17687017067164812)
((',"', 'replied', 'Mrs'), 5, 0, 3.7220338983050847)
(('replied', 'Mrs', '.'), 6, 0, 4.48816029143898)
(('Weston', ',', 'smiling'), 3, 0, 1.7785588752196837)
((',', 'smiling', ','), 7, 0, 6.295454545454546)
(('smiling', ',', '"'), 6, 0, 4.48816029143898)
((',', '"', 'that'), 19, 0, 20.0)
(('"', 'that', 'I'), 5, 0, 3.7220338983050847)
(('that', 'I', 'thought'), 1, 0, 0.17687017067164812)
(('I', 'thought', 'so'), 1, 0, 0.17687017067164812)
(('thought', 'so', '_then_'), 1, 0, 0.17687017067164812)
(('so', '_then_', ';--'), 1, 0, 0.17687017067164812)
(('_then_', ';--', 'but'), 1, 0, 0.17687017067164812)
((';--', 'but', 'since'), 1, 0, 0.17687017067164812)
(('but', 'since', 'we'), 1, 0, 0.17687017067164812)
(('since', 'we', 'have'), 1, 0, 0.17687017067164812)
(('we', 'have', 'parted'), 1, 0, 0.17687017067164812)
(('have', 'parted', ','), 1, 0, 0.17687017067164812)
(('parted', ',', 'I'), 1, 0, 0.17687017067164812)
((',', 'I', 'can'), 9, 0, 6.5983606557377055)
(('I', 'can', 'never'), 5, 0, 3.7220338983050847)
(('can', 'never', 'remember'), 1, 0, 0.17687017067164812)
(('never', 'remember', 'Emma'), 1, 0, 0.17687017067164812)
(('remember', 'Emma', "'"), 1, 0, 0.17687017067164812)
(("'", 's', 'omitting'), 1, 0, 0.17687017067164812)
(('s', 'omitting', 'to'), 1, 0, 0.17687017067164812)
(('omitting', 'to', 'do'), 1, 0, 0.17687017067164812)
(('to', 'do', 'any'), 3, 0, 1.7785588752196837)
(('do', 'any', 'thing'), 9, 0, 6.5983606557377055)
(('any', 'thing', 'I'), 5, 0, 3.7220338983050847)
(('thing', 'I', 'wished'), 1, 0, 0.17687017067164812)
(('I', 'wished', '."'), 1, 0, 0.17687017067164812)
(('wished', '."', ''), 1, 0, 0.17687017067164812)
(('There', 'is', 'hardly'), 1, 0, 0.17687017067164812)
(('is', 'hardly', 'any'), 2, 0, 0.983389342294767)
(('hardly', 'any', 'desiring'), 1, 0, 0.17687017067164812)
(('any', 'desiring', 'to'), 1, 0, 0.17687017067164812)
(('desiring', 'to', 'refresh'), 1, 0, 0.17687017067164812)
(('to', 'refresh', 'such'), 1, 0, 0.17687017067164812)
(('refresh', 'such', 'a'), 1, 0, 0.17687017067164812)
(('such', 'a', 'memory'), 1, 0, 0.17687017067164812)
(('a', 'memory', 'as'), 1, 0, 0.17687017067164812)
(('memory', 'as', '_that_'), 1, 0, 0.17687017067164812)
(('as', '_that_', ',"--'), 1, 0, 0.17687017067164812)
(('_that_', ',"--', 'said'), 1, 0, 0.17687017067164812)
((',"--', 'said', 'Mr'), 1, 0, 0.17687017067164812)
(('Knightley', ',', 'feelingly'), 1, 0, 0.17687017067164812)
((',', 'feelingly', ';'), 1, 0, 0.17687017067164812)
(('feelingly', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'for'), 7, 0, 6.295454545454546)
(('and', 'for', 'a'), 3, 0, 1.7785588752196837)
(('for', 'a', 'moment'), 9, 0, 6.5983606557377055)
(('a', 'moment', 'or'), 2, 0, 0.983389342294767)
(('moment', 'or', 'two'), 2, 0, 0.983389342294767)
(('or', 'two', 'he'), 1, 0, 0.17687017067164812)
(('two', 'he', 'had'), 1, 0, 0.17687017067164812)
(('he', 'had', 'done'), 7, 0, 6.295454545454546)
(('had', 'done', '.'), 3, 0, 1.7785588752196837)
(('done', '.', ''), 15, 0, 14.666666666666666)
(('"', 'But', 'I'), 7, 0, 6.295454545454546)
(('But', 'I', ',"'), 1, 0, 0.17687017067164812)
(('I', ',"', 'he'), 1, 0, 0.17687017067164812)
((',"', 'he', 'soon'), 1, 0, 0.17687017067164812)
(('he', 'soon', 'added'), 1, 0, 0.17687017067164812)
(('soon', 'added', ','), 1, 0, 0.17687017067164812)
(('added', ',', '"'), 7, 0, 6.295454545454546)
((',', '"', 'who'), 1, 0, 0.17687017067164812)
(('"', 'who', 'have'), 1, 0, 0.17687017067164812)
(('who', 'have', 'had'), 2, 0, 0.983389342294767)
(('have', 'had', 'no'), 2, 0, 0.983389342294767)
(('had', 'no', 'such'), 1, 0, 0.17687017067164812)
(('no', 'such', 'charm'), 1, 0, 0.17687017067164812)
(('such', 'charm', 'thrown'), 1, 0, 0.17687017067164812)
(('charm', 'thrown', 'over'), 1, 0, 0.17687017067164812)
(('thrown', 'over', 'my'), 1, 0, 0.17687017067164812)
(('over', 'my', 'senses'), 1, 0, 0.17687017067164812)
(('my', 'senses', ','), 1, 0, 0.17687017067164812)
(('senses', ',', 'must'), 1, 0, 0.17687017067164812)
((',', 'must', 'still'), 1, 0, 0.17687017067164812)
(('must', 'still', 'see'), 1, 0, 0.17687017067164812)
(('still', 'see', ','), 1, 0, 0.17687017067164812)
(('see', ',', 'hear'), 1, 0, 0.17687017067164812)
((',', 'hear', ','), 1, 0, 0.17687017067164812)
(('hear', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'remember'), 2, 0, 0.983389342294767)
(('and', 'remember', '.'), 1, 0, 0.17687017067164812)
(('remember', '.', ''), 1, 0, 0.17687017067164812)
(('', 'Emma', 'is'), 1, 0, 0.17687017067164812)
(('Emma', 'is', 'spoiled'), 1, 0, 0.17687017067164812)
(('is', 'spoiled', 'by'), 1, 0, 0.17687017067164812)
(('spoiled', 'by', 'being'), 1, 0, 0.17687017067164812)
(('by', 'being', 'the'), 1, 0, 0.17687017067164812)
(('being', 'the', 'cleverest'), 1, 0, 0.17687017067164812)
(('the', 'cleverest', 'of'), 1, 0, 0.17687017067164812)
(('cleverest', 'of', 'her'), 1, 0, 0.17687017067164812)
(('of', 'her', 'family'), 1, 0, 0.17687017067164812)
(('her', 'family', '.'), 2, 0, 0.983389342294767)
(('family', '.', ''), 4, 0, 2.9150197628458496)
(('', 'At', 'ten'), 1, 0, 0.17687017067164812)
(('At', 'ten', 'years'), 1, 0, 0.17687017067164812)
(('ten', 'years', 'old'), 1, 0, 0.17687017067164812)
(('years', 'old', ','), 4, 0, 2.9150197628458496)
(('old', ',', 'she'), 1, 0, 0.17687017067164812)
(('she', 'had', 'the'), 6, 0, 4.48816029143898)
(('had', 'the', 'misfortune'), 2, 0, 0.983389342294767)
(('the', 'misfortune', 'of'), 1, 0, 0.17687017067164812)
(('misfortune', 'of', 'being'), 1, 0, 0.17687017067164812)
(('of', 'being', 'able'), 4, 0, 2.9150197628458496)
(('being', 'able', 'to'), 9, 0, 6.5983606557377055)
(('able', 'to', 'answer'), 1, 0, 0.17687017067164812)
(('to', 'answer', 'questions'), 1, 0, 0.17687017067164812)
(('answer', 'questions', 'which'), 1, 0, 0.17687017067164812)
(('questions', 'which', 'puzzled'), 1, 0, 0.17687017067164812)
(('which', 'puzzled', 'her'), 1, 0, 0.17687017067164812)
(('puzzled', 'her', 'sister'), 1, 0, 0.17687017067164812)
(('her', 'sister', 'at'), 1, 0, 0.17687017067164812)
(('sister', 'at', 'seventeen'), 1, 0, 0.17687017067164812)
(('at', 'seventeen', '.'), 1, 0, 0.17687017067164812)
(('seventeen', '.', ''), 1, 0, 0.17687017067164812)
(('She', 'was', 'always'), 2, 0, 0.983389342294767)
(('was', 'always', 'quick'), 1, 0, 0.17687017067164812)
(('always', 'quick', 'and'), 1, 0, 0.17687017067164812)
(('quick', 'and', 'assured'), 1, 0, 0.17687017067164812)
(('and', 'assured', ':'), 1, 0, 0.17687017067164812)
(('assured', ':', 'Isabella'), 1, 0, 0.17687017067164812)
((':', 'Isabella', 'slow'), 1, 0, 0.17687017067164812)
(('Isabella', 'slow', 'and'), 1, 0, 0.17687017067164812)
(('slow', 'and', 'diffident'), 1, 0, 0.17687017067164812)
(('and', 'diffident', '.'), 1, 0, 0.17687017067164812)
(('diffident', '.', ''), 2, 0, 0.983389342294767)
(('', 'And', 'ever'), 1, 0, 0.17687017067164812)
(('And', 'ever', 'since'), 1, 0, 0.17687017067164812)
(('was', 'twelve', ','), 1, 0, 0.17687017067164812)
(('twelve', ',', 'Emma'), 1, 0, 0.17687017067164812)
((',', 'Emma', 'has'), 1, 0, 0.17687017067164812)
(('has', 'been', 'mistress'), 1, 0, 0.17687017067164812)
(('of', 'the', 'house'), 9, 0, 6.5983606557377055)
(('the', 'house', 'and'), 1, 0, 0.17687017067164812)
(('house', 'and', 'of'), 1, 0, 0.17687017067164812)
(('and', 'of', 'you'), 1, 0, 0.17687017067164812)
(('of', 'you', 'all'), 3, 0, 1.7785588752196837)
(('you', 'all', '.'), 2, 0, 0.983389342294767)
(('', 'In', 'her'), 2, 0, 0.983389342294767)
(('In', 'her', 'mother'), 1, 0, 0.17687017067164812)
(('her', 'mother', 'she'), 1, 0, 0.17687017067164812)
(('mother', 'she', 'lost'), 1, 0, 0.17687017067164812)
(('she', 'lost', 'the'), 1, 0, 0.17687017067164812)
(('lost', 'the', 'only'), 1, 0, 0.17687017067164812)
(('the', 'only', 'person'), 1, 0, 0.17687017067164812)
(('only', 'person', 'able'), 1, 0, 0.17687017067164812)
(('person', 'able', 'to'), 1, 0, 0.17687017067164812)
(('able', 'to', 'cope'), 1, 0, 0.17687017067164812)
(('to', 'cope', 'with'), 1, 0, 0.17687017067164812)
(('cope', 'with', 'her'), 1, 0, 0.17687017067164812)
(('', 'She', 'inherits'), 1, 0, 0.17687017067164812)
(('She', 'inherits', 'her'), 1, 0, 0.17687017067164812)
(('inherits', 'her', 'mother'), 1, 0, 0.17687017067164812)
(('her', 'mother', "'"), 4, 0, 2.9150197628458496)
(("'", 's', 'talents'), 2, 0, 0.983389342294767)
(('s', 'talents', ','), 1, 0, 0.17687017067164812)
(('talents', ',', 'and'), 2, 0, 0.983389342294767)
(('and', 'must', 'have'), 1, 0, 0.17687017067164812)
(('have', 'been', 'under'), 3, 0, 1.7785588752196837)
(('been', 'under', 'subjection'), 1, 0, 0.17687017067164812)
(('under', 'subjection', 'to'), 1, 0, 0.17687017067164812)
(('subjection', 'to', 'her'), 1, 0, 0.17687017067164812)
(('to', 'her', '."'), 3, 0, 1.7785588752196837)
(('"', 'I', 'should'), 6, 0, 4.48816029143898)
(('I', 'should', 'have'), 16, 0, 14.681818181818182)
(('should', 'have', 'been'), 9, 0, 6.5983606557377055)
(('have', 'been', 'sorry'), 3, 0, 1.7785588752196837)
(('been', 'sorry', ','), 1, 0, 0.17687017067164812)
(('sorry', ',', 'Mr'), 1, 0, 0.17687017067164812)
(('to', 'be', 'dependent'), 1, 0, 0.17687017067164812)
(('be', 'dependent', 'on'), 1, 0, 0.17687017067164812)
(('dependent', 'on', '_your_'), 1, 0, 0.17687017067164812)
(('on', '_your_', 'recommendation'), 1, 0, 0.17687017067164812)
(('_your_', 'recommendation', ','), 1, 0, 0.17687017067164812)
(('recommendation', ',', 'had'), 1, 0, 0.17687017067164812)
((',', 'had', 'I'), 1, 0, 0.17687017067164812)
(('had', 'I', 'quitted'), 1, 0, 0.17687017067164812)
(('I', 'quitted', 'Mr'), 1, 0, 0.17687017067164812)
(('quitted', 'Mr', '.'), 1, 0, 0.17687017067164812)
(('s', 'family', 'and'), 1, 0, 0.17687017067164812)
(('family', 'and', 'wanted'), 1, 0, 0.17687017067164812)
(('and', 'wanted', 'another'), 1, 0, 0.17687017067164812)
(('wanted', 'another', 'situation'), 1, 0, 0.17687017067164812)
(('another', 'situation', ';'), 1, 0, 0.17687017067164812)
(('situation', ';', 'I'), 1, 0, 0.17687017067164812)
((';', 'I', 'do'), 4, 0, 2.9150197628458496)
(('not', 'think', 'you'), 3, 0, 1.7785588752196837)
(('think', 'you', 'would'), 1, 0, 0.17687017067164812)
(('you', 'would', 'have'), 7, 0, 6.295454545454546)
(('would', 'have', 'spoken'), 2, 0, 0.983389342294767)
(('have', 'spoken', 'a'), 1, 0, 0.17687017067164812)
(('spoken', 'a', 'good'), 1, 0, 0.17687017067164812)
(('a', 'good', 'word'), 1, 0, 0.17687017067164812)
(('good', 'word', 'for'), 1, 0, 0.17687017067164812)
(('word', 'for', 'me'), 1, 0, 0.17687017067164812)
(('for', 'me', 'to'), 10, 0, 9.36024844720497)
(('me', 'to', 'any'), 1, 0, 0.17687017067164812)
(('to', 'any', 'body'), 9, 0, 6.5983606557377055)
(('sure', 'you', 'always'), 1, 0, 0.17687017067164812)
(('you', 'always', 'thought'), 1, 0, 0.17687017067164812)
(('always', 'thought', 'me'), 1, 0, 0.17687017067164812)
(('thought', 'me', 'unfit'), 1, 0, 0.17687017067164812)
(('me', 'unfit', 'for'), 1, 0, 0.17687017067164812)
(('unfit', 'for', 'the'), 1, 0, 0.17687017067164812)
(('for', 'the', 'office'), 1, 0, 0.17687017067164812)
(('the', 'office', 'I'), 1, 0, 0.17687017067164812)
(('office', 'I', 'held'), 1, 0, 0.17687017067164812)
(('I', 'held', '."'), 1, 0, 0.17687017067164812)
(('held', '."', ''), 1, 0, 0.17687017067164812)
(('"', 'Yes', ',"'), 13, 0, 10.137931034482758)
(('Yes', ',"', 'said'), 9, 0, 6.5983606557377055)
((',"', 'said', 'he'), 52, 0, 17.666666666666664)
(('said', 'he', ','), 40, 0, 32.800000000000004)
(('he', ',', 'smiling'), 4, 0, 2.9150197628458496)
((',', 'smiling', '.'), 1, 0, 0.17687017067164812)
(('smiling', '.', ''), 2, 0, 0.983389342294767)
(('"', 'You', 'are'), 27, 0, 14.823529411764707)
(('You', 'are', 'better'), 1, 0, 0.17687017067164812)
(('are', 'better', 'placed'), 1, 0, 0.17687017067164812)
(('better', 'placed', '_here_'), 1, 0, 0.17687017067164812)
(('placed', '_here_', ';'), 1, 0, 0.17687017067164812)
(('_here_', ';', 'very'), 1, 0, 0.17687017067164812)
((';', 'very', 'fit'), 1, 0, 0.17687017067164812)
(('very', 'fit', 'for'), 1, 0, 0.17687017067164812)
(('fit', 'for', 'a'), 1, 0, 0.17687017067164812)
(('wife', ',', 'but'), 1, 0, 0.17687017067164812)
(('at', 'all', 'for'), 2, 0, 0.983389342294767)
(('all', 'for', 'a'), 1, 0, 0.17687017067164812)
(('for', 'a', 'governess'), 1, 0, 0.17687017067164812)
(('a', 'governess', '.'), 1, 0, 0.17687017067164812)
(('governess', '.', ''), 1, 0, 0.17687017067164812)
(('', 'But', 'you'), 12, 0, 11.424242424242424)
(('But', 'you', 'were'), 2, 0, 0.983389342294767)
(('you', 'were', 'preparing'), 1, 0, 0.17687017067164812)
(('were', 'preparing', 'yourself'), 1, 0, 0.17687017067164812)
(('preparing', 'yourself', 'to'), 1, 0, 0.17687017067164812)
(('yourself', 'to', 'be'), 2, 0, 0.983389342294767)
(('to', 'be', 'an'), 6, 0, 4.48816029143898)
(('an', 'excellent', 'wife'), 1, 0, 0.17687017067164812)
(('excellent', 'wife', 'all'), 1, 0, 0.17687017067164812)
(('wife', 'all', 'the'), 1, 0, 0.17687017067164812)
(('all', 'the', 'time'), 3, 0, 1.7785588752196837)
(('the', 'time', 'you'), 1, 0, 0.17687017067164812)
(('time', 'you', 'were'), 1, 0, 0.17687017067164812)
(('you', 'were', 'at'), 2, 0, 0.983389342294767)
(('were', 'at', 'Hartfield'), 4, 0, 2.9150197628458496)
(('might', 'not', 'give'), 1, 0, 0.17687017067164812)
(('not', 'give', 'Emma'), 1, 0, 0.17687017067164812)
(('give', 'Emma', 'such'), 1, 0, 0.17687017067164812)
(('Emma', 'such', 'a'), 1, 0, 0.17687017067164812)
(('such', 'a', 'complete'), 1, 0, 0.17687017067164812)
(('a', 'complete', 'education'), 1, 0, 0.17687017067164812)
(('complete', 'education', 'as'), 1, 0, 0.17687017067164812)
(('education', 'as', 'your'), 1, 0, 0.17687017067164812)
(('as', 'your', 'powers'), 1, 0, 0.17687017067164812)
(('your', 'powers', 'would'), 1, 0, 0.17687017067164812)
(('powers', 'would', 'seem'), 1, 0, 0.17687017067164812)
(('would', 'seem', 'to'), 1, 0, 0.17687017067164812)
(('seem', 'to', 'promise'), 1, 0, 0.17687017067164812)
(('to', 'promise', ';'), 1, 0, 0.17687017067164812)
(('promise', ';', 'but'), 1, 0, 0.17687017067164812)
(('but', 'you', 'were'), 2, 0, 0.983389342294767)
(('you', 'were', 'receiving'), 1, 0, 0.17687017067164812)
(('were', 'receiving', 'a'), 1, 0, 0.17687017067164812)
(('receiving', 'a', 'very'), 2, 0, 0.983389342294767)
(('very', 'good', 'education'), 1, 0, 0.17687017067164812)
(('good', 'education', 'from'), 1, 0, 0.17687017067164812)
(('education', 'from', '_her_'), 1, 0, 0.17687017067164812)
(('from', '_her_', ','), 1, 0, 0.17687017067164812)
(('_her_', ',', 'on'), 1, 0, 0.17687017067164812)
(('on', 'the', 'very'), 4, 0, 2.9150197628458496)
(('the', 'very', 'material'), 1, 0, 0.17687017067164812)
(('very', 'material', 'matrimonial'), 1, 0, 0.17687017067164812)
(('material', 'matrimonial', 'point'), 1, 0, 0.17687017067164812)
(('matrimonial', 'point', 'of'), 1, 0, 0.17687017067164812)
(('point', 'of', 'submitting'), 1, 0, 0.17687017067164812)
(('of', 'submitting', 'your'), 1, 0, 0.17687017067164812)
(('submitting', 'your', 'own'), 1, 0, 0.17687017067164812)
(('your', 'own', 'will'), 1, 0, 0.17687017067164812)
(('own', 'will', ','), 1, 0, 0.17687017067164812)
(('will', ',', 'and'), 1, 0, 0.17687017067164812)
((',', 'and', 'doing'), 1, 0, 0.17687017067164812)
(('and', 'doing', 'as'), 1, 0, 0.17687017067164812)
(('doing', 'as', 'you'), 1, 0, 0.17687017067164812)
(('as', 'you', 'were'), 1, 0, 0.17687017067164812)
(('you', 'were', 'bid'), 1, 0, 0.17687017067164812)
(('were', 'bid', ';'), 1, 0, 0.17687017067164812)
(('bid', ';', 'and'), 1, 0, 0.17687017067164812)
((';', 'and', 'if'), 24, 0, 39.285714285714285)
(('and', 'if', 'Weston'), 1, 0, 0.17687017067164812)
(('if', 'Weston', 'had'), 1, 0, 0.17687017067164812)
(('Weston', 'had', 'asked'), 1, 0, 0.17687017067164812)
(('had', 'asked', 'me'), 1, 0, 0.17687017067164812)
(('asked', 'me', 'to'), 1, 0, 0.17687017067164812)Traceback (most recent call last):
  File "<pyshell#225>", line 2, in <module>
    print(line)
KeyboardInterrupt
>>> emmaGT = [(gram, TG_dist[gram], TG_counts_dist[TG_dist[gram]], TG_dist_GT[gram],)
	  for gram in TG_dist ]
	  
>>> for gram, c, nc, cGT in emmaGT[:10]:
	  print(gram, c, nc, cGT, sep="\t")

	  
('', '', '[')	2	10415	0.983389342294767
('', '[', 'Emma')	1	117770	0.17687017067164812
('[', 'Emma', 'by')	1	117770	0.17687017067164812
('Emma', 'by', 'Jane')	1	117770	0.17687017067164812
('by', 'Jane', 'Austen')	1	117770	0.17687017067164812
('Jane', 'Austen', '1816')	1	117770	0.17687017067164812
('Austen', '1816', ']')	1	117770	0.17687017067164812
('1816', ']', '')	1	117770	0.17687017067164812
(']', '', '')	1	117770	0.17687017067164812
('', '', 'VOLUME')	3	3414	1.7785588752196837
>>> for gram, c, nc, cGT in emmaGT[:10]:
	  print("\tgram, c, nc, cGT, sep="\t")
		
SyntaxError: unexpected character after line continuation character
>>> for gram, c, nc, cGT in emmaGT[:10]:
	  print("", gram, c, nc, cGT, sep="\t")

		
	('', '', '[')	2	10415	0.983389342294767
	('', '[', 'Emma')	1	117770	0.17687017067164812
	('[', 'Emma', 'by')	1	117770	0.17687017067164812
	('Emma', 'by', 'Jane')	1	117770	0.17687017067164812
	('by', 'Jane', 'Austen')	1	117770	0.17687017067164812
	('Jane', 'Austen', '1816')	1	117770	0.17687017067164812
	('Austen', '1816', ']')	1	117770	0.17687017067164812
	('1816', ']', '')	1	117770	0.17687017067164812
	(']', '', '')	1	117770	0.17687017067164812
	('', '', 'VOLUME')	3	3414	1.7785588752196837
>>> for gram, c, nc, cGT in emmaGT[:10]:
	  print(gram, "", c, nc, cGT, sep="\t")

		
('', '', '[')		2	10415	0.983389342294767
('', '[', 'Emma')		1	117770	0.17687017067164812
('[', 'Emma', 'by')		1	117770	0.17687017067164812
('Emma', 'by', 'Jane')		1	117770	0.17687017067164812
('by', 'Jane', 'Austen')		1	117770	0.17687017067164812
('Jane', 'Austen', '1816')		1	117770	0.17687017067164812
('Austen', '1816', ']')		1	117770	0.17687017067164812
('1816', ']', '')		1	117770	0.17687017067164812
(']', '', '')		1	117770	0.17687017067164812
('', '', 'VOLUME')		3	3414	1.7785588752196837
>>> c_s = [ c for c in TG_counts_dist  ]
		
>>> c_s[:10]
		
[2, 1, 3, 4, 55, 212, 43, 7, 5, 49]
>>> max(c_s)
		
5143
>>> c_cs_sorted = [ (c, TG_counts_dist[c], TG_counts_dist_GT[c], )
		    for c in range(6000) if c in c_s ]
		
>>> c_cs_sorted[:10]
		
[(1, 117770, 0.17687017067164812), (2, 10415, 0.983389342294767), (3, 3414, 1.7785588752196837), (4, 1518, 2.9150197628458496), (5, 885, 3.7220338983050847), (6, 549, 4.48816029143898), (7, 352, 6.295454545454546), (8, 277, 7.927797833935018), (9, 244, 6.5983606557377055), (10, 161, 9.36024844720497)]
>>> for c, Nc, cs in c_cs_sorted:
		plot(c, c, 'r')
		plot(c, c_s, 'o')

		
[<matplotlib.lines.Line2D object at 0x1B7C2C10>]
Traceback (most recent call last):
  File "<pyshell#243>", line 3, in <module>
    plot(c, c_s, 'o')
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\pyplot.py", line 3358, in plot
    ret = ax.plot(*args, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\__init__.py", line 1855, in inner
    return func(ax, *args, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_axes.py", line 1527, in plot
    for line in self._get_lines(*args, **kwargs):
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 406, in _grab_next_args
    for seg in self._plot_args(this, kwargs):
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 383, in _plot_args
    x, y = self._xy_from_xy(x, y)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 242, in _xy_from_xy
    "have shapes {} and {}".format(x.shape, y.shape))
ValueError: x and y must have same first dimension, but have shapes (1,) and (119,)
>>> for c, Nc, cs in c_cs_sorted:
		plot(c, c, 'r')
		plot(c, c_s, 'b')

	  
[<matplotlib.lines.Line2D object at 0x1B7B6330>]
Traceback (most recent call last):
  File "<pyshell#245>", line 3, in <module>
    plot(c, c_s, 'b')
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\pyplot.py", line 3358, in plot
    ret = ax.plot(*args, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\__init__.py", line 1855, in inner
    return func(ax, *args, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_axes.py", line 1527, in plot
    for line in self._get_lines(*args, **kwargs):
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 406, in _grab_next_args
    for seg in self._plot_args(this, kwargs):
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 383, in _plot_args
    x, y = self._xy_from_xy(x, y)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 242, in _xy_from_xy
    "have shapes {} and {}".format(x.shape, y.shape))
ValueError: x and y must have same first dimension, but have shapes (1,) and (119,)
>>> for c, Nc, cs in c_cs_sorted:
		plot(c, c, 'r')
		plot(c, cs, 'b')

	  
[<matplotlib.lines.Line2D object at 0x1B7B65B0>]
[<matplotlib.lines.Line2D object at 0x1B7B64D0>]
[<matplotlib.lines.Line2D object at 0x1B7B6670>]
[<matplotlib.lines.Line2D object at 0x1B7B6890>]
[<matplotlib.lines.Line2D object at 0x1B7B6D30>]
[<matplotlib.lines.Line2D object at 0x1B7B6D70>]
[<matplotlib.lines.Line2D object at 0x1B7C3030>]
[<matplotlib.lines.Line2D object at 0x1B7C2B50>]
[<matplotlib.lines.Line2D object at 0x1B7C3310>]
[<matplotlib.lines.Line2D object at 0x1B7C34F0>]
[<matplotlib.lines.Line2D object at 0x1B7C3A10>]
[<matplotlib.lines.Line2D object at 0x1B7C3FB0>]
[<matplotlib.lines.Line2D object at 0x1B7C9110>]
[<matplotlib.lines.Line2D object at 0x1B7C91B0>]
[<matplotlib.lines.Line2D object at 0x1B7C9450>]
[<matplotlib.lines.Line2D object at 0x1B7C9750>]
[<matplotlib.lines.Line2D object at 0x1B7C9A30>]
[<matplotlib.lines.Line2D object at 0x1B7C9910>]
[<matplotlib.lines.Line2D object at 0x1B7BE190>]
[<matplotlib.lines.Line2D object at 0x1B7BE250>]
[<matplotlib.lines.Line2D object at 0x1B7BE530>]
[<matplotlib.lines.Line2D object at 0x1B7BE810>]
[<matplotlib.lines.Line2D object at 0x1B7BEAD0>]
[<matplotlib.lines.Line2D object at 0x1B7BEDF0>]
[<matplotlib.lines.Line2D object at 0x1B7BA1B0>]
[<matplotlib.lines.Line2D object at 0x1B7BA250>]
[<matplotlib.lines.Line2D object at 0x1B7BA4F0>]
[<matplotlib.lines.Line2D object at 0x1B7BA790>]
[<matplotlib.lines.Line2D object at 0x1B7BAA90>]
[<matplotlib.lines.Line2D object at 0x1B7BAD10>]
[<matplotlib.lines.Line2D object at 0x1B7C1190>]
[<matplotlib.lines.Line2D object at 0x1B7C12B0>]
[<matplotlib.lines.Line2D object at 0x1B7C1590>]
[<matplotlib.lines.Line2D object at 0x1B7C1830>]
[<matplotlib.lines.Line2D object at 0x1B7C1B10>]
[<matplotlib.lines.Line2D object at 0x1B7C1DB0>]
[<matplotlib.lines.Line2D object at 0x1B7CD190>]
[<matplotlib.lines.Line2D object at 0x1B7CD1B0>]
[<matplotlib.lines.Line2D object at 0x1B7CD530>]
[<matplotlib.lines.Line2D object at 0x1B7CD7F0>]
[<matplotlib.lines.Line2D object at 0x1B7CDAB0>]
[<matplotlib.lines.Line2D object at 0x1B7CDD50>]
[<matplotlib.lines.Line2D object at 0x1B7C61F0>]
[<matplotlib.lines.Line2D object at 0x1B7C6290>]
[<matplotlib.lines.Line2D object at 0x1B7C6570>]
[<matplotlib.lines.Line2D object at 0x1B7C6810>]
[<matplotlib.lines.Line2D object at 0x1B7C6AF0>]
[<matplotlib.lines.Line2D object at 0x1B7C6D70>]
[<matplotlib.lines.Line2D object at 0x1B7CB030>]
[<matplotlib.lines.Line2D object at 0x1B7CB2B0>]
[<matplotlib.lines.Line2D object at 0x1B7CB570>]
[<matplotlib.lines.Line2D object at 0x1B7CB7F0>]
[<matplotlib.lines.Line2D object at 0x1B7CBAD0>]
[<matplotlib.lines.Line2D object at 0x1B7CBDB0>]
[<matplotlib.lines.Line2D object at 0x1B7C4F70>]
[<matplotlib.lines.Line2D object at 0x1B7C4290>]
[<matplotlib.lines.Line2D object at 0x1B7C4590>]
[<matplotlib.lines.Line2D object at 0x1B7C48B0>]
[<matplotlib.lines.Line2D object at 0x1B7C4ED0>]
[<matplotlib.lines.Line2D object at 0x1B7CA070>]
[<matplotlib.lines.Line2D object at 0x1B7CA110>]
[<matplotlib.lines.Line2D object at 0x1B7CA370>]
[<matplotlib.lines.Line2D object at 0x1B7CA770>]
[<matplotlib.lines.Line2D object at 0x1B7CA9B0>]
[<matplotlib.lines.Line2D object at 0x1B7CAF90>]
[<matplotlib.lines.Line2D object at 0x1B7CF130>]
[<matplotlib.lines.Line2D object at 0x1B7CF190>]
[<matplotlib.lines.Line2D object at 0x1B7CF430>]
[<matplotlib.lines.Line2D object at 0x1B7CF6F0>]
[<matplotlib.lines.Line2D object at 0x1B7CF990>]
[<matplotlib.lines.Line2D object at 0x1B7CFF90>]
[<matplotlib.lines.Line2D object at 0x1B7D4090>]
[<matplotlib.lines.Line2D object at 0x1B7D4150>]
[<matplotlib.lines.Line2D object at 0x1B7D4430>]
[<matplotlib.lines.Line2D object at 0x1B7D46B0>]
[<matplotlib.lines.Line2D object at 0x1B7D4970>]
[<matplotlib.lines.Line2D object at 0x1B7D4FB0>]
[<matplotlib.lines.Line2D object at 0x1B7B8070>]
[<matplotlib.lines.Line2D object at 0x1B7B8090>]
[<matplotlib.lines.Line2D object at 0x1B7B83F0>]
[<matplotlib.lines.Line2D object at 0x1B7B8710>]
[<matplotlib.lines.Line2D object at 0x1B7B89B0>]
[<matplotlib.lines.Line2D object at 0x1B7B8430>]
[<matplotlib.lines.Line2D object at 0x1B7D0110>]
[<matplotlib.lines.Line2D object at 0x1B7D01F0>]
[<matplotlib.lines.Line2D object at 0x1B7D0470>]
[<matplotlib.lines.Line2D object at 0x1B7D0730>]
[<matplotlib.lines.Line2D object at 0x1B7D0950>]
[<matplotlib.lines.Line2D object at 0x1B7D0D50>]
[<matplotlib.lines.Line2D object at 0x1B7B4F70>]
[<matplotlib.lines.Line2D object at 0x1B7B41F0>]
[<matplotlib.lines.Line2D object at 0x1B7B44B0>]
[<matplotlib.lines.Line2D object at 0x1B7B47D0>]
[<matplotlib.lines.Line2D object at 0x1B7B4A70>]
[<matplotlib.lines.Line2D object at 0x1B7B4D70>]
[<matplotlib.lines.Line2D object at 0x1B7D8030>]
[<matplotlib.lines.Line2D object at 0x1B7D82D0>]
[<matplotlib.lines.Line2D object at 0x1B7D85D0>]
[<matplotlib.lines.Line2D object at 0x1B7D8850>]
[<matplotlib.lines.Line2D object at 0x1B7D8BB0>]
[<matplotlib.lines.Line2D object at 0x1B7D83D0>]
[<matplotlib.lines.Line2D object at 0x1B7D2070>]
[<matplotlib.lines.Line2D object at 0x1B7D21D0>]
[<matplotlib.lines.Line2D object at 0x1B7D2470>]
[<matplotlib.lines.Line2D object at 0x1B7D2750>]
[<matplotlib.lines.Line2D object at 0x1B7D2A30>]
[<matplotlib.lines.Line2D object at 0x1B7D2F70>]
[<matplotlib.lines.Line2D object at 0x1B7D2FB0>]
[<matplotlib.lines.Line2D object at 0x1B7DB2D0>]
[<matplotlib.lines.Line2D object at 0x1B7DB450>]
[<matplotlib.lines.Line2D object at 0x1B7DB6B0>]
[<matplotlib.lines.Line2D object at 0x1B7DB890>]
[<matplotlib.lines.Line2D object at 0x1B7DB870>]
[<matplotlib.lines.Line2D object at 0x1B7DBFB0>]
[<matplotlib.lines.Line2D object at 0x1B7DA1D0>]
[<matplotlib.lines.Line2D object at 0x1B7DA370>]
[<matplotlib.lines.Line2D object at 0x1B7DA650>]
[<matplotlib.lines.Line2D object at 0x1B7DA8F0>]
[<matplotlib.lines.Line2D object at 0x1B7DAF50>]
[<matplotlib.lines.Line2D object at 0x1B7DAED0>]
[<matplotlib.lines.Line2D object at 0x1B7E1170>]
[<matplotlib.lines.Line2D object at 0x1B7E1350>]
[<matplotlib.lines.Line2D object at 0x1B7E14D0>]
[<matplotlib.lines.Line2D object at 0x1B7E1870>]
[<matplotlib.lines.Line2D object at 0x1B7E1AF0>]
[<matplotlib.lines.Line2D object at 0x1B7E1270>]
[<matplotlib.lines.Line2D object at 0x1B7D1070>]
[<matplotlib.lines.Line2D object at 0x1B7D1230>]
[<matplotlib.lines.Line2D object at 0x1B7D1510>]
[<matplotlib.lines.Line2D object at 0x1B7D17F0>]
[<matplotlib.lines.Line2D object at 0x1B7D1A30>]
[<matplotlib.lines.Line2D object at 0x1B7D1E50>]
[<matplotlib.lines.Line2D object at 0x1B7D1D90>]
[<matplotlib.lines.Line2D object at 0x1B7D6270>]
[<matplotlib.lines.Line2D object at 0x1B7D6410>]
[<matplotlib.lines.Line2D object at 0x1B7D6670>]
[<matplotlib.lines.Line2D object at 0x1B7D6970>]
[<matplotlib.lines.Line2D object at 0x1B7D6FB0>]
[<matplotlib.lines.Line2D object at 0x1B7D6F30>]
[<matplotlib.lines.Line2D object at 0x1B7E01B0>]
[<matplotlib.lines.Line2D object at 0x1B7E0330>]
[<matplotlib.lines.Line2D object at 0x1B7E05F0>]
[<matplotlib.lines.Line2D object at 0x1B7E0910>]
[<matplotlib.lines.Line2D object at 0x1B7E0F70>]
[<matplotlib.lines.Line2D object at 0x1B7E0ED0>]
[<matplotlib.lines.Line2D object at 0x1B7D7110>]
[<matplotlib.lines.Line2D object at 0x1B7D7290>]
[<matplotlib.lines.Line2D object at 0x1B7D75D0>]
[<matplotlib.lines.Line2D object at 0x1B7D7870>]
[<matplotlib.lines.Line2D object at 0x1B7D7AF0>]
[<matplotlib.lines.Line2D object at 0x1B7D7FB0>]
[<matplotlib.lines.Line2D object at 0x1B7E80F0>]
[<matplotlib.lines.Line2D object at 0x1B7E82D0>]
[<matplotlib.lines.Line2D object at 0x1B7E8530>]
[<matplotlib.lines.Line2D object at 0x1B7E87B0>]
[<matplotlib.lines.Line2D object at 0x1B7E89F0>]
[<matplotlib.lines.Line2D object at 0x1B7E8FF0>]
[<matplotlib.lines.Line2D object at 0x1B7E8090>]
[<matplotlib.lines.Line2D object at 0x1B7E2270>]
[<matplotlib.lines.Line2D object at 0x1B7E2370>]
[<matplotlib.lines.Line2D object at 0x1B7E26F0>]
[<matplotlib.lines.Line2D object at 0x1B7E2950>]
[<matplotlib.lines.Line2D object at 0x1B7E2970>]
[<matplotlib.lines.Line2D object at 0x1B7E2FB0>]
[<matplotlib.lines.Line2D object at 0x1B7EA1D0>]
[<matplotlib.lines.Line2D object at 0x1B7EA350>]
[<matplotlib.lines.Line2D object at 0x1B7EA5F0>]
[<matplotlib.lines.Line2D object at 0x1B7EA850>]
[<matplotlib.lines.Line2D object at 0x1B7EAEF0>]
[<matplotlib.lines.Line2D object at 0x1B7EAE70>]
[<matplotlib.lines.Line2D object at 0x1B7D90B0>]
[<matplotlib.lines.Line2D object at 0x1B7D9250>]
[<matplotlib.lines.Line2D object at 0x1B7D94B0>]
[<matplotlib.lines.Line2D object at 0x1B7D97D0>]
[<matplotlib.lines.Line2D object at 0x1B7D9A30>]
[<matplotlib.lines.Line2D object at 0x1B7D9FB0>]
[<matplotlib.lines.Line2D object at 0x1B7D99D0>]
[<matplotlib.lines.Line2D object at 0x1B7D52D0>]
[<matplotlib.lines.Line2D object at 0x1B7D5470>]
[<matplotlib.lines.Line2D object at 0x1B7D56F0>]
[<matplotlib.lines.Line2D object at 0x1B7D59B0>]
[<matplotlib.lines.Line2D object at 0x1B7D5FF0>]
[<matplotlib.lines.Line2D object at 0x1B7D5F70>]
[<matplotlib.lines.Line2D object at 0x1B7EC230>]
[<matplotlib.lines.Line2D object at 0x1B7EC3D0>]
[<matplotlib.lines.Line2D object at 0x1B7EC670>]
[<matplotlib.lines.Line2D object at 0x1B7EC970>]
[<matplotlib.lines.Line2D object at 0x1B7ECFD0>]
[<matplotlib.lines.Line2D object at 0x1B7ECF50>]
[<matplotlib.lines.Line2D object at 0x1B7E5210>]
[<matplotlib.lines.Line2D object at 0x1B7E5390>]
[<matplotlib.lines.Line2D object at 0x1B7E5670>]
[<matplotlib.lines.Line2D object at 0x1B7E58D0>]
[<matplotlib.lines.Line2D object at 0x1B7E5F10>]
[<matplotlib.lines.Line2D object at 0x1B7E5EB0>]
[<matplotlib.lines.Line2D object at 0x1B7F1150>]
[<matplotlib.lines.Line2D object at 0x1B7F13B0>]
[<matplotlib.lines.Line2D object at 0x1B7F1630>]
[<matplotlib.lines.Line2D object at 0x1B7F18B0>]
[<matplotlib.lines.Line2D object at 0x1B7F1B10>]
[<matplotlib.lines.Line2D object at 0x1B7F1FD0>]
[<matplotlib.lines.Line2D object at 0x1B7E6090>]
[<matplotlib.lines.Line2D object at 0x1B7E61F0>]
[<matplotlib.lines.Line2D object at 0x1B7E6510>]
[<matplotlib.lines.Line2D object at 0x1B7E6790>]
[<matplotlib.lines.Line2D object at 0x1B7E6A10>]
[<matplotlib.lines.Line2D object at 0x1B7E6F50>]
[<matplotlib.lines.Line2D object at 0x1B7E6FF0>]
[<matplotlib.lines.Line2D object at 0x1B7F6250>]
[<matplotlib.lines.Line2D object at 0x1B7F63D0>]
[<matplotlib.lines.Line2D object at 0x1B7F6690>]
[<matplotlib.lines.Line2D object at 0x1B7F6990>]
[<matplotlib.lines.Line2D object at 0x1B7F6FF0>]
[<matplotlib.lines.Line2D object at 0x1B7F6EF0>]
[<matplotlib.lines.Line2D object at 0x1B7EF270>]
[<matplotlib.lines.Line2D object at 0x1B7EF410>]
[<matplotlib.lines.Line2D object at 0x1B7EF6D0>]
[<matplotlib.lines.Line2D object at 0x1B7EF990>]
[<matplotlib.lines.Line2D object at 0x1B7EFF30>]
[<matplotlib.lines.Line2D object at 0x1B7EFEB0>]
[<matplotlib.lines.Line2D object at 0x1B7E7150>]
[<matplotlib.lines.Line2D object at 0x1B7E72F0>]
[<matplotlib.lines.Line2D object at 0x1B7E7590>]
[<matplotlib.lines.Line2D object at 0x1B7E7830>]
[<matplotlib.lines.Line2D object at 0x1B7E7B30>]
[<matplotlib.lines.Line2D object at 0x1B7E7F50>]
[<matplotlib.lines.Line2D object at 0x1B7F0050>]
[<matplotlib.lines.Line2D object at 0x1B7F01F0>]
[<matplotlib.lines.Line2D object at 0x1B7F04F0>]
[<matplotlib.lines.Line2D object at 0x1B7F0770>]
[<matplotlib.lines.Line2D object at 0x1B7F09D0>]
[<matplotlib.lines.Line2D object at 0x1B7F0F50>]
[<matplotlib.lines.Line2D object at 0x1B7F0FF0>]
[<matplotlib.lines.Line2D object at 0x1B7F3310>]
[<matplotlib.lines.Line2D object at 0x1B7F3490>]
[<matplotlib.lines.Line2D object at 0x1B7F3770>]
[<matplotlib.lines.Line2D object at 0x1B7F38D0>]
[<matplotlib.lines.Line2D object at 0x1B7F3FB0>]
>>> show
	  
<function show at 0x1DB9AC48>
>>> show()
	  
>>> zip(*c_cs_sorted)
	  
<zip object at 0x1BE624B8>
>>> list(zip(*c_cs_sorted))[:10]
	  
[(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 71, 72, 74, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 104, 109, 110, 112, 125, 132, 133, 135, 136, 142, 146, 158, 160, 162, 168, 174, 183, 185, 212, 214, 238, 244, 249, 277, 289, 295, 358, 460, 549, 650, 1157, 1555, 5143), (117770, 10415, 3414, 1518, 885, 549, 352, 277, 244, 161, 137, 99, 87, 63, 48, 44, 38, 41, 25, 25, 25, 33, 23, 14, 22, 19, 17, 9, 13, 14, 14, 9, 9, 6, 7, 5, 6, 7, 11, 5, 4, 2, 6, 4, 3, 5, 3, 5, 6, 3, 6, 3, 1, 2, 5, 3, 1, 2, 4, 1, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), (0.17687017067164812, 0.983389342294767, 1.7785588752196837, 2.9150197628458496, 3.7220338983050847, 4.48816029143898, 6.295454545454546, 7.927797833935018, 6.5983606557377055, 9.36024844720497, 8.671532846715328, 11.424242424242424, 10.137931034482758, 11.428571428571427, 14.666666666666666, 14.681818181818182, 19.42105263157895, 11.585365853658537, 20.0, 21.0, 29.040000000000003, 16.03030303030303, 14.608695652173914, 39.285714285714285, 22.454545454545453, 24.157894736842106, 14.823529411764707, 41.888888888888886, 32.30769230769231, 31.0, 20.571428571428573, 33.0, 22.666666666666664, 40.833333333333336, 25.714285714285715, 44.4, 44.333333333333336, 61.285714285714285, 18.18181818181818, 32.800000000000004, 21.0, 129.0, 29.333333333333332, 33.75, 76.66666666666667, 28.2, 80.0, 58.8, 25.0, 102.0, 26.0, 17.666666666666664, 108.0, 137.5, 33.6, 19.0, 116.0, 59.0, 15.25, 186.0, 21.0, 128.0, 66.0, 201.0, 22.666666666666664, 70.0, 72.0, 73.0, 75.0, 234.0, 26.333333333333332, 80.0, 81.0, 82.0, 84.0, 87.0, 176.0, 44.5, 90.0, 91.0, 92.0, 282.0, 31.666666666666664, 194.0, 49.0, 100.0, 0.0, 110.0, 0.0, 0.0, 0.0, 133.0, 0.0, 136.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)]
>>> x, Nc, y = list(zip(*c_cs_sorted))
	  
>>> plot(x, x, 'r')
	  
[<matplotlib.lines.Line2D object at 0x1B805130>]
>>> plot(x, y, 'b')
	  
[<matplotlib.lines.Line2D object at 0x1B8054F0>]
>>> show()
	  
>>> x[:10]
	  
(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
>>> y[:10]
	  
(0.17687017067164812, 0.983389342294767, 1.7785588752196837, 2.9150197628458496, 3.7220338983050847, 4.48816029143898, 6.295454545454546, 7.927797833935018, 6.5983606557377055, 9.36024844720497)
>>> plot(x, y, 'b')
	  
[<matplotlib.lines.Line2D object at 0x1B80A970>]
>>> show()
	  
>>> plot(x, log(Nc))
	  
Traceback (most recent call last):
  File "<pyshell#260>", line 1, in <module>
    plot(x, log(Nc))
TypeError: must be real number, not tuple
>>> Nc[:10]
	  
(117770, 10415, 3414, 1518, 885, 549, 352, 277, 244, 161)
>>> plot(x, log(nc) for nc in Nc)
	  
SyntaxError: Generator expression must be parenthesized
>>> plot(x, [log(nc) for nc in Nc})
	  
SyntaxError: invalid syntax
>>> plot(x, [log(nc) for nc in Nc])
	  
[<matplotlib.lines.Line2D object at 0x1B811E90>]
>>> show()
	  
>>> TG_counts_dist
	  
FreqDist({1: 117770, 2: 10415, 3: 3414, 4: 1518, 5: 885, 6: 549, 7: 352, 8: 277, 9: 244, 10: 161, ...})
>>> TG_counts_dist_GT[:10]
	  
Traceback (most recent call last):
  File "<pyshell#267>", line 1, in <module>
    TG_counts_dist_GT[:10]
TypeError: unhashable type: 'slice'
>>> type(TG_counts_dist_GT)
	  
<class 'dict'>
>>> c_c_start[:10]
	  
Traceback (most recent call last):
  File "<pyshell#269>", line 1, in <module>
    c_c_start[:10]
NameError: name 'c_c_start' is not defined
>>> c_c_star[:10]
	  
[(2, 0.983389342294767), (1, 0.17687017067164812), (3, 1.7785588752196837), (4, 2.9150197628458496), (55, 33.6), (212, 0.0), (43, 29.333333333333332), (7, 6.295454545454546), (5, 3.7220338983050847), (49, 25.0)]
>>> c_sorted = sorted( [ count in TG_counts_dist ] )
	  
>>> c_sorted[:20]
	  
[True]
>>> len(c_sorted)
	  
1
>>> count
	  
142
>>> c_sorted = sorted( [ count for count in TG_counts_dist ] )
	  
>>> c_sorted[:20]
	  
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
>>> len(c_sorted)
	  
119
>>> c_sorted[-20:]
	  
[162, 168, 174, 183, 185, 212, 214, 238, 244, 249, 277, 289, 295, 358, 460, 549, 650, 1157, 1555, 5143]
>>> c_cs_sorted = [ (c, TG_counts_dist_GT[c],) for c in c_sorted ]
	  
>>> c_cs_sorted[-10:]
	  
[(277, 0.0), (289, 0.0), (295, 0.0), (358, 0.0), (460, 0.0), (549, 0.0), (650, 0.0), (1157, 0.0), (1555, 0.0), (5143, 0.0)]
>>> c_cs_sorted[:10]
	  
[(1, 0.17687017067164812), (2, 0.983389342294767), (3, 1.7785588752196837), (4, 2.9150197628458496), (5, 3.7220338983050847), (6, 4.48816029143898), (7, 6.295454545454546), (8, 7.927797833935018), (9, 6.5983606557377055), (10, 9.36024844720497)]
>>> TG_counts_dist[5143]
	  
1
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> c_cs_sorted = [ (c, TG_counts_dist_GT[c],) for c in c_sorted ]
	  
Traceback (most recent call last):
  File "<pyshell#283>", line 1, in <module>
    c_cs_sorted = [ (c, TG_counts_dist_GT[c],) for c in c_sorted ]
NameError: name 'c_sorted' is not defined
>>> c_sorted = sorted( [ count for count in TG_counts_dist ] )
	  
>>> c_cs_sorted = [ (c, TG_counts_dist_GT[c],) for c in c_sorted ]
	  
>>> TG_counts_dist[5143]
	  
1
>>> TG_counts_dist_TG[5143]
	  
Traceback (most recent call last):
  File "<pyshell#287>", line 1, in <module>
    TG_counts_dist_TG[5143]
NameError: name 'TG_counts_dist_TG' is not defined
>>> TG_counts_dist_GT[5143]
	  
0.13894177142309533
>>> x, y = zip(*c_cs_sorted)
	  
>>> plot(x, y)
	  
[<matplotlib.lines.Line2D object at 0x1B021AB0>]
>>> show()
	  
>>> plot(x[:100],y[:100])
	  
[<matplotlib.lines.Line2D object at 0x1B022E50>]
>>> show()
	  

====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> c_cs_sorted[99]
	  
(162, 25.841861229411677)
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 62, in <module>
    plot(x[:c_max],x[:c_max],"r")
TypeError: slice indices must be integers or None or have an __index__ method
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> c_sorted[99]
	  
162
>>> plot(range(c_max),range(c_max),"r")
	  
[<matplotlib.lines.Line2D object at 0x1AB49110>]
>>> show()
	  
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 72, in <module>
    scatter(x[:100],y[:100],'r')
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\pyplot.py", line 3470, in scatter
    edgecolors=edgecolors, data=data, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\__init__.py", line 1855, in inner
    return func(ax, *args, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_axes.py", line 4320, in scatter
    alpha=alpha
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\collections.py", line 929, in __init__
    self.set_sizes(sizes)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\collections.py", line 902, in set_sizes
    scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor
TypeError: ufunc 'sqrt' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 72, in <module>
    scatter(c_cs_c_ratio_sorted,'r')
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\pyplot.py", line 3470, in scatter
    edgecolors=edgecolors, data=data, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\__init__.py", line 1855, in inner
    return func(ax, *args, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_axes.py", line 4243, in scatter
    raise ValueError("x and y must be the same size")
ValueError: x and y must be the same size
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 87, in <module>
    c_cs_est_sorted = [ (c, c_c_star_est[c],) for c in c_sorted ]
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 87, in <listcomp>
    c_cs_est_sorted = [ (c, c_c_star_est[c],) for c in c_sorted ]
IndexError: list index out of range
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py", line 100, in <module>
    x, y = zip(*c_cs_est_c_ratio_sorted)
NameError: name 'c_cs_est_c_ratio_sorted' is not defined
>>> 
====== RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Good-Turing.py ======
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> TG_counts_dist[0]
0
>>> sorted(list(TG_counts_dist))[-10:]
[277, 289, 295, 358, 460, 549, 650, 1157, 1555, 5143]
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 18, in <module>
    z = n / (0.5 * (t - q))
ZeroDivisionError: float division by zero
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 20, in <module>
    TG_counts_dist_AVG += [ (r, n, z,) ]
NameError: name 'n' is not defined
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 26, in <module>
    logN = log(n)
TypeError: must be real number, not tuple
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 24, in <module>
    r, nr, zr = TG_counts_dist_AVG[count]
IndexError: list index out of range
>>> TG_counts_dist_AVG[0]
(2, 10415, 10415.0)
>>> last
5143
>>> TG_counts_dist_AVG[last]
Traceback (most recent call last):
  File "<pyshell#302>", line 1, in <module>
    TG_counts_dist_AVG[last]
IndexError: list index out of range
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 20, in <module>
    TG_counts_dist_AVG += { r: (nr, zr,) }
TypeError: unsupported operand type(s) for +=: 'dict' and 'dict'
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> sorted(list(TG_counts_dist_AVG))[-10:]
[277, 289, 295, 358, 460, 549, 650, 1157, 1555, 5143]
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770

 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 57, in <module>
    c_star = (count + 1) * (n_c_plus_one / n_c)
TypeError: unsupported operand type(s) for /: 'tuple' and 'tuple'
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 53, in <module>
    z_c_plus_one, n_c_plus_one = TG_counts_dist_AVG[count + 1]
KeyError: 213
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 107, in <module>
    c_cs_est_sorted = [ (c, TG_counts_dist_GT_ext[c],) for c in c_sorted ]
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 107, in <listcomp>
    c_cs_est_sorted = [ (c, TG_counts_dist_GT_ext[c],) for c in c_sorted ]
NameError: name 'TG_counts_dist_GT_ext' is not defined
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 101, in <module>
    plot(x[:100],1,'b')
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\pyplot.py", line 3358, in plot
    ret = ax.plot(*args, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\__init__.py", line 1855, in inner
    return func(ax, *args, **kwargs)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_axes.py", line 1527, in plot
    for line in self._get_lines(*args, **kwargs):
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 406, in _grab_next_args
    for seg in self._plot_args(this, kwargs):
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 383, in _plot_args
    x, y = self._xy_from_xy(x, y)
  File "C:\Users\Alice\AppData\Local\Programs\Python\Python37-32\lib\site-packages\matplotlib\axes\_base.py", line 242, in _xy_from_xy
    "have shapes {} and {}".format(x.shape, y.shape))
ValueError: x and y must have same first dimension, but have shapes (100,) and (1,)
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 108, in <module>
    c_cs_est_sorted = [ (c, TG_counts_dist_GT_ext[c],) for c in c_sorted ]
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 108, in <listcomp>
    c_cs_est_sorted = [ (c, TG_counts_dist_GT_ext[c],) for c in c_sorted ]
NameError: name 'TG_counts_dist_GT_ext' is not defined
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 68, in <module>
    c_star = (count + 1) * (z_c_plus_one_est / z_c)
NameError: name 'z_c_plus_one_est' is not defined
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 65, in <module>
    c_star = (count + 1) * (n_c_plus_one_est / z_c_est)
NameError: name 'z_c_est' is not defined
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Traceback (most recent call last):
  File "C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py", line 78, in <module>
    TG_counts_dist_GT_mixed = dict(c_c_star_mexed)
NameError: name 'c_c_star_mexed' is not defined
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770

 RESTART: C:/Users/Alice/NLP/NLP-NLTK/nltk_explore_Gale_Simple_Good-Turing.py 
---- from  austen-emma.txt  ----
sents:  [['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']'], ['VOLUME', 'I'], ['CHAPTER', 'I'], ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.'], ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']]
sent:  ['[', 'Emma', 'by', 'Jane', 'Austen', '1816', ']']
sent:  ['VOLUME', 'I']
sent:  ['CHAPTER', 'I']
sent:  ['Emma', 'Woodhouse', ',', 'handsome', ',', 'clever', ',', 'and', 'rich', ',', 'with', 'a', 'comfortable', 'home', 'and', 'happy', 'disposition', ',', 'seemed', 'to', 'unite', 'some', 'of', 'the', 'best', 'blessings', 'of', 'existence', ';', 'and', 'had', 'lived', 'nearly', 'twenty', '-', 'one', 'years', 'in', 'the', 'world', 'with', 'very', 'little', 'to', 'distress', 'or', 'vex', 'her', '.']
sent:  ['She', 'was', 'the', 'youngest', 'of', 'the', 'two', 'daughters', 'of', 'a', 'most', 'affectionate', ',', 'indulgent', 'father', ';', 'and', 'had', ',', 'in', 'consequence', 'of', 'her', 'sister', "'", 's', 'marriage', ',', 'been', 'mistress', 'of', 'his', 'house', 'from', 'a', 'very', 'early', 'period', '.']
bigrams:  [('', ''), ('', '['), ('[', 'Emma'), ('Emma', 'by'), ('by', 'Jane'), ('Jane', 'Austen'), ('Austen', '1816'), ('1816', ']'), (']', ''), ('', ''), ('', 'VOLUME'), ('VOLUME', 'I'), ('I', ''), ('', ''), ('', 'CHAPTER'), ('CHAPTER', 'I'), ('I', ''), ('', ''), ('', 'Emma'), ('Emma', 'Woodhouse'), ('Woodhouse', ','), (',', 'handsome'), ('handsome', ','), (',', 'clever'), ('clever', ','), (',', 'and'), ('and', 'rich'), ('rich', ','), (',', 'with'), ('with', 'a'), ('a', 'comfortable'), ('comfortable', 'home'), ('home', 'and'), ('and', 'happy'), ('happy', 'disposition'), ('disposition', ','), (',', 'seemed'), ('seemed', 'to'), ('to', 'unite'), ('unite', 'some')]
trigrams:  [('', '', '['), ('', '[', 'Emma'), ('[', 'Emma', 'by'), ('Emma', 'by', 'Jane'), ('by', 'Jane', 'Austen'), ('Jane', 'Austen', '1816'), ('Austen', '1816', ']'), ('1816', ']', ''), (']', '', ''), ('', '', 'VOLUME'), ('', 'VOLUME', 'I'), ('VOLUME', 'I', ''), ('I', '', ''), ('', '', 'CHAPTER'), ('', 'CHAPTER', 'I'), ('CHAPTER', 'I', ''), ('I', '', ''), ('', '', 'Emma'), ('', 'Emma', 'Woodhouse'), ('Emma', 'Woodhouse', ','), ('Woodhouse', ',', 'handsome'), (',', 'handsome', ','), ('handsome', ',', 'clever'), (',', 'clever', ','), ('clever', ',', 'and'), (',', 'and', 'rich'), ('and', 'rich', ','), ('rich', ',', 'with'), (',', 'with', 'a'), ('with', 'a', 'comfortable'), ('a', 'comfortable', 'home'), ('comfortable', 'home', 'and'), ('home', 'and', 'happy'), ('and', 'happy', 'disposition'), ('happy', 'disposition', ','), ('disposition', ',', 'seemed'), (',', 'seemed', 'to'), ('seemed', 'to', 'unite'), ('to', 'unite', 'some'), ('unite', 'some', 'of')]
Nummber of trigrams: 207988
Sum of trigram counts: 207988
Sum of count occurrences (c*Nc): 207988
# trigrams occurring once: 117770
Nc for c=1: 117770
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 10:25:18 AM====
====September 08, 2018 10:25:24 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81688 [('A', 'DT'), ('form', 'NN'), ('of', 'IN'), ('asbestos', 'NN'), ('once', 'RB'), ('used', 'VBN'), ('*', '-NONE-'), ('*', '-NONE-'), ('to', 'TO'), ('make', 'VB')]
True Tagging:    81688 [('A', 'DT'), ('form', 'NN'), ('of', 'IN'), ('asbestos', 'NN'), ('once', 'RB'), ('used', 'VBN'), ('*', '-NONE-'), ('*', '-NONE-'), ('to', 'TO'), ('make', 'VB')]
Tag Set: 46 {':', 'JJR', 'FW', 'PRP', 'CC', 'NNS', 'LS', '``', 'JJ', 'RB', 'RP', 'WP', 'MD', 'WP$', 'VB', 'VBD', 'NN', '-NONE-', 'IN', 'PDT', '.', 'RBR', 'POS', 'UH', 'VBZ', 'DT', 'WDT', 'VBP', 'EX', ',', "''", 'JJS', 'SYM', 'PRP$', '#', '$', 'CD', 'RBS', 'NNPS', '-RRB-', 'VBN', 'NNP', 'WRB', 'VBG', 'TO', '-LRB-'}
====September 08, 2018 10:25:24 AM====
good z: [(('CC', ''), 1), (('JJ', ''), 1), (('.', ''), 2), (('PRP$', ''), 1), (('NNP', ''), 8)]
bad z: [((':', ''), 11), (('JJR', ''), 55), (('PRP', ''), 3), (('CC', ''), 215), (('NNS', ''), 124), (('``', ''), 59), (('JJ', ''), 2000), (('RB', ''), 42), (('RP', ''), 9), (('WP', ''), 4), (('WP$', ''), 5), (('VB', ''), 144), (('VBD', ''), 70), (('NN', ''), 1343), (('-NONE-', ''), 93), (('IN', ''), 870), (('.', ''), 98), (('POS', ''), 270), (('VBZ', ''), 58), (('DT', ''), 2950), (('WDT', ''), 2), (('VBP', ''), 21), ((',', ''), 195), (("''", ''), 27), (('JJS', ''), 45), (('PRP$', ''), 256), (('CD', ''), 547), (('NNPS', ''), 8), (('-RRB-', ''), 5), (('VBN', ''), 123), (('NNP', ''), 423), (('WRB', ''), 10), (('VBG', ''), 168), (('TO', ''), 49), (('-LRB-', ''), 2)]
====September 08, 2018 10:25:24 AM====
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 281, in <module>
    best_transform_DEFAULT = tagger.get_best_transform()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 102, in get_best_transform
    instance, score = get_best_instance(template)
NameError: name 'get_best_instance' is not defined
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 10:27:48 AM====
====September 08, 2018 10:27:54 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81246 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81246 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'SYM', '-RRB-', 'WP$', '``', "''", 'DT', 'VBD', '-NONE-', ',', 'TO', 'VB', '.', 'PRP$', 'NNS', 'CC', 'RP', 'POS', 'JJR', '#', 'IN', 'JJ', 'WDT', 'VBN', '$', ':', 'PRP', 'WRB', 'MD', 'CD', 'UH', 'NNPS', 'RB', 'LS', 'VBG', 'EX', 'JJS', 'PDT', 'NN', '-LRB-', 'FW', 'NNP', 'RBS', 'VBP', 'VBZ', 'RBR', 'WP'}
====September 08, 2018 10:27:54 AM====
good z: [(('DT', ''), 1), (('.', ''), 3), (('PRP$', ''), 1), (('CC', ''), 1), (('IN', ''), 1), (('JJ', ''), 1), (('NNP', ''), 8)]
bad z: [(('-RRB-', ''), 5), (('WP$', ''), 7), (('``', ''), 61), (("''", ''), 28), (('DT', ''), 2952), (('VBD', ''), 70), (('-NONE-', ''), 98), ((',', ''), 188), (('TO', ''), 48), (('VB', ''), 145), (('.', ''), 93), (('PRP$', ''), 264), (('NNS', ''), 123), (('CC', ''), 227), (('RP', ''), 8), (('POS', ''), 269), (('JJR', ''), 61), (('IN', ''), 870), (('JJ', ''), 1988), (('WDT', ''), 2), (('VBN', ''), 121), ((':', ''), 14), (('PRP', ''), 1), (('WRB', ''), 11), (('CD', ''), 555), (('NNPS', ''), 5), (('RB', ''), 44), (('VBG', ''), 166), (('JJS', ''), 46), (('NN', ''), 1352), (('-LRB-', ''), 2), (('NNP', ''), 433), (('VBP', ''), 22), (('VBZ', ''), 54), (('WP', ''), 3)]
====September 08, 2018 10:27:54 AM====
... trying from-tag: SYM
... trying from-tag: -RRB-
... trying from-tag: WP$
... trying from-tag: ``
... trying from-tag: ''
... trying from-tag: DT
... trying from-tag: VBD
... trying from-tag: -NONE-
... trying from-tag: ,
... trying from-tag: TO
... trying from-tag: VB
... trying from-tag: .
... trying from-tag: PRP$
... trying from-tag: NNS
... trying from-tag: CC
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: JJR
... trying from-tag: #
... trying from-tag: IN
... trying from-tag: JJ
... trying from-tag: WDT
... trying from-tag: VBN
... trying from-tag: $
... trying from-tag: :
... trying from-tag: PRP
... trying from-tag: WRB
... trying from-tag: MD
... trying from-tag: CD
... trying from-tag: UH
... trying from-tag: NNPS
... trying from-tag: RB
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: EX
... trying from-tag: JJS
... trying from-tag: PDT
... trying from-tag: NN
... trying from-tag: -LRB-
... trying from-tag: FW
... trying from-tag: NNP
... trying from-tag: RBS
... trying from-tag: VBP
... trying from-tag: VBZ
... trying from-tag: RBR
... trying from-tag: WP
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
====September 08, 2018 10:29:31 AM====
====September 08, 2018 10:29:37 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79937 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    79937 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'SYM', '-RRB-', 'WP$', '``', "''", 'DT', 'VBD', '-NONE-', ',', 'TO', 'VB', '.', 'PRP$', 'NNS', 'CC', 'RP', 'POS', 'JJR', '#', 'IN', 'JJ', 'WDT', 'VBN', '$', ':', 'PRP', 'WRB', 'MD', 'CD', 'UH', 'NNPS', 'RB', 'LS', 'VBG', 'EX', 'JJS', 'PDT', 'NN', '-LRB-', 'FW', 'NNP', 'RBS', 'VBP', 'VBZ', 'RBR', 'WP'}
====September 08, 2018 10:29:37 AM====
good z: [(('DT', ''), 1), (('.', ''), 2), (('PRP$', ''), 1), (('CC', ''), 1), (('IN', ''), 1), (('JJ', ''), 1), (('NNP', ''), 8)]
bad z: [(('-RRB-', ''), 5), (('WP$', ''), 8), (('``', ''), 58), (("''", ''), 24), (('DT', ''), 2893), (('VBD', ''), 72), (('-NONE-', ''), 96), ((',', ''), 181), (('TO', ''), 48), (('VB', ''), 144), (('.', ''), 93), (('PRP$', ''), 254), (('NNS', ''), 114), (('CC', ''), 224), (('RP', ''), 7), (('POS', ''), 257), (('JJR', ''), 60), (('IN', ''), 853), (('JJ', ''), 1953), (('WDT', ''), 2), (('VBN', ''), 119), ((':', ''), 10), (('PRP', ''), 3), (('WRB', ''), 9), (('CD', ''), 553), (('NNPS', ''), 5), (('RB', ''), 40), (('VBG', ''), 146), (('JJS', ''), 43), (('NN', ''), 1339), (('-LRB-', ''), 2), (('NNP', ''), 418), (('VBP', ''), 18), (('VBZ', ''), 47), (('WP', ''), 4)]
====September 08, 2018 10:29:37 AM====
... trying from-tag: SYM
... trying from-tag: -RRB-
... trying from-tag: WP$
... trying from-tag: ``
... trying from-tag: ''
... trying from-tag: DT
... trying from-tag: VBD
... trying from-tag: -NONE-
... trying from-tag: ,
... trying from-tag: TO
... trying from-tag: VB
... trying from-tag: .
... trying from-tag: PRP$
... trying from-tag: NNS
... trying from-tag: CC
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: JJR
... trying from-tag: #
... trying from-tag: IN
... trying from-tag: JJ
... trying from-tag: WDT
... trying from-tag: VBN
... trying from-tag: $
... trying from-tag: :
... trying from-tag: PRP
... trying from-tag: WRB
... trying from-tag: MD
... trying from-tag: CD
... trying from-tag: UH
... trying from-tag: NNPS
... trying from-tag: RB
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: EX
... trying from-tag: JJS
... trying from-tag: PDT
... trying from-tag: NN
... trying from-tag: -LRB-
... trying from-tag: FW
... trying from-tag: NNP
... trying from-tag: RBS
... trying from-tag: VBP
... trying from-tag: VBZ
... trying from-tag: RBR
... trying from-tag: WP
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
====September 08, 2018 10:31:14 AM====
====September 08, 2018 10:31:20 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79257 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    79257 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'SYM', '-RRB-', 'WP$', '``', "''", 'DT', 'VBD', '-NONE-', ',', 'TO', 'VB', '.', 'PRP$', 'NNS', 'CC', 'RP', 'POS', 'JJR', '#', 'IN', 'JJ', 'WDT', 'VBN', '$', ':', 'PRP', 'WRB', 'MD', 'CD', 'UH', 'NNPS', 'RB', 'LS', 'VBG', 'EX', 'JJS', 'PDT', 'NN', '-LRB-', 'FW', 'NNP', 'RBS', 'VBP', 'VBZ', 'RBR', 'WP'}
====September 08, 2018 10:31:20 AM====
good z: [(('DT', ''), 1), (('.', ''), 3), (('PRP$', ''), 1), (('CC', ''), 1), (('IN', ''), 1), (('NNP', ''), 9)]
bad z: [(('-RRB-', ''), 4), (('WP$', ''), 6), (('``', ''), 49), (("''", ''), 29), (('DT', ''), 2862), (('VBD', ''), 73), (('-NONE-', ''), 94), ((',', ''), 180), (('TO', ''), 48), (('VB', ''), 143), (('.', ''), 97), (('PRP$', ''), 259), (('NNS', ''), 121), (('CC', ''), 203), (('RP', ''), 8), (('POS', ''), 260), (('JJR', ''), 59), (('IN', ''), 838), (('JJ', ''), 1921), (('WDT', ''), 2), (('VBN', ''), 119), ((':', ''), 14), (('PRP', ''), 3), (('WRB', ''), 10), (('CD', ''), 534), (('NNPS', ''), 6), (('RB', ''), 40), (('VBG', ''), 158), (('JJS', ''), 38), (('NN', ''), 1288), (('-LRB-', ''), 2), (('NNP', ''), 425), (('VBP', ''), 19), (('VBZ', ''), 58), (('WP', ''), 2)]
====September 08, 2018 10:31:20 AM====
... trying from-tag: SYM
... trying from-tag: -RRB-
... trying from-tag: WP$
... trying from-tag: ``
... trying from-tag: ''
... trying from-tag: DT
... trying from-tag: VBD
... trying from-tag: -NONE-
... trying from-tag: ,
... trying from-tag: TO
... trying from-tag: VB
... trying from-tag: .
... trying from-tag: PRP$
... trying from-tag: NNS
... trying from-tag: CC
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: JJR
... trying from-tag: #
... trying from-tag: IN
... trying from-tag: JJ
... trying from-tag: WDT
... trying from-tag: VBN
... trying from-tag: $
... trying from-tag: :
... trying from-tag: PRP
... trying from-tag: WRB
... trying from-tag: MD
... trying from-tag: CD
... trying from-tag: UH
... trying from-tag: NNPS
... trying from-tag: RB
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: EX
... trying from-tag: JJS
... trying from-tag: PDT
... trying from-tag: NN
... trying from-tag: -LRB-
... trying from-tag: FW
... trying from-tag: NNP
... trying from-tag: RBS
... trying from-tag: VBP
... trying from-tag: VBZ
... trying from-tag: RBR
... trying from-tag: WP
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
====September 08, 2018 10:32:57 AM====
====September 08, 2018 10:33:02 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80266 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80266 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'SYM', '-RRB-', 'WP$', '``', "''", 'DT', 'VBD', '-NONE-', ',', 'TO', 'VB', '.', 'PRP$', 'NNS', 'CC', 'RP', 'POS', 'JJR', '#', 'IN', 'JJ', 'WDT', 'VBN', '$', ':', 'PRP', 'WRB', 'MD', 'CD', 'UH', 'NNPS', 'RB', 'LS', 'VBG', 'EX', 'JJS', 'PDT', 'NN', '-LRB-', 'FW', 'NNP', 'RBS', 'VBP', 'VBZ', 'RBR', 'WP'}
====September 08, 2018 10:33:02 AM====
good z: [(('DT', ''), 1), (('.', ''), 1), (('PRP$', ''), 1), (('IN', ''), 1), (('NNP', ''), 12)]
bad z: [(('-RRB-', ''), 4), (('WP$', ''), 4), (('``', ''), 57), (("''", ''), 27), (('DT', ''), 2876), (('VBD', ''), 68), (('-NONE-', ''), 96), ((',', ''), 178), (('TO', ''), 52), (('VB', ''), 150), (('.', ''), 96), (('PRP$', ''), 256), (('NNS', ''), 117), (('CC', ''), 217), (('RP', ''), 9), (('POS', ''), 263), (('JJR', ''), 57), (('IN', ''), 861), (('JJ', ''), 1965), (('WDT', ''), 2), (('VBN', ''), 118), ((':', ''), 12), (('PRP', ''), 2), (('WRB', ''), 10), (('CD', ''), 541), (('NNPS', ''), 8), (('RB', ''), 43), (('VBG', ''), 156), (('JJS', ''), 44), (('NN', ''), 1330), (('-LRB-', ''), 2), (('NNP', ''), 426), (('VBP', ''), 18), (('VBZ', ''), 63), (('WP', ''), 3)]
====September 08, 2018 10:33:02 AM====
... trying from-tag: SYM
... trying from-tag: -RRB-
... trying from-tag: WP$
... trying from-tag: ``
... trying from-tag: ''
... trying from-tag: DT
... trying from-tag: VBD
... trying from-tag: -NONE-
... trying from-tag: ,
... trying from-tag: TO
... trying from-tag: VB
... trying from-tag: .
... trying from-tag: PRP$
... trying from-tag: NNS
... trying from-tag: CC
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: JJR
... trying from-tag: #
... trying from-tag: IN
... trying from-tag: JJ
... trying from-tag: WDT
... trying from-tag: VBN
... trying from-tag: $
... trying from-tag: :
... trying from-tag: PRP
... trying from-tag: WRB
... trying from-tag: MD
... trying from-tag: CD
... trying from-tag: UH
... trying from-tag: NNPS
... trying from-tag: RB
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: EX
... trying from-tag: JJS
... trying from-tag: PDT
... trying from-tag: NN
... trying from-tag: -LRB-
... trying from-tag: FW
... trying from-tag: NNP
... trying from-tag: RBS
... trying from-tag: VBP
... trying from-tag: VBZ
... trying from-tag: RBR
... trying from-tag: WP
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
====September 08, 2018 10:34:40 AM====
====September 08, 2018 10:34:45 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80323 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80323 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'SYM', '-RRB-', 'WP$', '``', "''", 'DT', 'VBD', '-NONE-', ',', 'TO', 'VB', '.', 'PRP$', 'NNS', 'CC', 'RP', 'POS', 'JJR', '#', 'IN', 'JJ', 'WDT', 'VBN', '$', ':', 'PRP', 'WRB', 'MD', 'CD', 'UH', 'NNPS', 'RB', 'LS', 'VBG', 'EX', 'JJS', 'PDT', 'NN', '-LRB-', 'FW', 'NNP', 'RBS', 'VBP', 'VBZ', 'RBR', 'WP'}
====September 08, 2018 10:34:45 AM====
good z: [(('DT', ''), 1), (('.', ''), 3), (('PRP$', ''), 1), (('CC', ''), 1), (('IN', ''), 1), (('NNP', ''), 8)]
bad z: [(('-RRB-', ''), 5), (('WP$', ''), 8), (('``', ''), 58), (("''", ''), 22), (('DT', ''), 2931), (('VBD', ''), 67), (('-NONE-', ''), 96), ((',', ''), 183), (('TO', ''), 48), (('VB', ''), 140), (('.', ''), 94), (('PRP$', ''), 266), (('NNS', ''), 122), (('CC', ''), 208), (('RP', ''), 11), (('POS', ''), 277), (('JJR', ''), 58), (('IN', ''), 873), (('JJ', ''), 1972), (('WDT', ''), 1), (('VBN', ''), 119), ((':', ''), 12), (('PRP', ''), 3), (('WRB', ''), 9), (('CD', ''), 533), (('NNPS', ''), 4), (('RB', ''), 40), (('VBG', ''), 155), (('JJS', ''), 37), (('NN', ''), 1312), (('-LRB-', ''), 2), (('NNP', ''), 412), (('VBP', ''), 16), (('VBZ', ''), 53), (('WP', ''), 4)]
====September 08, 2018 10:34:45 AM====
... trying from-tag: SYM
... trying from-tag: -RRB-
... trying from-tag: WP$
... trying from-tag: ``
... trying from-tag: ''
... trying from-tag: DT
... trying from-tag: VBD
... trying from-tag: -NONE-
... trying from-tag: ,
... trying from-tag: TO
... trying from-tag: VB
... trying from-tag: .
... trying from-tag: PRP$
... trying from-tag: NNS
... trying from-tag: CC
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: JJR
... trying from-tag: #
... trying from-tag: IN
... trying from-tag: JJ
... trying from-tag: WDT
... trying from-tag: VBN
... trying from-tag: $
... trying from-tag: :
... trying from-tag: PRP
... trying from-tag: WRB
... trying from-tag: MD
... trying from-tag: CD
... trying from-tag: UH
... trying from-tag: NNPS
... trying from-tag: RB
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: EX
... trying from-tag: JJS
... trying from-tag: PDT
... trying from-tag: NN
... trying from-tag: -LRB-
... trying from-tag: FW
... trying from-tag: NNP
... trying from-tag: RBS
... trying from-tag: VBP
... trying from-tag: VBZ
... trying from-tag: RBR
... trying from-tag: WP
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
====September 08, 2018 10:36:26 AM====
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 10:39:54 AM====
====September 08, 2018 10:40:00 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81602 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81602 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'WP$', 'DT', ',', '.', 'VB', 'CC', 'VBN', 'NNPS', 'RBR', '#', ':', 'RP', 'NNP', 'VBG', 'EX', '``', 'MD', '-LRB-', 'PRP', '-RRB-', 'VBP', 'JJS', 'RB', "''", 'RBS', 'WP', 'UH', 'JJR', 'SYM', 'FW', '$', 'POS', 'NN', 'WRB', 'NNS', 'VBZ', 'IN', 'WDT', '-NONE-', 'TO', 'CD', 'LS', 'PDT', 'JJ', 'VBD', 'PRP$'}
====September 08, 2018 10:40:00 AM====
good z: [(('DT', ''), 1), (('.', ''), 3), (('CC', ''), 1), (('NNP', ''), 8), (('IN', ''), 1), (('PRP$', ''), 1)]
bad z: [(('WP$', ''), 6), (('DT', ''), 2926), ((',', ''), 188), (('.', ''), 98), (('VB', ''), 143), (('CC', ''), 210), (('VBN', ''), 121), (('NNPS', ''), 8), ((':', ''), 13), (('RP', ''), 11), (('NNP', ''), 420), (('VBG', ''), 167), (('``', ''), 54), (('-LRB-', ''), 1), (('PRP', ''), 1), (('-RRB-', ''), 3), (('VBP', ''), 20), (('JJS', ''), 41), (('RB', ''), 44), (("''", ''), 27), (('WP', ''), 4), (('JJR', ''), 58), (('POS', ''), 276), (('NN', ''), 1377), (('WRB', ''), 7), (('NNS', ''), 112), (('VBZ', ''), 57), (('IN', ''), 877), (('WDT', ''), 2), (('-NONE-', ''), 102), (('TO', ''), 47), (('CD', ''), 557), (('JJ', ''), 1959), (('VBD', ''), 72), (('PRP$', ''), 258)]
====September 08, 2018 10:40:00 AM====
... trying from-tag: WP$
... trying from-tag: DT
... trying from-tag: ,
... trying from-tag: .
... trying from-tag: VB
... trying from-tag: CC
... trying from-tag: VBN
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: #
... trying from-tag: :
... trying from-tag: RP
... trying from-tag: NNP
... trying from-tag: VBG
... trying from-tag: EX
... trying from-tag: ``
... trying from-tag: MD
... trying from-tag: -LRB-
... trying from-tag: PRP
... trying from-tag: -RRB-
... trying from-tag: VBP
... trying from-tag: JJS
... trying from-tag: RB
... trying from-tag: ''
... trying from-tag: RBS
... trying from-tag: WP
... trying from-tag: UH
... trying from-tag: JJR
... trying from-tag: SYM
... trying from-tag: FW
... trying from-tag: $
... trying from-tag: POS
... trying from-tag: NN
... trying from-tag: WRB
... trying from-tag: NNS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: -NONE-
... trying from-tag: TO
... trying from-tag: CD
... trying from-tag: LS
... trying from-tag: PDT
... trying from-tag: JJ
... trying from-tag: VBD
... trying from-tag: PRP$
--> NIL: Don't change the tag. score= 0
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 283, in <module>
    best_transform_DEFAULT = tagger.learn()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 84, in learn
    self.apply_transform(best_transform, tagged_sents)
NameError: name 'tagged_sents' is not defined
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 10:42:45 AM====
====September 08, 2018 10:42:51 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81286 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81286 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'WRB', 'SYM', 'DT', '$', 'VBD', 'RB', 'NNP', 'UH', ':', 'PRP$', '``', 'WP', 'JJS', '.', 'PDT', 'VBG', 'MD', 'JJR', 'JJ', 'NN', "''", 'RBS', ',', 'LS', 'CD', '-LRB-', 'POS', 'WDT', 'VB', 'TO', 'PRP', 'IN', 'EX', 'NNS', 'CC', 'RBR', 'RP', 'FW', '-NONE-', '#', 'VBP', 'VBZ', 'VBN', 'WP$', '-RRB-', 'NNPS'}
====September 08, 2018 10:42:51 AM====
good z: [(('DT', ''), 1), (('NNP', ''), 10), (('PRP$', ''), 1), (('.', ''), 1), (('JJ', ''), 1), (('IN', ''), 1), (('CC', ''), 1)]
bad z: [(('WRB', ''), 9), (('DT', ''), 2961), (('VBD', ''), 75), (('RB', ''), 40), (('NNP', ''), 422), ((':', ''), 13), (('PRP$', ''), 259), (('``', ''), 56), (('WP', ''), 2), (('JJS', ''), 40), (('.', ''), 93), (('VBG', ''), 172), (('JJR', ''), 64), (('JJ', ''), 1976), (('NN', ''), 1341), (("''", ''), 29), ((',', ''), 181), (('CD', ''), 524), (('-LRB-', ''), 2), (('POS', ''), 271), (('WDT', ''), 2), (('VB', ''), 127), (('TO', ''), 53), (('PRP', ''), 3), (('IN', ''), 879), (('NNS', ''), 120), (('CC', ''), 212), (('RP', ''), 8), (('-NONE-', ''), 100), (('VBP', ''), 16), (('VBZ', ''), 59), (('VBN', ''), 114), (('WP$', ''), 6), (('-RRB-', ''), 4), (('NNPS', ''), 6)]
====September 08, 2018 10:42:51 AM====
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: VBD
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: UH
... trying from-tag: :
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: WP
... trying from-tag: JJS
... trying from-tag: .
... trying from-tag: PDT
... trying from-tag: VBG
... trying from-tag: MD
... trying from-tag: JJR
... trying from-tag: JJ
... trying from-tag: NN
... trying from-tag: ''
... trying from-tag: RBS
... trying from-tag: ,
... trying from-tag: LS
... trying from-tag: CD
... trying from-tag: -LRB-
... trying from-tag: POS
... trying from-tag: WDT
... trying from-tag: VB
... trying from-tag: TO
... trying from-tag: PRP
... trying from-tag: IN
... trying from-tag: EX
... trying from-tag: NNS
... trying from-tag: CC
... trying from-tag: RBR
... trying from-tag: RP
... trying from-tag: FW
... trying from-tag: -NONE-
... trying from-tag: #
... trying from-tag: VBP
... trying from-tag: VBZ
... trying from-tag: VBN
... trying from-tag: WP$
... trying from-tag: -RRB-
... trying from-tag: NNPS
--> NIL: Don't change the tag. score= 0
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 283, in <module>
    best_transform_DEFAULT = tagger.learn()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 84, in learn
    self.apply_transform(best_transform, self.tagged_sents)
AttributeError: 'BrillTBL' object has no attribute 'tagged_sents'
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 10:46:36 AM====
====September 08, 2018 10:46:41 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81194 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81194 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NN', '-RRB-', 'EX', 'VBZ', 'WP$', 'DT', 'CC', '-LRB-', 'SYM', "''", 'WDT', '$', 'VBP', 'CD', 'LS', 'FW', 'VBN', 'RB', '.', 'VBD', 'JJR', 'NNP', 'NNPS', 'PDT', 'WRB', ',', 'JJS', 'RBS', 'MD', 'WP', '``', '#', 'JJ', 'RP', ':', 'RBR', 'VBG', 'TO', 'VB', 'PRP$', 'PRP', 'POS', 'IN', 'UH', '-NONE-', 'NNS'}
====September 08, 2018 10:46:41 AM====
good z: [(('DT', ''), 1), (('CC', ''), 1), (('.', ''), 3), (('NNP', ''), 9), (('JJ', ''), 1), (('PRP$', ''), 1), (('IN', ''), 1)]
bad z: [(('NN', ''), 1333), (('-RRB-', ''), 4), (('VBZ', ''), 58), (('WP$', ''), 8), (('DT', ''), 2948), (('CC', ''), 222), (('-LRB-', ''), 2), (("''", ''), 27), (('WDT', ''), 1), (('VBP', ''), 22), (('CD', ''), 527), (('VBN', ''), 121), (('RB', ''), 41), (('.', ''), 105), (('VBD', ''), 72), (('JJR', ''), 55), (('NNP', ''), 441), (('NNPS', ''), 6), (('WRB', ''), 7), ((',', ''), 194), (('JJS', ''), 39), (('WP', ''), 1), (('``', ''), 60), (('JJ', ''), 1956), (('RP', ''), 10), ((':', ''), 12), (('VBG', ''), 159), (('TO', ''), 51), (('VB', ''), 139), (('PRP$', ''), 253), (('PRP', ''), 2), (('POS', ''), 278), (('IN', ''), 865), (('-NONE-', ''), 88), (('NNS', ''), 121)]
====September 08, 2018 10:46:41 AM====
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 67
... trying from-tag: -RRB-
... trying from-tag: EX
... trying from-tag: VBZ
... trying from-tag: WP$
... trying from-tag: DT
... trying from-tag: CC
... trying from-tag: -LRB-
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: WDT
... trying from-tag: $
... trying from-tag: VBP
... trying from-tag: CD
... trying from-tag: LS
... trying from-tag: FW
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: .
... trying from-tag: VBD
... trying from-tag: JJR
... trying from-tag: NNP
... trying from-tag: NNPS
... trying from-tag: PDT
... trying from-tag: WRB
... trying from-tag: ,
... trying from-tag: JJS
... trying from-tag: RBS
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: ``
... trying from-tag: #
... trying from-tag: JJ
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: RBR
... trying from-tag: VBG
... trying from-tag: TO
... trying from-tag: VB
... trying from-tag: PRP$
... trying from-tag: PRP
... trying from-tag: POS
... trying from-tag: IN
... trying from-tag: UH
... trying from-tag: -NONE-
... trying from-tag: NNS
--> m1: Change NN to VB if preceding tag is MD. score= 67
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 283, in <module>
    best_transform_DEFAULT = tagger.learn()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 84, in learn
    self.apply_transform(best_transform, self.tagged_words)
TypeError: apply_transform() takes 2 positional arguments but 3 were given
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 10:49:57 AM====
====September 08, 2018 10:50:02 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79890 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79890 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'JJR', 'NN', 'JJ', 'RP', '``', 'EX', 'CD', 'WP$', 'NNS', 'NNP', '-NONE-', 'LS', ',', "''", 'RBR', 'CC', 'PRP', '$', 'NNPS', 'VBD', ':', 'WP', 'WDT', 'VB', 'WRB', 'RBS', 'FW', '-RRB-', 'UH', 'IN', 'VBZ', 'VBP', 'PDT', 'MD', '.', 'DT', 'TO', 'SYM', 'VBG', 'VBN', 'JJS', 'POS', 'RB', 'PRP$', '-LRB-', '#'}
====September 08, 2018 10:50:02 AM====
good z: [(('JJ', ''), 1), (('NNP', ''), 9), (('CC', ''), 1), (('IN', ''), 1), (('.', ''), 2), (('PRP$', ''), 1)]
bad z: [(('JJR', ''), 61), (('NN', ''), 1310), (('JJ', ''), 1926), (('RP', ''), 8), (('``', ''), 56), (('CD', ''), 525), (('WP$', ''), 6), (('NNS', ''), 115), (('NNP', ''), 427), (('-NONE-', ''), 94), ((',', ''), 201), (("''", ''), 26), (('CC', ''), 213), (('PRP', ''), 2), (('NNPS', ''), 7), (('VBD', ''), 63), ((':', ''), 10), (('WP', ''), 3), (('WDT', ''), 2), (('VB', ''), 148), (('WRB', ''), 9), (('-RRB-', ''), 6), (('IN', ''), 855), (('VBZ', ''), 50), (('VBP', ''), 18), (('.', ''), 89), (('DT', ''), 2891), (('TO', ''), 49), (('VBG', ''), 167), (('VBN', ''), 103), (('JJS', ''), 38), (('POS', ''), 269), (('RB', ''), 42), (('PRP$', ''), 252), (('-LRB-', ''), 2)]
====September 08, 2018 10:50:02 AM====
... trying from-tag: JJR
m1: Change JJR to RBR if preceding tag is MD. score= 1
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 58
... trying from-tag: JJ
m1: Change JJ to VB if preceding tag is MD. score= 62
m1: Change JJ to RB if preceding tag is MD. score= 64
... trying from-tag: RP
... trying from-tag: ``
... trying from-tag: EX
... trying from-tag: CD
... trying from-tag: WP$
... trying from-tag: NNS
... trying from-tag: NNP
... trying from-tag: -NONE-
... trying from-tag: LS
... trying from-tag: ,
... trying from-tag: ''
... trying from-tag: RBR
... trying from-tag: CC
... trying from-tag: PRP
... trying from-tag: $
... trying from-tag: NNPS
... trying from-tag: VBD
... trying from-tag: :
... trying from-tag: WP
... trying from-tag: WDT
... trying from-tag: VB
... trying from-tag: WRB
... trying from-tag: RBS
... trying from-tag: FW
... trying from-tag: -RRB-
... trying from-tag: UH
... trying from-tag: IN
... trying from-tag: VBZ
... trying from-tag: VBP
... trying from-tag: PDT
... trying from-tag: MD
... trying from-tag: .
... trying from-tag: DT
... trying from-tag: TO
... trying from-tag: SYM
... trying from-tag: VBG
... trying from-tag: VBN
... trying from-tag: JJS
... trying from-tag: POS
... trying from-tag: RB
... trying from-tag: PRP$
... trying from-tag: -LRB-
... trying from-tag: #
--> m1: Change JJ to RB if preceding tag is MD. score= 64
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 283, in <module>
    best_transform_DEFAULT = tagger.learn()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 84, in learn
    self.apply_transform(best_transform)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 191, in apply_transform
    if current_tag == tagFrom and previous_tag == zTag:
NameError: name 'tagFrom' is not defined
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 10:52:50 AM====
====September 08, 2018 10:52:55 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80240 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80240 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'JJR', 'RP', 'WRB', 'NNPS', '-RRB-', 'VBP', 'RBR', '$', 'SYM', 'CD', 'IN', 'NN', 'PRP$', 'VBG', 'POS', 'NNP', 'JJS', 'PDT', 'DT', 'NNS', 'RBS', 'JJ', 'TO', ',', '-LRB-', 'VBN', "''", '-NONE-', '.', 'EX', 'WDT', 'VBD', 'RB', 'FW', 'VBZ', 'VB', 'MD', ':', 'LS', 'WP', 'CC', 'WP$', 'UH', '#', '``', 'PRP'}
====September 08, 2018 10:52:55 AM====
good z: [(('IN', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 9), (('DT', ''), 1), (('.', ''), 3), (('CC', ''), 1)]
bad z: [(('JJR', ''), 52), (('RP', ''), 6), (('WRB', ''), 10), (('NNPS', ''), 7), (('-RRB-', ''), 2), (('VBP', ''), 19), (('CD', ''), 548), (('IN', ''), 865), (('NN', ''), 1325), (('PRP$', ''), 265), (('VBG', ''), 166), (('POS', ''), 267), (('NNP', ''), 422), (('JJS', ''), 37), (('DT', ''), 2930), (('NNS', ''), 117), (('JJ', ''), 1973), (('TO', ''), 50), ((',', ''), 186), (('-LRB-', ''), 1), (('VBN', ''), 118), (("''", ''), 28), (('-NONE-', ''), 75), (('.', ''), 97), (('WDT', ''), 1), (('VBD', ''), 70), (('RB', ''), 46), (('VBZ', ''), 56), (('VB', ''), 144), ((':', ''), 12), (('WP', ''), 3), (('CC', ''), 216), (('WP$', ''), 7), (('``', ''), 58), (('PRP', ''), 3)]
====September 08, 2018 10:52:56 AM====
... trying from-tag: JJR
m1: Change JJR to RBR if preceding tag is MD. score= 1
... trying from-tag: RP
m1: Change RP to IN if preceding tag is JJR. score= 2
... trying from-tag: WRB
... trying from-tag: NNPS
... trying from-tag: -RRB-
... trying from-tag: VBP
m1: Change VBP to VB if preceding tag is MD. score= 59
... trying from-tag: RBR
... trying from-tag: $
... trying from-tag: SYM
... trying from-tag: CD
... trying from-tag: IN
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 82
... trying from-tag: PRP$
... trying from-tag: VBG
... trying from-tag: POS
... trying from-tag: NNP
... trying from-tag: JJS
... trying from-tag: PDT
... trying from-tag: DT
... trying from-tag: NNS
... trying from-tag: RBS
... trying from-tag: JJ
... trying from-tag: TO
... trying from-tag: ,
... trying from-tag: -LRB-
... trying from-tag: VBN
... trying from-tag: ''
... trying from-tag: -NONE-
... trying from-tag: .
... trying from-tag: EX
... trying from-tag: WDT
... trying from-tag: VBD
... trying from-tag: RB
... trying from-tag: FW
... trying from-tag: VBZ
... trying from-tag: VB
... trying from-tag: MD
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: WP
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: #
... trying from-tag: ``
... trying from-tag: PRP
--> m1: Change NN to VB if preceding tag is MD. score= 82
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 283, in <module>
    best_transform_DEFAULT = tagger.learn()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 84, in learn
    self.apply_transform(best_transform)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 192, in apply_transform
    self.tagged_words[pos][1] = toTag
TypeError: 'tuple' object does not support item assignment
>>> tagger.tagged_words[:3]
[('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ',')]
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 02:56:15 PM====
====September 08, 2018 02:56:20 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80856 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80856 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'LS', 'TO', 'SYM', 'VBG', 'NNPS', 'VB', 'VBP', 'PDT', 'CD', "''", 'IN', 'CC', 'JJ', 'WP$', 'DT', ':', '-NONE-', 'JJS', 'PRP$', 'UH', 'WDT', '#', 'NN', 'RBR', 'JJR', 'MD', '$', 'RBS', '-LRB-', 'POS', ',', 'VBN', 'FW', 'WRB', 'NNS', 'PRP', 'EX', '-RRB-', 'VBZ', 'RB', 'VBD', '``', 'NNP', 'WP', '.', 'RP'}
====September 08, 2018 02:56:20 PM====
good z: [(('IN', ''), 1), (('CC', ''), 1), (('JJ', ''), 1), (('DT', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 10), (('.', ''), 3)]
bad z: [(('TO', ''), 53), (('VBG', ''), 163), (('NNPS', ''), 6), (('VB', ''), 153), (('VBP', ''), 18), (('CD', ''), 554), (("''", ''), 24), (('IN', ''), 849), (('CC', ''), 217), (('JJ', ''), 1946), (('WP$', ''), 7), (('DT', ''), 2942), ((':', ''), 11), (('-NONE-', ''), 100), (('JJS', ''), 41), (('PRP$', ''), 262), (('WDT', ''), 1), (('NN', ''), 1319), (('JJR', ''), 57), (('-LRB-', ''), 2), (('POS', ''), 265), ((',', ''), 193), (('VBN', ''), 123), (('WRB', ''), 10), (('NNS', ''), 119), (('PRP', ''), 3), (('-RRB-', ''), 5), (('VBZ', ''), 60), (('RB', ''), 36), (('VBD', ''), 75), (('``', ''), 52), (('NNP', ''), 425), (('WP', ''), 4), (('.', ''), 103), (('RP', ''), 9)]
====September 08, 2018 02:56:20 PM====
... trying from-tag: LS
... trying from-tag: TO
... trying from-tag: SYM
... trying from-tag: VBG
... trying from-tag: NNPS
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: PDT
... trying from-tag: CD
... trying from-tag: ''
... trying from-tag: IN
... trying from-tag: CC
... trying from-tag: JJ
... trying from-tag: WP$
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: JJS
... trying from-tag: PRP$
... trying from-tag: UH
... trying from-tag: WDT
... trying from-tag: #
... trying from-tag: NN
... trying from-tag: RBR
... trying from-tag: JJR
... trying from-tag: MD
... trying from-tag: $
... trying from-tag: RBS
... trying from-tag: -LRB-
... trying from-tag: POS
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: FW
... trying from-tag: WRB
... trying from-tag: NNS
... trying from-tag: PRP
... trying from-tag: EX
... trying from-tag: -RRB-
... trying from-tag: VBZ
... trying from-tag: RB
... trying from-tag: VBD
... trying from-tag: ``
... trying from-tag: NNP
... trying from-tag: WP
... trying from-tag: .
... trying from-tag: RP
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 284, in <module>
    typeT, fT, tT, zT, wT, desc = best_transform_DEFAULT[0]
ValueError: not enough values to unpack (expected 6, got 2)
>>> tagger.transforms_queue
[(['NIL', '', '', '', '', "Don't change the tag%s%s%s%s."], 0)]
>>> tagger.printTransform(rule) for rule in tagger.transforms_queue
SyntaxError: invalid syntax
>>> for rule, score in tagger.transforms_queue:
	tagger.printTransform(rule)

	
Traceback (most recent call last):
  File "<pyshell#309>", line 2, in <module>
    tagger.printTransform(rule)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 65, in printTransform
    typeT, fromTag, toTag, zTag, wTag, desc = transform[0]
ValueError: not enough values to unpack (expected 6, got 3)
>>> tagger.transforms_queue[0]
(['NIL', '', '', '', '', "Don't change the tag%s%s%s%s."], 0)
>>> for rule, score in tagger.transforms_queue:
	print(rule)

	
['NIL', '', '', '', '', "Don't change the tag%s%s%s%s."]
>>> tagger.printTransform(tagger.transforms_queue[0][1])
Traceback (most recent call last):
  File "<pyshell#313>", line 1, in <module>
    tagger.printTransform(tagger.transforms_queue[0][1])
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 65, in printTransform
    typeT, fromTag, toTag, zTag, wTag, desc = transform[0]
TypeError: 'int' object is not subscriptable
>>> tagger.printTransform(tagger.transforms_queue[0]

			  )
NIL: Don't change the tag. score= 0
>>> for rule in tagger.transforms_queue:
	tagger.printTransform(rule)

	
NIL: Don't change the tag. score= 0
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 04:13:45 PM====
====September 08, 2018 04:13:50 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80133 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    80133 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'POS', 'CC', '``', 'WRB', 'PRP', 'DT', 'NN', 'JJR', 'RBS', '$', 'PRP$', 'MD', 'WP', 'PDT', 'NNPS', 'RBR', 'FW', 'TO', 'EX', ',', 'SYM', "''", 'VBP', 'WP$', 'UH', 'VBZ', 'NNP', 'NNS', '-RRB-', '-NONE-', 'WDT', 'VBG', 'VB', 'IN', 'RB', '#', 'JJS', 'JJ', '-LRB-', 'RP', ':', 'LS', '.', 'CD', 'VBD', 'VBN'}
====September 08, 2018 04:13:50 PM====
good z: [(('CC', ''), 1), (('DT', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 11), (('JJ', ''), 1), (('.', ''), 3)]
bad z: [(('POS', ''), 266), (('CC', ''), 215), (('``', ''), 51), (('WRB', ''), 7), (('PRP', ''), 3), (('DT', ''), 2937), (('NN', ''), 1344), (('JJR', ''), 52), (('PRP$', ''), 266), (('WP', ''), 3), (('NNPS', ''), 7), (('TO', ''), 55), ((',', ''), 186), (("''", ''), 24), (('VBP', ''), 19), (('WP$', ''), 6), (('VBZ', ''), 50), (('NNP', ''), 435), (('NNS', ''), 120), (('-RRB-', ''), 4), (('-NONE-', ''), 86), (('WDT', ''), 2), (('VBG', ''), 162), (('VB', ''), 134), (('IN', ''), 857), (('RB', ''), 41), (('JJS', ''), 39), (('JJ', ''), 1916), (('-LRB-', ''), 1), (('RP', ''), 6), ((':', ''), 14), (('.', ''), 97), (('CD', ''), 536), (('VBD', ''), 72), (('VBN', ''), 124)]
====September 08, 2018 04:13:50 PM====
... trying from-tag: POS
m1: Change POS to '' if preceding tag is .. score= 3
m1: Change POS to VBZ if preceding tag is PRP. score= 42
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is PRP. score= 42
m1: Change POS to VBZ if preceding tag is PRP. score= 42
... trying from-tag: POS
m1: Change POS to '' if preceding tag is .. score= 3
m1: Change POS to VBZ if preceding tag is EX. score= 12
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is EX. score= 12
m1: Change POS to VBZ if preceding tag is EX. score= 12
==> m1: Change POS to VBZ if preceding tag is EX. score= 12
m1: Change POS to VBZ if preceding tag is PRP. score= 42
m1: Change POS to VBZ if preceding tag is EX. score= 12
====September 08, 2018 04:17:03 PM====
====September 08, 2018 04:17:09 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80029 [('Rudolph', 'NNP'), ('Agnew', 'NNP'), (',', ','), ('55', 'CD'), ('years', 'NNS'), ('old', 'JJ'), ('and', 'CC'), ('former', 'JJ'), ('chairman', 'NN'), ('of', 'IN')]
True Tagging:    80029 [('Rudolph', 'NNP'), ('Agnew', 'NNP'), (',', ','), ('55', 'CD'), ('years', 'NNS'), ('old', 'JJ'), ('and', 'CC'), ('former', 'JJ'), ('chairman', 'NN'), ('of', 'IN')]
Tag Set: 46 {'POS', 'CC', '``', 'WRB', 'PRP', 'DT', 'NN', 'JJR', 'RBS', '$', 'PRP$', 'MD', 'WP', 'PDT', 'NNPS', 'RBR', 'FW', 'TO', 'EX', ',', 'SYM', "''", 'VBP', 'WP$', 'UH', 'VBZ', 'NNP', 'NNS', '-RRB-', '-NONE-', 'WDT', 'VBG', 'VB', 'IN', 'RB', '#', 'JJS', 'JJ', '-LRB-', 'RP', ':', 'LS', '.', 'CD', 'VBD', 'VBN'}
====September 08, 2018 04:17:09 PM====
good z: [(('CC', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 10), (('.', ''), 2)]
bad z: [(('POS', ''), 258), (('CC', ''), 207), (('``', ''), 57), (('WRB', ''), 7), (('PRP', ''), 2), (('DT', ''), 2934), (('NN', ''), 1313), (('JJR', ''), 61), (('PRP$', ''), 253), (('WP', ''), 4), (('NNPS', ''), 6), (('TO', ''), 48), ((',', ''), 180), (("''", ''), 29), (('VBP', ''), 19), (('WP$', ''), 6), (('VBZ', ''), 61), (('NNP', ''), 426), (('NNS', ''), 116), (('-RRB-', ''), 5), (('-NONE-', ''), 107), (('WDT', ''), 2), (('VBG', ''), 153), (('VB', ''), 145), (('IN', ''), 876), (('RB', ''), 40), (('JJS', ''), 39), (('JJ', ''), 1944), (('-LRB-', ''), 1), (('RP', ''), 8), ((':', ''), 10), (('.', ''), 102), (('CD', ''), 523), (('VBD', ''), 74), (('VBN', ''), 104)]
====September 08, 2018 04:17:09 PM====
... trying from-tag: POS
m1: Change POS to '' if preceding tag is .. score= 3
m1: Change POS to VBZ if preceding tag is PRP. score= 41
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is PRP. score= 41
m1: Change POS to VBZ if preceding tag is PRP. score= 41
... trying from-tag: POS
m1: Change POS to '' if preceding tag is .. score= 3
m1: Change POS to VBZ if preceding tag is EX. score= 15
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is EX. score= 15
m1: Change POS to VBZ if preceding tag is EX. score= 15
==> m1: Change POS to VBZ if preceding tag is EX. score= 15
m1: Change POS to VBZ if preceding tag is PRP. score= 41
m1: Change POS to VBZ if preceding tag is EX. score= 15
====September 08, 2018 04:20:22 PM====
====September 08, 2018 04:20:28 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80552 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80552 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'POS', 'CC', '``', 'WRB', 'PRP', 'DT', 'NN', 'JJR', 'RBS', '$', 'PRP$', 'MD', 'WP', 'PDT', 'NNPS', 'RBR', 'FW', 'TO', 'EX', ',', 'SYM', "''", 'VBP', 'WP$', 'UH', 'VBZ', 'NNP', 'NNS', '-RRB-', '-NONE-', 'WDT', 'VBG', 'VB', 'IN', 'RB', '#', 'JJS', 'JJ', '-LRB-', 'RP', ':', 'LS', '.', 'CD', 'VBD', 'VBN'}
====September 08, 2018 04:20:28 PM====
good z: [(('CC', ''), 1), (('DT', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 10), (('IN', ''), 1), (('JJ', ''), 1), (('.', ''), 2)]
bad z: [(('POS', ''), 271), (('CC', ''), 203), (('``', ''), 51), (('WRB', ''), 8), (('PRP', ''), 3), (('DT', ''), 2915), (('NN', ''), 1297), (('JJR', ''), 69), (('PRP$', ''), 249), (('WP', ''), 3), (('NNPS', ''), 6), (('TO', ''), 50), ((',', ''), 176), (("''", ''), 24), (('VBP', ''), 16), (('WP$', ''), 7), (('VBZ', ''), 58), (('NNP', ''), 424), (('NNS', ''), 107), (('-RRB-', ''), 5), (('-NONE-', ''), 97), (('VBG', ''), 165), (('VB', ''), 139), (('IN', ''), 868), (('RB', ''), 37), (('JJS', ''), 47), (('JJ', ''), 1963), (('-LRB-', ''), 2), (('RP', ''), 8), ((':', ''), 12), (('.', ''), 102), (('CD', ''), 575), (('VBD', ''), 72), (('VBN', ''), 115)]
====September 08, 2018 04:20:28 PM====
... trying from-tag: POS
m1: Change POS to '' if preceding tag is .. score= 4
m1: Change POS to VBZ if preceding tag is PRP. score= 41
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is PRP. score= 41
m1: Change POS to VBZ if preceding tag is PRP. score= 41
... trying from-tag: POS
m1: Change POS to '' if preceding tag is .. score= 4
m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
==> m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
m1: Change POS to VBZ if preceding tag is PRP. score= 41
m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
====September 08, 2018 04:23:44 PM====
====September 08, 2018 04:23:50 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80559 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    80559 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'POS', 'CC', '``', 'WRB', 'PRP', 'DT', 'NN', 'JJR', 'RBS', '$', 'PRP$', 'MD', 'WP', 'PDT', 'NNPS', 'RBR', 'FW', 'TO', 'EX', ',', 'SYM', "''", 'VBP', 'WP$', 'UH', 'VBZ', 'NNP', 'NNS', '-RRB-', '-NONE-', 'WDT', 'VBG', 'VB', 'IN', 'RB', '#', 'JJS', 'JJ', '-LRB-', 'RP', ':', 'LS', '.', 'CD', 'VBD', 'VBN'}
====September 08, 2018 04:23:50 PM====
good z: [(('CC', ''), 1), (('DT', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 8), (('IN', ''), 1), (('JJ', ''), 1), (('.', ''), 2)]
bad z: [(('POS', ''), 271), (('CC', ''), 203), (('``', ''), 57), (('WRB', ''), 6), (('PRP', ''), 3), (('DT', ''), 2939), (('NN', ''), 1323), (('JJR', ''), 65), (('PRP$', ''), 264), (('WP', ''), 2), (('NNPS', ''), 7), (('TO', ''), 54), ((',', ''), 192), (("''", ''), 32), (('VBP', ''), 17), (('WP$', ''), 7), (('VBZ', ''), 53), (('NNP', ''), 417), (('NNS', ''), 120), (('-RRB-', ''), 4), (('-NONE-', ''), 93), (('WDT', ''), 1), (('VBG', ''), 165), (('VB', ''), 142), (('IN', ''), 896), (('RB', ''), 44), (('JJS', ''), 43), (('JJ', ''), 1920), (('-LRB-', ''), 1), (('RP', ''), 9), ((':', ''), 11), (('.', ''), 92), (('CD', ''), 545), (('VBD', ''), 69), (('VBN', ''), 118)]
====September 08, 2018 04:23:50 PM====
... trying from-tag: POS
m1: Change POS to '' if preceding tag is .. score= 4
m1: Change POS to VBZ if preceding tag is PRP. score= 38
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is PRP. score= 38
m1: Change POS to VBZ if preceding tag is PRP. score= 38
... trying from-tag: POS
m1: Change POS to '' if preceding tag is .. score= 4
m1: Change POS to VBZ if preceding tag is EX. score= 14
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is EX. score= 14
m1: Change POS to VBZ if preceding tag is EX. score= 14
==> m1: Change POS to VBZ if preceding tag is EX. score= 14
m1: Change POS to VBZ if preceding tag is PRP. score= 38
m1: Change POS to VBZ if preceding tag is EX. score= 14
====September 08, 2018 04:27:08 PM====
====September 08, 2018 04:27:13 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79558 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79558 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'POS', 'CC', '``', 'WRB', 'PRP', 'DT', 'NN', 'JJR', 'RBS', '$', 'PRP$', 'MD', 'WP', 'PDT', 'NNPS', 'RBR', 'FW', 'TO', 'EX', ',', 'SYM', "''", 'VBP', 'WP$', 'UH', 'VBZ', 'NNP', 'NNS', '-RRB-', '-NONE-', 'WDT', 'VBG', 'VB', 'IN', 'RB', '#', 'JJS', 'JJ', '-LRB-', 'RP', ':', 'LS', '.', 'CD', 'VBD', 'VBN'}
====September 08, 2018 04:27:13 PM====
good z: [(('CC', ''), 1), (('DT', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 9), (('IN', ''), 1), (('JJ', ''), 1), (('.', ''), 2)]
bad z: [(('POS', ''), 274), (('CC', ''), 210), (('``', ''), 54), (('WRB', ''), 9), (('PRP', ''), 2), (('DT', ''), 2874), (('NN', ''), 1304), (('JJR', ''), 60), (('PRP$', ''), 251), (('WP', ''), 4), (('NNPS', ''), 6), (('TO', ''), 51), ((',', ''), 190), (("''", ''), 26), (('VBP', ''), 18), (('WP$', ''), 8), (('VBZ', ''), 65), (('NNP', ''), 417), (('NNS', ''), 113), (('-RRB-', ''), 4), (('-NONE-', ''), 86), (('WDT', ''), 2), (('VBG', ''), 150), (('VB', ''), 135), (('IN', ''), 853), (('RB', ''), 41), (('JJS', ''), 41), (('JJ', ''), 1923), (('-LRB-', ''), 1), (('RP', ''), 10), ((':', ''), 12), (('.', ''), 87), (('CD', ''), 524), (('VBD', ''), 71), (('VBN', ''), 112)]
====September 08, 2018 04:27:13 PM====
... trying from-tag: POS
m1: Change POS to '' if preceding tag is ,. score= 2
m1: Change POS to VBZ if preceding tag is PRP. score= 41
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is PRP. score= 41
m1: Change POS to VBZ if preceding tag is PRP. score= 41
... trying from-tag: POS
m1: Change POS to '' if preceding tag is ,. score= 2
m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: PRP
... trying from-tag: DT
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: RBS
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: MD
... trying from-tag: WP
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBR
... trying from-tag: FW
... trying from-tag: TO
... trying from-tag: EX
... trying from-tag: ,
... trying from-tag: SYM
... trying from-tag: ''
... trying from-tag: VBP
... trying from-tag: WP$
... trying from-tag: UH
... trying from-tag: VBZ
... trying from-tag: NNP
... trying from-tag: NNS
... trying from-tag: -RRB-
... trying from-tag: -NONE-
... trying from-tag: WDT
... trying from-tag: VBG
... trying from-tag: VB
... trying from-tag: IN
... trying from-tag: RB
... trying from-tag: #
... trying from-tag: JJS
... trying from-tag: JJ
... trying from-tag: -LRB-
... trying from-tag: RP
... trying from-tag: :
... trying from-tag: LS
... trying from-tag: .
... trying from-tag: CD
... trying from-tag: VBD
... trying from-tag: VBN
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
==> m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
m1: Change POS to VBZ if preceding tag is PRP. score= 41
m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
====September 08, 2018 04:30:35 PM====
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 04:47:09 PM====
====September 08, 2018 04:47:14 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79928 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79928 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NN', 'JJR', 'WRB', 'CC', 'TO', "''", '-LRB-', 'PRP$', '-RRB-', 'RBS', 'PDT', 'VBD', 'RP', 'JJS', 'VBZ', 'IN', 'WDT', ':', '-NONE-', 'VBG', 'NNS', 'DT', '$', 'WP$', 'VB', 'VBP', 'NNPS', '``', 'FW', 'WP', 'EX', 'JJ', 'UH', 'LS', 'MD', 'RBR', 'NNP', '.', '#', 'PRP', 'SYM', ',', 'VBN', 'CD', 'POS', 'RB'}
====September 08, 2018 04:47:14 PM====
good z: [(('CC', ''), 1), (('PRP$', ''), 1), (('DT', ''), 1), (('JJ', ''), 1), (('NNP', ''), 12), (('.', ''), 3)]
bad z: [(('NN', ''), 1285), (('JJR', ''), 64), (('WRB', ''), 8), (('CC', ''), 219), (('TO', ''), 48), (("''", ''), 28), (('-LRB-', ''), 2), (('PRP$', ''), 264), (('-RRB-', ''), 5), (('VBD', ''), 67), (('RP', ''), 8), (('JJS', ''), 38), (('VBZ', ''), 58), (('IN', ''), 856), (('WDT', ''), 1), ((':', ''), 13), (('-NONE-', ''), 96), (('VBG', ''), 163), (('NNS', ''), 114), (('DT', ''), 2879), (('WP$', ''), 6), (('VB', ''), 133), (('VBP', ''), 19), (('NNPS', ''), 6), (('``', ''), 53), (('WP', ''), 4), (('JJ', ''), 1921), (('NNP', ''), 415), (('.', ''), 96), (('PRP', ''), 2), ((',', ''), 172), (('VBN', ''), 116), (('CD', ''), 550), (('POS', ''), 267), (('RB', ''), 44)]
====September 08, 2018 04:47:15 PM====
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 58
... trying from-tag: JJR
m1: Change JJR to RBR if preceding tag is MD. score= 59
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> m1: Change JJR to RBR if preceding tag is MD. score= 59
m1: Change JJR to RBR if preceding tag is MD. score= 59
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 58
... trying from-tag: JJR
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> m1: Change NN to VB if preceding tag is MD. score= 58
m1: Change NN to VB if preceding tag is MD. score= 58
==> m1: Change NN to VB if preceding tag is MD. score= 58
---- TRANSFORM SEQUENCE ----
m1: Change JJR to RBR if preceding tag is MD. score= 59
m1: Change NN to VB if preceding tag is MD. score= 58
====September 08, 2018 04:50:28 PM====
====September 08, 2018 04:50:33 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80336 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80336 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NN', 'JJR', 'WRB', 'CC', 'TO', "''", '-LRB-', 'PRP$', '-RRB-', 'RBS', 'PDT', 'VBD', 'RP', 'JJS', 'VBZ', 'IN', 'WDT', ':', '-NONE-', 'VBG', 'NNS', 'DT', '$', 'WP$', 'VB', 'VBP', 'NNPS', '``', 'FW', 'WP', 'EX', 'JJ', 'UH', 'LS', 'MD', 'RBR', 'NNP', '.', '#', 'PRP', 'SYM', ',', 'VBN', 'CD', 'POS', 'RB'}
====September 08, 2018 04:50:33 PM====
good z: [(('CC', ''), 1), (('PRP$', ''), 1), (('IN', ''), 1), (('DT', ''), 1), (('JJ', ''), 1), (('NNP', ''), 10), (('.', ''), 3)]
bad z: [(('NN', ''), 1322), (('JJR', ''), 56), (('WRB', ''), 10), (('CC', ''), 216), (('TO', ''), 47), (("''", ''), 28), (('-LRB-', ''), 2), (('PRP$', ''), 246), (('-RRB-', ''), 5), (('VBD', ''), 72), (('RP', ''), 11), (('JJS', ''), 41), (('VBZ', ''), 59), (('IN', ''), 849), (('WDT', ''), 2), ((':', ''), 13), (('-NONE-', ''), 95), (('VBG', ''), 157), (('NNS', ''), 115), (('DT', ''), 2934), (('WP$', ''), 5), (('VB', ''), 138), (('VBP', ''), 23), (('NNPS', ''), 6), (('``', ''), 54), (('WP', ''), 3), (('JJ', ''), 1977), (('NNP', ''), 412), (('.', ''), 100), (('PRP', ''), 2), ((',', ''), 199), (('VBN', ''), 120), (('CD', ''), 540), (('POS', ''), 265), (('RB', ''), 46)]
====September 08, 2018 04:50:33 PM====
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 59
... trying from-tag: JJR
m1: Change JJR to RBR if preceding tag is MD. score= 60
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> m1: Change JJR to RBR if preceding tag is MD. score= 60
m1: Change JJR to RBR if preceding tag is MD. score= 60
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 59
... trying from-tag: JJR
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> m1: Change NN to VB if preceding tag is MD. score= 59
m1: Change NN to VB if preceding tag is MD. score= 59
==> m1: Change NN to VB if preceding tag is MD. score= 59
---- TRANSFORM SEQUENCE ----
m1: Change JJR to RBR if preceding tag is MD. score= 60
m1: Change NN to VB if preceding tag is MD. score= 59
====September 08, 2018 04:53:48 PM====
====September 08, 2018 04:53:53 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81042 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81042 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NN', 'JJR', 'WRB', 'CC', 'TO', "''", '-LRB-', 'PRP$', '-RRB-', 'RBS', 'PDT', 'VBD', 'RP', 'JJS', 'VBZ', 'IN', 'WDT', ':', '-NONE-', 'VBG', 'NNS', 'DT', '$', 'WP$', 'VB', 'VBP', 'NNPS', '``', 'FW', 'WP', 'EX', 'JJ', 'UH', 'LS', 'MD', 'RBR', 'NNP', '.', '#', 'PRP', 'SYM', ',', 'VBN', 'CD', 'POS', 'RB'}
====September 08, 2018 04:53:53 PM====
good z: [(('CC', ''), 1), (('PRP$', ''), 1), (('IN', ''), 1), (('JJ', ''), 1), (('NNP', ''), 10), (('.', ''), 3)]
bad z: [(('NN', ''), 1335), (('JJR', ''), 56), (('WRB', ''), 8), (('CC', ''), 221), (('TO', ''), 48), (("''", ''), 21), (('-LRB-', ''), 2), (('PRP$', ''), 271), (('-RRB-', ''), 4), (('VBD', ''), 70), (('RP', ''), 11), (('JJS', ''), 43), (('VBZ', ''), 53), (('IN', ''), 857), (('WDT', ''), 2), ((':', ''), 12), (('-NONE-', ''), 97), (('VBG', ''), 162), (('NNS', ''), 114), (('DT', ''), 2944), (('WP$', ''), 7), (('VB', ''), 140), (('VBP', ''), 22), (('NNPS', ''), 5), (('``', ''), 58), (('WP', ''), 2), (('JJ', ''), 1964), (('NNP', ''), 429), (('.', ''), 103), (('PRP', ''), 2), ((',', ''), 188), (('VBN', ''), 115), (('CD', ''), 566), (('POS', ''), 260), (('RB', ''), 42)]
====September 08, 2018 04:53:53 PM====
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 63
... trying from-tag: JJR
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> m1: Change NN to VB if preceding tag is MD. score= 63
m1: Change NN to VB if preceding tag is MD. score= 63
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change NN to VB if preceding tag is MD. score= 63
NIL: Don't change the tag. score= 0
====September 08, 2018 04:57:11 PM====
====September 08, 2018 04:57:17 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80969 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80969 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NN', 'JJR', 'WRB', 'CC', 'TO', "''", '-LRB-', 'PRP$', '-RRB-', 'RBS', 'PDT', 'VBD', 'RP', 'JJS', 'VBZ', 'IN', 'WDT', ':', '-NONE-', 'VBG', 'NNS', 'DT', '$', 'WP$', 'VB', 'VBP', 'NNPS', '``', 'FW', 'WP', 'EX', 'JJ', 'UH', 'LS', 'MD', 'RBR', 'NNP', '.', '#', 'PRP', 'SYM', ',', 'VBN', 'CD', 'POS', 'RB'}
====September 08, 2018 04:57:17 PM====
good z: [(('CC', ''), 1), (('IN', ''), 1), (('DT', ''), 1), (('JJ', ''), 1), (('NNP', ''), 9), (('.', ''), 2)]
bad z: [(('NN', ''), 1344), (('JJR', ''), 63), (('WRB', ''), 10), (('CC', ''), 209), (('TO', ''), 46), (("''", ''), 30), (('-LRB-', ''), 2), (('PRP$', ''), 269), (('-RRB-', ''), 5), (('VBD', ''), 73), (('RP', ''), 8), (('JJS', ''), 44), (('VBZ', ''), 55), (('IN', ''), 847), (('WDT', ''), 1), ((':', ''), 11), (('-NONE-', ''), 95), (('VBG', ''), 158), (('NNS', ''), 121), (('DT', ''), 2908), (('WP$', ''), 6), (('VB', ''), 139), (('VBP', ''), 18), (('NNPS', ''), 5), (('``', ''), 60), (('WP', ''), 4), (('JJ', ''), 1965), (('NNP', ''), 433), (('.', ''), 98), (('PRP', ''), 3), ((',', ''), 177), (('VBN', ''), 121), (('CD', ''), 532), (('POS', ''), 269), (('RB', ''), 43)]
====September 08, 2018 04:57:17 PM====
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 64
... trying from-tag: JJR
m1: Change JJR to RBR if preceding tag is MD. score= 65
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> m1: Change JJR to RBR if preceding tag is MD. score= 65
m1: Change JJR to RBR if preceding tag is MD. score= 65
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 64
... trying from-tag: JJR
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> m1: Change NN to VB if preceding tag is MD. score= 64
m1: Change NN to VB if preceding tag is MD. score= 64
==> m1: Change NN to VB if preceding tag is MD. score= 64
---- TRANSFORM SEQUENCE ----
m1: Change JJR to RBR if preceding tag is MD. score= 65
m1: Change NN to VB if preceding tag is MD. score= 64
====September 08, 2018 05:00:34 PM====
====September 08, 2018 05:00:39 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80725 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80725 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NN', 'JJR', 'WRB', 'CC', 'TO', "''", '-LRB-', 'PRP$', '-RRB-', 'RBS', 'PDT', 'VBD', 'RP', 'JJS', 'VBZ', 'IN', 'WDT', ':', '-NONE-', 'VBG', 'NNS', 'DT', '$', 'WP$', 'VB', 'VBP', 'NNPS', '``', 'FW', 'WP', 'EX', 'JJ', 'UH', 'LS', 'MD', 'RBR', 'NNP', '.', '#', 'PRP', 'SYM', ',', 'VBN', 'CD', 'POS', 'RB'}
====September 08, 2018 05:00:39 PM====
good z: [(('CC', ''), 1), (('PRP$', ''), 1), (('IN', ''), 1), (('DT', ''), 1), (('JJ', ''), 1), (('NNP', ''), 9), (('.', ''), 2)]
bad z: [(('NN', ''), 1333), (('JJR', ''), 64), (('WRB', ''), 10), (('CC', ''), 216), (('TO', ''), 51), (("''", ''), 27), (('-LRB-', ''), 1), (('PRP$', ''), 255), (('-RRB-', ''), 4), (('VBD', ''), 71), (('RP', ''), 9), (('JJS', ''), 41), (('VBZ', ''), 53), (('IN', ''), 844), (('WDT', ''), 2), ((':', ''), 10), (('-NONE-', ''), 98), (('VBG', ''), 164), (('NNS', ''), 114), (('DT', ''), 2920), (('WP$', ''), 6), (('VB', ''), 141), (('VBP', ''), 21), (('NNPS', ''), 7), (('``', ''), 54), (('WP', ''), 3), (('JJ', ''), 1991), (('NNP', ''), 407), (('.', ''), 93), (('PRP', ''), 3), ((',', ''), 195), (('VBN', ''), 122), (('CD', ''), 553), (('POS', ''), 261), (('RB', ''), 41)]
====September 08, 2018 05:00:39 PM====
... trying from-tag: NN
m1: Change NN to VB if preceding tag is MD. score= 55
... trying from-tag: JJR
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> m1: Change NN to VB if preceding tag is MD. score= 55
m1: Change NN to VB if preceding tag is MD. score= 55
... trying from-tag: NN
... trying from-tag: JJR
... trying from-tag: WRB
... trying from-tag: CC
... trying from-tag: TO
... trying from-tag: ''
... trying from-tag: -LRB-
... trying from-tag: PRP$
... trying from-tag: -RRB-
... trying from-tag: RBS
... trying from-tag: PDT
... trying from-tag: VBD
... trying from-tag: RP
... trying from-tag: JJS
... trying from-tag: VBZ
... trying from-tag: IN
... trying from-tag: WDT
... trying from-tag: :
... trying from-tag: -NONE-
... trying from-tag: VBG
... trying from-tag: NNS
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: WP$
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: NNPS
... trying from-tag: ``
... trying from-tag: FW
... trying from-tag: WP
... trying from-tag: EX
... trying from-tag: JJ
... trying from-tag: UH
... trying from-tag: LS
... trying from-tag: MD
... trying from-tag: RBR
... trying from-tag: NNP
... trying from-tag: .
... trying from-tag: #
... trying from-tag: PRP
... trying from-tag: SYM
... trying from-tag: ,
... trying from-tag: VBN
... trying from-tag: CD
... trying from-tag: POS
... trying from-tag: RB
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change NN to VB if preceding tag is MD. score= 55
NIL: Don't change the tag. score= 0
====September 08, 2018 05:04:03 PM====
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 05:28:19 PM====
====September 08, 2018 05:28:25 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79882 [('Rudolph', 'NNP'), ('Agnew', 'NNP'), (',', ','), ('55', 'CD'), ('years', 'NNS'), ('old', 'JJ'), ('and', 'CC'), ('former', 'JJ'), ('chairman', 'NN'), ('of', 'IN')]
True Tagging:    79882 [('Rudolph', 'NNP'), ('Agnew', 'NNP'), (',', ','), ('55', 'CD'), ('years', 'NNS'), ('old', 'JJ'), ('and', 'CC'), ('former', 'JJ'), ('chairman', 'NN'), ('of', 'IN')]
Tag Set: 46 {'WP', '-LRB-', 'VBD', 'WDT', 'NNPS', 'CD', 'SYM', 'VBP', "''", 'VBZ', 'VB', 'JJ', '``', '.', 'JJS', 'IN', 'VBN', '$', 'PDT', 'UH', 'JJR', 'PRP', 'PRP$', ':', 'VBG', ',', 'WP$', 'WRB', 'RP', '-RRB-', 'DT', 'TO', 'RB', 'NNP', 'POS', 'FW', 'MD', 'RBR', 'NN', '-NONE-', 'NNS', 'RBS', '#', 'EX', 'LS', 'CC'}
---
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 266, in <module>
    print("Count incorrectly tagged words:", len(tb_training_mistagged_words))
NameError: name 'tb_training_mistagged_words' is not defined
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 05:29:31 PM====
====September 08, 2018 05:29:36 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80936 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    80936 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'VBZ', 'WRB', 'RBR', 'LS', '-RRB-', 'JJ', 'VBD', "''", 'WP', ',', 'CC', 'WP$', '$', '-LRB-', 'NNS', 'NNPS', 'VBG', '-NONE-', 'IN', 'VB', '#', 'UH', 'FW', 'PRP', 'PDT', 'TO', 'RBS', 'EX', 'DT', 'CD', 'WDT', 'JJS', 'RP', 'VBN', 'MD', 'VBP', 'JJR', 'POS', '.', 'SYM', 'NN', '``', 'RB', 'NNP', 'PRP$', ':'}
---
Count incorrectly tagged words: 3232
====September 08, 2018 05:29:36 PM====
good z: [(('JJ', ''), 1), (('CC', ''), 1), (('DT', ''), 1), (('.', ''), 3), (('NNP', ''), 10), (('PRP$', ''), 1)]
bad z: [(('VBZ', ''), 56), (('WRB', ''), 9), (('-RRB-', ''), 5), (('JJ', ''), 1987), (('VBD', ''), 72), (("''", ''), 24), (('WP', ''), 4), ((',', ''), 185), (('CC', ''), 216), (('WP$', ''), 8), (('-LRB-', ''), 2), (('NNS', ''), 111), (('NNPS', ''), 6), (('VBG', ''), 157), (('-NONE-', ''), 95), (('IN', ''), 872), (('VB', ''), 130), (('TO', ''), 48), (('DT', ''), 2945), (('CD', ''), 511), (('WDT', ''), 1), (('JJS', ''), 38), (('RP', ''), 8), (('VBN', ''), 121), (('VBP', ''), 20), (('JJR', ''), 63), (('POS', ''), 273), (('.', ''), 96), (('NN', ''), 1298), (('``', ''), 53), (('RB', ''), 41), (('NNP', ''), 419), (('PRP$', ''), 268), ((':', ''), 11)]
====September 08, 2018 05:29:36 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
m1: Change JJ to VB if preceding tag is MD. score= 6
m1: Change JJ to RB if preceding tag is MD. score= 8
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change JJ to RB if preceding tag is MD. score= 8
m1: Change JJ to RB if preceding tag is MD. score= 8
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
==> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
---- TRANSFORM SEQUENCE ----
m1: Change JJ to RB if preceding tag is MD. score= 8
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
====September 08, 2018 05:32:52 PM====
====September 08, 2018 05:32:58 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80456 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    80456 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'VBZ', 'WRB', 'RBR', 'LS', '-RRB-', 'JJ', 'VBD', "''", 'WP', ',', 'CC', 'WP$', '$', '-LRB-', 'NNS', 'NNPS', 'VBG', '-NONE-', 'IN', 'VB', '#', 'UH', 'FW', 'PRP', 'PDT', 'TO', 'RBS', 'EX', 'DT', 'CD', 'WDT', 'JJS', 'RP', 'VBN', 'MD', 'VBP', 'JJR', 'POS', '.', 'SYM', 'NN', '``', 'RB', 'NNP', 'PRP$', ':'}
---
Count incorrectly tagged words: 3195
====September 08, 2018 05:32:58 PM====
good z: [(('CC', ''), 1), (('IN', ''), 1), (('DT', ''), 1), (('.', ''), 2), (('NNP', ''), 10), (('PRP$', ''), 1)]
bad z: [(('VBZ', ''), 59), (('WRB', ''), 10), (('-RRB-', ''), 2), (('JJ', ''), 1959), (('VBD', ''), 72), (("''", ''), 27), (('WP', ''), 3), ((',', ''), 173), (('CC', ''), 215), (('WP$', ''), 6), (('-LRB-', ''), 1), (('NNS', ''), 109), (('NNPS', ''), 6), (('VBG', ''), 163), (('-NONE-', ''), 95), (('IN', ''), 830), (('VB', ''), 143), (('PRP', ''), 3), (('TO', ''), 53), (('DT', ''), 2931), (('CD', ''), 535), (('WDT', ''), 1), (('JJS', ''), 39), (('RP', ''), 9), (('VBN', ''), 119), (('VBP', ''), 19), (('JJR', ''), 60), (('POS', ''), 271), (('.', ''), 97), (('NN', ''), 1337), (('``', ''), 51), (('RB', ''), 41), (('NNP', ''), 419), (('PRP$', ''), 264), ((':', ''), 11)]
====September 08, 2018 05:32:58 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
m1: Change JJ to VB if preceding tag is MD. score= 6
m1: Change JJ to RB if preceding tag is MD. score= 8
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change JJ to RB if preceding tag is MD. score= 8
m1: Change JJ to RB if preceding tag is MD. score= 8
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change VBZ to NNS if preceding tag is VBD. score= 1
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
==> m1: Change VBZ to NNS if preceding tag is VBD. score= 1
---- TRANSFORM SEQUENCE ----
m1: Change JJ to RB if preceding tag is MD. score= 8
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
====September 08, 2018 05:36:14 PM====
====September 08, 2018 05:36:19 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80805 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80805 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'VBZ', 'WRB', 'RBR', 'LS', '-RRB-', 'JJ', 'VBD', "''", 'WP', ',', 'CC', 'WP$', '$', '-LRB-', 'NNS', 'NNPS', 'VBG', '-NONE-', 'IN', 'VB', '#', 'UH', 'FW', 'PRP', 'PDT', 'TO', 'RBS', 'EX', 'DT', 'CD', 'WDT', 'JJS', 'RP', 'VBN', 'MD', 'VBP', 'JJR', 'POS', '.', 'SYM', 'NN', '``', 'RB', 'NNP', 'PRP$', ':'}
---
Count incorrectly tagged words: 3185
====September 08, 2018 05:36:19 PM====
good z: [(('JJ', ''), 1), (('CC', ''), 1), (('IN', ''), 1), (('.', ''), 1), (('NNP', ''), 7), (('PRP$', ''), 1)]
bad z: [(('VBZ', ''), 57), (('WRB', ''), 9), (('-RRB-', ''), 5), (('JJ', ''), 1945), (('VBD', ''), 78), (("''", ''), 26), (('WP', ''), 3), ((',', ''), 194), (('CC', ''), 222), (('WP$', ''), 8), (('-LRB-', ''), 1), (('NNS', ''), 115), (('NNPS', ''), 5), (('VBG', ''), 164), (('-NONE-', ''), 95), (('IN', ''), 865), (('VB', ''), 147), (('PRP', ''), 2), (('TO', ''), 50), (('DT', ''), 2912), (('CD', ''), 551), (('WDT', ''), 2), (('JJS', ''), 40), (('RP', ''), 8), (('VBN', ''), 117), (('VBP', ''), 20), (('JJR', ''), 60), (('POS', ''), 282), (('.', ''), 100), (('NN', ''), 1340), (('``', ''), 56), (('RB', ''), 42), (('NNP', ''), 430), (('PRP$', ''), 254), ((':', ''), 10)]
====September 08, 2018 05:36:19 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
m1: Change JJ to VB if preceding tag is MD. score= 5
m1: Change JJ to RB if preceding tag is MD. score= 7
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change JJ to RB if preceding tag is MD. score= 7
m1: Change JJ to RB if preceding tag is MD. score= 7
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
==> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
---- TRANSFORM SEQUENCE ----
m1: Change JJ to RB if preceding tag is MD. score= 7
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
====September 08, 2018 05:39:37 PM====
====September 08, 2018 05:39:43 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81690 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81690 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'VBZ', 'WRB', 'RBR', 'LS', '-RRB-', 'JJ', 'VBD', "''", 'WP', ',', 'CC', 'WP$', '$', '-LRB-', 'NNS', 'NNPS', 'VBG', '-NONE-', 'IN', 'VB', '#', 'UH', 'FW', 'PRP', 'PDT', 'TO', 'RBS', 'EX', 'DT', 'CD', 'WDT', 'JJS', 'RP', 'VBN', 'MD', 'VBP', 'JJR', 'POS', '.', 'SYM', 'NN', '``', 'RB', 'NNP', 'PRP$', ':'}
---
Count incorrectly tagged words: 3248
====September 08, 2018 05:39:43 PM====
good z: [(('JJ', ''), 1), (('CC', ''), 1), (('IN', ''), 1), (('DT', ''), 1), (('.', ''), 3), (('NNP', ''), 11), (('PRP$', ''), 1)]
bad z: [(('VBZ', ''), 54), (('WRB', ''), 8), (('-RRB-', ''), 5), (('JJ', ''), 1981), (('VBD', ''), 72), (("''", ''), 22), (('WP', ''), 4), ((',', ''), 179), (('CC', ''), 216), (('WP$', ''), 5), (('-LRB-', ''), 2), (('NNS', ''), 117), (('NNPS', ''), 7), (('VBG', ''), 160), (('-NONE-', ''), 105), (('IN', ''), 877), (('VB', ''), 140), (('PRP', ''), 3), (('TO', ''), 48), (('DT', ''), 2953), (('CD', ''), 568), (('WDT', ''), 2), (('JJS', ''), 42), (('RP', ''), 8), (('VBN', ''), 124), (('VBP', ''), 20), (('JJR', ''), 56), (('POS', ''), 265), (('.', ''), 100), (('NN', ''), 1348), (('``', ''), 52), (('RB', ''), 45), (('NNP', ''), 424), (('PRP$', ''), 268), ((':', ''), 13)]
====September 08, 2018 05:39:43 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
m1: Change JJ to VB if preceding tag is MD. score= 3
m1: Change JJ to RB if preceding tag is MD. score= 5
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change JJ to RB if preceding tag is MD. score= 5
m1: Change JJ to RB if preceding tag is MD. score= 5
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
==> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
---- TRANSFORM SEQUENCE ----
m1: Change JJ to RB if preceding tag is MD. score= 5
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
====September 08, 2018 05:43:02 PM====
====September 08, 2018 05:43:08 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80116 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    80116 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'VBZ', 'WRB', 'RBR', 'LS', '-RRB-', 'JJ', 'VBD', "''", 'WP', ',', 'CC', 'WP$', '$', '-LRB-', 'NNS', 'NNPS', 'VBG', '-NONE-', 'IN', 'VB', '#', 'UH', 'FW', 'PRP', 'PDT', 'TO', 'RBS', 'EX', 'DT', 'CD', 'WDT', 'JJS', 'RP', 'VBN', 'MD', 'VBP', 'JJR', 'POS', '.', 'SYM', 'NN', '``', 'RB', 'NNP', 'PRP$', ':'}
---
Count incorrectly tagged words: 3251
====September 08, 2018 05:43:08 PM====
good z: [(('JJ', ''), 1), (('CC', ''), 1), (('IN', ''), 1), (('DT', ''), 1), (('.', ''), 3), (('NNP', ''), 9), (('PRP$', ''), 1)]
bad z: [(('VBZ', ''), 56), (('WRB', ''), 9), (('-RRB-', ''), 4), (('JJ', ''), 1935), (('VBD', ''), 71), (("''", ''), 21), (('WP', ''), 4), ((',', ''), 194), (('CC', ''), 209), (('WP$', ''), 6), (('-LRB-', ''), 2), (('NNS', ''), 116), (('NNPS', ''), 6), (('VBG', ''), 163), (('-NONE-', ''), 95), (('IN', ''), 853), (('VB', ''), 138), (('PRP', ''), 3), (('TO', ''), 54), (('DT', ''), 2920), (('CD', ''), 538), (('WDT', ''), 1), (('JJS', ''), 40), (('RP', ''), 10), (('VBN', ''), 118), (('VBP', ''), 20), (('JJR', ''), 63), (('POS', ''), 268), (('.', ''), 96), (('NN', ''), 1286), (('``', ''), 50), (('RB', ''), 42), (('NNP', ''), 426), (('PRP$', ''), 258), ((':', ''), 13)]
====September 08, 2018 05:43:08 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
m1: Change JJ to VB if preceding tag is MD. score= 5
m1: Change JJ to RB if preceding tag is MD. score= 6
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change JJ to RB if preceding tag is MD. score= 6
m1: Change JJ to RB if preceding tag is MD. score= 6
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
... trying from-tag: WRB
... trying from-tag: RBR
... trying from-tag: LS
... trying from-tag: -RRB-
... trying from-tag: JJ
... trying from-tag: VBD
... trying from-tag: ''
... trying from-tag: WP
... trying from-tag: ,
... trying from-tag: CC
... trying from-tag: WP$
... trying from-tag: $
... trying from-tag: -LRB-
... trying from-tag: NNS
... trying from-tag: NNPS
... trying from-tag: VBG
... trying from-tag: -NONE-
... trying from-tag: IN
... trying from-tag: VB
... trying from-tag: #
... trying from-tag: UH
... trying from-tag: FW
... trying from-tag: PRP
... trying from-tag: PDT
... trying from-tag: TO
... trying from-tag: RBS
... trying from-tag: EX
... trying from-tag: DT
... trying from-tag: CD
... trying from-tag: WDT
... trying from-tag: JJS
... trying from-tag: RP
... trying from-tag: VBN
... trying from-tag: MD
... trying from-tag: VBP
... trying from-tag: JJR
... trying from-tag: POS
... trying from-tag: .
... trying from-tag: SYM
... trying from-tag: NN
... trying from-tag: ``
... trying from-tag: RB
... trying from-tag: NNP
... trying from-tag: PRP$
... trying from-tag: :
--> m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
==> m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
---- TRANSFORM SEQUENCE ----
m1: Change JJ to RB if preceding tag is MD. score= 6
m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
====September 08, 2018 05:46:30 PM====
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 08, 2018 05:56:03 PM====
====September 08, 2018 05:56:08 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 78777 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    78777 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'VBZ', 'WP', 'RP', 'POS', 'CC', '#', 'WDT', 'JJR', 'NNS', 'CD', '.', 'PRP', 'NN', 'PDT', 'NNPS', 'RBS', 'WP$', '-NONE-', 'VBD', 'VBP', 'LS', 'VBG', 'DT', ':', "''", '$', 'PRP$', '``', 'VB', 'VBN', 'RB', '-LRB-', 'NNP', 'FW', 'JJS', 'WRB', 'SYM', 'EX', 'IN', 'RBR', 'JJ', ',', 'UH', 'TO', 'MD', '-RRB-'}
---
Count incorrectly tagged words: 3131
====September 08, 2018 05:56:08 PM====
good z: [(('.', ''), 3), (('DT', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 7), (('IN', ''), 1), (('JJ', ''), 1)]
bad z: [(('VBZ', ''), 54), (('WP', ''), 3), (('RP', ''), 10), (('POS', ''), 259), (('CC', ''), 214), (('WDT', ''), 2), (('JJR', ''), 57), (('NNS', ''), 104), (('CD', ''), 522), (('.', ''), 92), (('PRP', ''), 3), (('NN', ''), 1306), (('NNPS', ''), 8), (('WP$', ''), 6), (('-NONE-', ''), 87), (('VBD', ''), 68), (('VBP', ''), 18), (('VBG', ''), 164), (('DT', ''), 2850), ((':', ''), 12), (("''", ''), 21), (('PRP$', ''), 255), (('``', ''), 45), (('VB', ''), 135), (('VBN', ''), 113), (('RB', ''), 42), (('-LRB-', ''), 2), (('NNP', ''), 413), (('JJS', ''), 37), (('WRB', ''), 10), (('IN', ''), 861), (('JJ', ''), 1909), ((',', ''), 183), (('TO', ''), 42), (('-RRB-', ''), 5)]
====September 08, 2018 05:56:08 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBD. score= 1
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
==> m1: Change VBZ to NNS if preceding tag is VBD. score= 1
---- TRANSFORM SEQUENCE ----
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
====September 08, 2018 05:59:14 PM====
====September 08, 2018 05:59:20 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80042 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80042 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'VBZ', 'WP', 'RP', 'POS', 'CC', '#', 'WDT', 'JJR', 'NNS', 'CD', '.', 'PRP', 'NN', 'PDT', 'NNPS', 'RBS', 'WP$', '-NONE-', 'VBD', 'VBP', 'LS', 'VBG', 'DT', ':', "''", '$', 'PRP$', '``', 'VB', 'VBN', 'RB', '-LRB-', 'NNP', 'FW', 'JJS', 'WRB', 'SYM', 'EX', 'IN', 'RBR', 'JJ', ',', 'UH', 'TO', 'MD', '-RRB-'}
---
Count incorrectly tagged words: 3211
====September 08, 2018 05:59:20 PM====
good z: [(('CC', ''), 1), (('.', ''), 2), (('DT', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 12), (('IN', ''), 1), (('JJ', ''), 1)]
bad z: [(('VBZ', ''), 57), (('WP', ''), 3), (('RP', ''), 8), (('POS', ''), 274), (('CC', ''), 212), (('WDT', ''), 2), (('JJR', ''), 58), (('NNS', ''), 109), (('CD', ''), 565), (('.', ''), 103), (('PRP', ''), 2), (('NN', ''), 1312), (('NNPS', ''), 6), (('WP$', ''), 7), (('-NONE-', ''), 94), (('VBD', ''), 69), (('VBP', ''), 17), (('VBG', ''), 153), (('DT', ''), 2876), ((':', ''), 14), (("''", ''), 25), (('PRP$', ''), 251), (('``', ''), 54), (('VB', ''), 146), (('VBN', ''), 121), (('RB', ''), 45), (('-LRB-', ''), 1), (('NNP', ''), 431), (('JJS', ''), 40), (('WRB', ''), 5), (('IN', ''), 855), (('JJ', ''), 1933), ((',', ''), 174), (('TO', ''), 50), (('-RRB-', ''), 3)]
====September 08, 2018 05:59:20 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBG. score= 3
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
==> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
---- TRANSFORM SEQUENCE ----
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
====September 08, 2018 06:02:34 PM====
====September 08, 2018 06:02:40 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80294 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80294 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'VBZ', 'WP', 'RP', 'POS', 'CC', '#', 'WDT', 'JJR', 'NNS', 'CD', '.', 'PRP', 'NN', 'PDT', 'NNPS', 'RBS', 'WP$', '-NONE-', 'VBD', 'VBP', 'LS', 'VBG', 'DT', ':', "''", '$', 'PRP$', '``', 'VB', 'VBN', 'RB', '-LRB-', 'NNP', 'FW', 'JJS', 'WRB', 'SYM', 'EX', 'IN', 'RBR', 'JJ', ',', 'UH', 'TO', 'MD', '-RRB-'}
---
Count incorrectly tagged words: 3226
====September 08, 2018 06:02:40 PM====
good z: [(('CC', ''), 1), (('.', ''), 3), (('DT', ''), 1), (('PRP$', ''), 1), (('NNP', ''), 10), (('IN', ''), 1)]
bad z: [(('VBZ', ''), 52), (('WP', ''), 4), (('RP', ''), 8), (('POS', ''), 258), (('CC', ''), 206), (('WDT', ''), 1), (('JJR', ''), 50), (('NNS', ''), 124), (('CD', ''), 579), (('.', ''), 96), (('PRP', ''), 3), (('NN', ''), 1301), (('NNPS', ''), 8), (('WP$', ''), 6), (('-NONE-', ''), 90), (('VBD', ''), 77), (('VBP', ''), 19), (('VBG', ''), 165), (('DT', ''), 2906), ((':', ''), 11), (("''", ''), 26), (('PRP$', ''), 254), (('``', ''), 58), (('VB', ''), 134), (('VBN', ''), 111), (('RB', ''), 44), (('-LRB-', ''), 1), (('NNP', ''), 420), (('JJS', ''), 41), (('WRB', ''), 8), (('IN', ''), 864), (('JJ', ''), 1925), ((',', ''), 184), (('TO', ''), 50), (('-RRB-', ''), 5)]
====September 08, 2018 06:02:40 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBD. score= 1
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
==> m1: Change VBZ to NNS if preceding tag is VBD. score= 1
---- TRANSFORM SEQUENCE ----
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
====September 08, 2018 06:05:54 PM====
====September 08, 2018 06:06:00 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80594 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80594 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'VBZ', 'WP', 'RP', 'POS', 'CC', '#', 'WDT', 'JJR', 'NNS', 'CD', '.', 'PRP', 'NN', 'PDT', 'NNPS', 'RBS', 'WP$', '-NONE-', 'VBD', 'VBP', 'LS', 'VBG', 'DT', ':', "''", '$', 'PRP$', '``', 'VB', 'VBN', 'RB', '-LRB-', 'NNP', 'FW', 'JJS', 'WRB', 'SYM', 'EX', 'IN', 'RBR', 'JJ', ',', 'UH', 'TO', 'MD', '-RRB-'}
---
Count incorrectly tagged words: 3263
====September 08, 2018 06:06:00 PM====
good z: [(('CC', ''), 1), (('.', ''), 3), (('PRP$', ''), 1), (('NNP', ''), 10), (('IN', ''), 1), (('JJ', ''), 1)]
bad z: [(('VBZ', ''), 60), (('WP', ''), 4), (('RP', ''), 10), (('POS', ''), 264), (('CC', ''), 220), (('WDT', ''), 2), (('JJR', ''), 62), (('NNS', ''), 113), (('CD', ''), 542), (('.', ''), 94), (('PRP', ''), 3), (('NN', ''), 1341), (('NNPS', ''), 6), (('WP$', ''), 7), (('-NONE-', ''), 84), (('VBD', ''), 70), (('VBP', ''), 20), (('VBG', ''), 149), (('DT', ''), 2897), ((':', ''), 14), (("''", ''), 27), (('PRP$', ''), 266), (('``', ''), 48), (('VB', ''), 140), (('VBN', ''), 116), (('RB', ''), 37), (('-LRB-', ''), 1), (('NNP', ''), 431), (('JJS', ''), 40), (('WRB', ''), 9), (('IN', ''), 866), (('JJ', ''), 1942), ((',', ''), 185), (('TO', ''), 51), (('-RRB-', ''), 4)]
====September 08, 2018 06:06:00 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBD. score= 1
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 1
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 1
m1: Change VBZ to NNS if preceding tag is VBN. score= 1
==> m1: Change VBZ to NNS if preceding tag is VBN. score= 1
---- TRANSFORM SEQUENCE ----
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
m1: Change VBZ to NNS if preceding tag is VBN. score= 1
====September 08, 2018 06:09:16 PM====
====September 08, 2018 06:09:21 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81123 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    81123 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'VBZ', 'WP', 'RP', 'POS', 'CC', '#', 'WDT', 'JJR', 'NNS', 'CD', '.', 'PRP', 'NN', 'PDT', 'NNPS', 'RBS', 'WP$', '-NONE-', 'VBD', 'VBP', 'LS', 'VBG', 'DT', ':', "''", '$', 'PRP$', '``', 'VB', 'VBN', 'RB', '-LRB-', 'NNP', 'FW', 'JJS', 'WRB', 'SYM', 'EX', 'IN', 'RBR', 'JJ', ',', 'UH', 'TO', 'MD', '-RRB-'}
---
Count incorrectly tagged words: 3236
====September 08, 2018 06:09:21 PM====
good z: [(('CC', ''), 1), (('.', ''), 3), (('DT', ''), 1), (('NNP', ''), 8), (('JJ', ''), 1)]
bad z: [(('VBZ', ''), 52), (('WP', ''), 4), (('RP', ''), 9), (('POS', ''), 261), (('CC', ''), 203), (('WDT', ''), 2), (('JJR', ''), 58), (('NNS', ''), 112), (('CD', ''), 563), (('.', ''), 92), (('PRP', ''), 3), (('NN', ''), 1327), (('NNPS', ''), 8), (('WP$', ''), 5), (('-NONE-', ''), 100), (('VBD', ''), 72), (('VBP', ''), 23), (('VBG', ''), 161), (('DT', ''), 2921), ((':', ''), 10), (("''", ''), 30), (('PRP$', ''), 262), (('``', ''), 61), (('VB', ''), 141), (('VBN', ''), 115), (('RB', ''), 42), (('-LRB-', ''), 2), (('NNP', ''), 418), (('JJS', ''), 40), (('WRB', ''), 5), (('IN', ''), 874), (('JJ', ''), 1933), ((',', ''), 196), (('TO', ''), 54), (('-RRB-', ''), 5)]
====September 08, 2018 06:09:22 PM====
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBD. score= 1
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
... trying from-tag: VBZ
m1: Change VBZ to NNS if preceding tag is VBN. score= 1
... trying from-tag: WP
... trying from-tag: RP
... trying from-tag: POS
... trying from-tag: CC
... trying from-tag: #
... trying from-tag: WDT
... trying from-tag: JJR
... trying from-tag: NNS
... trying from-tag: CD
... trying from-tag: .
... trying from-tag: PRP
... trying from-tag: NN
... trying from-tag: PDT
... trying from-tag: NNPS
... trying from-tag: RBS
... trying from-tag: WP$
... trying from-tag: -NONE-
... trying from-tag: VBD
... trying from-tag: VBP
... trying from-tag: LS
... trying from-tag: VBG
... trying from-tag: DT
... trying from-tag: :
... trying from-tag: ''
... trying from-tag: $
... trying from-tag: PRP$
... trying from-tag: ``
... trying from-tag: VB
... trying from-tag: VBN
... trying from-tag: RB
... trying from-tag: -LRB-
... trying from-tag: NNP
... trying from-tag: FW
... trying from-tag: JJS
... trying from-tag: WRB
... trying from-tag: SYM
... trying from-tag: EX
... trying from-tag: IN
... trying from-tag: RBR
... trying from-tag: JJ
... trying from-tag: ,
... trying from-tag: UH
... trying from-tag: TO
... trying from-tag: MD
... trying from-tag: -RRB-
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 1
m1: Change VBZ to NNS if preceding tag is VBN. score= 1
==> m1: Change VBZ to NNS if preceding tag is VBN. score= 1
---- TRANSFORM SEQUENCE ----
m1: Change VBZ to NNS if preceding tag is VBD. score= 1
m1: Change VBZ to NNS if preceding tag is VBN. score= 1
====September 08, 2018 06:12:46 PM====
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 09, 2018 08:03:36 AM====
====September 09, 2018 08:03:42 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80571 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80571 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'.', 'NNP', 'JJR', 'VB', 'VBP', 'RB', 'VBG', 'WP$', ',', "''", 'PRP', 'POS', 'WP', 'SYM', 'RBR', 'EX', 'VBN', 'RP', 'LS', ':', 'IN', 'TO', 'NNPS', 'CD', 'JJ', 'CC', '``', 'WRB', 'VBD', 'FW', '-LRB-', 'PDT', '#', 'MD', '-RRB-', 'WDT', 'DT', '$', 'RBS', 'NNS', '-NONE-', 'UH', 'JJS', 'NN', 'VBZ', 'PRP$'}
---
Count incorrectly tagged words: 3155
====September 09, 2018 08:03:42 AM====
good z: [(('.', ''), 2), (('NNP', ''), 10), (('JJ', ''), 1), (('CC', ''), 1), (('DT', ''), 1), (('PRP$', ''), 1)]
bad z: [(('.', ''), 91), (('NNP', ''), 429), (('JJR', ''), 58), (('VB', ''), 146), (('VBP', ''), 19), (('RB', ''), 46), (('VBG', ''), 163), (('WP$', ''), 4), ((',', ''), 184), (("''", ''), 28), (('PRP', ''), 2), (('POS', ''), 271), (('WP', ''), 2), (('VBN', ''), 117), (('RP', ''), 11), ((':', ''), 12), (('IN', ''), 850), (('TO', ''), 49), (('NNPS', ''), 5), (('CD', ''), 546), (('JJ', ''), 1963), (('CC', ''), 217), (('``', ''), 55), (('WRB', ''), 8), (('VBD', ''), 76), (('-LRB-', ''), 2), (('-RRB-', ''), 5), (('WDT', ''), 1), (('DT', ''), 2950), (('NNS', ''), 116), (('-NONE-', ''), 102), (('JJS', ''), 37), (('NN', ''), 1349), (('VBZ', ''), 54), (('PRP$', ''), 261)]
====September 09, 2018 08:03:42 AM====
... trying from-tag: .
... trying from-tag: NNP
... trying from-tag: JJR
... trying from-tag: VB
... trying from-tag: VBP
... trying from-tag: RB
... trying from-tag: VBG
... trying from-tag: WP$
... trying from-tag: ,
... trying from-tag: ''
... trying from-tag: PRP
... trying from-tag: POS
... trying from-tag: WP
... trying from-tag: SYM
... trying from-tag: RBR
... trying from-tag: EX
... trying from-tag: VBN
... trying from-tag: RP
... trying from-tag: LS
... trying from-tag: :
... trying from-tag: IN
... trying from-tag: TO
... trying from-tag: NNPS
... trying from-tag: CD
... trying from-tag: JJ
... trying from-tag: CC
... trying from-tag: ``
... trying from-tag: WRB
... trying from-tag: VBD
... trying from-tag: FW
... trying from-tag: -LRB-
... trying from-tag: PDT
... trying from-tag: #
... trying from-tag: MD
... trying from-tag: -RRB-
... trying from-tag: WDT
... trying from-tag: DT
... trying from-tag: $
... trying from-tag: RBS
... trying from-tag: NNS
... trying from-tag: -NONE-
... trying from-tag: UH
... trying from-tag: JJS
... trying from-tag: NN
... trying from-tag: VBZ
... trying from-tag: PRP$
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 293, in <module>
    transform_sequence = tagger.learn()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 89, in learn
    if score < minimum:
NameError: name 'minimum' is not defined
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 09, 2018 08:08:23 AM====
====September 09, 2018 08:08:29 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80174 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80174 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NNP', 'VBD', 'WDT', 'VBP', 'RP', 'NNS', 'VBG', 'VB', '.', ',', 'PDT', 'SYM', 'WP$', 'WP', 'RBS', 'VBZ', '-LRB-', 'IN', "''", 'JJ', 'VBN', 'PRP', '-NONE-', 'EX', 'MD', 'WRB', 'NNPS', 'UH', 'DT', 'RB', 'CD', 'NN', 'POS', '``', 'JJR', 'CC', '$', 'TO', 'PRP$', '-RRB-', 'JJS', 'FW', '#', 'RBR', ':', 'LS'}
---
Count incorrectly tagged words: 3247
====September 09, 2018 08:08:29 AM====
good z: [(('NNP', ''), 9), (('.', ''), 2), (('IN', ''), 1), (('JJ', ''), 1), (('PRP$', ''), 1)]
bad z: [(('NNP', ''), 418), (('VBD', ''), 69), (('WDT', ''), 2), (('VBP', ''), 18), (('RP', ''), 10), (('NNS', ''), 113), (('VBG', ''), 165), (('VB', ''), 140), (('.', ''), 92), ((',', ''), 186), (('WP$', ''), 8), (('WP', ''), 3), (('VBZ', ''), 56), (('-LRB-', ''), 2), (('IN', ''), 861), (("''", ''), 28), (('JJ', ''), 1944), (('VBN', ''), 122), (('PRP', ''), 1), (('-NONE-', ''), 97), (('WRB', ''), 7), (('NNPS', ''), 7), (('DT', ''), 2910), (('RB', ''), 41), (('CD', ''), 529), (('NN', ''), 1313), (('POS', ''), 267), (('``', ''), 51), (('JJR', ''), 58), (('CC', ''), 213), (('TO', ''), 46), (('PRP$', ''), 257), (('-RRB-', ''), 4), (('JJS', ''), 43), ((':', ''), 15)]
====September 09, 2018 08:08:29 AM====
....
m1: Change VBP to VB if preceding tag is MD. score= 16
..........................................
--> m1: Change VBP to VB if preceding tag is MD. score= 16
m1: Change VBP to VB if preceding tag is MD. score= 16
..............................................
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBP to VB if preceding tag is MD. score= 16
NIL: Don't change the tag. score= 0
====September 09, 2018 08:11:42 AM====
====September 09, 2018 08:11:47 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79921 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79921 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NNP', 'VBD', 'WDT', 'VBP', 'RP', 'NNS', 'VBG', 'VB', '.', ',', 'PDT', 'SYM', 'WP$', 'WP', 'RBS', 'VBZ', '-LRB-', 'IN', "''", 'JJ', 'VBN', 'PRP', '-NONE-', 'EX', 'MD', 'WRB', 'NNPS', 'UH', 'DT', 'RB', 'CD', 'NN', 'POS', '``', 'JJR', 'CC', '$', 'TO', 'PRP$', '-RRB-', 'JJS', 'FW', '#', 'RBR', ':', 'LS'}
---
Count incorrectly tagged words: 3234
====September 09, 2018 08:11:47 AM====
good z: [(('NNP', ''), 10), (('.', ''), 3), (('IN', ''), 1), (('JJ', ''), 1), (('CC', ''), 1), (('PRP$', ''), 1)]
bad z: [(('NNP', ''), 422), (('VBD', ''), 70), (('WDT', ''), 2), (('VBP', ''), 17), (('RP', ''), 10), (('NNS', ''), 107), (('VBG', ''), 154), (('VB', ''), 145), (('.', ''), 90), ((',', ''), 181), (('WP$', ''), 8), (('WP', ''), 1), (('VBZ', ''), 58), (('-LRB-', ''), 1), (('IN', ''), 852), (("''", ''), 25), (('JJ', ''), 1949), (('VBN', ''), 117), (('PRP', ''), 2), (('-NONE-', ''), 102), (('WRB', ''), 7), (('NNPS', ''), 7), (('DT', ''), 2894), (('RB', ''), 40), (('CD', ''), 533), (('NN', ''), 1321), (('POS', ''), 269), (('``', ''), 52), (('JJR', ''), 54), (('CC', ''), 201), (('TO', ''), 50), (('PRP$', ''), 256), (('-RRB-', ''), 4), (('JJS', ''), 39), ((':', ''), 12)]
====September 09, 2018 08:11:47 AM====
....
m1: Change VBP to VB if preceding tag is MD. score= 20
..........................................
--> m1: Change VBP to VB if preceding tag is MD. score= 20
m1: Change VBP to VB if preceding tag is MD. score= 20
..............................................
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBP to VB if preceding tag is MD. score= 20
NIL: Don't change the tag. score= 0
====September 09, 2018 08:15:01 AM====
====September 09, 2018 08:15:07 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80812 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80812 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NNP', 'VBD', 'WDT', 'VBP', 'RP', 'NNS', 'VBG', 'VB', '.', ',', 'PDT', 'SYM', 'WP$', 'WP', 'RBS', 'VBZ', '-LRB-', 'IN', "''", 'JJ', 'VBN', 'PRP', '-NONE-', 'EX', 'MD', 'WRB', 'NNPS', 'UH', 'DT', 'RB', 'CD', 'NN', 'POS', '``', 'JJR', 'CC', '$', 'TO', 'PRP$', '-RRB-', 'JJS', 'FW', '#', 'RBR', ':', 'LS'}
---
Count incorrectly tagged words: 3238
====September 09, 2018 08:15:07 AM====
good z: [(('NNP', ''), 9), (('.', ''), 2), (('IN', ''), 1), (('JJ', ''), 1), (('CC', ''), 1), (('PRP$', ''), 1)]
bad z: [(('NNP', ''), 432), (('VBD', ''), 67), (('WDT', ''), 2), (('VBP', ''), 19), (('RP', ''), 7), (('NNS', ''), 117), (('VBG', ''), 161), (('VB', ''), 136), (('.', ''), 101), ((',', ''), 178), (('WP$', ''), 6), (('WP', ''), 3), (('VBZ', ''), 58), (('-LRB-', ''), 1), (('IN', ''), 857), (("''", ''), 22), (('JJ', ''), 1961), (('VBN', ''), 110), (('PRP', ''), 2), (('-NONE-', ''), 91), (('WRB', ''), 9), (('NNPS', ''), 7), (('DT', ''), 2946), (('RB', ''), 47), (('CD', ''), 539), (('NN', ''), 1343), (('POS', ''), 260), (('``', ''), 55), (('JJR', ''), 54), (('CC', ''), 222), (('TO', ''), 52), (('PRP$', ''), 264), (('-RRB-', ''), 3), (('JJS', ''), 38), ((':', ''), 10)]
====September 09, 2018 08:15:07 AM====
....
m1: Change VBP to VB if preceding tag is MD. score= 62
..........................................
--> m1: Change VBP to VB if preceding tag is MD. score= 62
m1: Change VBP to VB if preceding tag is MD. score= 62
..............................................
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBP to VB if preceding tag is MD. score= 62
NIL: Don't change the tag. score= 0
====September 09, 2018 08:18:24 AM====
====September 09, 2018 08:18:30 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81455 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81455 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NNP', 'VBD', 'WDT', 'VBP', 'RP', 'NNS', 'VBG', 'VB', '.', ',', 'PDT', 'SYM', 'WP$', 'WP', 'RBS', 'VBZ', '-LRB-', 'IN', "''", 'JJ', 'VBN', 'PRP', '-NONE-', 'EX', 'MD', 'WRB', 'NNPS', 'UH', 'DT', 'RB', 'CD', 'NN', 'POS', '``', 'JJR', 'CC', '$', 'TO', 'PRP$', '-RRB-', 'JJS', 'FW', '#', 'RBR', ':', 'LS'}
---
Count incorrectly tagged words: 3250
====September 09, 2018 08:18:30 AM====
good z: [(('NNP', ''), 9), (('.', ''), 3), (('IN', ''), 1), (('JJ', ''), 1), (('DT', ''), 1), (('CC', ''), 1), (('PRP$', ''), 1)]
bad z: [(('NNP', ''), 431), (('VBD', ''), 68), (('WDT', ''), 2), (('VBP', ''), 18), (('RP', ''), 10), (('NNS', ''), 121), (('VBG', ''), 152), (('VB', ''), 134), (('.', ''), 89), ((',', ''), 186), (('WP$', ''), 7), (('WP', ''), 3), (('VBZ', ''), 57), (('-LRB-', ''), 2), (('IN', ''), 883), (("''", ''), 27), (('JJ', ''), 1995), (('VBN', ''), 123), (('PRP', ''), 3), (('-NONE-', ''), 98), (('WRB', ''), 9), (('NNPS', ''), 6), (('DT', ''), 2930), (('RB', ''), 42), (('CD', ''), 564), (('NN', ''), 1380), (('POS', ''), 279), (('``', ''), 51), (('JJR', ''), 57), (('CC', ''), 213), (('TO', ''), 48), (('PRP$', ''), 252), (('-RRB-', ''), 5), (('JJS', ''), 41), ((':', ''), 10)]
====September 09, 2018 08:18:30 AM====
....
m1: Change VBP to VB if preceding tag is MD. score= 19
..........................................
--> m1: Change VBP to VB if preceding tag is MD. score= 19
m1: Change VBP to VB if preceding tag is MD. score= 19
..............................................
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBP to VB if preceding tag is MD. score= 19
NIL: Don't change the tag. score= 0
====September 09, 2018 08:21:53 AM====
====September 09, 2018 08:21:58 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81887 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81887 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'NNP', 'VBD', 'WDT', 'VBP', 'RP', 'NNS', 'VBG', 'VB', '.', ',', 'PDT', 'SYM', 'WP$', 'WP', 'RBS', 'VBZ', '-LRB-', 'IN', "''", 'JJ', 'VBN', 'PRP', '-NONE-', 'EX', 'MD', 'WRB', 'NNPS', 'UH', 'DT', 'RB', 'CD', 'NN', 'POS', '``', 'JJR', 'CC', '$', 'TO', 'PRP$', '-RRB-', 'JJS', 'FW', '#', 'RBR', ':', 'LS'}
---
Count incorrectly tagged words: 3265
====September 09, 2018 08:21:58 AM====
good z: [(('NNP', ''), 8), (('.', ''), 2), (('IN', ''), 1), (('JJ', ''), 1), (('DT', ''), 1), (('CC', ''), 1), (('PRP$', ''), 1)]
bad z: [(('NNP', ''), 417), (('VBD', ''), 75), (('WDT', ''), 2), (('VBP', ''), 21), (('RP', ''), 8), (('NNS', ''), 120), (('VBG', ''), 159), (('VB', ''), 133), (('.', ''), 99), ((',', ''), 196), (('WP$', ''), 6), (('WP', ''), 4), (('VBZ', ''), 60), (('-LRB-', ''), 1), (('IN', ''), 886), (("''", ''), 31), (('JJ', ''), 2005), (('VBN', ''), 121), (('PRP', ''), 3), (('-NONE-', ''), 89), (('WRB', ''), 8), (('NNPS', ''), 6), (('DT', ''), 2973), (('RB', ''), 46), (('CD', ''), 574), (('NN', ''), 1364), (('POS', ''), 277), (('``', ''), 60), (('JJR', ''), 60), (('CC', ''), 212), (('TO', ''), 49), (('PRP$', ''), 267), (('-RRB-', ''), 5), (('JJS', ''), 39), ((':', ''), 13)]
====September 09, 2018 08:21:58 AM====
....
m1: Change VBP to VB if preceding tag is MD. score= 12
..........................................
--> m1: Change VBP to VB if preceding tag is MD. score= 12
m1: Change VBP to VB if preceding tag is MD. score= 12
..............................................
--> NIL: Don't change the tag. score= 0
NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBP to VB if preceding tag is MD. score= 12
NIL: Don't change the tag. score= 0
====September 09, 2018 08:25:25 AM====
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
====September 09, 2018 11:10:31 AM====
====September 09, 2018 11:10:37 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80796 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80796 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'EX', 'NN', 'VBN', "''", 'RBS', 'PDT', 'MD', 'VBG', 'IN', 'POS', 'WP$', 'RP', 'JJS', 'UH', 'PRP', '#', 'VBZ', ',', 'VBD', 'JJ', 'NNS', '-RRB-', 'RB', 'CD', 'NNP', '-NONE-', 'RBR', 'PRP$', 'NNPS', 'WRB', '``', 'FW', 'SYM', 'JJR', 'DT', '$', ':', '-LRB-', 'CC', 'WDT', 'WP', '.', 'LS', 'VB', 'TO', 'VBP'}
---
Count incorrectly tagged words: 3250
====September 09, 2018 11:10:37 AM====
good z: [(('JJ', ''), 1), (('NNP', ''), 8), (('PRP$', ''), 1), (('DT', ''), 1), (('.', ''), 2)]
bad z: [(('NN', ''), 1341), (('VBN', ''), 115), (("''", ''), 25), (('VBG', ''), 165), (('IN', ''), 872), (('POS', ''), 271), (('WP$', ''), 6), (('RP', ''), 9), (('JJS', ''), 40), (('PRP', ''), 2), (('VBZ', ''), 54), ((',', ''), 196), (('VBD', ''), 71), (('JJ', ''), 1970), (('NNS', ''), 112), (('-RRB-', ''), 5), (('RB', ''), 37), (('CD', ''), 537), (('NNP', ''), 429), (('-NONE-', ''), 95), (('PRP$', ''), 268), (('NNPS', ''), 5), (('WRB', ''), 7), (('``', ''), 54), (('JJR', ''), 53), (('DT', ''), 2974), ((':', ''), 12), (('-LRB-', ''), 2), (('CC', ''), 210), (('WDT', ''), 1), (('WP', ''), 3), (('.', ''), 99), (('VB', ''), 152), (('TO', ''), 45), (('VBP', ''), 22)]
====September 09, 2018 11:10:37 AM====
.
m1: Change EX to RB if preceding tag is RP. score= 2
.
m1: Change NN to VB if preceding tag is MD. score= 60
.
m1: Change VBN to VB if preceding tag is MD. score= 66
...........................................
--> m1: Change VBN to VB if preceding tag is MD. score= 66
-=-=-> changed  6  tags
m1: Change VBN to VB if preceding tag is MD. score= 66
.
m1: Change EX to RB if preceding tag is RP. score= 2
.
m1: Change NN to VB if preceding tag is MD. score= 60
............................................
--> m1: Change NN to VB if preceding tag is MD. score= 60
-=-=-> changed  60  tags
m1: Change NN to VB if preceding tag is MD. score= 60
.
m1: Change EX to RB if preceding tag is RP. score= 2
.............................................
--> m1: Change EX to RB if preceding tag is RP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is RP. score= 2
.
m1: Change EX to RB if preceding tag is NNS. score= 2
.............................................
--> m1: Change EX to RB if preceding tag is NNS. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNS. score= 2
.
m1: Change EX to RB if preceding tag is NNP. score= 2
.............................................
--> m1: Change EX to RB if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNP. score= 2
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBN to VB if preceding tag is MD. score= 66
m1: Change NN to VB if preceding tag is MD. score= 60
m1: Change EX to RB if preceding tag is RP. score= 2
m1: Change EX to RB if preceding tag is NNS. score= 2
m1: Change EX to RB if preceding tag is NNP. score= 2
====September 09, 2018 11:20:22 AM====
====September 09, 2018 11:20:27 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80174 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80174 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'EX', 'NN', 'VBN', "''", 'RBS', 'PDT', 'MD', 'VBG', 'IN', 'POS', 'WP$', 'RP', 'JJS', 'UH', 'PRP', '#', 'VBZ', ',', 'VBD', 'JJ', 'NNS', '-RRB-', 'RB', 'CD', 'NNP', '-NONE-', 'RBR', 'PRP$', 'NNPS', 'WRB', '``', 'FW', 'SYM', 'JJR', 'DT', '$', ':', '-LRB-', 'CC', 'WDT', 'WP', '.', 'LS', 'VB', 'TO', 'VBP'}
---
Count incorrectly tagged words: 3235
====September 09, 2018 11:20:27 AM====
good z: [(('IN', ''), 1), (('JJ', ''), 1), (('NNP', ''), 12), (('PRP$', ''), 1), (('CC', ''), 1), (('.', ''), 1)]
bad z: [(('NN', ''), 1321), (('VBN', ''), 120), (("''", ''), 25), (('VBG', ''), 164), (('IN', ''), 858), (('POS', ''), 271), (('WP$', ''), 7), (('RP', ''), 10), (('JJS', ''), 40), (('PRP', ''), 3), (('VBZ', ''), 50), ((',', ''), 179), (('VBD', ''), 68), (('JJ', ''), 1935), (('NNS', ''), 115), (('-RRB-', ''), 3), (('RB', ''), 42), (('CD', ''), 580), (('NNP', ''), 417), (('-NONE-', ''), 97), (('PRP$', ''), 273), (('NNPS', ''), 6), (('WRB', ''), 6), (('``', ''), 56), (('JJR', ''), 59), (('DT', ''), 2897), ((':', ''), 13), (('-LRB-', ''), 1), (('CC', ''), 210), (('WDT', ''), 2), (('WP', ''), 4), (('.', ''), 96), (('VB', ''), 145), (('TO', ''), 50), (('VBP', ''), 17)]
====September 09, 2018 11:20:27 AM====
.
m1: Change EX to RB if preceding tag is RB. score= 3
.
m1: Change NN to VB if preceding tag is MD. score= 52
.
m1: Change VBN to VB if preceding tag is MD. score= 59
...........................................
--> m1: Change VBN to VB if preceding tag is MD. score= 59
-=-=-> changed  7  tags
m1: Change VBN to VB if preceding tag is MD. score= 59
.
m1: Change EX to RB if preceding tag is RB. score= 3
.
m1: Change NN to VB if preceding tag is MD. score= 52
............................................
--> m1: Change NN to VB if preceding tag is MD. score= 52
-=-=-> changed  52  tags
m1: Change NN to VB if preceding tag is MD. score= 52
.
m1: Change EX to RB if preceding tag is RB. score= 3
.............................................
--> m1: Change EX to RB if preceding tag is RB. score= 3
-=-=-> changed  3  tags
m1: Change EX to RB if preceding tag is RB. score= 3
.
m1: Change EX to RB if preceding tag is RP. score= 2
.............................................
--> m1: Change EX to RB if preceding tag is RP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is RP. score= 2
.
m1: Change EX to RB if preceding tag is NNS. score= 1
.............................................
--> m1: Change EX to RB if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is NNS. score= 1
.
m1: Change EX to RB if preceding tag is NNP. score= 1
.............................................
--> m1: Change EX to RB if preceding tag is NNP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is NNP. score= 1
.
m1: Change EX to RB if preceding tag is VB. score= 1
.............................................
--> m1: Change EX to RB if preceding tag is VB. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VB. score= 1
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBN to VB if preceding tag is MD. score= 59
m1: Change NN to VB if preceding tag is MD. score= 52
m1: Change EX to RB if preceding tag is RB. score= 3
m1: Change EX to RB if preceding tag is RP. score= 2
m1: Change EX to RB if preceding tag is NNS. score= 1
m1: Change EX to RB if preceding tag is NNP. score= 1
m1: Change EX to RB if preceding tag is VB. score= 1
====September 09, 2018 11:34:16 AM====
====September 09, 2018 11:34:23 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81229 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'JJ')]
True Tagging:    81229 [('Mr.', 'NNP'), ('Vinken', 'NNP'), ('is', 'VBZ'), ('chairman', 'NN'), ('of', 'IN'), ('Elsevier', 'NNP'), ('N.V.', 'NNP'), (',', ','), ('the', 'DT'), ('Dutch', 'NNP')]
Tag Set: 46 {'EX', 'NN', 'VBN', "''", 'RBS', 'PDT', 'MD', 'VBG', 'IN', 'POS', 'WP$', 'RP', 'JJS', 'UH', 'PRP', '#', 'VBZ', ',', 'VBD', 'JJ', 'NNS', '-RRB-', 'RB', 'CD', 'NNP', '-NONE-', 'RBR', 'PRP$', 'NNPS', 'WRB', '``', 'FW', 'SYM', 'JJR', 'DT', '$', ':', '-LRB-', 'CC', 'WDT', 'WP', '.', 'LS', 'VB', 'TO', 'VBP'}
---
Count incorrectly tagged words: 3216
====September 09, 2018 11:34:24 AM====
good z: [(('IN', ''), 1), (('JJ', ''), 1), (('NNP', ''), 9), (('PRP$', ''), 1), (('CC', ''), 1), (('.', ''), 3)]
bad z: [(('NN', ''), 1334), (('VBN', ''), 111), (("''", ''), 25), (('VBG', ''), 163), (('IN', ''), 853), (('POS', ''), 281), (('WP$', ''), 7), (('RP', ''), 10), (('JJS', ''), 41), (('PRP', ''), 3), (('VBZ', ''), 59), ((',', ''), 178), (('VBD', ''), 69), (('JJ', ''), 1975), (('NNS', ''), 118), (('-RRB-', ''), 4), (('RB', ''), 42), (('CD', ''), 520), (('NNP', ''), 417), (('-NONE-', ''), 96), (('PRP$', ''), 251), (('NNPS', ''), 6), (('WRB', ''), 11), (('``', ''), 52), (('JJR', ''), 58), (('DT', ''), 2969), ((':', ''), 12), (('-LRB-', ''), 1), (('CC', ''), 215), (('WDT', ''), 1), (('WP', ''), 4), (('.', ''), 98), (('VB', ''), 135), (('TO', ''), 42), (('VBP', ''), 17)]
====September 09, 2018 11:34:24 AM====
.
m1: Change EX to RB if preceding tag is RP. score= 2
.
m1: Change NN to VB if preceding tag is MD. score= 52
.
m1: Change VBN to VB if preceding tag is MD. score= 57
...........................................
--> m1: Change VBN to VB if preceding tag is MD. score= 57
-=-=-> changed  5  tags
m1: Change VBN to VB if preceding tag is MD. score= 57
.
m1: Change EX to RB if preceding tag is RP. score= 2
.
m1: Change NN to VB if preceding tag is MD. score= 52
............................................
--> m1: Change NN to VB if preceding tag is MD. score= 52
-=-=-> changed  52  tags
m1: Change NN to VB if preceding tag is MD. score= 52
.
m1: Change EX to RB if preceding tag is RP. score= 2
.............................................
--> m1: Change EX to RB if preceding tag is RP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is RP. score= 2
.
m1: Change EX to RB if preceding tag is NNS. score= 2
.............................................
--> m1: Change EX to RB if preceding tag is NNS. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNS. score= 2
.
m1: Change EX to RB if preceding tag is NNP. score= 1
.............................................
--> m1: Change EX to RB if preceding tag is NNP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is NNP. score= 1
.
m1: Change EX to RB if preceding tag is VB. score= 1
.............................................
--> m1: Change EX to RB if preceding tag is VB. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VB. score= 1
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBN to VB if preceding tag is MD. score= 57
m1: Change NN to VB if preceding tag is MD. score= 52
m1: Change EX to RB if preceding tag is RP. score= 2
m1: Change EX to RB if preceding tag is NNS. score= 2
m1: Change EX to RB if preceding tag is NNP. score= 1
m1: Change EX to RB if preceding tag is VB. score= 1
====September 09, 2018 11:47:02 AM====
====September 09, 2018 11:47:10 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79251 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79251 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'EX', 'NN', 'VBN', "''", 'RBS', 'PDT', 'MD', 'VBG', 'IN', 'POS', 'WP$', 'RP', 'JJS', 'UH', 'PRP', '#', 'VBZ', ',', 'VBD', 'JJ', 'NNS', '-RRB-', 'RB', 'CD', 'NNP', '-NONE-', 'RBR', 'PRP$', 'NNPS', 'WRB', '``', 'FW', 'SYM', 'JJR', 'DT', '$', ':', '-LRB-', 'CC', 'WDT', 'WP', '.', 'LS', 'VB', 'TO', 'VBP'}
---
Count incorrectly tagged words: 3205
====September 09, 2018 11:47:10 AM====
good z: [(('JJ', ''), 1), (('NNP', ''), 7), (('PRP$', ''), 1), (('CC', ''), 1), (('.', ''), 3)]
bad z: [(('NN', ''), 1324), (('VBN', ''), 118), (("''", ''), 22), (('VBG', ''), 158), (('IN', ''), 841), (('POS', ''), 264), (('WP$', ''), 7), (('RP', ''), 10), (('JJS', ''), 39), (('PRP', ''), 3), (('VBZ', ''), 58), ((',', ''), 194), (('VBD', ''), 71), (('JJ', ''), 1918), (('NNS', ''), 113), (('-RRB-', ''), 3), (('RB', ''), 43), (('CD', ''), 566), (('NNP', ''), 416), (('-NONE-', ''), 87), (('PRP$', ''), 241), (('NNPS', ''), 6), (('WRB', ''), 8), (('``', ''), 55), (('JJR', ''), 54), (('DT', ''), 2867), ((':', ''), 13), (('-LRB-', ''), 2), (('CC', ''), 203), (('WDT', ''), 2), (('WP', ''), 3), (('.', ''), 97), (('VB', ''), 144), (('TO', ''), 52), (('VBP', ''), 17)]
====September 09, 2018 11:47:10 AM====
.
m1: Change EX to RB if preceding tag is NNS. score= 2
.
m1: Change NN to VB if preceding tag is MD. score= 64
.
m1: Change VBN to VB if preceding tag is MD. score= 71
...........................................
--> m1: Change VBN to VB if preceding tag is MD. score= 71
-=-=-> changed  7  tags
m1: Change VBN to VB if preceding tag is MD. score= 71
.
m1: Change EX to RB if preceding tag is NNS. score= 2
.
m1: Change NN to VB if preceding tag is MD. score= 64
............................................
--> m1: Change NN to VB if preceding tag is MD. score= 64
-=-=-> changed  64  tags
m1: Change NN to VB if preceding tag is MD. score= 64
.
m1: Change EX to RB if preceding tag is NNS. score= 2
.............................................
--> m1: Change EX to RB if preceding tag is NNS. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNS. score= 2
.
m1: Change EX to RB if preceding tag is NNP. score= 2
.............................................
--> m1: Change EX to RB if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNP. score= 2
.
m1: Change EX to RB if preceding tag is RP. score= 1
.............................................
--> m1: Change EX to RB if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is RP. score= 1
.
m1: Change EX to RB if preceding tag is VB. score= 1
.............................................
--> m1: Change EX to RB if preceding tag is VB. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VB. score= 1
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change VBN to VB if preceding tag is MD. score= 71
m1: Change NN to VB if preceding tag is MD. score= 64
m1: Change EX to RB if preceding tag is NNS. score= 2
m1: Change EX to RB if preceding tag is NNP. score= 2
m1: Change EX to RB if preceding tag is RP. score= 1
m1: Change EX to RB if preceding tag is VB. score= 1
====September 09, 2018 11:59:15 AM====
====September 09, 2018 11:59:20 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79719 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79719 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'EX', 'NN', 'VBN', "''", 'RBS', 'PDT', 'MD', 'VBG', 'IN', 'POS', 'WP$', 'RP', 'JJS', 'UH', 'PRP', '#', 'VBZ', ',', 'VBD', 'JJ', 'NNS', '-RRB-', 'RB', 'CD', 'NNP', '-NONE-', 'RBR', 'PRP$', 'NNPS', 'WRB', '``', 'FW', 'SYM', 'JJR', 'DT', '$', ':', '-LRB-', 'CC', 'WDT', 'WP', '.', 'LS', 'VB', 'TO', 'VBP'}
---
Count incorrectly tagged words: 3142
====September 09, 2018 11:59:21 AM====
good z: [(('NNP', ''), 9), (('PRP$', ''), 1), (('DT', ''), 1), (('CC', ''), 1), (('.', ''), 1)]
bad z: [(('NN', ''), 1270), (('VBN', ''), 110), (("''", ''), 25), (('VBG', ''), 156), (('IN', ''), 838), (('POS', ''), 263), (('WP$', ''), 7), (('RP', ''), 7), (('JJS', ''), 40), (('PRP', ''), 3), (('VBZ', ''), 61), ((',', ''), 184), (('VBD', ''), 69), (('JJ', ''), 1918), (('NNS', ''), 111), (('-RRB-', ''), 4), (('RB', ''), 43), (('CD', ''), 562), (('NNP', ''), 426), (('-NONE-', ''), 98), (('PRP$', ''), 249), (('NNPS', ''), 7), (('WRB', ''), 8), (('``', ''), 54), (('JJR', ''), 59), (('DT', ''), 2826), ((':', ''), 12), (('-LRB-', ''), 2), (('CC', ''), 203), (('WDT', ''), 1), (('WP', ''), 4), (('.', ''), 92), (('VB', ''), 146), (('TO', ''), 45), (('VBP', ''), 20)]
====September 09, 2018 11:59:21 AM====
.
m1: Change EX to RB if preceding tag is NNS. score= 2
.
m1: Change NN to VB if preceding tag is MD. score= 62
.
m1: Change VBN to VB if preceding tag is MD. score= 66
...........Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 298, in <module>
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 83, in learn
    best_transform = self.get_best_transform()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 105, in get_best_transform
    instance, score = self.get_best_instance(template)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 159, in get_best_instance
    count_bad_transforms[(START_TAG, '')] = 0
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 126, in test_transform_m1
    preceding_tag = self.tagged_words[pos-1][1]
KeyboardInterrupt
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
+++ TEST  0 +++
====September 09, 2018 12:00:15 PM====
====September 09, 2018 12:00:21 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79734 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79734 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'VBZ', 'POS', 'UH', 'VB', 'WRB', ',', '#', 'TO', 'RP', 'WP$', 'VBG', 'JJ', '``', 'DT', 'CD', 'VBD', 'VBP', 'RBS', 'IN', 'VBN', 'SYM', 'CC', 'WDT', 'RBR', 'EX', 'NNS', 'MD', 'FW', '$', 'RB', 'NNP', 'JJS', 'LS', 'WP', '-LRB-', 'PDT', 'NNPS', '-NONE-', 'JJR', 'PRP', '-RRB-', "''", 'PRP$', '.', 'NN', ':'}
---
Count incorrectly tagged words: 3176 of 79734
====September 09, 2018 12:00:21 PM====
good z: [(('DT', ''), 1), (('IN', ''), 1), (('CC', ''), 1), (('NNP', ''), 10), (('PRP$', ''), 1), (('.', ''), 2)]
bad z: [(('VBZ', ''), 58), (('POS', ''), 271), (('VB', ''), 134), (('WRB', ''), 10), ((',', ''), 182), (('TO', ''), 47), (('RP', ''), 9), (('WP$', ''), 6), (('VBG', ''), 160), (('JJ', ''), 1957), (('``', ''), 57), (('DT', ''), 2910), (('CD', ''), 527), (('VBD', ''), 68), (('VBP', ''), 19), (('IN', ''), 838), (('VBN', ''), 114), (('CC', ''), 215), (('WDT', ''), 2), (('NNS', ''), 116), (('RB', ''), 48), (('NNP', ''), 432), (('JJS', ''), 38), (('WP', ''), 4), (('-LRB-', ''), 2), (('NNPS', ''), 7), (('-NONE-', ''), 99), (('JJR', ''), 61), (('PRP', ''), 3), (('-RRB-', ''), 3), (("''", ''), 26), (('PRP$', ''), 258), (('.', ''), 88), (('NN', ''), 1317), ((':', ''), 13)]
====September 09, 2018 12:00:21 PM====
.
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
.
m1: Change POS to VBZ if preceding tag is PRP. score= 43
.......Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 303, in <module>
    transform_sequence = tagger.learn()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 83, in learn
    best_transform = self.get_best_transform()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 105, in get_best_transform
    instance, score = self.get_best_instance(template)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 161, in get_best_instance
    count_good_transforms, count_bad_transforms)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 126, in test_transform_m1
    preceding_tag = self.tagged_words[pos-1][1]
KeyboardInterrupt
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
+++ TEST  1 +++
====September 09, 2018 12:00:50 PM====
====September 09, 2018 12:00:55 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80973 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80973 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'UH', '.', 'IN', '-RRB-', '-NONE-', 'VBD', 'WDT', '-LRB-', 'PDT', 'MD', 'LS', 'VBP', 'EX', 'FW', '``', 'JJ', 'DT', 'CC', 'VBN', 'JJS', 'SYM', 'WRB', ':', 'WP', 'NNPS', 'TO', 'POS', 'NNP', ',', 'RBR', 'CD', 'NN', 'VBZ', "''", 'VBG', 'WP$', 'PRP', '$', 'NNS', 'RP', 'JJR', '#', 'RB', 'PRP$', 'RBS', 'VB'}
---
Count incorrectly tagged words: 3245 of 80973
====September 09, 2018 12:00:55 PM====
good z: [(('.', ''), 3), (('IN', ''), 1), (('JJ', ''), 1), (('DT', ''), 1), (('NNP', ''), 10)]
bad z: [(('.', ''), 88), (('IN', ''), 871), (('-RRB-', ''), 5), (('-NONE-', ''), 95), (('VBD', ''), 68), (('WDT', ''), 2), (('-LRB-', ''), 2), (('VBP', ''), 18), (('``', ''), 56), (('JJ', ''), 1943), (('DT', ''), 2929), (('CC', ''), 207), (('VBN', ''), 127), (('JJS', ''), 36), (('WRB', ''), 9), ((':', ''), 11), (('WP', ''), 2), (('NNPS', ''), 6), (('TO', ''), 52), (('POS', ''), 278), (('NNP', ''), 422), ((',', ''), 191), (('CD', ''), 557), (('NN', ''), 1354), (('VBZ', ''), 54), (("''", ''), 31), (('VBG', ''), 156), (('WP$', ''), 8), (('PRP', ''), 2), (('NNS', ''), 113), (('RP', ''), 7), (('JJR', ''), 57), (('RB', ''), 43), (('PRP$', ''), 266), (('VB', ''), 143)]
====September 09, 2018 12:00:55 PM====
...
m1: Change IN to WDT if preceding tag is EX. score= 1

m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VBD to VBN if preceding tag is VBP. score= 49
......
m1: Change VBP to VB if preceding tag is MD. score= 63
....................
m1: Change NN to VB if preceding tag is TO. score= 84
..............
--> m1: Change NN to VB if preceding tag is TO. score= 84
-=-=-> changed  189  tags
m1: Change NN to VB if preceding tag is TO. score= 84
...
m1: Change IN to WDT if preceding tag is EX. score= 1

m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VBD to VBN if preceding tag is VBP. score= 49
......
m1: Change VBP to VB if preceding tag is MD. score= 63
..................................
--> m1: Change VBP to VB if preceding tag is MD. score= 63
-=-=-> changed  63  tags
m1: Change VBP to VB if preceding tag is MD. score= 63
...
m1: Change IN to WDT if preceding tag is EX. score= 1

m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VBD to VBN if preceding tag is VBD. score= 43
......
m1: Change VBP to VB if preceding tag is TO. score= 61
..................................
--> m1: Change VBP to VB if preceding tag is TO. score= 61
-=-=-> changed  61  tags
m1: Change VBP to VB if preceding tag is TO. score= 61
...
m1: Change IN to WDT if preceding tag is EX. score= 1

m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VBD to VBN if preceding tag is VBD. score= 43
..........................
m1: Change NN to VB if preceding tag is MD. score= 57
..............
--> m1: Change NN to VB if preceding tag is MD. score= 57
-=-=-> changed  57  tags
m1: Change NN to VB if preceding tag is MD. score= 57
...
m1: Change IN to WDT if preceding tag is EX. score= 1

m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VBD to VBN if preceding tag is VBD. score= 43
........................................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 43
-=-=-> changed  43  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 43
...
m1: Change IN to WDT if preceding tag is EX. score= 1

m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 43
...........Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 303, in <module>
    transform_sequence = tagger.learn()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 83, in learn
    best_transform = self.get_best_transform()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 105, in get_best_transform
    instance, score = self.get_best_instance(template)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 161, in get_best_instance
    count_good_transforms, count_bad_transforms)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 123, in test_transform_m1
    current_tag = self.tagged_words[pos][1]
KeyboardInterrupt
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
+++ TEST  1 +++
====September 09, 2018 12:10:07 PM====
====September 09, 2018 12:10:15 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79321 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79321 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'CD', 'WP', 'DT', 'MD', 'VBG', ':', 'RBR', 'VBD', 'POS', 'WP$', 'RBS', 'RP', '-RRB-', 'LS', '#', '.', 'VBZ', 'PDT', 'NNS', 'RB', 'JJR', 'SYM', 'IN', 'VB', 'TO', 'JJ', 'JJS', 'CC', 'NNPS', 'WRB', 'VBP', 'WDT', ',', 'EX', 'NN', "''", 'NNP', '-LRB-', 'PRP', 'PRP$', '-NONE-', 'FW', '$', '``', 'VBN', 'UH'}
---
Count incorrectly tagged words: 3128 of 79321
====September 09, 2018 12:10:15 PM====
good z: [(('DT', ''), 1), (('.', ''), 2), (('IN', ''), 1), (('NNP', ''), 12)]
bad z: [(('CD', ''), 516), (('WP', ''), 1), (('DT', ''), 2857), (('VBG', ''), 159), ((':', ''), 14), (('VBD', ''), 70), (('POS', ''), 270), (('WP$', ''), 6), (('RP', ''), 7), (('-RRB-', ''), 3), (('.', ''), 98), (('VBZ', ''), 59), (('NNS', ''), 106), (('RB', ''), 41), (('JJR', ''), 58), (('IN', ''), 843), (('VB', ''), 138), (('TO', ''), 47), (('JJ', ''), 1948), (('JJS', ''), 32), (('CC', ''), 220), (('NNPS', ''), 7), (('WRB', ''), 8), (('VBP', ''), 19), (('WDT', ''), 1), ((',', ''), 188), (('NN', ''), 1303), (("''", ''), 26), (('NNP', ''), 408), (('-LRB-', ''), 2), (('PRP', ''), 3), (('PRP$', ''), 267), (('-NONE-', ''), 74), (('``', ''), 59), (('VBN', ''), 113)]
====September 09, 2018 12:10:15 PM====
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
................
m1: Change VB to NN if preceding tag is DT. score= 46
.......
m1: Change VBP to VB if preceding tag is TO. score= 62
....
m1: Change NN to VB if preceding tag is TO. score= 81
...........
--> m1: Change NN to VB if preceding tag is TO. score= 81
-=-=-> changed  175  tags
m1: Change NN to VB if preceding tag is TO. score= 81
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
................
m1: Change VB to NN if preceding tag is DT. score= 46
.......
m1: Change VBP to VB if preceding tag is TO. score= 62
...............
--> m1: Change VBP to VB if preceding tag is TO. score= 62
-=-=-> changed  62  tags
m1: Change VBP to VB if preceding tag is TO. score= 62
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
................
m1: Change VB to NN if preceding tag is DT. score= 46
.......
m1: Change VBP to VB if preceding tag is MD. score= 61
...............
--> m1: Change VBP to VB if preceding tag is MD. score= 61
-=-=-> changed  61  tags
m1: Change VBP to VB if preceding tag is MD. score= 61
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
................
m1: Change VB to NN if preceding tag is DT. score= 46
...........
m1: Change NN to VB if preceding tag is MD. score= 58
...........
--> m1: Change NN to VB if preceding tag is MD. score= 58
-=-=-> changed  58  tags
m1: Change NN to VB if preceding tag is MD. score= 58
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
................
m1: Change VB to NN if preceding tag is DT. score= 46
......................
--> m1: Change VB to NN if preceding tag is DT. score= 46
-=-=-> changed  49  tags
m1: Change VB to NN if preceding tag is DT. score= 46
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
......................................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 44
-=-=-> changed  48  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBD. score= 41
......................................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 41
-=-=-> changed  41  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 41
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBP. score= 38
.
m1: Change POS to VBZ if preceding tag is PRP. score= 40
.....................................
--> m1: Change POS to VBZ if preceding tag is PRP. score= 40
-=-=-> changed  40  tags
m1: Change POS to VBZ if preceding tag is PRP. score= 40
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VBP. score= 38
......................................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 38
-=-=-> changed  40  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 38
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VB. score= 29
................
m1: Change VB to VBP if preceding tag is NNS. score= 34
.....................
m1: Change VBN to VBD if preceding tag is NNP. score= 35
.
--> m1: Change VBN to VBD if preceding tag is NNP. score= 35
-=-=-> changed  49  tags
m1: Change VBN to VBD if preceding tag is NNP. score= 35
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VB. score= 29
................
m1: Change VB to VBP if preceding tag is NNS. score= 34
......................
--> m1: Change VB to VBP if preceding tag is NNS. score= 34
-=-=-> changed  67  tags
m1: Change VB to VBP if preceding tag is NNS. score= 34
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VB. score= 29
................
m1: Change VB to VBP if preceding tag is PRP. score= 33
......................
--> m1: Change VB to VBP if preceding tag is PRP. score= 33
-=-=-> changed  47  tags
m1: Change VB to VBP if preceding tag is PRP. score= 33
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VB. score= 28
.....................................
m1: Change VBN to VBD if preceding tag is PRP. score= 29
.
--> m1: Change VBN to VBD if preceding tag is PRP. score= 29
-=-=-> changed  37  tags
m1: Change VBN to VBD if preceding tag is PRP. score= 29
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...
m1: Change VBD to VBN if preceding tag is VB. score= 28
......................................
--> m1: Change VBD to VBN if preceding tag is VB. score= 28
-=-=-> changed  38  tags
m1: Change VBD to VBN if preceding tag is VB. score= 28
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
....
m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
...
m1: Change RP to RB if preceding tag is ,. score= 28
..................................
--> m1: Change RP to RB if preceding tag is ,. score= 28
-=-=-> changed  33  tags
m1: Change RP to RB if preceding tag is ,. score= 28
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
....
m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
.....................................
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
-=-=-> changed  18  tags
m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
....
m1: Change POS to VBZ if preceding tag is EX. score= 12
...............
m1: Change VB to NN if preceding tag is JJ. score= 14
......................
--> m1: Change VB to NN if preceding tag is JJ. score= 14
-=-=-> changed  21  tags
m1: Change VB to NN if preceding tag is JJ. score= 14
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
....
m1: Change POS to VBZ if preceding tag is EX. score= 12
.....................................
--> m1: Change POS to VBZ if preceding tag is EX. score= 12
-=-=-> changed  12  tags
m1: Change POS to VBZ if preceding tag is EX. score= 12
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...................
m1: Change VB to NN if preceding tag is IN. score= 8
...........
m1: Change NN to VBP if preceding tag is PRP. score= 12
...........
--> m1: Change NN to VBP if preceding tag is PRP. score= 12
-=-=-> changed  26  tags
m1: Change NN to VBP if preceding tag is PRP. score= 12
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
...................
m1: Change VB to NN if preceding tag is IN. score= 8
......................
--> m1: Change VB to NN if preceding tag is IN. score= 8
-=-=-> changed  11  tags
m1: Change VB to NN if preceding tag is IN. score= 8
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
..........................
m1: Change VBP to VB if preceding tag is RB. score= 8
...............
--> m1: Change VBP to VB if preceding tag is RB. score= 8
-=-=-> changed  88  tags
m1: Change VBP to VB if preceding tag is RB. score= 8
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
........................................
m1: Change VBN to VB if preceding tag is MD. score= 6
.
--> m1: Change VBN to VB if preceding tag is MD. score= 6
-=-=-> changed  6  tags
m1: Change VBN to VB if preceding tag is MD. score= 6
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 5
.........................................
--> m1: Change VBG to NN if preceding tag is JJ. score= 5
-=-=-> changed  20  tags
m1: Change VBG to NN if preceding tag is JJ. score= 5
----------
........
m1: Change VBD to VBN if preceding tag is VBN. score= 5
......................................
--> m1: Change VBD to VBN if preceding tag is VBN. score= 5
-=-=-> changed  7  tags
m1: Change VBD to VBN if preceding tag is VBN. score= 5
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
........
m1: Change VBZ to NNS if preceding tag is VBG. score= 4
......
m1: Change IN to VB if preceding tag is MD. score= 5
.......................
--> m1: Change IN to VB if preceding tag is MD. score= 5
-=-=-> changed  7  tags
m1: Change IN to VB if preceding tag is MD. score= 5
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
........
m1: Change VBZ to NNS if preceding tag is VBG. score= 4
.......
m1: Change VB to NN if preceding tag is NN. score= 5
......................
--> m1: Change VB to NN if preceding tag is NN. score= 5
-=-=-> changed  32  tags
m1: Change VB to NN if preceding tag is NN. score= 5
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
........
m1: Change VBZ to NNS if preceding tag is VBG. score= 4
.......
m1: Change VB to NN if preceding tag is PRP$. score= 5
......................
--> m1: Change VB to NN if preceding tag is PRP$. score= 5
-=-=-> changed  5  tags
m1: Change VB to NN if preceding tag is PRP$. score= 5
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
........
m1: Change VBZ to NNS if preceding tag is VBG. score= 4
.............................
--> m1: Change VBZ to NNS if preceding tag is VBG. score= 4
-=-=-> changed  4  tags
m1: Change VBZ to NNS if preceding tag is VBG. score= 4
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
..........
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
...........................
--> m1: Change NNS to VBZ if preceding tag is PRP. score= 4
-=-=-> changed  6  tags
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
...............
m1: Change VB to NN if preceding tag is POS. score= 4
......................
--> m1: Change VB to NN if preceding tag is POS. score= 4
-=-=-> changed  4  tags
m1: Change VB to NN if preceding tag is POS. score= 4
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
...............
m1: Change VB to VBN if preceding tag is VBZ. score= 4
......................
--> m1: Change VB to VBN if preceding tag is VBZ. score= 4
-=-=-> changed  10  tags
m1: Change VB to VBN if preceding tag is VBZ. score= 4
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
.................
m1: Change JJ to VB if preceding tag is MD. score= 4
....................
--> m1: Change JJ to VB if preceding tag is MD. score= 4
-=-=-> changed  6  tags
m1: Change JJ to VB if preceding tag is MD. score= 4
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
....................................
m1: Change VBN to VB if preceding tag is TO. score= 4
.
--> m1: Change VBN to VB if preceding tag is TO. score= 4
-=-=-> changed  8  tags
m1: Change VBN to VB if preceding tag is TO. score= 4
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is DT. score= 3
.....................................
--> m1: Change POS to VBZ if preceding tag is DT. score= 3
-=-=-> changed  3  tags
m1: Change POS to VBZ if preceding tag is DT. score= 3
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is WP. score= 2
...
m1: Change RP to IN if preceding tag is CC. score= 3
..................................
--> m1: Change RP to IN if preceding tag is CC. score= 3
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is CC. score= 3
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is WP. score= 2
...............
m1: Change VB to VBP if preceding tag is ,. score= 3
......................
--> m1: Change VB to VBP if preceding tag is ,. score= 3
-=-=-> changed  17  tags
m1: Change VB to VBP if preceding tag is ,. score= 3
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is WP. score= 2
............
m1: Change JJR to RBR if preceding tag is VBP. score= 3
.........................
--> m1: Change JJR to RBR if preceding tag is VBP. score= 3
-=-=-> changed  9  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 3
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is WP. score= 2
...............
m1: Change VB to VBN if preceding tag is VB. score= 3
......................
--> m1: Change VB to VBN if preceding tag is VB. score= 3
-=-=-> changed  7  tags
m1: Change VB to VBN if preceding tag is VB. score= 3
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is WP. score= 2
....................
m1: Change NNPS to NNS if preceding tag is :. score= 3
.................
--> m1: Change NNPS to NNS if preceding tag is :. score= 3
-=-=-> changed  3  tags
m1: Change NNPS to NNS if preceding tag is :. score= 3
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is WP. score= 2
.....................................
--> m1: Change POS to VBZ if preceding tag is WP. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is WP. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to VBZ if preceding tag is IN. score= 2
.....................................
--> m1: Change POS to VBZ if preceding tag is IN. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is IN. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.
m1: Change POS to '' if preceding tag is .. score= 2
.....................................
--> m1: Change POS to '' if preceding tag is .. score= 2
-=-=-> changed  2  tags
m1: Change POS to '' if preceding tag is .. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
....
m1: Change RP to RB if preceding tag is -RRB-. score= 2
..................................
--> m1: Change RP to RB if preceding tag is -RRB-. score= 2
-=-=-> changed  2  tags
m1: Change RP to RB if preceding tag is -RRB-. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
....
m1: Change RP to IN if preceding tag is RB. score= 2
..................................
--> m1: Change RP to IN if preceding tag is RB. score= 2
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is RB. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
....
m1: Change RP to IN if preceding tag is JJR. score= 2
..................................
--> m1: Change RP to IN if preceding tag is JJR. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is JJR. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
....
m1: Change RP to IN if preceding tag is IN. score= 2
..................................
--> m1: Change RP to IN if preceding tag is IN. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is IN. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.........
m1: Change VBZ to NNS if preceding tag is VB. score= 2
.............................
--> m1: Change VBZ to NNS if preceding tag is VB. score= 2
-=-=-> changed  2  tags
m1: Change VBZ to NNS if preceding tag is VB. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.........
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
.............................
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
-=-=-> changed  2  tags
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
................
m1: Change VB to VBN if preceding tag is VBP. score= 2
......................
--> m1: Change VB to VBN if preceding tag is VBP. score= 2
-=-=-> changed  4  tags
m1: Change VB to VBN if preceding tag is VBP. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
..........................
m1: Change EX to RB if preceding tag is RP. score= 2
............
--> m1: Change EX to RB if preceding tag is RP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is RP. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
..........................
m1: Change EX to RB if preceding tag is NNS. score= 2
............
--> m1: Change EX to RB if preceding tag is NNS. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNS. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
..........................
m1: Change EX to RB if preceding tag is RB. score= 2
............
--> m1: Change EX to RB if preceding tag is RB. score= 2
-=-=-> changed  4  tags
m1: Change EX to RB if preceding tag is RB. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
..........................
m1: Change EX to RB if preceding tag is NNP. score= 2
............
--> m1: Change EX to RB if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNP. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
.....................................
m1: Change VBN to VBD if preceding tag is NNPS. score= 2
.
--> m1: Change VBN to VBD if preceding tag is NNPS. score= 2
-=-=-> changed  2  tags
m1: Change VBN to VBD if preceding tag is NNPS. score= 2
----------
........
m1: Change VBD to VBN if preceding tag is VBG. score= 1
......................................
--> m1: Change VBD to VBN if preceding tag is VBG. score= 1
-=-=-> changed  4  tags
m1: Change VBD to VBN if preceding tag is VBG. score= 1
----------
........
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
......................................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
----------
........
m1: Change VBD to VBN if preceding tag is VBP. score= 1
......................................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 1
----------
........
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
......................................
--> m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
----------
.........
m1: Change POS to VBZ if preceding tag is WRB. score= 1
.....................................
--> m1: Change POS to VBZ if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WRB. score= 1
----------
.........
m1: Change POS to '' if preceding tag is ,. score= 1
.....................................
--> m1: Change POS to '' if preceding tag is ,. score= 1
-=-=-> changed  1  tags
m1: Change POS to '' if preceding tag is ,. score= 1
----------
............
m1: Change RP to RB if preceding tag is TO. score= 1
..................................
--> m1: Change RP to RB if preceding tag is TO. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is TO. score= 1
----------
............
m1: Change RP to IN if preceding tag is NN. score= 1
..................................
--> m1: Change RP to IN if preceding tag is NN. score= 1
-=-=-> changed  16  tags
m1: Change RP to IN if preceding tag is NN. score= 1
----------
............
m1: Change RP to IN if preceding tag is NNP. score= 1
..................................
--> m1: Change RP to IN if preceding tag is NNP. score= 1
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is NNP. score= 1
----------
............
m1: Change RP to IN if preceding tag is PRP. score= 1
..................................
--> m1: Change RP to IN if preceding tag is PRP. score= 1
-=-=-> changed  7  tags
m1: Change RP to IN if preceding tag is PRP. score= 1
----------
.................
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
.............................
--> m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
----------
....................
m1: Change RB to JJ if preceding tag is PRP$. score= 1
..........................
--> m1: Change RB to JJ if preceding tag is PRP$. score= 1
-=-=-> changed  5  tags
m1: Change RB to JJ if preceding tag is PRP$. score= 1
----------
.....................
m1: Change JJR to RBR if preceding tag is MD. score= 1
.........................
--> m1: Change JJR to RBR if preceding tag is MD. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is MD. score= 1
----------
........................
m1: Change VB to VBP if preceding tag is CD. score= 1
......................
--> m1: Change VB to VBP if preceding tag is CD. score= 1
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is CD. score= 1
----------
........................
m1: Change VB to VBP if preceding tag is NNS. score= 1
......................
--> m1: Change VB to VBP if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is NNS. score= 1
----------
........................
m1: Change VB to VBP if preceding tag is NNPS. score= 1
......................
--> m1: Change VB to VBP if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is NNPS. score= 1
----------
........................
m1: Change VB to VBP if preceding tag is NNP. score= 1
......................
--> m1: Change VB to VBP if preceding tag is NNP. score= 1
-=-=-> changed  11  tags
m1: Change VB to VBP if preceding tag is NNP. score= 1
----------
........................
m1: Change VB to VBP if preceding tag is VBN. score= 1
......................
--> m1: Change VB to VBP if preceding tag is VBN. score= 1
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is VBN. score= 1
----------
........................
m1: Change VB to NN if preceding tag is VBD. score= 1
......................
--> m1: Change VB to NN if preceding tag is VBD. score= 1
-=-=-> changed  8  tags
m1: Change VB to NN if preceding tag is VBD. score= 1
----------
........................
m1: Change VB to NN if preceding tag is RP. score= 1
......................
--> m1: Change VB to NN if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change VB to NN if preceding tag is RP. score= 1
----------
..........................
m1: Change JJ to RB if preceding tag is NNPS. score= 1
....................
--> m1: Change JJ to RB if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change JJ to RB if preceding tag is NNPS. score= 1
----------
...........................
m1: Change JJS to RBS if preceding tag is WP. score= 1
...................
--> m1: Change JJS to RBS if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WP. score= 1
----------
...........................
m1: Change JJS to RBS if preceding tag is NNS. score= 1
...................
--> m1: Change JJS to RBS if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is NNS. score= 1
----------
...........................
m1: Change JJS to RBS if preceding tag is VBN. score= 1
...................
--> m1: Change JJS to RBS if preceding tag is VBN. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBN. score= 1
----------
...............................
m1: Change VBP to VB if preceding tag is VBD. score= 1
...............
--> m1: Change VBP to VB if preceding tag is VBD. score= 1
-=-=-> changed  1  tags
m1: Change VBP to VB if preceding tag is VBD. score= 1
----------
...............................
m1: Change VBP to NN if preceding tag is POS. score= 1
...............
--> m1: Change VBP to NN if preceding tag is POS. score= 1
-=-=-> changed  1  tags
m1: Change VBP to NN if preceding tag is POS. score= 1
----------
...............................
m1: Change VBP to NN if preceding tag is PRP$. score= 1
...............
--> m1: Change VBP to NN if preceding tag is PRP$. score= 1
-=-=-> changed  1  tags
m1: Change VBP to NN if preceding tag is PRP$. score= 1
----------
..................................
m1: Change EX to RB if preceding tag is VBP. score= 1
............
--> m1: Change EX to RB if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VBP. score= 1
----------
.....................................
m1: Change NNP to JJ if preceding tag is JJS. score= 1
.........
--> m1: Change NNP to JJ if preceding tag is JJS. score= 1
-=-=-> changed  3  tags
m1: Change NNP to JJ if preceding tag is JJS. score= 1
----------
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change NN to VB if preceding tag is TO. score= 81
m1: Change VBP to VB if preceding tag is TO. score= 62
m1: Change VBP to VB if preceding tag is MD. score= 61
m1: Change NN to VB if preceding tag is MD. score= 58
m1: Change VB to NN if preceding tag is DT. score= 46
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
m1: Change VBD to VBN if preceding tag is VBD. score= 41
m1: Change POS to VBZ if preceding tag is PRP. score= 40
m1: Change VBD to VBN if preceding tag is VBP. score= 38
m1: Change VBN to VBD if preceding tag is NNP. score= 35
m1: Change VB to VBP if preceding tag is NNS. score= 34
m1: Change VB to VBP if preceding tag is PRP. score= 33
m1: Change VBN to VBD if preceding tag is PRP. score= 29
m1: Change VBD to VBN if preceding tag is VB. score= 28
m1: Change RP to RB if preceding tag is ,. score= 28
m1: Change POS to VBZ if preceding tag is -NONE-. score= 16
m1: Change VB to NN if preceding tag is JJ. score= 14
m1: Change POS to VBZ if preceding tag is EX. score= 12
m1: Change NN to VBP if preceding tag is PRP. score= 12
m1: Change VB to NN if preceding tag is IN. score= 8
m1: Change VBP to VB if preceding tag is RB. score= 8
m1: Change VBN to VB if preceding tag is MD. score= 6
m1: Change VBG to NN if preceding tag is JJ. score= 5
m1: Change VBD to VBN if preceding tag is VBN. score= 5
m1: Change IN to VB if preceding tag is MD. score= 5
m1: Change VB to NN if preceding tag is NN. score= 5
m1: Change VB to NN if preceding tag is PRP$. score= 5
m1: Change VBZ to NNS if preceding tag is VBG. score= 4
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
m1: Change VB to NN if preceding tag is POS. score= 4
m1: Change VB to VBN if preceding tag is VBZ. score= 4
m1: Change JJ to VB if preceding tag is MD. score= 4
m1: Change VBN to VB if preceding tag is TO. score= 4
m1: Change POS to VBZ if preceding tag is DT. score= 3
m1: Change RP to IN if preceding tag is CC. score= 3
m1: Change VB to VBP if preceding tag is ,. score= 3
m1: Change JJR to RBR if preceding tag is VBP. score= 3
m1: Change VB to VBN if preceding tag is VB. score= 3
m1: Change NNPS to NNS if preceding tag is :. score= 3
m1: Change POS to VBZ if preceding tag is WP. score= 2
m1: Change POS to VBZ if preceding tag is IN. score= 2
m1: Change POS to '' if preceding tag is .. score= 2
m1: Change RP to RB if preceding tag is -RRB-. score= 2
m1: Change RP to IN if preceding tag is RB. score= 2
m1: Change RP to IN if preceding tag is JJR. score= 2
m1: Change RP to IN if preceding tag is IN. score= 2
m1: Change VBZ to NNS if preceding tag is VB. score= 2
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VB to VBN if preceding tag is VBP. score= 2
m1: Change EX to RB if preceding tag is RP. score= 2
m1: Change EX to RB if preceding tag is NNS. score= 2
m1: Change EX to RB if preceding tag is RB. score= 2
m1: Change EX to RB if preceding tag is NNP. score= 2
m1: Change VBN to VBD if preceding tag is NNPS. score= 2
m1: Change VBD to VBN if preceding tag is VBG. score= 1
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
m1: Change VBD to VBN if preceding tag is VBP. score= 1
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
m1: Change POS to VBZ if preceding tag is WRB. score= 1
m1: Change POS to '' if preceding tag is ,. score= 1
m1: Change RP to RB if preceding tag is TO. score= 1
m1: Change RP to IN if preceding tag is NN. score= 1
m1: Change RP to IN if preceding tag is NNP. score= 1
m1: Change RP to IN if preceding tag is PRP. score= 1
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
m1: Change RB to JJ if preceding tag is PRP$. score= 1
m1: Change JJR to RBR if preceding tag is MD. score= 1
m1: Change VB to VBP if preceding tag is CD. score= 1
m1: Change VB to VBP if preceding tag is NNS. score= 1
m1: Change VB to VBP if preceding tag is NNPS. score= 1
m1: Change VB to VBP if preceding tag is NNP. score= 1
m1: Change VB to VBP if preceding tag is VBN. score= 1
m1: Change VB to NN if preceding tag is VBD. score= 1
m1: Change VB to NN if preceding tag is RP. score= 1
m1: Change JJ to RB if preceding tag is NNPS. score= 1
m1: Change JJS to RBS if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is NNS. score= 1
m1: Change JJS to RBS if preceding tag is VBN. score= 1
m1: Change VBP to VB if preceding tag is VBD. score= 1
m1: Change VBP to NN if preceding tag is POS. score= 1
m1: Change VBP to NN if preceding tag is PRP$. score= 1
m1: Change EX to RB if preceding tag is VBP. score= 1
m1: Change NNP to JJ if preceding tag is JJS. score= 1
====September 09, 2018 04:13:26 PM====
+++ TEST  2 +++
====September 09, 2018 04:13:26 PM====
====September 09, 2018 04:13:31 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80206 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80206 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'CD', 'WP', 'DT', 'MD', 'VBG', ':', 'RBR', 'VBD', 'POS', 'WP$', 'RBS', 'RP', '-RRB-', 'LS', '#', '.', 'VBZ', 'PDT', 'NNS', 'RB', 'JJR', 'SYM', 'IN', 'VB', 'TO', 'JJ', 'JJS', 'CC', 'NNPS', 'WRB', 'VBP', 'WDT', ',', 'EX', 'NN', "''", 'NNP', '-LRB-', 'PRP', 'PRP$', '-NONE-', 'FW', '$', '``', 'VBN', 'UH'}
---
Count incorrectly tagged words: 3202 of 80206
====September 09, 2018 04:13:31 PM====
good z: [(('.', ''), 1), (('JJ', ''), 1), (('CC', ''), 1), (('NNP', ''), 8), (('PRP$', ''), 1)]
bad z: [(('CD', ''), 533), (('WP', ''), 4), (('DT', ''), 2925), (('VBG', ''), 160), ((':', ''), 12), (('VBD', ''), 66), (('POS', ''), 265), (('WP$', ''), 8), (('RP', ''), 11), (('-RRB-', ''), 6), (('.', ''), 97), (('VBZ', ''), 57), (('NNS', ''), 115), (('RB', ''), 42), (('JJR', ''), 64), (('IN', ''), 883), (('VB', ''), 139), (('TO', ''), 48), (('JJ', ''), 1955), (('JJS', ''), 40), (('CC', ''), 211), (('NNPS', ''), 8), (('WRB', ''), 8), (('VBP', ''), 21), (('WDT', ''), 2), ((',', ''), 188), (('NN', ''), 1341), (("''", ''), 28), (('NNP', ''), 416), (('-LRB-', ''), 2), (('PRP', ''), 3), (('PRP$', ''), 252), (('-NONE-', ''), 90), (('``', ''), 55), (('VBN', ''), 119)]
====September 09, 2018 04:13:32 PM====
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBP. score= 48
.......................
m1: Change VBP to VB if preceding tag is TO. score= 65
....
m1: Change NN to VB if preceding tag is TO. score= 85
...........
--> m1: Change NN to VB if preceding tag is TO. score= 85
-=-=-> changed  182  tags
m1: Change NN to VB if preceding tag is TO. score= 85
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBP. score= 48
.......................
m1: Change VBP to VB if preceding tag is TO. score= 65
...............
--> m1: Change VBP to VB if preceding tag is TO. score= 65
-=-=-> changed  65  tags
m1: Change VBP to VB if preceding tag is TO. score= 65
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBP. score= 46
................
m1: Change VB to NN if preceding tag is DT. score= 48
.......
m1: Change VBP to VB if preceding tag is MD. score= 61
...............
--> m1: Change VBP to VB if preceding tag is MD. score= 61
-=-=-> changed  61  tags
m1: Change VBP to VB if preceding tag is MD. score= 61
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 43
................
m1: Change VB to NN if preceding tag is DT. score= 48
...........
m1: Change NN to VB if preceding tag is MD. score= 57
...........
--> m1: Change NN to VB if preceding tag is MD. score= 57
-=-=-> changed  57  tags
m1: Change NN to VB if preceding tag is MD. score= 57
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 43
................
m1: Change VB to NN if preceding tag is DT. score= 48
......................
--> m1: Change VB to NN if preceding tag is DT. score= 48
-=-=-> changed  51  tags
m1: Change VB to NN if preceding tag is DT. score= 48
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 43
......................................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 43
-=-=-> changed  53  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 43
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBP. score= 41
......................................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 41
-=-=-> changed  43  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 41
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBD. score= 37
................
m1: Change VB to VBP if preceding tag is NNS. score= 39
......................
--> m1: Change VB to VBP if preceding tag is NNS. score= 39
-=-=-> changed  70  tags
m1: Change VB to VBP if preceding tag is NNS. score= 39
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBD. score= 37
......................................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 37
-=-=-> changed  37  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 37
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VB. score= 28
.
m1: Change POS to VBZ if preceding tag is PRP. score= 35
....................................
m1: Change VBN to VBD if preceding tag is NNP. score= 37
.
--> m1: Change VBN to VBD if preceding tag is NNP. score= 37
-=-=-> changed  51  tags
m1: Change VBN to VBD if preceding tag is NNP. score= 37
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VB. score= 28
.
m1: Change POS to VBZ if preceding tag is PRP. score= 35
.....................................
--> m1: Change POS to VBZ if preceding tag is PRP. score= 35
-=-=-> changed  35  tags
m1: Change POS to VBZ if preceding tag is PRP. score= 35
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VB. score= 28
....
m1: Change RP to RB if preceding tag is ,. score= 29
............
m1: Change VB to VBP if preceding tag is PRP. score= 31
......................
--> m1: Change VB to VBP if preceding tag is PRP. score= 31
-=-=-> changed  45  tags
m1: Change VB to VBP if preceding tag is PRP. score= 31
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VB. score= 28
....
m1: Change RP to RB if preceding tag is ,. score= 29
..................................
--> m1: Change RP to RB if preceding tag is ,. score= 29
-=-=-> changed  33  tags
m1: Change RP to RB if preceding tag is ,. score= 29
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VB. score= 28
......................................
--> m1: Change VBD to VBN if preceding tag is VB. score= 28
-=-=-> changed  42  tags
m1: Change VBD to VBN if preceding tag is VB. score= 28
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
.
m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
...............
m1: Change VB to NN if preceding tag is JJ. score= 20
.....................
m1: Change VBN to VBD if preceding tag is PRP. score= 28
.
--> m1: Change VBN to VBD if preceding tag is PRP. score= 28
-=-=-> changed  36  tags
m1: Change VBN to VBD if preceding tag is PRP. score= 28
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
.
m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
...............
m1: Change VB to NN if preceding tag is JJ. score= 20
......................
--> m1: Change VB to NN if preceding tag is JJ. score= 20
-=-=-> changed  27  tags
m1: Change VB to NN if preceding tag is JJ. score= 20
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
.
m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
.....................................
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
-=-=-> changed  17  tags
m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
.
m1: Change POS to VBZ if preceding tag is EX. score= 14
.....................................
--> m1: Change POS to VBZ if preceding tag is EX. score= 14
-=-=-> changed  14  tags
m1: Change POS to VBZ if preceding tag is EX. score= 14
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
...........
m1: Change NNS to VBZ if preceding tag is PRP. score= 7
.....
m1: Change VB to NN if preceding tag is IN. score= 11
......................
--> m1: Change VB to NN if preceding tag is IN. score= 11
-=-=-> changed  14  tags
m1: Change VB to NN if preceding tag is IN. score= 11
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
...........
m1: Change NNS to VBZ if preceding tag is PRP. score= 7
................
m1: Change NN to VBP if preceding tag is PRP. score= 10
...........
--> m1: Change NN to VBP if preceding tag is PRP. score= 10
-=-=-> changed  23  tags
m1: Change NN to VBP if preceding tag is PRP. score= 10
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
...........
m1: Change NNS to VBZ if preceding tag is PRP. score= 7
...........................
--> m1: Change NNS to VBZ if preceding tag is PRP. score= 7
-=-=-> changed  9  tags
m1: Change NNS to VBZ if preceding tag is PRP. score= 7
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
.....................................
m1: Change VBN to VB if preceding tag is MD. score= 7
.
--> m1: Change VBN to VB if preceding tag is MD. score= 7
-=-=-> changed  7  tags
m1: Change VBN to VB if preceding tag is MD. score= 7
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
......................................
--> m1: Change VBD to VBN if preceding tag is VBN. score= 6
-=-=-> changed  8  tags
m1: Change VBD to VBN if preceding tag is VBN. score= 6
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to VBZ if preceding tag is DT. score= 4
........
m1: Change VBZ to NNS if preceding tag is IN. score= 5
.........
m1: Change JJ to VB if preceding tag is MD. score= 6
....................
--> m1: Change JJ to VB if preceding tag is MD. score= 6
-=-=-> changed  8  tags
m1: Change JJ to VB if preceding tag is MD. score= 6
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to VBZ if preceding tag is DT. score= 4
........
m1: Change VBZ to NNS if preceding tag is IN. score= 5
.............................
--> m1: Change VBZ to NNS if preceding tag is IN. score= 5
-=-=-> changed  7  tags
m1: Change VBZ to NNS if preceding tag is IN. score= 5
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to VBZ if preceding tag is DT. score= 4
...............
m1: Change VB to VBN if preceding tag is VBZ. score= 5
......................
--> m1: Change VB to VBN if preceding tag is VBZ. score= 5
-=-=-> changed  9  tags
m1: Change VB to VBN if preceding tag is VBZ. score= 5
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to VBZ if preceding tag is DT. score= 4
.....................................
--> m1: Change POS to VBZ if preceding tag is DT. score= 4
-=-=-> changed  4  tags
m1: Change POS to VBZ if preceding tag is DT. score= 4
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to '' if preceding tag is .. score= 3
..............
m1: Change IN to VB if preceding tag is MD. score= 4
.......................
--> m1: Change IN to VB if preceding tag is MD. score= 4
-=-=-> changed  4  tags
m1: Change IN to VB if preceding tag is MD. score= 4
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to '' if preceding tag is .. score= 3
...............
m1: Change VB to NN if preceding tag is POS. score= 4
......................
--> m1: Change VB to NN if preceding tag is POS. score= 4
-=-=-> changed  4  tags
m1: Change VB to NN if preceding tag is POS. score= 4
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to '' if preceding tag is .. score= 3
...............
m1: Change VB to NN if preceding tag is NN. score= 4
......................
--> m1: Change VB to NN if preceding tag is NN. score= 4
-=-=-> changed  35  tags
m1: Change VB to NN if preceding tag is NN. score= 4
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to '' if preceding tag is .. score= 3
....................................
m1: Change VBN to VB if preceding tag is TO. score= 4
.
--> m1: Change VBN to VB if preceding tag is TO. score= 4
-=-=-> changed  8  tags
m1: Change VBN to VB if preceding tag is TO. score= 4
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
....
m1: Change POS to '' if preceding tag is .. score= 3
.....................................
--> m1: Change POS to '' if preceding tag is .. score= 3
-=-=-> changed  3  tags
m1: Change POS to '' if preceding tag is .. score= 3
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
.......
m1: Change RP to IN if preceding tag is RB. score= 3
..................................
--> m1: Change RP to IN if preceding tag is RB. score= 3
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is RB. score= 3
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
.......
m1: Change RP to IN if preceding tag is CC. score= 3
..................................
--> m1: Change RP to IN if preceding tag is CC. score= 3
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is CC. score= 3
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
............
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
.............................
--> m1: Change VBZ to NNS if preceding tag is VBG. score= 3
-=-=-> changed  5  tags
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
............
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
.............................
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 3
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
...................
m1: Change VB to VBN if preceding tag is VBP. score= 3
......................
--> m1: Change VB to VBN if preceding tag is VBP. score= 3
-=-=-> changed  5  tags
m1: Change VB to VBN if preceding tag is VBP. score= 3
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....
m1: Change VBG to NN if preceding tag is JJ. score= 2
.........................................
--> m1: Change VBG to NN if preceding tag is JJ. score= 2
-=-=-> changed  19  tags
m1: Change VBG to NN if preceding tag is JJ. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
.......
m1: Change VBD to VBN if preceding tag is VBG. score= 2
......................................
--> m1: Change VBD to VBN if preceding tag is VBG. score= 2
-=-=-> changed  5  tags
m1: Change VBD to VBN if preceding tag is VBG. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
........
m1: Change POS to VBZ if preceding tag is IN. score= 2
.....................................
--> m1: Change POS to VBZ if preceding tag is IN. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is IN. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
........
m1: Change POS to '' if preceding tag is ,. score= 2
.....................................
--> m1: Change POS to '' if preceding tag is ,. score= 2
-=-=-> changed  2  tags
m1: Change POS to '' if preceding tag is ,. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
...........
m1: Change RP to RB if preceding tag is -RRB-. score= 2
..................................
--> m1: Change RP to RB if preceding tag is -RRB-. score= 2
-=-=-> changed  2  tags
m1: Change RP to RB if preceding tag is -RRB-. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
...........
m1: Change RP to IN if preceding tag is NNS. score= 2
..................................
--> m1: Change RP to IN if preceding tag is NNS. score= 2
-=-=-> changed  6  tags
m1: Change RP to IN if preceding tag is NNS. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
...........
m1: Change RP to IN if preceding tag is NNP. score= 2
..................................
--> m1: Change RP to IN if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is NNP. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
................
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
.............................
--> m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
-=-=-> changed  4  tags
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
....................
m1: Change JJR to RBR if preceding tag is VBP. score= 2
.........................
--> m1: Change JJR to RBR if preceding tag is VBP. score= 2
-=-=-> changed  10  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
.......................
m1: Change VB to VBP if preceding tag is NNPS. score= 2
......................
--> m1: Change VB to VBP if preceding tag is NNPS. score= 2
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is NNPS. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
............................
m1: Change NNPS to NNS if preceding tag is :. score= 2
.................
--> m1: Change NNPS to NNS if preceding tag is :. score= 2
-=-=-> changed  2  tags
m1: Change NNPS to NNS if preceding tag is :. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
..............................
m1: Change VBP to VB if preceding tag is VBZ. score= 2
...............
--> m1: Change VBP to VB if preceding tag is VBZ. score= 2
-=-=-> changed  3  tags
m1: Change VBP to VB if preceding tag is VBZ. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
..............................
m1: Change VBP to NN if preceding tag is POS. score= 2
...............
--> m1: Change VBP to NN if preceding tag is POS. score= 2
-=-=-> changed  2  tags
m1: Change VBP to NN if preceding tag is POS. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
.................................
m1: Change EX to RB if preceding tag is NNP. score= 2
............
--> m1: Change EX to RB if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNP. score= 2
----------
.
m1: Change CD to NN if preceding tag is ``. score= 1
.............................................
--> m1: Change CD to NN if preceding tag is ``. score= 1
-=-=-> changed  1  tags
m1: Change CD to NN if preceding tag is ``. score= 1
----------
....
m1: Change MD to NN if preceding tag is JJ. score= 1
..........................................
--> m1: Change MD to NN if preceding tag is JJ. score= 1
-=-=-> changed  1  tags
m1: Change MD to NN if preceding tag is JJ. score= 1
----------
........
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
......................................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
----------
.........
m1: Change POS to VBZ if preceding tag is WP. score= 1
.....................................
--> m1: Change POS to VBZ if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WP. score= 1
----------
.........
m1: Change POS to VBZ if preceding tag is WRB. score= 1
.....................................
--> m1: Change POS to VBZ if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WRB. score= 1
----------
............
m1: Change RP to IN if preceding tag is JJR. score= 1
..................................
--> m1: Change RP to IN if preceding tag is JJR. score= 1
-=-=-> changed  1  tags
m1: Change RP to IN if preceding tag is JJR. score= 1
----------
............
m1: Change RP to IN if preceding tag is JJ. score= 1
..................................
--> m1: Change RP to IN if preceding tag is JJ. score= 1
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is JJ. score= 1
----------
....................
m1: Change RB to JJ if preceding tag is PRP$. score= 1
..........................
--> m1: Change RB to JJ if preceding tag is PRP$. score= 1
-=-=-> changed  6  tags
m1: Change RB to JJ if preceding tag is PRP$. score= 1
----------
.....................
m1: Change JJR to RB if preceding tag is WP. score= 1
.........................
--> m1: Change JJR to RB if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RB if preceding tag is WP. score= 1
----------
........................
m1: Change VB to VBD if preceding tag is NNP. score= 1
......................
--> m1: Change VB to VBD if preceding tag is NNP. score= 1
-=-=-> changed  11  tags
m1: Change VB to VBD if preceding tag is NNP. score= 1
----------
........................
m1: Change VB to VBP if preceding tag is VBN. score= 1
......................
--> m1: Change VB to VBP if preceding tag is VBN. score= 1
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is VBN. score= 1
----------
........................
m1: Change VB to NN if preceding tag is VBD. score= 1
......................
--> m1: Change VB to NN if preceding tag is VBD. score= 1
-=-=-> changed  8  tags
m1: Change VB to NN if preceding tag is VBD. score= 1
----------
........................
m1: Change VB to NN if preceding tag is PRP$. score= 1
......................
--> m1: Change VB to NN if preceding tag is PRP$. score= 1
-=-=-> changed  3  tags
m1: Change VB to NN if preceding tag is PRP$. score= 1
----------
........................
m1: Change VB to VBN if preceding tag is VB. score= 1
......................
--> m1: Change VB to VBN if preceding tag is VB. score= 1
-=-=-> changed  7  tags
m1: Change VB to VBN if preceding tag is VB. score= 1
----------
.........................
m1: Change TO to IN if preceding tag is :. score= 1
.....................
--> m1: Change TO to IN if preceding tag is :. score= 1
-=-=-> changed  3  tags
m1: Change TO to IN if preceding tag is :. score= 1
----------
..........................
m1: Change JJ to RB if preceding tag is NNPS. score= 1
....................
--> m1: Change JJ to RB if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change JJ to RB if preceding tag is NNPS. score= 1
----------
...........................
m1: Change JJS to RBS if preceding tag is WP. score= 1
...................
--> m1: Change JJS to RBS if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WP. score= 1
----------
...........................
m1: Change JJS to RBS if preceding tag is VBG. score= 1
...................
--> m1: Change JJS to RBS if preceding tag is VBG. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBG. score= 1
----------
........
m1: Change VBD to JJ if preceding tag is RBS. score= 1
......................................
--> m1: Change VBD to JJ if preceding tag is RBS. score= 1
-=-=-> changed  1  tags
m1: Change VBD to JJ if preceding tag is RBS. score= 1
----------
...........................
m1: Change JJS to RBS if preceding tag is NNS. score= 1
...................
--> m1: Change JJS to RBS if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is NNS. score= 1
----------
...........................
m1: Change JJS to RBS if preceding tag is WRB. score= 1
...................
--> m1: Change JJS to RBS if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WRB. score= 1
----------
...........................
m1: Change JJS to RBS if preceding tag is VBN. score= 1
...................
--> m1: Change JJS to RBS if preceding tag is VBN. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBN. score= 1
----------
...............................
m1: Change VBP to VB if preceding tag is VBD. score= 1
...............
--> m1: Change VBP to VB if preceding tag is VBD. score= 1
-=-=-> changed  1  tags
m1: Change VBP to VB if preceding tag is VBD. score= 1
----------
..................................
m1: Change EX to RB if preceding tag is RP. score= 1
............
--> m1: Change EX to RB if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is RP. score= 1
----------
..................................
m1: Change EX to RB if preceding tag is NNS. score= 1
............
--> m1: Change EX to RB if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is NNS. score= 1
----------
..................................
m1: Change EX to RB if preceding tag is VBP. score= 1
............
--> m1: Change EX to RB if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VBP. score= 1
----------
.....................................
m1: Change NNP to JJ if preceding tag is MD. score= 1
.........
--> m1: Change NNP to JJ if preceding tag is MD. score= 1
-=-=-> changed  1  tags
m1: Change NNP to JJ if preceding tag is MD. score= 1
----------
.............................................
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
.
--> m1: Change VBN to VBD if preceding tag is NNPS. score= 1
-=-=-> changed  3  tags
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
----------
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
m1: Change NN to VB if preceding tag is TO. score= 85
m1: Change VBP to VB if preceding tag is TO. score= 65
m1: Change VBP to VB if preceding tag is MD. score= 61
m1: Change NN to VB if preceding tag is MD. score= 57
m1: Change VB to NN if preceding tag is DT. score= 48
m1: Change VBD to VBN if preceding tag is VBZ. score= 43
m1: Change VBD to VBN if preceding tag is VBP. score= 41
m1: Change VB to VBP if preceding tag is NNS. score= 39
m1: Change VBD to VBN if preceding tag is VBD. score= 37
m1: Change VBN to VBD if preceding tag is NNP. score= 37
m1: Change POS to VBZ if preceding tag is PRP. score= 35
m1: Change VB to VBP if preceding tag is PRP. score= 31
m1: Change RP to RB if preceding tag is ,. score= 29
m1: Change VBD to VBN if preceding tag is VB. score= 28
m1: Change VBN to VBD if preceding tag is PRP. score= 28
m1: Change VB to NN if preceding tag is JJ. score= 20
m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
m1: Change POS to VBZ if preceding tag is EX. score= 14
m1: Change VB to NN if preceding tag is IN. score= 11
m1: Change NN to VBP if preceding tag is PRP. score= 10
m1: Change NNS to VBZ if preceding tag is PRP. score= 7
m1: Change VBN to VB if preceding tag is MD. score= 7
m1: Change VBD to VBN if preceding tag is VBN. score= 6
m1: Change JJ to VB if preceding tag is MD. score= 6
m1: Change VBZ to NNS if preceding tag is IN. score= 5
m1: Change VB to VBN if preceding tag is VBZ. score= 5
m1: Change POS to VBZ if preceding tag is DT. score= 4
m1: Change IN to VB if preceding tag is MD. score= 4
m1: Change VB to NN if preceding tag is POS. score= 4
m1: Change VB to NN if preceding tag is NN. score= 4
m1: Change VBN to VB if preceding tag is TO. score= 4
m1: Change POS to '' if preceding tag is .. score= 3
m1: Change RP to IN if preceding tag is RB. score= 3
m1: Change RP to IN if preceding tag is CC. score= 3
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
m1: Change VB to VBN if preceding tag is VBP. score= 3
m1: Change VBG to NN if preceding tag is JJ. score= 2
m1: Change VBD to VBN if preceding tag is VBG. score= 2
m1: Change POS to VBZ if preceding tag is IN. score= 2
m1: Change POS to '' if preceding tag is ,. score= 2
m1: Change RP to RB if preceding tag is -RRB-. score= 2
m1: Change RP to IN if preceding tag is NNS. score= 2
m1: Change RP to IN if preceding tag is NNP. score= 2
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
m1: Change JJR to RBR if preceding tag is VBP. score= 2
m1: Change VB to VBP if preceding tag is NNPS. score= 2
m1: Change NNPS to NNS if preceding tag is :. score= 2
m1: Change VBP to VB if preceding tag is VBZ. score= 2
m1: Change VBP to NN if preceding tag is POS. score= 2
m1: Change EX to RB if preceding tag is NNP. score= 2
m1: Change CD to NN if preceding tag is ``. score= 1
m1: Change MD to NN if preceding tag is JJ. score= 1
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
m1: Change POS to VBZ if preceding tag is WP. score= 1
m1: Change POS to VBZ if preceding tag is WRB. score= 1
m1: Change RP to IN if preceding tag is JJR. score= 1
m1: Change RP to IN if preceding tag is JJ. score= 1
m1: Change RB to JJ if preceding tag is PRP$. score= 1
m1: Change JJR to RB if preceding tag is WP. score= 1
m1: Change VB to VBD if preceding tag is NNP. score= 1
m1: Change VB to VBP if preceding tag is VBN. score= 1
m1: Change VB to NN if preceding tag is VBD. score= 1
m1: Change VB to NN if preceding tag is PRP$. score= 1
m1: Change VB to VBN if preceding tag is VB. score= 1
m1: Change TO to IN if preceding tag is :. score= 1
m1: Change JJ to RB if preceding tag is NNPS. score= 1
m1: Change JJS to RBS if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is VBG. score= 1
m1: Change VBD to JJ if preceding tag is RBS. score= 1
m1: Change JJS to RBS if preceding tag is NNS. score= 1
m1: Change JJS to RBS if preceding tag is WRB. score= 1
m1: Change JJS to RBS if preceding tag is VBN. score= 1
m1: Change VBP to VB if preceding tag is VBD. score= 1
m1: Change EX to RB if preceding tag is RP. score= 1
m1: Change EX to RB if preceding tag is NNS. score= 1
m1: Change EX to RB if preceding tag is VBP. score= 1
m1: Change NNP to JJ if preceding tag is MD. score= 1
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
====September 09, 2018 09:39:25 PM====
+++ TEST  3 +++
====September 09, 2018 09:39:25 PM====
====September 09, 2018 09:39:30 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80017 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80017 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'CD', 'WP', 'DT', 'MD', 'VBG', ':', 'RBR', 'VBD', 'POS', 'WP$', 'RBS', 'RP', '-RRB-', 'LS', '#', '.', 'VBZ', 'PDT', 'NNS', 'RB', 'JJR', 'SYM', 'IN', 'VB', 'TO', 'JJ', 'JJS', 'CC', 'NNPS', 'WRB', 'VBP', 'WDT', ',', 'EX', 'NN', "''", 'NNP', '-LRB-', 'PRP', 'PRP$', '-NONE-', 'FW', '$', '``', 'VBN', 'UH'}
---
Count incorrectly tagged words: 3197 of 80017
====September 09, 2018 09:39:30 PM====
good z: [(('DT', ''), 1), (('.', ''), 3), (('CC', ''), 1), (('NNP', ''), 8)]
bad z: [(('CD', ''), 542), (('WP', ''), 2), (('DT', ''), 2886), (('VBG', ''), 163), ((':', ''), 11), (('VBD', ''), 66), (('POS', ''), 262), (('WP$', ''), 7), (('RP', ''), 10), (('-RRB-', ''), 5), (('.', ''), 100), (('VBZ', ''), 50), (('NNS', ''), 114), (('RB', ''), 39), (('JJR', ''), 58), (('IN', ''), 855), (('VB', ''), 140), (('TO', ''), 50), (('JJ', ''), 1934), (('JJS', ''), 41), (('CC', ''), 207), (('NNPS', ''), 8), (('WRB', ''), 10), (('VBP', ''), 20), (('WDT', ''), 1), ((',', ''), 184), (('NN', ''), 1303), (("''", ''), 24), (('NNP', ''), 437), (('-LRB-', ''), 2), (('PRP', ''), 3), (('PRP$', ''), 251), (('-NONE-', ''), 91), (('``', ''), 52), (('VBN', ''), 116)]
====September 09, 2018 09:39:31 PM====
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 46
................
m1: Change VB to NN if preceding tag is DT. score= 48
.......
m1: Change VBP to VB if preceding tag is TO. score= 65
....
m1: Change NN to VB if preceding tag is TO. score= 86
...........
--> m1: Change NN to VB if preceding tag is TO. score= 86
-=-=-> changed  186  tags
m1: Change NN to VB if preceding tag is TO. score= 86
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 46
................
m1: Change VB to NN if preceding tag is DT. score= 48
.......
m1: Change VBP to VB if preceding tag is TO. score= 65
...............
--> m1: Change VBP to VB if preceding tag is TO. score= 65
-=-=-> changed  65  tags
m1: Change VBP to VB if preceding tag is TO. score= 65
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 46
................
m1: Change VB to NN if preceding tag is DT. score= 48
.......
m1: Change VBP to VB if preceding tag is MD. score= 64
...............
--> m1: Change VBP to VB if preceding tag is MD. score= 64
-=-=-> changed  64  tags
m1: Change VBP to VB if preceding tag is MD. score= 64
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 46
................
m1: Change VB to NN if preceding tag is DT. score= 48
...........
m1: Change NN to VB if preceding tag is MD. score= 54
...........
--> m1: Change NN to VB if preceding tag is MD. score= 54
-=-=-> changed  54  tags
m1: Change NN to VB if preceding tag is MD. score= 54
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 46
................
m1: Change VB to NN if preceding tag is DT. score= 48
......................
--> m1: Change VB to NN if preceding tag is DT. score= 48
-=-=-> changed  50  tags
m1: Change VB to NN if preceding tag is DT. score= 48
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBZ. score= 46
......................................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 46
-=-=-> changed  52  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 46
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBD. score= 41
......................................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 41
-=-=-> changed  41  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 41
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBP. score= 37
......................................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 37
-=-=-> changed  39  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 37
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VB. score= 21
.
m1: Change POS to VBZ if preceding tag is PRP. score= 36
....................................
m1: Change VBN to VBD if preceding tag is NNP. score= 37
.
--> m1: Change VBN to VBD if preceding tag is NNP. score= 37
-=-=-> changed  48  tags
m1: Change VBN to VBD if preceding tag is NNP. score= 37
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VB. score= 21
.
m1: Change POS to VBZ if preceding tag is PRP. score= 36
.....................................
--> m1: Change POS to VBZ if preceding tag is PRP. score= 36
-=-=-> changed  36  tags
m1: Change POS to VBZ if preceding tag is PRP. score= 36
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VB. score= 21
....
m1: Change RP to RB if preceding tag is ,. score= 33
............
m1: Change VB to VBP if preceding tag is NNS. score= 34
......................
--> m1: Change VB to VBP if preceding tag is NNS. score= 34
-=-=-> changed  69  tags
m1: Change VB to VBP if preceding tag is NNS. score= 34
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VB. score= 21
....
m1: Change RP to RB if preceding tag is ,. score= 33
..................................
--> m1: Change RP to RB if preceding tag is ,. score= 33
-=-=-> changed  38  tags
m1: Change RP to RB if preceding tag is ,. score= 33
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VB. score= 21
................
m1: Change VB to VBP if preceding tag is PRP. score= 30
......................
--> m1: Change VB to VBP if preceding tag is PRP. score= 30
-=-=-> changed  44  tags
m1: Change VB to VBP if preceding tag is PRP. score= 30
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VB. score= 20
.....................................
m1: Change VBN to VBD if preceding tag is PRP. score= 29
.
--> m1: Change VBN to VBD if preceding tag is PRP. score= 29
-=-=-> changed  35  tags
m1: Change VBN to VBD if preceding tag is PRP. score= 29
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VB. score= 20
......................................
--> m1: Change VBD to VBN if preceding tag is VB. score= 20
-=-=-> changed  34  tags
m1: Change VBD to VBN if preceding tag is VB. score= 20
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
.
m1: Change POS to VBZ if preceding tag is -NONE-. score= 20
.....................................
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 20
-=-=-> changed  22  tags
m1: Change POS to VBZ if preceding tag is -NONE-. score= 20
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
.
m1: Change POS to VBZ if preceding tag is EX. score= 16
...............
m1: Change VB to NN if preceding tag is JJ. score= 19
......................
--> m1: Change VB to NN if preceding tag is JJ. score= 19
-=-=-> changed  24  tags
m1: Change VB to NN if preceding tag is JJ. score= 19
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
.
m1: Change POS to VBZ if preceding tag is EX. score= 16
.....................................
--> m1: Change POS to VBZ if preceding tag is EX. score= 16
-=-=-> changed  16  tags
m1: Change POS to VBZ if preceding tag is EX. score= 16
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
................
m1: Change VB to NN if preceding tag is IN. score= 11
...........
m1: Change NN to VBP if preceding tag is PRP. score= 13
...........
--> m1: Change NN to VBP if preceding tag is PRP. score= 13
-=-=-> changed  26  tags
m1: Change NN to VBP if preceding tag is PRP. score= 13
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
................
m1: Change VB to NN if preceding tag is IN. score= 11
......................
--> m1: Change VB to NN if preceding tag is IN. score= 11
-=-=-> changed  14  tags
m1: Change VB to NN if preceding tag is IN. score= 11
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
................
m1: Change VB to VBN if preceding tag is VBZ. score= 7
......................
--> m1: Change VB to VBN if preceding tag is VBZ. score= 7
-=-=-> changed  13  tags
m1: Change VB to VBN if preceding tag is VBZ. score= 7
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
...
m1: Change VBD to VBN if preceding tag is VBN. score= 6
......................................
--> m1: Change VBD to VBN if preceding tag is VBN. score= 6
-=-=-> changed  8  tags
m1: Change VBD to VBN if preceding tag is VBN. score= 6
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
....
m1: Change POS to VBZ if preceding tag is DT. score= 4
..........
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
..........................
m1: Change VBN to VB if preceding tag is MD. score= 6
.
--> m1: Change VBN to VB if preceding tag is MD. score= 6
-=-=-> changed  6  tags
m1: Change VBN to VB if preceding tag is MD. score= 6
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
....
m1: Change POS to VBZ if preceding tag is DT. score= 4
..........
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
...........................
--> m1: Change NNS to VBZ if preceding tag is PRP. score= 5
-=-=-> changed  9  tags
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
----------
.....
m1: Change VBG to NN if preceding tag is JJ. score= 3
....
m1: Change POS to VBZ if preceding tag is DT. score= 4
...Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 304, in <module>
    count_good_transforms[(START_TAG, '')] = 0
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 83, in learn
    best_transform = self.get_best_transform()
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 106, in get_best_transform
    instance, score = self.get_best_instance(template)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 162, in get_best_instance
    count_good_transforms, count_bad_transforms)
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 123, in test_transform_m1
    correct_tag = self.tagged_words_true[pos][1]
KeyboardInterrupt

>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
+++ TEST  1 +++
====September 09, 2018 10:23:41 PM====
====September 09, 2018 10:23:47 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80263 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80263 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'FW', 'TO', 'VB', 'LS', '.', 'UH', 'WRB', 'DT', 'RP', 'SYM', 'POS', 'NNS', 'PDT', '-RRB-', 'NN', 'IN', 'CC', ':', 'VBG', 'WP', 'RBS', 'VBP', 'JJ', 'VBD', 'WDT', 'CD', 'JJR', '``', '-LRB-', 'VBN', 'NNPS', 'WP$', '$', 'VBZ', "''", 'MD', 'PRP$', ',', 'EX', '-NONE-', 'NNP', 'RB', 'PRP', '#', 'JJS', 'RBR'}
---
Traceback (most recent call last):
  File "C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py", line 293, in <module>
    len(misstagged_words_initial),
NameError: name 'misstagged_words_initial' is not defined
>>> 
======= RESTART: C:\Users\Alice\NLP\NLP-NLTK\NLP_2ed_ch_5_Brill_TBL.py =======
+++ TEST  1 +++
====September 09, 2018 10:25:21 PM====
====September 09, 2018 10:25:27 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 81372 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    81372 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'LS', 'IN', 'WRB', 'FW', 'VB', 'EX', ',', 'NNS', 'RBS', '-LRB-', 'CD', 'NNPS', 'VBZ', '-NONE-', 'VBD', 'VBG', 'TO', 'VBP', 'RP', 'WP$', 'UH', 'POS', 'PRP', '``', 'RBR', 'PRP$', '.', 'NN', "''", 'MD', 'WP', 'JJ', '$', '-RRB-', 'SYM', 'NNP', ':', 'RB', 'VBN', 'JJR', 'WDT', 'CC', 'PDT', 'JJS', 'DT', '#'}
---
Initial count incorrectly tagged words: 3226 of 81372
Initial error rate: 0.03964508676203116
====September 09, 2018 10:25:27 PM====
good z: [(('IN', ''), 1), (('PRP$', ''), 1), (('.', ''), 3), (('NNP', ''), 10), (('CC', ''), 1), (('DT', ''), 1)]
bad z: [(('IN', ''), 867), (('WRB', ''), 7), (('VB', ''), 146), ((',', ''), 188), (('NNS', ''), 114), (('-LRB-', ''), 2), (('CD', ''), 554), (('NNPS', ''), 7), (('VBZ', ''), 62), (('-NONE-', ''), 93), (('VBD', ''), 69), (('VBG', ''), 162), (('TO', ''), 53), (('VBP', ''), 22), (('RP', ''), 8), (('WP$', ''), 6), (('POS', ''), 265), (('PRP', ''), 3), (('``', ''), 56), (('PRP$', ''), 266), (('.', ''), 99), (('NN', ''), 1338), (("''", ''), 26), (('WP', ''), 2), (('JJ', ''), 1999), (('-RRB-', ''), 3), (('NNP', ''), 422), ((':', ''), 11), (('RB', ''), 43), (('VBN', ''), 115), (('JJR', ''), 54), (('WDT', ''), 2), (('CC', ''), 207), (('JJS', ''), 40), (('DT', ''), 2916)]
====September 09, 2018 10:25:27 PM====
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 47
...
m1: Change VBP to VB if preceding tag is MD. score= 63
..........
m1: Change NN to VB if preceding tag is TO. score= 82
..................
--> m1: Change NN to VB if preceding tag is TO. score= 82
-=-=-> changed  188  tags
m1: Change NN to VB if preceding tag is TO. score= 82
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 47
...
m1: Change VBP to VB if preceding tag is MD. score= 63
............................
--> m1: Change VBP to VB if preceding tag is MD. score= 63
-=-=-> changed  63  tags
m1: Change VBP to VB if preceding tag is MD. score= 63
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 47
...
m1: Change VBP to VB if preceding tag is TO. score= 61
............................
--> m1: Change VBP to VB if preceding tag is TO. score= 61
-=-=-> changed  61  tags
m1: Change VBP to VB if preceding tag is TO. score= 61
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 47
.............
m1: Change NN to VB if preceding tag is MD. score= 56
..................
--> m1: Change NN to VB if preceding tag is MD. score= 56
-=-=-> changed  56  tags
m1: Change NN to VB if preceding tag is MD. score= 56
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 47
...............................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 47
-=-=-> changed  57  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 47
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
.................
m1: Change POS to VBZ if preceding tag is PRP. score= 44
........................
--> m1: Change POS to VBZ if preceding tag is PRP. score= 44
-=-=-> changed  44  tags
m1: Change POS to VBZ if preceding tag is PRP. score= 44
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
.........................................
--> m1: Change VB to NN if preceding tag is DT. score= 43
-=-=-> changed  46  tags
m1: Change VB to NN if preceding tag is DT. score= 43
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 41
...............................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 41
-=-=-> changed  41  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 41
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 38
...............................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 38
-=-=-> changed  40  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 38
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37
.........................................
--> m1: Change VB to VBP if preceding tag is NNS. score= 37
-=-=-> changed  65  tags
m1: Change VB to VBP if preceding tag is NNS. score= 37
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is PRP. score= 33
..................................
m1: Change VBN to VBD if preceding tag is NNP. score= 37
.......
--> m1: Change VBN to VBD if preceding tag is NNP. score= 37
-=-=-> changed  48  tags
m1: Change VBN to VBD if preceding tag is NNP. score= 37
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is PRP. score= 33
.........................................
--> m1: Change VB to VBP if preceding tag is PRP. score= 33
-=-=-> changed  49  tags
m1: Change VB to VBP if preceding tag is PRP. score= 33
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is JJ. score= 17
..........
m1: Change VBD to VBN if preceding tag is VB. score= 25
....
m1: Change RP to RB if preceding tag is ,. score= 28
....................
m1: Change VBN to VBD if preceding tag is PRP. score= 32
.......
--> m1: Change VBN to VBD if preceding tag is PRP. score= 32
-=-=-> changed  38  tags
m1: Change VBN to VBD if preceding tag is PRP. score= 32
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is JJ. score= 17
..........
m1: Change VBD to VBN if preceding tag is VB. score= 25
....
m1: Change RP to RB if preceding tag is ,. score= 28
...........................
--> m1: Change RP to RB if preceding tag is ,. score= 28
-=-=-> changed  33  tags
m1: Change RP to RB if preceding tag is ,. score= 28
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is JJ. score= 17
..........
m1: Change VBD to VBN if preceding tag is VB. score= 25
...............................
--> m1: Change VBD to VBN if preceding tag is VB. score= 25
-=-=-> changed  37  tags
m1: Change VBD to VBN if preceding tag is VB. score= 25
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is JJ. score= 17
.........................................
--> m1: Change VB to NN if preceding tag is JJ. score= 17
-=-=-> changed  23  tags
m1: Change VB to NN if preceding tag is JJ. score= 17
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is NN. score= 11
.................
m1: Change POS to VBZ if preceding tag is EX. score= 15
........................
--> m1: Change POS to VBZ if preceding tag is EX. score= 15
-=-=-> changed  15  tags
m1: Change POS to VBZ if preceding tag is EX. score= 15
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is NN. score= 11
.................
m1: Change POS to VBZ if preceding tag is -NONE-. score= 13
........................
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 13
-=-=-> changed  15  tags
m1: Change POS to VBZ if preceding tag is -NONE-. score= 13
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is NN. score= 11
.......................
m1: Change NN to VBP if preceding tag is PRP. score= 12
..................
--> m1: Change NN to VBP if preceding tag is PRP. score= 12
-=-=-> changed  25  tags
m1: Change NN to VBP if preceding tag is PRP. score= 12
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is NN. score= 11
.........................................
--> m1: Change VB to NN if preceding tag is NN. score= 11
-=-=-> changed  36  tags
m1: Change VB to NN if preceding tag is NN. score= 11
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is IN. score= 9
.........................................
--> m1: Change VB to NN if preceding tag is IN. score= 9
-=-=-> changed  12  tags
m1: Change VB to NN if preceding tag is IN. score= 9
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
.............
m1: Change VBD to VBN if preceding tag is VBN. score= 6
........................
m1: Change VBN to VB if preceding tag is MD. score= 8
.......
--> m1: Change VBN to VB if preceding tag is MD. score= 8
-=-=-> changed  8  tags
m1: Change VBN to VB if preceding tag is MD. score= 8
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
.............
m1: Change VBD to VBN if preceding tag is VBN. score= 6
...............................
--> m1: Change VBD to VBN if preceding tag is VBN. score= 6
-=-=-> changed  8  tags
m1: Change VBD to VBN if preceding tag is VBN. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
............................................
--> m1: Change IN to VB if preceding tag is MD. score= 5
-=-=-> changed  7  tags
m1: Change IN to VB if preceding tag is MD. score= 5
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to NN if preceding tag is POS. score= 4
...
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
......................................
--> m1: Change NNS to VBZ if preceding tag is PRP. score= 5
-=-=-> changed  9  tags
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to NN if preceding tag is POS. score= 4
...........................
m1: Change JJ to VB if preceding tag is MD. score= 5
..............
--> m1: Change JJ to VB if preceding tag is MD. score= 5
-=-=-> changed  7  tags
m1: Change JJ to VB if preceding tag is MD. score= 5
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to NN if preceding tag is POS. score= 4
.........................................
--> m1: Change VB to NN if preceding tag is POS. score= 4
-=-=-> changed  4  tags
m1: Change VB to NN if preceding tag is POS. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to NN if preceding tag is PRP$. score= 4
.........................................
--> m1: Change VB to NN if preceding tag is PRP$. score= 4
-=-=-> changed  6  tags
m1: Change VB to NN if preceding tag is PRP$. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBZ. score= 3
..........
m1: Change VBD to VBN if preceding tag is DT. score= 4
...............................
--> m1: Change VBD to VBN if preceding tag is DT. score= 4
-=-=-> changed  23  tags
m1: Change VBD to VBN if preceding tag is DT. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBZ. score= 3
.................
m1: Change POS to VBZ if preceding tag is DT. score= 4
........................
--> m1: Change POS to VBZ if preceding tag is DT. score= 4
-=-=-> changed  4  tags
m1: Change POS to VBZ if preceding tag is DT. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBZ. score= 3
.................
m1: Change POS to '' if preceding tag is .. score= 4
........................
--> m1: Change POS to '' if preceding tag is .. score= 4
-=-=-> changed  4  tags
m1: Change POS to '' if preceding tag is .. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBZ. score= 3
..................................
m1: Change VBN to VB if preceding tag is TO. score= 4
.......
--> m1: Change VBN to VB if preceding tag is TO. score= 4
-=-=-> changed  10  tags
m1: Change VBN to VB if preceding tag is TO. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBZ. score= 3
.........................................
--> m1: Change VB to VBN if preceding tag is VBZ. score= 3
-=-=-> changed  7  tags
m1: Change VB to VBN if preceding tag is VBZ. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBP. score= 3
.........................................
--> m1: Change VB to VBN if preceding tag is VBP. score= 3
-=-=-> changed  5  tags
m1: Change VB to VBN if preceding tag is VBP. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
.......
m1: Change NNPS to NNS if preceding tag is :. score= 3
..................................
--> m1: Change NNPS to NNS if preceding tag is :. score= 3
-=-=-> changed  3  tags
m1: Change NNPS to NNS if preceding tag is :. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
........
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
.................................
--> m1: Change VBZ to NNS if preceding tag is VBG. score= 3
-=-=-> changed  5  tags
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
........
m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
.................................
--> m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
........
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
.................................
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 3
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
.............
m1: Change VBP to VB if preceding tag is VBD. score= 3
............................
--> m1: Change VBP to VB if preceding tag is VBD. score= 3
-=-=-> changed  3  tags
m1: Change VBP to VB if preceding tag is VBD. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
..............
m1: Change RP to IN if preceding tag is RB. score= 3
...........................
--> m1: Change RP to IN if preceding tag is RB. score= 3
-=-=-> changed  4  tags
m1: Change RP to IN if preceding tag is RB. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
...................................
m1: Change JJR to RBR if preceding tag is VBP. score= 3
......
--> m1: Change JJR to RBR if preceding tag is VBP. score= 3
-=-=-> changed  9  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
.........................................
--> m1: Change VB to VBP if preceding tag is ,. score= 2
-=-=-> changed  19  tags
m1: Change VB to VBP if preceding tag is ,. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.
m1: Change EX to RB if preceding tag is RP. score= 2
........................................
--> m1: Change EX to RB if preceding tag is RP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is RP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.
m1: Change EX to RB if preceding tag is RB. score= 2
........................................
--> m1: Change EX to RB if preceding tag is RB. score= 2
-=-=-> changed  4  tags
m1: Change EX to RB if preceding tag is RB. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.............
m1: Change VBP to NN if preceding tag is IN. score= 2
............................
--> m1: Change VBP to NN if preceding tag is IN. score= 2
-=-=-> changed  5  tags
m1: Change VBP to NN if preceding tag is IN. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.............
m1: Change VBP to NN if preceding tag is POS. score= 2
............................
--> m1: Change VBP to NN if preceding tag is POS. score= 2
-=-=-> changed  2  tags
m1: Change VBP to NN if preceding tag is POS. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
..............
m1: Change RP to IN if preceding tag is NNP. score= 2
...........................
--> m1: Change RP to IN if preceding tag is NNP. score= 2
-=-=-> changed  4  tags
m1: Change RP to IN if preceding tag is NNP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
..............
m1: Change RP to IN if preceding tag is JJR. score= 2
...........................
--> m1: Change RP to IN if preceding tag is JJR. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is JJR. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
..............
m1: Change RP to RB if preceding tag is -RRB-. score= 2
...........................
--> m1: Change RP to RB if preceding tag is -RRB-. score= 2
-=-=-> changed  2  tags
m1: Change RP to RB if preceding tag is -RRB-. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.................
m1: Change POS to VBZ if preceding tag is IN. score= 2
........................
--> m1: Change POS to VBZ if preceding tag is IN. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is IN. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.................
m1: Change POS to VBZ if preceding tag is WP. score= 2
........................
--> m1: Change POS to VBZ if preceding tag is WP. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is WP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.................................
m1: Change RB to NN if preceding tag is PRP$. score= 2
........
--> m1: Change RB to NN if preceding tag is PRP$. score= 2
-=-=-> changed  5  tags
m1: Change RB to NN if preceding tag is PRP$. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is NNS. score= 1
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is NNPS. score= 1
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is VBN. score= 1
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is VBN. score= 1
----------
.....
m1: Change VB to NN if preceding tag is RP. score= 1
.........................................
--> m1: Change VB to NN if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change VB to NN if preceding tag is RP. score= 1
----------
......
m1: Change EX to RB if preceding tag is VBP. score= 1
........................................
--> m1: Change EX to RB if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VBP. score= 1
----------
......
m1: Change EX to RB if preceding tag is NNP. score= 1
........................................
--> m1: Change EX to RB if preceding tag is NNP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is NNP. score= 1
----------
............
m1: Change NNPS to NNS if preceding tag is .. score= 1
..................................
--> m1: Change NNPS to NNS if preceding tag is .. score= 1
-=-=-> changed  11  tags
m1: Change NNPS to NNS if preceding tag is .. score= 1
----------
...............
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
...............................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
----------
...............
m1: Change VBD to VBN if preceding tag is VBP. score= 1
...............................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 1
----------
.................
m1: Change TO to IN if preceding tag is :. score= 1
.............................
--> m1: Change TO to IN if preceding tag is :. score= 1
-=-=-> changed  3  tags
m1: Change TO to IN if preceding tag is :. score= 1
----------
..................
m1: Change VBP to VB if preceding tag is VBZ. score= 1
............................
--> m1: Change VBP to VB if preceding tag is VBZ. score= 1
-=-=-> changed  4  tags
m1: Change VBP to VB if preceding tag is VBZ. score= 1
----------
...................
m1: Change RP to IN if preceding tag is NNS. score= 1
...........................
--> m1: Change RP to IN if preceding tag is NNS. score= 1
-=-=-> changed  5  tags
m1: Change RP to IN if preceding tag is NNS. score= 1
----------
...................
m1: Change RP to IN if preceding tag is CC. score= 1
...........................
--> m1: Change RP to IN if preceding tag is CC. score= 1
-=-=-> changed  1  tags
m1: Change RP to IN if preceding tag is CC. score= 1
----------
...................
m1: Change RP to RB if preceding tag is TO. score= 1
...........................
--> m1: Change RP to RB if preceding tag is TO. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is TO. score= 1
----------
......................
m1: Change POS to VBZ if preceding tag is WRB. score= 1
........................
--> m1: Change POS to VBZ if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WRB. score= 1
----------
......................
m1: Change POS to '' if preceding tag is ,. score= 1
........................
--> m1: Change POS to '' if preceding tag is ,. score= 1
-=-=-> changed  1  tags
m1: Change POS to '' if preceding tag is ,. score= 1
----------
................................
m1: Change JJ to RB if preceding tag is NNPS. score= 1
..............
--> m1: Change JJ to RB if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change JJ to RB if preceding tag is NNPS. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is VBP. score= 1
......
--> m1: Change JJR to RBR if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is MD. score= 1
......
--> m1: Change JJR to RBR if preceding tag is MD. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is MD. score= 1
----------
........................................
m1: Change JJR to RB if preceding tag is WP. score= 1
......
--> m1: Change JJR to RB if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RB if preceding tag is WP. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is WRB. score= 1
..
--> m1: Change JJS to RBS if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WRB. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is NNS. score= 1
..
--> m1: Change JJS to RBS if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is NNS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBG. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBG. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBG. score= 1
----------
...............
m1: Change VBD to JJ if preceding tag is RBS. score= 1
...............................
--> m1: Change VBD to JJ if preceding tag is RBS. score= 1
-=-=-> changed  1  tags
m1: Change VBD to JJ if preceding tag is RBS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is WP. score= 1
..
--> m1: Change JJS to RBS if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WP. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBN. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBN. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBN. score= 1
----------
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
Rules found: 78
m1: Change NN to VB if preceding tag is TO. score= 82
m1: Change VBP to VB if preceding tag is MD. score= 63
m1: Change VBP to VB if preceding tag is TO. score= 61
m1: Change NN to VB if preceding tag is MD. score= 56
m1: Change VBD to VBN if preceding tag is VBZ. score= 47
m1: Change POS to VBZ if preceding tag is PRP. score= 44
m1: Change VB to NN if preceding tag is DT. score= 43
m1: Change VBD to VBN if preceding tag is VBD. score= 41
m1: Change VBD to VBN if preceding tag is VBP. score= 38
m1: Change VB to VBP if preceding tag is NNS. score= 37
m1: Change VBN to VBD if preceding tag is NNP. score= 37
m1: Change VB to VBP if preceding tag is PRP. score= 33
m1: Change VBN to VBD if preceding tag is PRP. score= 32
m1: Change RP to RB if preceding tag is ,. score= 28
m1: Change VBD to VBN if preceding tag is VB. score= 25
m1: Change VB to NN if preceding tag is JJ. score= 17
m1: Change POS to VBZ if preceding tag is EX. score= 15
m1: Change POS to VBZ if preceding tag is -NONE-. score= 13
m1: Change NN to VBP if preceding tag is PRP. score= 12
m1: Change VB to NN if preceding tag is NN. score= 11
m1: Change VB to NN if preceding tag is IN. score= 9
m1: Change VBN to VB if preceding tag is MD. score= 8
m1: Change VBD to VBN if preceding tag is VBN. score= 6
m1: Change IN to VB if preceding tag is MD. score= 5
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
m1: Change JJ to VB if preceding tag is MD. score= 5
m1: Change VB to NN if preceding tag is POS. score= 4
m1: Change VB to NN if preceding tag is PRP$. score= 4
m1: Change VBD to VBN if preceding tag is DT. score= 4
m1: Change POS to VBZ if preceding tag is DT. score= 4
m1: Change POS to '' if preceding tag is .. score= 4
m1: Change VBN to VB if preceding tag is TO. score= 4
m1: Change VB to VBN if preceding tag is VBZ. score= 3
m1: Change VB to VBN if preceding tag is VBP. score= 3
m1: Change NNPS to NNS if preceding tag is :. score= 3
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
m1: Change VBZ to NNS if preceding tag is PRP$. score= 3
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
m1: Change VBP to VB if preceding tag is VBD. score= 3
m1: Change RP to IN if preceding tag is RB. score= 3
m1: Change JJR to RBR if preceding tag is VBP. score= 3
m1: Change VB to VBP if preceding tag is ,. score= 2
m1: Change EX to RB if preceding tag is RP. score= 2
m1: Change EX to RB if preceding tag is RB. score= 2
m1: Change VBP to NN if preceding tag is IN. score= 2
m1: Change VBP to NN if preceding tag is POS. score= 2
m1: Change RP to IN if preceding tag is NNP. score= 2
m1: Change RP to IN if preceding tag is JJR. score= 2
m1: Change RP to RB if preceding tag is -RRB-. score= 2
m1: Change POS to VBZ if preceding tag is IN. score= 2
m1: Change POS to VBZ if preceding tag is WP. score= 2
m1: Change RB to NN if preceding tag is PRP$. score= 2
m1: Change VB to VBP if preceding tag is NNS. score= 1
m1: Change VB to VBP if preceding tag is NNPS. score= 1
m1: Change VB to VBP if preceding tag is VBN. score= 1
m1: Change VB to NN if preceding tag is RP. score= 1
m1: Change EX to RB if preceding tag is VBP. score= 1
m1: Change EX to RB if preceding tag is NNP. score= 1
m1: Change NNPS to NNS if preceding tag is .. score= 1
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
m1: Change VBD to VBN if preceding tag is VBP. score= 1
m1: Change TO to IN if preceding tag is :. score= 1
m1: Change VBP to VB if preceding tag is VBZ. score= 1
m1: Change RP to IN if preceding tag is NNS. score= 1
m1: Change RP to IN if preceding tag is CC. score= 1
m1: Change RP to RB if preceding tag is TO. score= 1
m1: Change POS to VBZ if preceding tag is WRB. score= 1
m1: Change POS to '' if preceding tag is ,. score= 1
m1: Change JJ to RB if preceding tag is NNPS. score= 1
m1: Change JJR to RBR if preceding tag is VBP. score= 1
m1: Change JJR to RBR if preceding tag is MD. score= 1
m1: Change JJR to RB if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is WRB. score= 1
m1: Change JJS to RBS if preceding tag is NNS. score= 1
m1: Change JJS to RBS if preceding tag is VBG. score= 1
m1: Change VBD to JJ if preceding tag is RBS. score= 1
m1: Change JJS to RBS if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is VBN. score= 1
Final count incorrectly tagged words: 2354 of 81372
Initial error rate: 0.028928869881531732
====September 10, 2018 09:22:07 AM====
+++ TEST  2 +++
====September 10, 2018 09:22:07 AM====
====September 10, 2018 09:22:12 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80588 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80588 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'LS', 'IN', 'WRB', 'FW', 'VB', 'EX', ',', 'NNS', 'RBS', '-LRB-', 'CD', 'NNPS', 'VBZ', '-NONE-', 'VBD', 'VBG', 'TO', 'VBP', 'RP', 'WP$', 'UH', 'POS', 'PRP', '``', 'RBR', 'PRP$', '.', 'NN', "''", 'MD', 'WP', 'JJ', '$', '-RRB-', 'SYM', 'NNP', ':', 'RB', 'VBN', 'JJR', 'WDT', 'CC', 'PDT', 'JJS', 'DT', '#'}
---
Initial count incorrectly tagged words: 3278 of 80588
Initial error rate: 0.04067603117089393
====September 10, 2018 09:22:12 AM====
good z: [(('IN', ''), 1), (('PRP$', ''), 1), (('.', ''), 3), (('JJ', ''), 1), (('NNP', ''), 10), (('CC', ''), 1), (('DT', ''), 1)]
bad z: [(('IN', ''), 837), (('WRB', ''), 10), (('VB', ''), 128), ((',', ''), 180), (('NNS', ''), 111), (('-LRB-', ''), 1), (('CD', ''), 547), (('NNPS', ''), 5), (('VBZ', ''), 53), (('-NONE-', ''), 84), (('VBD', ''), 72), (('VBG', ''), 155), (('TO', ''), 48), (('VBP', ''), 19), (('RP', ''), 8), (('WP$', ''), 7), (('POS', ''), 281), (('PRP', ''), 3), (('``', ''), 57), (('PRP$', ''), 264), (('.', ''), 89), (('NN', ''), 1303), (("''", ''), 25), (('WP', ''), 3), (('JJ', ''), 1970), (('-RRB-', ''), 3), (('NNP', ''), 418), ((':', ''), 12), (('RB', ''), 40), (('VBN', ''), 112), (('JJR', ''), 54), (('WDT', ''), 2), (('CC', ''), 222), (('JJS', ''), 39), (('DT', ''), 2919)]
====September 10, 2018 09:22:12 AM====
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 45
...
m1: Change VBP to VB if preceding tag is MD. score= 63
..........
m1: Change NN to VB if preceding tag is TO. score= 89
..................
--> m1: Change NN to VB if preceding tag is TO. score= 89
-=-=-> changed  186  tags
m1: Change NN to VB if preceding tag is TO. score= 89
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 45
...
m1: Change VBP to VB if preceding tag is MD. score= 63
............................
--> m1: Change VBP to VB if preceding tag is MD. score= 63
-=-=-> changed  63  tags
m1: Change VBP to VB if preceding tag is MD. score= 63
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 45
...
m1: Change VBP to VB if preceding tag is TO. score= 59
............................
--> m1: Change VBP to VB if preceding tag is TO. score= 59
-=-=-> changed  59  tags
m1: Change VBP to VB if preceding tag is TO. score= 59
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 45
.............
m1: Change NN to VB if preceding tag is MD. score= 58
..................
--> m1: Change NN to VB if preceding tag is MD. score= 58
-=-=-> changed  58  tags
m1: Change NN to VB if preceding tag is MD. score= 58
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 45
...............................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 45
-=-=-> changed  45  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 45
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35

m1: Change VB to NN if preceding tag is DT. score= 44
.........................................
--> m1: Change VB to NN if preceding tag is DT. score= 44
-=-=-> changed  47  tags
m1: Change VB to NN if preceding tag is DT. score= 44
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 43
.......
m1: Change POS to VBZ if preceding tag is PRP. score= 44
........................
--> m1: Change POS to VBZ if preceding tag is PRP. score= 44
-=-=-> changed  44  tags
m1: Change POS to VBZ if preceding tag is PRP. score= 44
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
...............................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 44
-=-=-> changed  54  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 37
...............................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 37
-=-=-> changed  39  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 37
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is NNS. score= 35
.........................................
--> m1: Change VB to VBP if preceding tag is NNS. score= 35
-=-=-> changed  66  tags
m1: Change VB to VBP if preceding tag is NNS. score= 35
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is PRP. score= 25
..........
m1: Change VBD to VBN if preceding tag is VB. score= 30
........................
m1: Change VBN to VBD if preceding tag is NNP. score= 33
.......
--> m1: Change VBN to VBD if preceding tag is NNP. score= 33
-=-=-> changed  47  tags
m1: Change VBN to VBD if preceding tag is NNP. score= 33
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is PRP. score= 25
..........
m1: Change VBD to VBN if preceding tag is VB. score= 30
...............................
--> m1: Change VBD to VBN if preceding tag is VB. score= 30
-=-=-> changed  42  tags
m1: Change VBD to VBN if preceding tag is VB. score= 30
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is PRP. score= 25
..................................
m1: Change VBN to VBD if preceding tag is PRP. score= 27
.......
--> m1: Change VBN to VBD if preceding tag is PRP. score= 27
-=-=-> changed  37  tags
m1: Change VBN to VBD if preceding tag is PRP. score= 27
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to VBP if preceding tag is PRP. score= 25
.........................................
--> m1: Change VB to VBP if preceding tag is PRP. score= 25
-=-=-> changed  42  tags
m1: Change VB to VBP if preceding tag is PRP. score= 25
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to NN if preceding tag is JJ. score= 18
..............
m1: Change RP to RB if preceding tag is ,. score= 25
...........................
--> m1: Change RP to RB if preceding tag is ,. score= 25
-=-=-> changed  28  tags
m1: Change RP to RB if preceding tag is ,. score= 25
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to NN if preceding tag is JJ. score= 18
.........................................
--> m1: Change VB to NN if preceding tag is JJ. score= 18
-=-=-> changed  22  tags
m1: Change VB to NN if preceding tag is JJ. score= 18
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to NN if preceding tag is IN. score= 12
.................
m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
........................
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
-=-=-> changed  18  tags
m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to NN if preceding tag is IN. score= 12
.................
m1: Change POS to VBZ if preceding tag is EX. score= 13
......
m1: Change NN to VBP if preceding tag is PRP. score= 14
..................
--> m1: Change NN to VBP if preceding tag is PRP. score= 14
-=-=-> changed  27  tags
m1: Change NN to VBP if preceding tag is PRP. score= 14
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to NN if preceding tag is IN. score= 12
.................
m1: Change POS to VBZ if preceding tag is EX. score= 13
........................
--> m1: Change POS to VBZ if preceding tag is EX. score= 13
-=-=-> changed  13  tags
m1: Change POS to VBZ if preceding tag is EX. score= 13
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
...
m1: Change VB to NN if preceding tag is IN. score= 12
.........................................
--> m1: Change VB to NN if preceding tag is IN. score= 12
-=-=-> changed  14  tags
m1: Change VB to NN if preceding tag is IN. score= 12
----------
..
m1: Change IN to VB if preceding tag is MD. score= 6
............................................
--> m1: Change IN to VB if preceding tag is MD. score= 6
-=-=-> changed  6  tags
m1: Change IN to VB if preceding tag is MD. score= 6
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3

m1: Change VB to NN if preceding tag is PRP$. score= 5

m1: Change VB to VBN if preceding tag is VBZ. score= 6
.........................................
--> m1: Change VB to VBN if preceding tag is VBZ. score= 6
-=-=-> changed  12  tags
m1: Change VB to VBN if preceding tag is VBZ. score= 6
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3

m1: Change VB to NN if preceding tag is PRP$. score= 5
..........
m1: Change VBD to VBN if preceding tag is VBN. score= 6
...............................
--> m1: Change VBD to VBN if preceding tag is VBN. score= 6
-=-=-> changed  8  tags
m1: Change VBD to VBN if preceding tag is VBN. score= 6
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3

m1: Change VB to NN if preceding tag is PRP$. score= 5
...........................
m1: Change JJ to VB if preceding tag is MD. score= 6
..............
--> m1: Change JJ to VB if preceding tag is MD. score= 6
-=-=-> changed  8  tags
m1: Change JJ to VB if preceding tag is MD. score= 6
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3

m1: Change VB to NN if preceding tag is PRP$. score= 5
..................................
m1: Change VBN to VB if preceding tag is MD. score= 6
.......
--> m1: Change VBN to VB if preceding tag is MD. score= 6
-=-=-> changed  6  tags
m1: Change VBN to VB if preceding tag is MD. score= 6
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3

m1: Change VB to NN if preceding tag is PRP$. score= 5
.........................................
--> m1: Change VB to NN if preceding tag is PRP$. score= 5
-=-=-> changed  7  tags
m1: Change VB to NN if preceding tag is PRP$. score= 5
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3

m1: Change VB to NN if preceding tag is NN. score= 4
.........................................
--> m1: Change VB to NN if preceding tag is NN. score= 4
-=-=-> changed  38  tags
m1: Change VB to NN if preceding tag is NN. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
...
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
......................................
--> m1: Change NNS to VBZ if preceding tag is PRP. score= 4
-=-=-> changed  8  tags
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
.................
m1: Change POS to VBZ if preceding tag is DT. score= 4
........................
--> m1: Change POS to VBZ if preceding tag is DT. score= 4
-=-=-> changed  4  tags
m1: Change POS to VBZ if preceding tag is DT. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
..................................
m1: Change VBN to VB if preceding tag is TO. score= 4
.......
--> m1: Change VBN to VB if preceding tag is TO. score= 4
-=-=-> changed  10  tags
m1: Change VBN to VB if preceding tag is TO. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
.........................................
--> m1: Change VB to VBP if preceding tag is ,. score= 3
-=-=-> changed  17  tags
m1: Change VB to VBP if preceding tag is ,. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2

m1: Change VB to NN if preceding tag is POS. score= 3
.........................................
--> m1: Change VB to NN if preceding tag is POS. score= 3
-=-=-> changed  3  tags
m1: Change VB to NN if preceding tag is POS. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2
........
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
.................................
--> m1: Change VBZ to NNS if preceding tag is VBG. score= 3
-=-=-> changed  5  tags
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2
........
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
.................................
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 3
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2
.............
m1: Change VBP to VB if preceding tag is VBD. score= 3
............................
--> m1: Change VBP to VB if preceding tag is VBD. score= 3
-=-=-> changed  3  tags
m1: Change VBP to VB if preceding tag is VBD. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2
..............
m1: Change RP to IN if preceding tag is RB. score= 3
...........................
--> m1: Change RP to IN if preceding tag is RB. score= 3
-=-=-> changed  4  tags
m1: Change RP to IN if preceding tag is RB. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2
..............
m1: Change RP to IN if preceding tag is CC. score= 3
...........................
--> m1: Change RP to IN if preceding tag is CC. score= 3
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is CC. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2
.........................................
--> m1: Change VB to VBP if preceding tag is NNPS. score= 2
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is NNPS. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1

m1: Change VB to VBN if preceding tag is VB. score= 2
.........................................
--> m1: Change VB to VBN if preceding tag is VB. score= 2
-=-=-> changed  8  tags
m1: Change VB to VBN if preceding tag is VB. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1

m1: Change VB to VBN if preceding tag is VBP. score= 2
.........................................
--> m1: Change VB to VBN if preceding tag is VBP. score= 2
-=-=-> changed  4  tags
m1: Change VB to VBN if preceding tag is VBP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.
m1: Change EX to RB if preceding tag is NNS. score= 2
........................................
--> m1: Change EX to RB if preceding tag is NNS. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNS. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.
m1: Change EX to RB if preceding tag is NNP. score= 2
........................................
--> m1: Change EX to RB if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
..........
m1: Change VBD to VBN if preceding tag is VBG. score= 2
...............................
--> m1: Change VBD to VBN if preceding tag is VBG. score= 2
-=-=-> changed  5  tags
m1: Change VBD to VBN if preceding tag is VBG. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.............
m1: Change VBP to NN if preceding tag is POS. score= 2
............................
--> m1: Change VBP to NN if preceding tag is POS. score= 2
-=-=-> changed  2  tags
m1: Change VBP to NN if preceding tag is POS. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.................
m1: Change POS to VBZ if preceding tag is IN. score= 2
........................
--> m1: Change POS to VBZ if preceding tag is IN. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is IN. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.................
m1: Change POS to VBZ if preceding tag is WP. score= 2
........................
--> m1: Change POS to VBZ if preceding tag is WP. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is WP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.................
m1: Change POS to '' if preceding tag is ,. score= 2
........................
--> m1: Change POS to '' if preceding tag is ,. score= 2
-=-=-> changed  2  tags
m1: Change POS to '' if preceding tag is ,. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.................
m1: Change POS to '' if preceding tag is .. score= 2
........................
--> m1: Change POS to '' if preceding tag is .. score= 2
-=-=-> changed  2  tags
m1: Change POS to '' if preceding tag is .. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.................................
m1: Change RB to NN if preceding tag is PRP$. score= 2
........
--> m1: Change RB to NN if preceding tag is PRP$. score= 2
-=-=-> changed  5  tags
m1: Change RB to NN if preceding tag is PRP$. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
...................................
m1: Change JJR to RBR if preceding tag is VBP. score= 2
......
--> m1: Change JJR to RBR if preceding tag is VBP. score= 2
-=-=-> changed  14  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is VBN. score= 1
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is VBN. score= 1
----------
......
m1: Change EX to RB if preceding tag is RB. score= 1
........................................
--> m1: Change EX to RB if preceding tag is RB. score= 1
-=-=-> changed  5  tags
m1: Change EX to RB if preceding tag is RB. score= 1
----------
...........
m1: Change CD to NN if preceding tag is ``. score= 1
...................................
--> m1: Change CD to NN if preceding tag is ``. score= 1
-=-=-> changed  1  tags
m1: Change CD to NN if preceding tag is ``. score= 1
----------
............
m1: Change NNPS to NNS if preceding tag is :. score= 1
..................................
--> m1: Change NNPS to NNS if preceding tag is :. score= 1
-=-=-> changed  1  tags
m1: Change NNPS to NNS if preceding tag is :. score= 1
----------
.............
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
.................................
--> m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
----------
...............
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
...............................
--> m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
----------
.................
m1: Change TO to IN if preceding tag is :. score= 1
.............................
--> m1: Change TO to IN if preceding tag is :. score= 1
-=-=-> changed  3  tags
m1: Change TO to IN if preceding tag is :. score= 1
----------
..................
m1: Change VBP to NN if preceding tag is IN. score= 1
............................
--> m1: Change VBP to NN if preceding tag is IN. score= 1
-=-=-> changed  6  tags
m1: Change VBP to NN if preceding tag is IN. score= 1
----------
..................
m1: Change VBP to NN if preceding tag is PRP$. score= 1
............................
--> m1: Change VBP to NN if preceding tag is PRP$. score= 1
-=-=-> changed  1  tags
m1: Change VBP to NN if preceding tag is PRP$. score= 1
----------
...................
m1: Change RP to IN if preceding tag is NNP. score= 1
...........................
--> m1: Change RP to IN if preceding tag is NNP. score= 1
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is NNP. score= 1
----------
...................
m1: Change RP to IN if preceding tag is JJR. score= 1
...........................
--> m1: Change RP to IN if preceding tag is JJR. score= 1
-=-=-> changed  1  tags
m1: Change RP to IN if preceding tag is JJR. score= 1
----------
...................
m1: Change RP to RB if preceding tag is TO. score= 1
...........................
--> m1: Change RP to RB if preceding tag is TO. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is TO. score= 1
----------
...................
m1: Change RP to RB if preceding tag is -RRB-. score= 1
...........................
--> m1: Change RP to RB if preceding tag is -RRB-. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is -RRB-. score= 1
----------
......................
m1: Change POS to VBZ if preceding tag is WRB. score= 1
........................
--> m1: Change POS to VBZ if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WRB. score= 1
----------
...............................
m1: Change WP to WDT if preceding tag is RB. score= 1
...............
--> m1: Change WP to WDT if preceding tag is RB. score= 1
-=-=-> changed  1  tags
m1: Change WP to WDT if preceding tag is RB. score= 1
----------
................................
m1: Change JJ to RB if preceding tag is NNPS. score= 1
..............
--> m1: Change JJ to RB if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change JJ to RB if preceding tag is NNPS. score= 1
----------
.......................................
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
.......
--> m1: Change VBN to VBD if preceding tag is NNPS. score= 1
-=-=-> changed  3  tags
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is CD. score= 1
......
--> m1: Change JJR to RBR if preceding tag is CD. score= 1
-=-=-> changed  3  tags
m1: Change JJR to RBR if preceding tag is CD. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is MD. score= 1
......
--> m1: Change JJR to RBR if preceding tag is MD. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is MD. score= 1
----------
........................................
m1: Change JJR to RB if preceding tag is WP. score= 1
......
--> m1: Change JJR to RB if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RB if preceding tag is WP. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is WRB. score= 1
..
--> m1: Change JJS to RBS if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WRB. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VB. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VB. score= 1
-=-=-> changed  3  tags
m1: Change JJS to RBS if preceding tag is VB. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is NNS. score= 1
..
--> m1: Change JJS to RBS if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is NNS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBG. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBG. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBG. score= 1
----------
...............
m1: Change VBD to JJ if preceding tag is RBS. score= 1
...............................
--> m1: Change VBD to JJ if preceding tag is RBS. score= 1
-=-=-> changed  1  tags
m1: Change VBD to JJ if preceding tag is RBS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBN. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBN. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBN. score= 1
----------
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
Rules found: 76
m1: Change NN to VB if preceding tag is TO. score= 89
m1: Change VBP to VB if preceding tag is MD. score= 63
m1: Change VBP to VB if preceding tag is TO. score= 59
m1: Change NN to VB if preceding tag is MD. score= 58
m1: Change VBD to VBN if preceding tag is VBD. score= 45
m1: Change VB to NN if preceding tag is DT. score= 44
m1: Change POS to VBZ if preceding tag is PRP. score= 44
m1: Change VBD to VBN if preceding tag is VBZ. score= 44
m1: Change VBD to VBN if preceding tag is VBP. score= 37
m1: Change VB to VBP if preceding tag is NNS. score= 35
m1: Change VBN to VBD if preceding tag is NNP. score= 33
m1: Change VBD to VBN if preceding tag is VB. score= 30
m1: Change VBN to VBD if preceding tag is PRP. score= 27
m1: Change VB to VBP if preceding tag is PRP. score= 25
m1: Change RP to RB if preceding tag is ,. score= 25
m1: Change VB to NN if preceding tag is JJ. score= 18
m1: Change POS to VBZ if preceding tag is -NONE-. score= 18
m1: Change NN to VBP if preceding tag is PRP. score= 14
m1: Change POS to VBZ if preceding tag is EX. score= 13
m1: Change VB to NN if preceding tag is IN. score= 12
m1: Change IN to VB if preceding tag is MD. score= 6
m1: Change VB to VBN if preceding tag is VBZ. score= 6
m1: Change VBD to VBN if preceding tag is VBN. score= 6
m1: Change JJ to VB if preceding tag is MD. score= 6
m1: Change VBN to VB if preceding tag is MD. score= 6
m1: Change VB to NN if preceding tag is PRP$. score= 5
m1: Change VB to NN if preceding tag is NN. score= 4
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
m1: Change POS to VBZ if preceding tag is DT. score= 4
m1: Change VBN to VB if preceding tag is TO. score= 4
m1: Change VB to VBP if preceding tag is ,. score= 3
m1: Change VB to NN if preceding tag is POS. score= 3
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
m1: Change VBP to VB if preceding tag is VBD. score= 3
m1: Change RP to IN if preceding tag is RB. score= 3
m1: Change RP to IN if preceding tag is CC. score= 3
m1: Change VB to VBP if preceding tag is NNPS. score= 2
m1: Change VB to VBN if preceding tag is VB. score= 2
m1: Change VB to VBN if preceding tag is VBP. score= 2
m1: Change EX to RB if preceding tag is NNS. score= 2
m1: Change EX to RB if preceding tag is NNP. score= 2
m1: Change VBD to VBN if preceding tag is VBG. score= 2
m1: Change VBP to NN if preceding tag is POS. score= 2
m1: Change POS to VBZ if preceding tag is IN. score= 2
m1: Change POS to VBZ if preceding tag is WP. score= 2
m1: Change POS to '' if preceding tag is ,. score= 2
m1: Change POS to '' if preceding tag is .. score= 2
m1: Change RB to NN if preceding tag is PRP$. score= 2
m1: Change JJR to RBR if preceding tag is VBP. score= 2
m1: Change VB to VBP if preceding tag is VBN. score= 1
m1: Change EX to RB if preceding tag is RB. score= 1
m1: Change CD to NN if preceding tag is ``. score= 1
m1: Change NNPS to NNS if preceding tag is :. score= 1
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
m1: Change TO to IN if preceding tag is :. score= 1
m1: Change VBP to NN if preceding tag is IN. score= 1
m1: Change VBP to NN if preceding tag is PRP$. score= 1
m1: Change RP to IN if preceding tag is NNP. score= 1
m1: Change RP to IN if preceding tag is JJR. score= 1
m1: Change RP to RB if preceding tag is TO. score= 1
m1: Change RP to RB if preceding tag is -RRB-. score= 1
m1: Change POS to VBZ if preceding tag is WRB. score= 1
m1: Change WP to WDT if preceding tag is RB. score= 1
m1: Change JJ to RB if preceding tag is NNPS. score= 1
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
m1: Change JJR to RBR if preceding tag is CD. score= 1
m1: Change JJR to RBR if preceding tag is MD. score= 1
m1: Change JJR to RB if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is WRB. score= 1
m1: Change JJS to RBS if preceding tag is VB. score= 1
m1: Change JJS to RBS if preceding tag is NNS. score= 1
m1: Change JJS to RBS if preceding tag is VBG. score= 1
m1: Change VBD to JJ if preceding tag is RBS. score= 1
m1: Change JJS to RBS if preceding tag is VBN. score= 1
Final count incorrectly tagged words: 2421 of 80588
Initial error rate: 0.030041693552389934
====September 10, 2018 11:28:43 AM====
+++ TEST  3 +++
====September 10, 2018 11:28:43 AM====
====September 10, 2018 11:28:48 AM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79455 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79455 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'LS', 'IN', 'WRB', 'FW', 'VB', 'EX', ',', 'NNS', 'RBS', '-LRB-', 'CD', 'NNPS', 'VBZ', '-NONE-', 'VBD', 'VBG', 'TO', 'VBP', 'RP', 'WP$', 'UH', 'POS', 'PRP', '``', 'RBR', 'PRP$', '.', 'NN', "''", 'MD', 'WP', 'JJ', '$', '-RRB-', 'SYM', 'NNP', ':', 'RB', 'VBN', 'JJR', 'WDT', 'CC', 'PDT', 'JJS', 'DT', '#'}
---
Initial count incorrectly tagged words: 3145 of 79455
Initial error rate: 0.03958215342017494
====September 10, 2018 11:28:48 AM====
good z: [(('IN', ''), 1), (('.', ''), 3), (('NNP', ''), 9), (('CC', ''), 1), (('DT', ''), 1)]
bad z: [(('IN', ''), 838), (('WRB', ''), 9), (('VB', ''), 134), ((',', ''), 190), (('NNS', ''), 122), (('-LRB-', ''), 1), (('CD', ''), 536), (('NNPS', ''), 8), (('VBZ', ''), 61), (('-NONE-', ''), 82), (('VBD', ''), 66), (('VBG', ''), 150), (('TO', ''), 44), (('VBP', ''), 18), (('RP', ''), 8), (('WP$', ''), 5), (('POS', ''), 264), (('``', ''), 51), (('PRP$', ''), 271), (('.', ''), 96), (('NN', ''), 1339), (("''", ''), 29), (('WP', ''), 4), (('JJ', ''), 1930), (('-RRB-', ''), 3), (('NNP', ''), 434), ((':', ''), 13), (('RB', ''), 38), (('VBN', ''), 118), (('JJR', ''), 51), (('WDT', ''), 1), (('CC', ''), 219), (('JJS', ''), 42), (('DT', ''), 2896)]
====September 10, 2018 11:28:48 AM====
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 44
...
m1: Change VBP to VB if preceding tag is MD. score= 64
..........
m1: Change NN to VB if preceding tag is TO. score= 90
..................
--> m1: Change NN to VB if preceding tag is TO. score= 90
-=-=-> changed  179  tags
m1: Change NN to VB if preceding tag is TO. score= 90
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 44
...
m1: Change VBP to VB if preceding tag is MD. score= 64
............................
--> m1: Change VBP to VB if preceding tag is MD. score= 64
-=-=-> changed  64  tags
m1: Change VBP to VB if preceding tag is MD. score= 64
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 44
...
m1: Change VBP to VB if preceding tag is TO. score= 62
............................
--> m1: Change VBP to VB if preceding tag is TO. score= 62
-=-=-> changed  62  tags
m1: Change VBP to VB if preceding tag is TO. score= 62
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 44
.............
m1: Change NN to VB if preceding tag is MD. score= 60
..................
--> m1: Change NN to VB if preceding tag is MD. score= 60
-=-=-> changed  60  tags
m1: Change NN to VB if preceding tag is MD. score= 60
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 44
...............................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 44
-=-=-> changed  44  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 44
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37

m1: Change VB to NN if preceding tag is DT. score= 43
.........................................
--> m1: Change VB to NN if preceding tag is DT. score= 43
-=-=-> changed  45  tags
m1: Change VB to NN if preceding tag is DT. score= 43
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 42
...............................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 42
-=-=-> changed  50  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 42
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37
.................
m1: Change POS to VBZ if preceding tag is PRP. score= 40
........................
--> m1: Change POS to VBZ if preceding tag is PRP. score= 40
-=-=-> changed  40  tags
m1: Change POS to VBZ if preceding tag is PRP. score= 40
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is NNS. score= 37
.........................................
--> m1: Change VB to VBP if preceding tag is NNS. score= 37
-=-=-> changed  62  tags
m1: Change VB to VBP if preceding tag is NNS. score= 37
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 37
...............................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 37
-=-=-> changed  39  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 37
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
..........
m1: Change VBD to VBN if preceding tag is VB. score= 28
........................
m1: Change VBN to VBD if preceding tag is NNP. score= 33
.......
--> m1: Change VBN to VBD if preceding tag is NNP. score= 33
-=-=-> changed  47  tags
m1: Change VBN to VBD if preceding tag is NNP. score= 33
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
..........
m1: Change VBD to VBN if preceding tag is VB. score= 28
...............................
--> m1: Change VBD to VBN if preceding tag is VB. score= 28
-=-=-> changed  40  tags
m1: Change VBD to VBN if preceding tag is VB. score= 28
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
..................................
m1: Change VBN to VBD if preceding tag is PRP. score= 27
.......
--> m1: Change VBN to VBD if preceding tag is PRP. score= 27
-=-=-> changed  37  tags
m1: Change VBN to VBD if preceding tag is PRP. score= 27
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
.........................................
--> m1: Change VB to VBP if preceding tag is PRP. score= 26
-=-=-> changed  38  tags
m1: Change VB to VBP if preceding tag is PRP. score= 26
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is JJ. score= 14
..............
m1: Change RP to RB if preceding tag is ,. score= 25
...........................
--> m1: Change RP to RB if preceding tag is ,. score= 25
-=-=-> changed  29  tags
m1: Change RP to RB if preceding tag is ,. score= 25
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is JJ. score= 14
.................
m1: Change POS to VBZ if preceding tag is -NONE-. score= 17
........................
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 17
-=-=-> changed  19  tags
m1: Change POS to VBZ if preceding tag is -NONE-. score= 17
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is JJ. score= 14
.......................
m1: Change NN to VBP if preceding tag is PRP. score= 15
..................
--> m1: Change NN to VBP if preceding tag is PRP. score= 15
-=-=-> changed  23  tags
m1: Change NN to VBP if preceding tag is PRP. score= 15
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is JJ. score= 14
.........................................
--> m1: Change VB to NN if preceding tag is JJ. score= 14
-=-=-> changed  20  tags
m1: Change VB to NN if preceding tag is JJ. score= 14
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is IN. score= 12
.................
m1: Change POS to VBZ if preceding tag is EX. score= 13
........................
--> m1: Change POS to VBZ if preceding tag is EX. score= 13
-=-=-> changed  13  tags
m1: Change POS to VBZ if preceding tag is EX. score= 13
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is IN. score= 12
.........................................
--> m1: Change VB to NN if preceding tag is IN. score= 12
-=-=-> changed  14  tags
m1: Change VB to NN if preceding tag is IN. score= 12
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to NN if preceding tag is NN. score= 6
.........................................
--> m1: Change VB to NN if preceding tag is NN. score= 6
-=-=-> changed  40  tags
m1: Change VB to NN if preceding tag is NN. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
...
m1: Change VB to VBN if preceding tag is VBZ. score= 6
.........................................
--> m1: Change VB to VBN if preceding tag is VBZ. score= 6
-=-=-> changed  10  tags
m1: Change VB to VBN if preceding tag is VBZ. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
.............
m1: Change VBD to VBN if preceding tag is VBN. score= 6
...............................
--> m1: Change VBD to VBN if preceding tag is VBN. score= 6
-=-=-> changed  8  tags
m1: Change VBD to VBN if preceding tag is VBN. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
.....................................
m1: Change VBN to VB if preceding tag is MD. score= 6
.......
--> m1: Change VBN to VB if preceding tag is MD. score= 6
-=-=-> changed  6  tags
m1: Change VBN to VB if preceding tag is MD. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 5
............................................
--> m1: Change IN to VB if preceding tag is MD. score= 5
-=-=-> changed  7  tags
m1: Change IN to VB if preceding tag is MD. score= 5
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3

m1: Change VB to NN if preceding tag is POS. score= 5
.........................................
--> m1: Change VB to NN if preceding tag is POS. score= 5
-=-=-> changed  5  tags
m1: Change VB to NN if preceding tag is POS. score= 5
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3

m1: Change VB to NN if preceding tag is PRP$. score= 5
.........................................
--> m1: Change VB to NN if preceding tag is PRP$. score= 5
-=-=-> changed  7  tags
m1: Change VB to NN if preceding tag is PRP$. score= 5
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
...
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
...............................
m1: Change VBN to VB if preceding tag is TO. score= 5
.......
--> m1: Change VBN to VB if preceding tag is TO. score= 5
-=-=-> changed  9  tags
m1: Change VBN to VB if preceding tag is TO. score= 5
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
...
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
......................................
--> m1: Change NNS to VBZ if preceding tag is PRP. score= 4
-=-=-> changed  8  tags
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
.................
m1: Change POS to VBZ if preceding tag is IN. score= 4
........................
--> m1: Change POS to VBZ if preceding tag is IN. score= 4
-=-=-> changed  4  tags
m1: Change POS to VBZ if preceding tag is IN. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
.................
m1: Change POS to VBZ if preceding tag is DT. score= 4
........................
--> m1: Change POS to VBZ if preceding tag is DT. score= 4
-=-=-> changed  4  tags
m1: Change POS to VBZ if preceding tag is DT. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
.................
m1: Change POS to '' if preceding tag is .. score= 4
........................
--> m1: Change POS to '' if preceding tag is .. score= 4
-=-=-> changed  4  tags
m1: Change POS to '' if preceding tag is .. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
...........................
m1: Change JJ to VB if preceding tag is MD. score= 4
..............
--> m1: Change JJ to VB if preceding tag is MD. score= 4
-=-=-> changed  6  tags
m1: Change JJ to VB if preceding tag is MD. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
...................................
m1: Change JJR to RBR if preceding tag is VBP. score= 4
......
--> m1: Change JJR to RBR if preceding tag is VBP. score= 4
-=-=-> changed  10  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 3
.........................................
--> m1: Change VB to VBP if preceding tag is ,. score= 3
-=-=-> changed  15  tags
m1: Change VB to VBP if preceding tag is ,. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is CD. score= 1

m1: Change VB to VBN if preceding tag is VBD. score= 2
.......
m1: Change NNPS to NNS if preceding tag is :. score= 3
..................................
--> m1: Change NNPS to NNS if preceding tag is :. score= 3
-=-=-> changed  3  tags
m1: Change NNPS to NNS if preceding tag is :. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1

m1: Change VB to VBN if preceding tag is VBD. score= 2
.............
m1: Change VBP to VB if preceding tag is VBD. score= 3
............................
--> m1: Change VBP to VB if preceding tag is VBD. score= 3
-=-=-> changed  3  tags
m1: Change VBP to VB if preceding tag is VBD. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1

m1: Change VB to VBN if preceding tag is VBP. score= 2
..............
m1: Change RP to IN if preceding tag is CC. score= 3
...........................
--> m1: Change RP to IN if preceding tag is CC. score= 3
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is CC. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1

m1: Change VB to VBN if preceding tag is VBP. score= 2
.........................................
--> m1: Change VB to VBN if preceding tag is VBP. score= 2
-=-=-> changed  4  tags
m1: Change VB to VBN if preceding tag is VBP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.
m1: Change EX to RB if preceding tag is NNP. score= 2
........................................
--> m1: Change EX to RB if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.
m1: Change EX to RB if preceding tag is RB. score= 2
........................................
--> m1: Change EX to RB if preceding tag is RB. score= 2
-=-=-> changed  4  tags
m1: Change EX to RB if preceding tag is RB. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
........
m1: Change VBZ to NNS if preceding tag is VBG. score= 2
.................................
--> m1: Change VBZ to NNS if preceding tag is VBG. score= 2
-=-=-> changed  4  tags
m1: Change VBZ to NNS if preceding tag is VBG. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
........
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
.................................
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 2
-=-=-> changed  2  tags
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
..........
m1: Change VBD to VBN if preceding tag is VBG. score= 2
...............................
--> m1: Change VBD to VBN if preceding tag is VBG. score= 2
-=-=-> changed  5  tags
m1: Change VBD to VBN if preceding tag is VBG. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
..............
m1: Change RP to IN if preceding tag is IN. score= 2
...........................
--> m1: Change RP to IN if preceding tag is IN. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is IN. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
..............
m1: Change RP to IN if preceding tag is NNP. score= 2
...........................
--> m1: Change RP to IN if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is NNP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
..............
m1: Change RP to IN if preceding tag is JJR. score= 2
...........................
--> m1: Change RP to IN if preceding tag is JJR. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is JJR. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
..............
m1: Change RP to RB if preceding tag is -RRB-. score= 2
...........................
--> m1: Change RP to RB if preceding tag is -RRB-. score= 2
-=-=-> changed  2  tags
m1: Change RP to RB if preceding tag is -RRB-. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.................
m1: Change POS to '' if preceding tag is ,. score= 2
........................
--> m1: Change POS to '' if preceding tag is ,. score= 2
-=-=-> changed  2  tags
m1: Change POS to '' if preceding tag is ,. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is NNS. score= 1
----------
.....
m1: Change VB to VBP if preceding tag is CD. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is CD. score= 1
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is CD. score= 1
----------
.....
m1: Change VB to NN if preceding tag is RP. score= 1
.........................................
--> m1: Change VB to NN if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change VB to NN if preceding tag is RP. score= 1
----------
.....
m1: Change VB to NN if preceding tag is VBN. score= 1
.........................................
--> m1: Change VB to NN if preceding tag is VBN. score= 1
-=-=-> changed  1  tags
m1: Change VB to NN if preceding tag is VBN. score= 1
----------
......
m1: Change EX to RB if preceding tag is NNS. score= 1
........................................
--> m1: Change EX to RB if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is NNS. score= 1
----------
......
m1: Change EX to RB if preceding tag is VBP. score= 1
........................................
--> m1: Change EX to RB if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VBP. score= 1
----------
......
m1: Change EX to RB if preceding tag is RP. score= 1
........................................
--> m1: Change EX to RB if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is RP. score= 1
----------
...........
m1: Change CD to NN if preceding tag is ``. score= 1
...................................
--> m1: Change CD to NN if preceding tag is ``. score= 1
-=-=-> changed  1  tags
m1: Change CD to NN if preceding tag is ``. score= 1
----------
.............
m1: Change VBZ to NNS if preceding tag is VB. score= 1
.................................
--> m1: Change VBZ to NNS if preceding tag is VB. score= 1
-=-=-> changed  1  tags
m1: Change VBZ to NNS if preceding tag is VB. score= 1
----------
.............
m1: Change VBZ to NNS if preceding tag is VBP. score= 1
.................................
--> m1: Change VBZ to NNS if preceding tag is VBP. score= 1
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is VBP. score= 1
----------
.............
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
.................................
--> m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
----------
...............
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
...............................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
----------
.................
m1: Change TO to IN if preceding tag is :. score= 1
.............................
--> m1: Change TO to IN if preceding tag is :. score= 1
-=-=-> changed  3  tags
m1: Change TO to IN if preceding tag is :. score= 1
----------
..................
m1: Change VBP to NN if preceding tag is POS. score= 1
............................
--> m1: Change VBP to NN if preceding tag is POS. score= 1
-=-=-> changed  1  tags
m1: Change VBP to NN if preceding tag is POS. score= 1
----------
...................
m1: Change RP to IN if preceding tag is NNS. score= 1
...........................
--> m1: Change RP to IN if preceding tag is NNS. score= 1
-=-=-> changed  7  tags
m1: Change RP to IN if preceding tag is NNS. score= 1
----------
...................
m1: Change RP to RB if preceding tag is TO. score= 1
...........................
--> m1: Change RP to RB if preceding tag is TO. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is TO. score= 1
----------
...................
m1: Change RP to RB if preceding tag is RB. score= 1
...........................
--> m1: Change RP to RB if preceding tag is RB. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is RB. score= 1
----------
......................
m1: Change POS to VBZ if preceding tag is WRB. score= 1
........................
--> m1: Change POS to VBZ if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WRB. score= 1
----------
......................
m1: Change POS to VBZ if preceding tag is WP. score= 1
........................
--> m1: Change POS to VBZ if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WP. score= 1
----------
..............................
m1: Change MD to NN if preceding tag is JJ. score= 1
................
--> m1: Change MD to NN if preceding tag is JJ. score= 1
-=-=-> changed  1  tags
m1: Change MD to NN if preceding tag is JJ. score= 1
----------
................................
m1: Change JJ to RB if preceding tag is NNPS. score= 1
..............
--> m1: Change JJ to RB if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change JJ to RB if preceding tag is NNPS. score= 1
----------
......................................
m1: Change RB to NN if preceding tag is PRP$. score= 1
........
--> m1: Change RB to NN if preceding tag is PRP$. score= 1
-=-=-> changed  5  tags
m1: Change RB to NN if preceding tag is PRP$. score= 1
----------
............................
m1: Change NN to VB if preceding tag is RB. score= 1
..................
--> m1: Change NN to VB if preceding tag is RB. score= 1
-=-=-> changed  86  tags
m1: Change NN to VB if preceding tag is RB. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is VBP. score= 1
......
--> m1: Change JJR to RBR if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is MD. score= 1
......
--> m1: Change JJR to RBR if preceding tag is MD. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is MD. score= 1
----------
........................................
m1: Change JJR to RB if preceding tag is WP. score= 1
......
--> m1: Change JJR to RB if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RB if preceding tag is WP. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is WRB. score= 1
..
--> m1: Change JJS to RBS if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WRB. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is NNS. score= 1
..
--> m1: Change JJS to RBS if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is NNS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBG. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBG. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBG. score= 1
----------
...............
m1: Change VBD to JJ if preceding tag is RBS. score= 1
...............................
--> m1: Change VBD to JJ if preceding tag is RBS. score= 1
-=-=-> changed  1  tags
m1: Change VBD to JJ if preceding tag is RBS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is WP. score= 1
..
--> m1: Change JJS to RBS if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WP. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBN. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBN. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBN. score= 1
----------
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
Rules found: 81
m1: Change NN to VB if preceding tag is TO. score= 90
m1: Change VBP to VB if preceding tag is MD. score= 64
m1: Change VBP to VB if preceding tag is TO. score= 62
m1: Change NN to VB if preceding tag is MD. score= 60
m1: Change VBD to VBN if preceding tag is VBD. score= 44
m1: Change VB to NN if preceding tag is DT. score= 43
m1: Change VBD to VBN if preceding tag is VBZ. score= 42
m1: Change POS to VBZ if preceding tag is PRP. score= 40
m1: Change VB to VBP if preceding tag is NNS. score= 37
m1: Change VBD to VBN if preceding tag is VBP. score= 37
m1: Change VBN to VBD if preceding tag is NNP. score= 33
m1: Change VBD to VBN if preceding tag is VB. score= 28
m1: Change VBN to VBD if preceding tag is PRP. score= 27
m1: Change VB to VBP if preceding tag is PRP. score= 26
m1: Change RP to RB if preceding tag is ,. score= 25
m1: Change POS to VBZ if preceding tag is -NONE-. score= 17
m1: Change NN to VBP if preceding tag is PRP. score= 15
m1: Change VB to NN if preceding tag is JJ. score= 14
m1: Change POS to VBZ if preceding tag is EX. score= 13
m1: Change VB to NN if preceding tag is IN. score= 12
m1: Change VB to NN if preceding tag is NN. score= 6
m1: Change VB to VBN if preceding tag is VBZ. score= 6
m1: Change VBD to VBN if preceding tag is VBN. score= 6
m1: Change VBN to VB if preceding tag is MD. score= 6
m1: Change IN to VB if preceding tag is MD. score= 5
m1: Change VB to NN if preceding tag is POS. score= 5
m1: Change VB to NN if preceding tag is PRP$. score= 5
m1: Change VBN to VB if preceding tag is TO. score= 5
m1: Change NNS to VBZ if preceding tag is PRP. score= 4
m1: Change POS to VBZ if preceding tag is IN. score= 4
m1: Change POS to VBZ if preceding tag is DT. score= 4
m1: Change POS to '' if preceding tag is .. score= 4
m1: Change JJ to VB if preceding tag is MD. score= 4
m1: Change JJR to RBR if preceding tag is VBP. score= 4
m1: Change VB to VBP if preceding tag is ,. score= 3
m1: Change NNPS to NNS if preceding tag is :. score= 3
m1: Change VBP to VB if preceding tag is VBD. score= 3
m1: Change RP to IN if preceding tag is CC. score= 3
m1: Change VB to VBN if preceding tag is VBP. score= 2
m1: Change EX to RB if preceding tag is NNP. score= 2
m1: Change EX to RB if preceding tag is RB. score= 2
m1: Change VBZ to NNS if preceding tag is VBG. score= 2
m1: Change VBZ to NNS if preceding tag is VBN. score= 2
m1: Change VBD to VBN if preceding tag is VBG. score= 2
m1: Change RP to IN if preceding tag is IN. score= 2
m1: Change RP to IN if preceding tag is NNP. score= 2
m1: Change RP to IN if preceding tag is JJR. score= 2
m1: Change RP to RB if preceding tag is -RRB-. score= 2
m1: Change POS to '' if preceding tag is ,. score= 2
m1: Change VB to VBP if preceding tag is NNS. score= 1
m1: Change VB to VBP if preceding tag is CD. score= 1
m1: Change VB to NN if preceding tag is RP. score= 1
m1: Change VB to NN if preceding tag is VBN. score= 1
m1: Change EX to RB if preceding tag is NNS. score= 1
m1: Change EX to RB if preceding tag is VBP. score= 1
m1: Change EX to RB if preceding tag is RP. score= 1
m1: Change CD to NN if preceding tag is ``. score= 1
m1: Change VBZ to NNS if preceding tag is VB. score= 1
m1: Change VBZ to NNS if preceding tag is VBP. score= 1
m1: Change VBZ to NNS if preceding tag is PRP$. score= 1
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
m1: Change TO to IN if preceding tag is :. score= 1
m1: Change VBP to NN if preceding tag is POS. score= 1
m1: Change RP to IN if preceding tag is NNS. score= 1
m1: Change RP to RB if preceding tag is TO. score= 1
m1: Change RP to RB if preceding tag is RB. score= 1
m1: Change POS to VBZ if preceding tag is WRB. score= 1
m1: Change POS to VBZ if preceding tag is WP. score= 1
m1: Change MD to NN if preceding tag is JJ. score= 1
m1: Change JJ to RB if preceding tag is NNPS. score= 1
m1: Change RB to NN if preceding tag is PRP$. score= 1
m1: Change NN to VB if preceding tag is RB. score= 1
m1: Change JJR to RBR if preceding tag is VBP. score= 1
m1: Change JJR to RBR if preceding tag is MD. score= 1
m1: Change JJR to RB if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is WRB. score= 1
m1: Change JJS to RBS if preceding tag is NNS. score= 1
m1: Change JJS to RBS if preceding tag is VBG. score= 1
m1: Change VBD to JJ if preceding tag is RBS. score= 1
m1: Change JJS to RBS if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is VBN. score= 1
Final count incorrectly tagged words: 2282 of 79455
Initial error rate: 0.028720659492794665
====September 10, 2018 01:42:27 PM====
+++ TEST  4 +++
====September 10, 2018 01:42:27 PM====
====September 10, 2018 01:42:33 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 80987 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    80987 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'LS', 'IN', 'WRB', 'FW', 'VB', 'EX', ',', 'NNS', 'RBS', '-LRB-', 'CD', 'NNPS', 'VBZ', '-NONE-', 'VBD', 'VBG', 'TO', 'VBP', 'RP', 'WP$', 'UH', 'POS', 'PRP', '``', 'RBR', 'PRP$', '.', 'NN', "''", 'MD', 'WP', 'JJ', '$', '-RRB-', 'SYM', 'NNP', ':', 'RB', 'VBN', 'JJR', 'WDT', 'CC', 'PDT', 'JJS', 'DT', '#'}
---
Initial count incorrectly tagged words: 3227 of 80987
Initial error rate: 0.03984590119401879
====September 10, 2018 01:42:33 PM====
good z: [(('IN', ''), 1), (('.', ''), 1), (('NNP', ''), 10), (('CC', ''), 1), (('DT', ''), 1)]
bad z: [(('IN', ''), 859), (('WRB', ''), 10), (('VB', ''), 142), ((',', ''), 181), (('NNS', ''), 114), (('-LRB-', ''), 2), (('CD', ''), 530), (('NNPS', ''), 7), (('VBZ', ''), 58), (('-NONE-', ''), 98), (('VBD', ''), 68), (('VBG', ''), 167), (('TO', ''), 45), (('VBP', ''), 21), (('RP', ''), 11), (('WP$', ''), 8), (('POS', ''), 270), (('PRP', ''), 3), (('``', ''), 52), (('PRP$', ''), 263), (('.', ''), 102), (('NN', ''), 1354), (("''", ''), 22), (('WP', ''), 4), (('JJ', ''), 1963), (('-RRB-', ''), 3), (('NNP', ''), 427), ((':', ''), 10), (('RB', ''), 41), (('VBN', ''), 121), (('JJR', ''), 58), (('WDT', ''), 2), (('CC', ''), 210), (('JJS', ''), 39), (('DT', ''), 2897)]
====September 10, 2018 01:42:33 PM====
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 48
...
m1: Change VBP to VB if preceding tag is MD. score= 67
..........
m1: Change NN to VB if preceding tag is TO. score= 92
..................
--> m1: Change NN to VB if preceding tag is TO. score= 92
-=-=-> changed  183  tags
m1: Change NN to VB if preceding tag is TO. score= 92
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 48
...
m1: Change VBP to VB if preceding tag is MD. score= 67
............................
--> m1: Change VBP to VB if preceding tag is MD. score= 67
-=-=-> changed  67  tags
m1: Change VBP to VB if preceding tag is MD. score= 67
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 47
...
m1: Change VBP to VB if preceding tag is TO. score= 58
..........
m1: Change NN to VB if preceding tag is MD. score= 61
..................
--> m1: Change NN to VB if preceding tag is MD. score= 61
-=-=-> changed  61  tags
m1: Change NN to VB if preceding tag is MD. score= 61
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 47
...
m1: Change VBP to VB if preceding tag is TO. score= 58
............................
--> m1: Change VBP to VB if preceding tag is TO. score= 58
-=-=-> changed  58  tags
m1: Change VBP to VB if preceding tag is TO. score= 58
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30

m1: Change VB to NN if preceding tag is DT. score= 44
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 45
...............................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 45
-=-=-> changed  47  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 45
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30

m1: Change VB to NN if preceding tag is DT. score= 44
.........................................
--> m1: Change VB to NN if preceding tag is DT. score= 44
-=-=-> changed  47  tags
m1: Change VB to NN if preceding tag is DT. score= 44
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 44
...............................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 44
-=-=-> changed  44  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 44
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 38
.......
m1: Change POS to VBZ if preceding tag is PRP. score= 40
........................
--> m1: Change POS to VBZ if preceding tag is PRP. score= 40
-=-=-> changed  40  tags
m1: Change POS to VBZ if preceding tag is PRP. score= 40
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 38
...............................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 38
-=-=-> changed  44  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 38
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30
..................................
m1: Change VBN to VBD if preceding tag is NNP. score= 36
.......
--> m1: Change VBN to VBD if preceding tag is NNP. score= 36
-=-=-> changed  48  tags
m1: Change VBN to VBD if preceding tag is NNP. score= 36
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30
..................................
m1: Change VBN to VBD if preceding tag is PRP. score= 33
.......
--> m1: Change VBN to VBD if preceding tag is PRP. score= 33
-=-=-> changed  43  tags
m1: Change VBN to VBD if preceding tag is PRP. score= 33
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 30
.........................................
--> m1: Change VB to VBP if preceding tag is NNS. score= 30
-=-=-> changed  60  tags
m1: Change VB to VBP if preceding tag is NNS. score= 30
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
.........................................
--> m1: Change VB to VBP if preceding tag is PRP. score= 26
-=-=-> changed  44  tags
m1: Change VB to VBP if preceding tag is PRP. score= 26
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is JJ. score= 15
..........
m1: Change VBD to VBN if preceding tag is VB. score= 25
...............................
--> m1: Change VBD to VBN if preceding tag is VB. score= 25
-=-=-> changed  35  tags
m1: Change VBD to VBN if preceding tag is VB. score= 25
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is JJ. score= 15
..............
m1: Change RP to RB if preceding tag is ,. score= 25
...........................
--> m1: Change RP to RB if preceding tag is ,. score= 25
-=-=-> changed  28  tags
m1: Change RP to RB if preceding tag is ,. score= 25
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is JJ. score= 15
.................
m1: Change POS to VBZ if preceding tag is -NONE-. score= 17
........................
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 17
-=-=-> changed  19  tags
m1: Change POS to VBZ if preceding tag is -NONE-. score= 17
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is JJ. score= 15
.........................................
--> m1: Change VB to NN if preceding tag is JJ. score= 15
-=-=-> changed  20  tags
m1: Change VB to NN if preceding tag is JJ. score= 15
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is IN. score= 10
.................
m1: Change POS to VBZ if preceding tag is EX. score= 13
........................
--> m1: Change POS to VBZ if preceding tag is EX. score= 13
-=-=-> changed  13  tags
m1: Change POS to VBZ if preceding tag is EX. score= 13
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is IN. score= 10
.......................
m1: Change NN to VBP if preceding tag is PRP. score= 13
..................
--> m1: Change NN to VBP if preceding tag is PRP. score= 13
-=-=-> changed  25  tags
m1: Change NN to VBP if preceding tag is PRP. score= 13
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is IN. score= 10
.........................................
--> m1: Change VB to NN if preceding tag is IN. score= 10
-=-=-> changed  13  tags
m1: Change VB to NN if preceding tag is IN. score= 10
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is PRP$. score= 6

m1: Change VB to VBN if preceding tag is VBZ. score= 8
.........................................
--> m1: Change VB to VBN if preceding tag is VBZ. score= 8
-=-=-> changed  12  tags
m1: Change VB to VBN if preceding tag is VBZ. score= 8
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is PRP$. score= 6
..................................
m1: Change VBN to VB if preceding tag is MD. score= 8
.......
--> m1: Change VBN to VB if preceding tag is MD. score= 8
-=-=-> changed  8  tags
m1: Change VBN to VB if preceding tag is MD. score= 8
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is PRP$. score= 6
.........................................
--> m1: Change VB to NN if preceding tag is PRP$. score= 6
-=-=-> changed  6  tags
m1: Change VB to NN if preceding tag is PRP$. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
......
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
.......
m1: Change VBD to VBN if preceding tag is VBN. score= 6
...............................
--> m1: Change VBD to VBN if preceding tag is VBN. score= 6
-=-=-> changed  8  tags
m1: Change VBD to VBN if preceding tag is VBN. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
......
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
......................................
--> m1: Change NNS to VBZ if preceding tag is PRP. score= 5
-=-=-> changed  9  tags
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
..............................
m1: Change JJ to VB if preceding tag is MD. score= 5
..............
--> m1: Change JJ to VB if preceding tag is MD. score= 5
-=-=-> changed  7  tags
m1: Change JJ to VB if preceding tag is MD. score= 5
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
............................................
--> m1: Change IN to VB if preceding tag is MD. score= 4
-=-=-> changed  6  tags
m1: Change IN to VB if preceding tag is MD. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to NN if preceding tag is POS. score= 4
.........................................
--> m1: Change VB to NN if preceding tag is POS. score= 4
-=-=-> changed  4  tags
m1: Change VB to NN if preceding tag is POS. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to NN if preceding tag is NN. score= 4
.........................................
--> m1: Change VB to NN if preceding tag is NN. score= 4
-=-=-> changed  36  tags
m1: Change VB to NN if preceding tag is NN. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBP. score= 3
.................
m1: Change POS to VBZ if preceding tag is DT. score= 4
........................
--> m1: Change POS to VBZ if preceding tag is DT. score= 4
-=-=-> changed  4  tags
m1: Change POS to VBZ if preceding tag is DT. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBP. score= 3
.................
m1: Change POS to '' if preceding tag is .. score= 4
........................
--> m1: Change POS to '' if preceding tag is .. score= 4
-=-=-> changed  4  tags
m1: Change POS to '' if preceding tag is .. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2

m1: Change VB to VBN if preceding tag is VBP. score= 3
.........................................
--> m1: Change VB to VBN if preceding tag is VBP. score= 3
-=-=-> changed  5  tags
m1: Change VB to VBN if preceding tag is VBP. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
........
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
.................................
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 3
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
..............
m1: Change RP to IN if preceding tag is CC. score= 3
...........................
--> m1: Change RP to IN if preceding tag is CC. score= 3
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is CC. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
.................
m1: Change POS to VBZ if preceding tag is IN. score= 3
........................
--> m1: Change POS to VBZ if preceding tag is IN. score= 3
-=-=-> changed  3  tags
m1: Change POS to VBZ if preceding tag is IN. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 2
.........................................
--> m1: Change VB to VBP if preceding tag is ,. score= 2
-=-=-> changed  14  tags
m1: Change VB to VBP if preceding tag is ,. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1

m1: Change VB to VBN if preceding tag is VB. score= 2
...................................
m1: Change JJR to RBR if preceding tag is VBP. score= 3
......
--> m1: Change JJR to RBR if preceding tag is VBP. score= 3
-=-=-> changed  13  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1

m1: Change VB to VBN if preceding tag is VB. score= 2
.........................................
--> m1: Change VB to VBN if preceding tag is VB. score= 2
-=-=-> changed  6  tags
m1: Change VB to VBN if preceding tag is VB. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.
m1: Change EX to RB if preceding tag is NNP. score= 2
........................................
--> m1: Change EX to RB if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.......
m1: Change NNPS to NNS if preceding tag is :. score= 2
..................................
--> m1: Change NNPS to NNS if preceding tag is :. score= 2
-=-=-> changed  2  tags
m1: Change NNPS to NNS if preceding tag is :. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
........
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
.................................
--> m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
-=-=-> changed  4  tags
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
..........
m1: Change VBD to VBN if preceding tag is VBG. score= 2
...............................
--> m1: Change VBD to VBN if preceding tag is VBG. score= 2
-=-=-> changed  5  tags
m1: Change VBD to VBN if preceding tag is VBG. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.............
m1: Change VBP to VB if preceding tag is VBZ. score= 2
............................
--> m1: Change VBP to VB if preceding tag is VBZ. score= 2
-=-=-> changed  3  tags
m1: Change VBP to VB if preceding tag is VBZ. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.............
m1: Change VBP to VB if preceding tag is VBD. score= 2
............................
--> m1: Change VBP to VB if preceding tag is VBD. score= 2
-=-=-> changed  2  tags
m1: Change VBP to VB if preceding tag is VBD. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.............
m1: Change VBP to NN if preceding tag is POS. score= 2
............................
--> m1: Change VBP to NN if preceding tag is POS. score= 2
-=-=-> changed  2  tags
m1: Change VBP to NN if preceding tag is POS. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
..............
m1: Change RP to IN if preceding tag is RB. score= 2
...........................
--> m1: Change RP to IN if preceding tag is RB. score= 2
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is RB. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
..............
m1: Change RP to IN if preceding tag is JJR. score= 2
...........................
--> m1: Change RP to IN if preceding tag is JJR. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is JJR. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
..............
m1: Change RP to RB if preceding tag is -RRB-. score= 2
...........................
--> m1: Change RP to RB if preceding tag is -RRB-. score= 2
-=-=-> changed  2  tags
m1: Change RP to RB if preceding tag is -RRB-. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.................
m1: Change POS to '' if preceding tag is ,. score= 2
........................
--> m1: Change POS to '' if preceding tag is ,. score= 2
-=-=-> changed  2  tags
m1: Change POS to '' if preceding tag is ,. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
..................................
m1: Change VBN to VB if preceding tag is TO. score= 2
.......
--> m1: Change VBN to VB if preceding tag is TO. score= 2
-=-=-> changed  6  tags
m1: Change VBN to VB if preceding tag is TO. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
..................................
m1: Change VBN to VBD if preceding tag is NNPS. score= 2
.......
--> m1: Change VBN to VBD if preceding tag is NNPS. score= 2
-=-=-> changed  2  tags
m1: Change VBN to VBD if preceding tag is NNPS. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is NNPS. score= 1
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is VBN. score= 1
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is VBN. score= 1
----------
.....
m1: Change VB to NN if preceding tag is RP. score= 1
.........................................
--> m1: Change VB to NN if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change VB to NN if preceding tag is RP. score= 1
----------
......
m1: Change EX to RB if preceding tag is NNS. score= 1
........................................
--> m1: Change EX to RB if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is NNS. score= 1
----------
......
m1: Change EX to RB if preceding tag is VBP. score= 1
........................................
--> m1: Change EX to RB if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VBP. score= 1
----------
......
m1: Change EX to RB if preceding tag is RP. score= 1
........................................
--> m1: Change EX to RB if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is RP. score= 1
----------
......
m1: Change EX to RB if preceding tag is RB. score= 1
........................................
--> m1: Change EX to RB if preceding tag is RB. score= 1
-=-=-> changed  5  tags
m1: Change EX to RB if preceding tag is RB. score= 1
----------
.............
m1: Change VBZ to NNS if preceding tag is VBG. score= 1
.................................
--> m1: Change VBZ to NNS if preceding tag is VBG. score= 1
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is VBG. score= 1
----------
...............
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
...............................
--> m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
----------
...............
m1: Change VBD to VBN if preceding tag is VBP. score= 1
...............................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 1
----------
.................
m1: Change TO to IN if preceding tag is :. score= 1
.............................
--> m1: Change TO to IN if preceding tag is :. score= 1
-=-=-> changed  3  tags
m1: Change TO to IN if preceding tag is :. score= 1
----------
..................
m1: Change VBP to NN if preceding tag is PRP$. score= 1
............................
--> m1: Change VBP to NN if preceding tag is PRP$. score= 1
-=-=-> changed  1  tags
m1: Change VBP to NN if preceding tag is PRP$. score= 1
----------
...................
m1: Change RP to IN if preceding tag is JJ. score= 1
...........................
--> m1: Change RP to IN if preceding tag is JJ. score= 1
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is JJ. score= 1
----------
...................
m1: Change RP to RB if preceding tag is TO. score= 1
...........................
--> m1: Change RP to RB if preceding tag is TO. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is TO. score= 1
----------
......................
m1: Change POS to VBZ if preceding tag is WRB. score= 1
........................
--> m1: Change POS to VBZ if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WRB. score= 1
----------
......................
m1: Change POS to VBZ if preceding tag is WP. score= 1
........................
--> m1: Change POS to VBZ if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change POS to VBZ if preceding tag is WP. score= 1
----------
................................
m1: Change JJ to RB if preceding tag is NNPS. score= 1
..............
--> m1: Change JJ to RB if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change JJ to RB if preceding tag is NNPS. score= 1
----------
......................................
m1: Change RB to NN if preceding tag is PRP$. score= 1
........
--> m1: Change RB to NN if preceding tag is PRP$. score= 1
-=-=-> changed  5  tags
m1: Change RB to NN if preceding tag is PRP$. score= 1
----------
.......................................
m1: Change VBN to VBD if preceding tag is :. score= 1
.......
--> m1: Change VBN to VBD if preceding tag is :. score= 1
-=-=-> changed  5  tags
m1: Change VBN to VBD if preceding tag is :. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is MD. score= 1
......
--> m1: Change JJR to RBR if preceding tag is MD. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is MD. score= 1
----------
........................................
m1: Change JJR to RB if preceding tag is WP. score= 1
......
--> m1: Change JJR to RB if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RB if preceding tag is WP. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is WRB. score= 1
..
--> m1: Change JJS to RBS if preceding tag is WRB. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WRB. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is NNS. score= 1
..
--> m1: Change JJS to RBS if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is NNS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBG. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBG. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBG. score= 1
----------
...............
m1: Change VBD to JJ if preceding tag is RBS. score= 1
...............................
--> m1: Change VBD to JJ if preceding tag is RBS. score= 1
-=-=-> changed  1  tags
m1: Change VBD to JJ if preceding tag is RBS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is WP. score= 1
..
--> m1: Change JJS to RBS if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WP. score= 1
----------
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
Rules found: 77
m1: Change NN to VB if preceding tag is TO. score= 92
m1: Change VBP to VB if preceding tag is MD. score= 67
m1: Change NN to VB if preceding tag is MD. score= 61
m1: Change VBP to VB if preceding tag is TO. score= 58
m1: Change VBD to VBN if preceding tag is VBP. score= 45
m1: Change VB to NN if preceding tag is DT. score= 44
m1: Change VBD to VBN if preceding tag is VBD. score= 44
m1: Change POS to VBZ if preceding tag is PRP. score= 40
m1: Change VBD to VBN if preceding tag is VBZ. score= 38
m1: Change VBN to VBD if preceding tag is NNP. score= 36
m1: Change VBN to VBD if preceding tag is PRP. score= 33
m1: Change VB to VBP if preceding tag is NNS. score= 30
m1: Change VB to VBP if preceding tag is PRP. score= 26
m1: Change VBD to VBN if preceding tag is VB. score= 25
m1: Change RP to RB if preceding tag is ,. score= 25
m1: Change POS to VBZ if preceding tag is -NONE-. score= 17
m1: Change VB to NN if preceding tag is JJ. score= 15
m1: Change POS to VBZ if preceding tag is EX. score= 13
m1: Change NN to VBP if preceding tag is PRP. score= 13
m1: Change VB to NN if preceding tag is IN. score= 10
m1: Change VB to VBN if preceding tag is VBZ. score= 8
m1: Change VBN to VB if preceding tag is MD. score= 8
m1: Change VB to NN if preceding tag is PRP$. score= 6
m1: Change VBD to VBN if preceding tag is VBN. score= 6
m1: Change NNS to VBZ if preceding tag is PRP. score= 5
m1: Change JJ to VB if preceding tag is MD. score= 5
m1: Change IN to VB if preceding tag is MD. score= 4
m1: Change VB to NN if preceding tag is POS. score= 4
m1: Change VB to NN if preceding tag is NN. score= 4
m1: Change POS to VBZ if preceding tag is DT. score= 4
m1: Change POS to '' if preceding tag is .. score= 4
m1: Change VB to VBN if preceding tag is VBP. score= 3
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
m1: Change RP to IN if preceding tag is CC. score= 3
m1: Change POS to VBZ if preceding tag is IN. score= 3
m1: Change VB to VBP if preceding tag is ,. score= 2
m1: Change JJR to RBR if preceding tag is VBP. score= 3
m1: Change VB to VBN if preceding tag is VB. score= 2
m1: Change EX to RB if preceding tag is NNP. score= 2
m1: Change NNPS to NNS if preceding tag is :. score= 2
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
m1: Change VBD to VBN if preceding tag is VBG. score= 2
m1: Change VBP to VB if preceding tag is VBZ. score= 2
m1: Change VBP to VB if preceding tag is VBD. score= 2
m1: Change VBP to NN if preceding tag is POS. score= 2
m1: Change RP to IN if preceding tag is RB. score= 2
m1: Change RP to IN if preceding tag is JJR. score= 2
m1: Change RP to RB if preceding tag is -RRB-. score= 2
m1: Change POS to '' if preceding tag is ,. score= 2
m1: Change VBN to VB if preceding tag is TO. score= 2
m1: Change VBN to VBD if preceding tag is NNPS. score= 2
m1: Change VB to VBP if preceding tag is NNPS. score= 1
m1: Change VB to VBP if preceding tag is VBN. score= 1
m1: Change VB to NN if preceding tag is RP. score= 1
m1: Change EX to RB if preceding tag is NNS. score= 1
m1: Change EX to RB if preceding tag is VBP. score= 1
m1: Change EX to RB if preceding tag is RP. score= 1
m1: Change EX to RB if preceding tag is RB. score= 1
m1: Change VBZ to NNS if preceding tag is VBG. score= 1
m1: Change VBD to VBN if preceding tag is -LRB-. score= 1
m1: Change VBD to VBN if preceding tag is VBP. score= 1
m1: Change TO to IN if preceding tag is :. score= 1
m1: Change VBP to NN if preceding tag is PRP$. score= 1
m1: Change RP to IN if preceding tag is JJ. score= 1
m1: Change RP to RB if preceding tag is TO. score= 1
m1: Change POS to VBZ if preceding tag is WRB. score= 1
m1: Change POS to VBZ if preceding tag is WP. score= 1
m1: Change JJ to RB if preceding tag is NNPS. score= 1
m1: Change RB to NN if preceding tag is PRP$. score= 1
m1: Change VBN to VBD if preceding tag is :. score= 1
m1: Change JJR to RBR if preceding tag is MD. score= 1
m1: Change JJR to RB if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is WRB. score= 1
m1: Change JJS to RBS if preceding tag is NNS. score= 1
m1: Change JJS to RBS if preceding tag is VBG. score= 1
m1: Change VBD to JJ if preceding tag is RBS. score= 1
m1: Change JJS to RBS if preceding tag is WP. score= 1
Final count incorrectly tagged words: 2366 of 80987
Initial error rate: 0.0292145653006038
====September 10, 2018 03:50:57 PM====
+++ TEST  5 +++
====September 10, 2018 03:50:57 PM====
====September 10, 2018 03:51:03 PM====
Description:    NLTK Penn-Treebank initially tagged with most frequent tag
Initial Tagging: 79448 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
True Tagging:    79448 [('Pierre', 'NNP'), ('Vinken', 'NNP'), (',', ','), ('61', 'CD'), ('years', 'NNS'), ('old', 'JJ'), (',', ','), ('will', 'MD'), ('join', 'VB'), ('the', 'DT')]
Tag Set: 46 {'LS', 'IN', 'WRB', 'FW', 'VB', 'EX', ',', 'NNS', 'RBS', '-LRB-', 'CD', 'NNPS', 'VBZ', '-NONE-', 'VBD', 'VBG', 'TO', 'VBP', 'RP', 'WP$', 'UH', 'POS', 'PRP', '``', 'RBR', 'PRP$', '.', 'NN', "''", 'MD', 'WP', 'JJ', '$', '-RRB-', 'SYM', 'NNP', ':', 'RB', 'VBN', 'JJR', 'WDT', 'CC', 'PDT', 'JJS', 'DT', '#'}
---
Initial count incorrectly tagged words: 3186 of 79448
Initial error rate: 0.040101701742019935
====September 10, 2018 03:51:03 PM====
good z: [(('IN', ''), 1), (('PRP$', ''), 1), (('.', ''), 3), (('JJ', ''), 1), (('NNP', ''), 11), (('DT', ''), 1)]
bad z: [(('IN', ''), 858), (('WRB', ''), 8), (('VB', ''), 137), ((',', ''), 194), (('NNS', ''), 112), (('-LRB-', ''), 2), (('CD', ''), 534), (('NNPS', ''), 7), (('VBZ', ''), 58), (('-NONE-', ''), 97), (('VBD', ''), 72), (('VBG', ''), 155), (('TO', ''), 40), (('VBP', ''), 17), (('RP', ''), 11), (('WP$', ''), 7), (('POS', ''), 259), (('PRP', ''), 2), (('``', ''), 54), (('PRP$', ''), 258), (('.', ''), 96), (('NN', ''), 1304), (("''", ''), 27), (('WP', ''), 4), (('JJ', ''), 1954), (('-RRB-', ''), 4), (('NNP', ''), 418), ((':', ''), 11), (('RB', ''), 43), (('VBN', ''), 118), (('JJR', ''), 58), (('CC', ''), 207), (('JJS', ''), 39), (('DT', ''), 2886)]
====September 10, 2018 03:51:03 PM====
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38

m1: Change VB to NN if preceding tag is DT. score= 50
.............
m1: Change VBP to VB if preceding tag is MD. score= 64
..........
m1: Change NN to VB if preceding tag is TO. score= 97
..................
--> m1: Change NN to VB if preceding tag is TO. score= 97
-=-=-> changed  178  tags
m1: Change NN to VB if preceding tag is TO. score= 97
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38

m1: Change VB to NN if preceding tag is DT. score= 50
.............
m1: Change VBP to VB if preceding tag is MD. score= 64
............................
--> m1: Change VBP to VB if preceding tag is MD. score= 64
-=-=-> changed  64  tags
m1: Change VBP to VB if preceding tag is MD. score= 64
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38

m1: Change VB to NN if preceding tag is DT. score= 50
.......................
m1: Change NN to VB if preceding tag is MD. score= 61
..................
--> m1: Change NN to VB if preceding tag is MD. score= 61
-=-=-> changed  61  tags
m1: Change NN to VB if preceding tag is MD. score= 61
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38

m1: Change VB to NN if preceding tag is DT. score= 50
.........................................
--> m1: Change VB to NN if preceding tag is DT. score= 50
-=-=-> changed  53  tags
m1: Change VB to NN if preceding tag is DT. score= 50
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 45
...
m1: Change VBP to VB if preceding tag is TO. score= 49
............................
--> m1: Change VBP to VB if preceding tag is TO. score= 49
-=-=-> changed  49  tags
m1: Change VBP to VB if preceding tag is TO. score= 49
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38
..........
m1: Change VBD to VBN if preceding tag is VBZ. score= 45
...............................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 45
-=-=-> changed  55  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 45
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38
..........
m1: Change VBD to VBN if preceding tag is VBD. score= 45
...............................
--> m1: Change VBD to VBN if preceding tag is VBD. score= 45
-=-=-> changed  45  tags
m1: Change VBD to VBN if preceding tag is VBD. score= 45
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38
..........
m1: Change VBD to VBN if preceding tag is VBP. score= 41
...............................
--> m1: Change VBD to VBN if preceding tag is VBP. score= 41
-=-=-> changed  43  tags
m1: Change VBD to VBN if preceding tag is VBP. score= 41
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is NNS. score= 38
.........................................
--> m1: Change VB to VBP if preceding tag is NNS. score= 38
-=-=-> changed  70  tags
m1: Change VB to VBP if preceding tag is NNS. score= 38
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
..........
m1: Change VBD to VBN if preceding tag is VB. score= 28
.......
m1: Change POS to VBZ if preceding tag is PRP. score= 35
.................
m1: Change VBN to VBD if preceding tag is NNP. score= 36
.......
--> m1: Change VBN to VBD if preceding tag is NNP. score= 36
-=-=-> changed  54  tags
m1: Change VBN to VBD if preceding tag is NNP. score= 36
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
..........
m1: Change VBD to VBN if preceding tag is VB. score= 28
.......
m1: Change POS to VBZ if preceding tag is PRP. score= 35
........................
--> m1: Change POS to VBZ if preceding tag is PRP. score= 35
-=-=-> changed  35  tags
m1: Change POS to VBZ if preceding tag is PRP. score= 35
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
..........
m1: Change VBD to VBN if preceding tag is VB. score= 28
...............................
--> m1: Change VBD to VBN if preceding tag is VB. score= 28
-=-=-> changed  38  tags
m1: Change VBD to VBN if preceding tag is VB. score= 28
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
..................................
m1: Change VBN to VBD if preceding tag is PRP. score= 27
.......
--> m1: Change VBN to VBD if preceding tag is PRP. score= 27
-=-=-> changed  37  tags
m1: Change VBN to VBD if preceding tag is PRP. score= 27
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to VBP if preceding tag is PRP. score= 26
.........................................
--> m1: Change VB to VBP if preceding tag is PRP. score= 26
-=-=-> changed  42  tags
m1: Change VB to VBP if preceding tag is PRP. score= 26
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is JJ. score= 17
..............
m1: Change RP to RB if preceding tag is ,. score= 25
...........................
--> m1: Change RP to RB if preceding tag is ,. score= 25
-=-=-> changed  30  tags
m1: Change RP to RB if preceding tag is ,. score= 25
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is JJ. score= 17
.........................................
--> m1: Change VB to NN if preceding tag is JJ. score= 17
-=-=-> changed  24  tags
m1: Change VB to NN if preceding tag is JJ. score= 17
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is IN. score= 8
.................
m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
........................
--> m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
-=-=-> changed  17  tags
m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is IN. score= 8
.................
m1: Change POS to VBZ if preceding tag is EX. score= 14
........................
--> m1: Change POS to VBZ if preceding tag is EX. score= 14
-=-=-> changed  14  tags
m1: Change POS to VBZ if preceding tag is EX. score= 14
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is IN. score= 8
.......................
m1: Change NN to VBP if preceding tag is PRP. score= 14
..................
--> m1: Change NN to VBP if preceding tag is PRP. score= 14
-=-=-> changed  25  tags
m1: Change NN to VBP if preceding tag is PRP. score= 14
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is IN. score= 8
.........................................
--> m1: Change VB to NN if preceding tag is IN. score= 8
-=-=-> changed  11  tags
m1: Change VB to NN if preceding tag is IN. score= 8
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is PRP$. score= 5

m1: Change VB to VBN if preceding tag is VBZ. score= 7
.........................................
--> m1: Change VB to VBN if preceding tag is VBZ. score= 7
-=-=-> changed  11  tags
m1: Change VB to VBN if preceding tag is VBZ. score= 7
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is PRP$. score= 5
..........
m1: Change VBD to VBN if preceding tag is VBN. score= 6
...............................
--> m1: Change VBD to VBN if preceding tag is VBN. score= 6
-=-=-> changed  8  tags
m1: Change VBD to VBN if preceding tag is VBN. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is PRP$. score= 5
..................................
m1: Change VBN to VB if preceding tag is MD. score= 6
.......
--> m1: Change VBN to VB if preceding tag is MD. score= 6
-=-=-> changed  6  tags
m1: Change VBN to VB if preceding tag is MD. score= 6
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
...
m1: Change VB to NN if preceding tag is PRP$. score= 5
.........................................
--> m1: Change VB to NN if preceding tag is PRP$. score= 5
-=-=-> changed  7  tags
m1: Change VB to NN if preceding tag is PRP$. score= 5
----------
..
m1: Change IN to VB if preceding tag is MD. score= 4
............................................
--> m1: Change IN to VB if preceding tag is MD. score= 4
-=-=-> changed  6  tags
m1: Change IN to VB if preceding tag is MD. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2

m1: Change VB to NN if preceding tag is NN. score= 4
.........................................
--> m1: Change VB to NN if preceding tag is NN. score= 4
-=-=-> changed  38  tags
m1: Change VB to NN if preceding tag is NN. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2

m1: Change VB to NN if preceding tag is POS. score= 3
.................
m1: Change POS to '' if preceding tag is .. score= 4
........................
--> m1: Change POS to '' if preceding tag is .. score= 4
-=-=-> changed  4  tags
m1: Change POS to '' if preceding tag is .. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2

m1: Change VB to NN if preceding tag is POS. score= 3
...........................
m1: Change JJ to VB if preceding tag is MD. score= 4
..............
--> m1: Change JJ to VB if preceding tag is MD. score= 4
-=-=-> changed  6  tags
m1: Change JJ to VB if preceding tag is MD. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2

m1: Change VB to NN if preceding tag is POS. score= 3
..................................
m1: Change VBN to VB if preceding tag is TO. score= 4
.......
--> m1: Change VBN to VB if preceding tag is TO. score= 4
-=-=-> changed  8  tags
m1: Change VBN to VB if preceding tag is TO. score= 4
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2

m1: Change VB to NN if preceding tag is POS. score= 3
.........................................
--> m1: Change VB to NN if preceding tag is POS. score= 3
-=-=-> changed  3  tags
m1: Change VB to NN if preceding tag is POS. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2

m1: Change VB to VBN if preceding tag is VB. score= 3
.........................................
--> m1: Change VB to VBN if preceding tag is VB. score= 3
-=-=-> changed  7  tags
m1: Change VB to VBN if preceding tag is VB. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2
...
m1: Change NNS to VBZ if preceding tag is PRP. score= 3
......................................
--> m1: Change NNS to VBZ if preceding tag is PRP. score= 3
-=-=-> changed  7  tags
m1: Change NNS to VBZ if preceding tag is PRP. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 2
.......
m1: Change NNPS to NNS if preceding tag is :. score= 3
..................................
--> m1: Change NNPS to NNS if preceding tag is :. score= 3
-=-=-> changed  3  tags
m1: Change NNPS to NNS if preceding tag is :. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1

m1: Change VB to VBN if preceding tag is VBP. score= 2
........
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
.................................
--> m1: Change VBZ to NNS if preceding tag is VBG. score= 3
-=-=-> changed  5  tags
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1

m1: Change VB to VBN if preceding tag is VBP. score= 2
........
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
.................................
--> m1: Change VBZ to NNS if preceding tag is VBN. score= 3
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1

m1: Change VB to VBN if preceding tag is VBP. score= 2
..............
m1: Change RP to IN if preceding tag is RB. score= 3
...........................
--> m1: Change RP to IN if preceding tag is RB. score= 3
-=-=-> changed  4  tags
m1: Change RP to IN if preceding tag is RB. score= 3
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1

m1: Change VB to VBN if preceding tag is VBP. score= 2
.........................................
--> m1: Change VB to VBN if preceding tag is VBP. score= 2
-=-=-> changed  4  tags
m1: Change VB to VBN if preceding tag is VBP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
.
m1: Change EX to RB if preceding tag is NNS. score= 2
........................................
--> m1: Change EX to RB if preceding tag is NNS. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is NNS. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
.
m1: Change EX to RB if preceding tag is RP. score= 2
........................................
--> m1: Change EX to RB if preceding tag is RP. score= 2
-=-=-> changed  2  tags
m1: Change EX to RB if preceding tag is RP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
........
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
.................................
--> m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
-=-=-> changed  4  tags
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
............
m1: Change TO to IN if preceding tag is :. score= 2
.............................
--> m1: Change TO to IN if preceding tag is :. score= 2
-=-=-> changed  2  tags
m1: Change TO to IN if preceding tag is :. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
.............
m1: Change VBP to VB if preceding tag is VBD. score= 2
............................
--> m1: Change VBP to VB if preceding tag is VBD. score= 2
-=-=-> changed  2  tags
m1: Change VBP to VB if preceding tag is VBD. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
.............
m1: Change VBP to NN if preceding tag is POS. score= 2
............................
--> m1: Change VBP to NN if preceding tag is POS. score= 2
-=-=-> changed  2  tags
m1: Change VBP to NN if preceding tag is POS. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
..............
m1: Change RP to IN if preceding tag is PRP. score= 2
...........................
--> m1: Change RP to IN if preceding tag is PRP. score= 2
-=-=-> changed  8  tags
m1: Change RP to IN if preceding tag is PRP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
..............
m1: Change RP to IN if preceding tag is NNP. score= 2
...........................
--> m1: Change RP to IN if preceding tag is NNP. score= 2
-=-=-> changed  2  tags
m1: Change RP to IN if preceding tag is NNP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
.................
m1: Change POS to VBZ if preceding tag is IN. score= 2
........................
--> m1: Change POS to VBZ if preceding tag is IN. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is IN. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
.................
m1: Change POS to VBZ if preceding tag is WP. score= 2
........................
--> m1: Change POS to VBZ if preceding tag is WP. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is WP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
.................
m1: Change POS to VBZ if preceding tag is DT. score= 2
........................
--> m1: Change POS to VBZ if preceding tag is DT. score= 2
-=-=-> changed  2  tags
m1: Change POS to VBZ if preceding tag is DT. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
...................................
m1: Change JJR to RBR if preceding tag is VBP. score= 2
......
--> m1: Change JJR to RBR if preceding tag is VBP. score= 2
-=-=-> changed  12  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 2
----------
.....
m1: Change VB to VBP if preceding tag is ,. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is ,. score= 1
-=-=-> changed  17  tags
m1: Change VB to VBP if preceding tag is ,. score= 1
----------
.....
m1: Change VB to VBP if preceding tag is NNS. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is NNS. score= 1
----------
.....
m1: Change VB to VBP if preceding tag is CD. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is CD. score= 1
-=-=-> changed  2  tags
m1: Change VB to VBP if preceding tag is CD. score= 1
----------
.....
m1: Change VB to VBP if preceding tag is NNPS. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is NNPS. score= 1
----------
.....
m1: Change VB to VBP if preceding tag is VBN. score= 1
.........................................
--> m1: Change VB to VBP if preceding tag is VBN. score= 1
-=-=-> changed  1  tags
m1: Change VB to VBP if preceding tag is VBN. score= 1
----------
.....
m1: Change VB to NN if preceding tag is RP. score= 1
.........................................
--> m1: Change VB to NN if preceding tag is RP. score= 1
-=-=-> changed  1  tags
m1: Change VB to NN if preceding tag is RP. score= 1
----------
......
m1: Change EX to RB if preceding tag is VBP. score= 1
........................................
--> m1: Change EX to RB if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is VBP. score= 1
----------
......
m1: Change EX to RB if preceding tag is NNP. score= 1
........................................
--> m1: Change EX to RB if preceding tag is NNP. score= 1
-=-=-> changed  1  tags
m1: Change EX to RB if preceding tag is NNP. score= 1
----------
......
m1: Change EX to RB if preceding tag is RB. score= 1
........................................
--> m1: Change EX to RB if preceding tag is RB. score= 1
-=-=-> changed  5  tags
m1: Change EX to RB if preceding tag is RB. score= 1
----------
.............
m1: Change VBZ to NNS if preceding tag is VBP. score= 1
.................................
--> m1: Change VBZ to NNS if preceding tag is VBP. score= 1
-=-=-> changed  3  tags
m1: Change VBZ to NNS if preceding tag is VBP. score= 1
----------
...............
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
...............................
--> m1: Change VBD to VBN if preceding tag is VBZ. score= 1
-=-=-> changed  1  tags
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
----------
...............
m1: Change VBD to VBN if preceding tag is VBG. score= 1
...............................
--> m1: Change VBD to VBN if preceding tag is VBG. score= 1
-=-=-> changed  5  tags
m1: Change VBD to VBN if preceding tag is VBG. score= 1
----------
..................
m1: Change VBP to NN if preceding tag is IN. score= 1
............................
--> m1: Change VBP to NN if preceding tag is IN. score= 1
-=-=-> changed  6  tags
m1: Change VBP to NN if preceding tag is IN. score= 1
----------
..................
m1: Change VBP to NN if preceding tag is PRP$. score= 1
............................
--> m1: Change VBP to NN if preceding tag is PRP$. score= 1
-=-=-> changed  1  tags
m1: Change VBP to NN if preceding tag is PRP$. score= 1
----------
...................
m1: Change RP to IN if preceding tag is IN. score= 1
...........................
--> m1: Change RP to IN if preceding tag is IN. score= 1
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is IN. score= 1
----------
...................
m1: Change RP to IN if preceding tag is NNS. score= 1
...........................
--> m1: Change RP to IN if preceding tag is NNS. score= 1
-=-=-> changed  7  tags
m1: Change RP to IN if preceding tag is NNS. score= 1
----------
...................
m1: Change RP to IN if preceding tag is JJ. score= 1
...........................
--> m1: Change RP to IN if preceding tag is JJ. score= 1
-=-=-> changed  3  tags
m1: Change RP to IN if preceding tag is JJ. score= 1
----------
...................
m1: Change RP to IN if preceding tag is CC. score= 1
...........................
--> m1: Change RP to IN if preceding tag is CC. score= 1
-=-=-> changed  1  tags
m1: Change RP to IN if preceding tag is CC. score= 1
----------
...................
m1: Change RP to RB if preceding tag is TO. score= 1
...........................
--> m1: Change RP to RB if preceding tag is TO. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is TO. score= 1
----------
...................
m1: Change RP to RB if preceding tag is -RRB-. score= 1
...........................
--> m1: Change RP to RB if preceding tag is -RRB-. score= 1
-=-=-> changed  1  tags
m1: Change RP to RB if preceding tag is -RRB-. score= 1
----------
......................
m1: Change POS to '' if preceding tag is ,. score= 1
........................
--> m1: Change POS to '' if preceding tag is ,. score= 1
-=-=-> changed  1  tags
m1: Change POS to '' if preceding tag is ,. score= 1
----------
................................
m1: Change JJ to RB if preceding tag is NNPS. score= 1
..............
--> m1: Change JJ to RB if preceding tag is NNPS. score= 1
-=-=-> changed  1  tags
m1: Change JJ to RB if preceding tag is NNPS. score= 1
----------
......................................
m1: Change RB to NN if preceding tag is PRP$. score= 1
........
--> m1: Change RB to NN if preceding tag is PRP$. score= 1
-=-=-> changed  4  tags
m1: Change RB to NN if preceding tag is PRP$. score= 1
----------
.......................................
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
.......
--> m1: Change VBN to VBD if preceding tag is NNPS. score= 1
-=-=-> changed  3  tags
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is VBP. score= 1
......
--> m1: Change JJR to RBR if preceding tag is VBP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is VBP. score= 1
----------
........................................
m1: Change JJR to RBR if preceding tag is MD. score= 1
......
--> m1: Change JJR to RBR if preceding tag is MD. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RBR if preceding tag is MD. score= 1
----------
........................................
m1: Change JJR to RB if preceding tag is WP. score= 1
......
--> m1: Change JJR to RB if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJR to RB if preceding tag is WP. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is NNS. score= 1
..
--> m1: Change JJS to RBS if preceding tag is NNS. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is NNS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBG. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBG. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBG. score= 1
----------
...............
m1: Change VBD to JJ if preceding tag is RBS. score= 1
...............................
--> m1: Change VBD to JJ if preceding tag is RBS. score= 1
-=-=-> changed  1  tags
m1: Change VBD to JJ if preceding tag is RBS. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is WP. score= 1
..
--> m1: Change JJS to RBS if preceding tag is WP. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is WP. score= 1
----------
............................................
m1: Change JJS to RBS if preceding tag is VBN. score= 1
..
--> m1: Change JJS to RBS if preceding tag is VBN. score= 1
-=-=-> changed  1  tags
m1: Change JJS to RBS if preceding tag is VBN. score= 1
----------
..............................................
--> NIL: Don't change the tag. score= 0
==> NIL: Don't change the tag. score= 0
---- TRANSFORM SEQUENCE ----
Rules found: 81
m1: Change NN to VB if preceding tag is TO. score= 97
m1: Change VBP to VB if preceding tag is MD. score= 64
m1: Change NN to VB if preceding tag is MD. score= 61
m1: Change VB to NN if preceding tag is DT. score= 50
m1: Change VBP to VB if preceding tag is TO. score= 49
m1: Change VBD to VBN if preceding tag is VBZ. score= 45
m1: Change VBD to VBN if preceding tag is VBD. score= 45
m1: Change VBD to VBN if preceding tag is VBP. score= 41
m1: Change VB to VBP if preceding tag is NNS. score= 38
m1: Change VBN to VBD if preceding tag is NNP. score= 36
m1: Change POS to VBZ if preceding tag is PRP. score= 35
m1: Change VBD to VBN if preceding tag is VB. score= 28
m1: Change VBN to VBD if preceding tag is PRP. score= 27
m1: Change VB to VBP if preceding tag is PRP. score= 26
m1: Change RP to RB if preceding tag is ,. score= 25
m1: Change VB to NN if preceding tag is JJ. score= 17
m1: Change POS to VBZ if preceding tag is -NONE-. score= 15
m1: Change POS to VBZ if preceding tag is EX. score= 14
m1: Change NN to VBP if preceding tag is PRP. score= 14
m1: Change VB to NN if preceding tag is IN. score= 8
m1: Change VB to VBN if preceding tag is VBZ. score= 7
m1: Change VBD to VBN if preceding tag is VBN. score= 6
m1: Change VBN to VB if preceding tag is MD. score= 6
m1: Change VB to NN if preceding tag is PRP$. score= 5
m1: Change IN to VB if preceding tag is MD. score= 4
m1: Change VB to NN if preceding tag is NN. score= 4
m1: Change POS to '' if preceding tag is .. score= 4
m1: Change JJ to VB if preceding tag is MD. score= 4
m1: Change VBN to VB if preceding tag is TO. score= 4
m1: Change VB to NN if preceding tag is POS. score= 3
m1: Change VB to VBN if preceding tag is VB. score= 3
m1: Change NNS to VBZ if preceding tag is PRP. score= 3
m1: Change NNPS to NNS if preceding tag is :. score= 3
m1: Change VBZ to NNS if preceding tag is VBG. score= 3
m1: Change VBZ to NNS if preceding tag is VBN. score= 3
m1: Change RP to IN if preceding tag is RB. score= 3
m1: Change VB to VBN if preceding tag is VBP. score= 2
m1: Change EX to RB if preceding tag is NNS. score= 2
m1: Change EX to RB if preceding tag is RP. score= 2
m1: Change VBZ to NNS if preceding tag is PRP$. score= 2
m1: Change TO to IN if preceding tag is :. score= 2
m1: Change VBP to VB if preceding tag is VBD. score= 2
m1: Change VBP to NN if preceding tag is POS. score= 2
m1: Change RP to IN if preceding tag is PRP. score= 2
m1: Change RP to IN if preceding tag is NNP. score= 2
m1: Change POS to VBZ if preceding tag is IN. score= 2
m1: Change POS to VBZ if preceding tag is WP. score= 2
m1: Change POS to VBZ if preceding tag is DT. score= 2
m1: Change JJR to RBR if preceding tag is VBP. score= 2
m1: Change VB to VBP if preceding tag is ,. score= 1
m1: Change VB to VBP if preceding tag is NNS. score= 1
m1: Change VB to VBP if preceding tag is CD. score= 1
m1: Change VB to VBP if preceding tag is NNPS. score= 1
m1: Change VB to VBP if preceding tag is VBN. score= 1
m1: Change VB to NN if preceding tag is RP. score= 1
m1: Change EX to RB if preceding tag is VBP. score= 1
m1: Change EX to RB if preceding tag is NNP. score= 1
m1: Change EX to RB if preceding tag is RB. score= 1
m1: Change VBZ to NNS if preceding tag is VBP. score= 1
m1: Change VBD to VBN if preceding tag is VBZ. score= 1
m1: Change VBD to VBN if preceding tag is VBG. score= 1
m1: Change VBP to NN if preceding tag is IN. score= 1
m1: Change VBP to NN if preceding tag is PRP$. score= 1
m1: Change RP to IN if preceding tag is IN. score= 1
m1: Change RP to IN if preceding tag is NNS. score= 1
m1: Change RP to IN if preceding tag is JJ. score= 1
m1: Change RP to IN if preceding tag is CC. score= 1
m1: Change RP to RB if preceding tag is TO. score= 1
m1: Change RP to RB if preceding tag is -RRB-. score= 1
m1: Change POS to '' if preceding tag is ,. score= 1
m1: Change JJ to RB if preceding tag is NNPS. score= 1
m1: Change RB to NN if preceding tag is PRP$. score= 1
m1: Change VBN to VBD if preceding tag is NNPS. score= 1
m1: Change JJR to RBR if preceding tag is VBP. score= 1
m1: Change JJR to RBR if preceding tag is MD. score= 1
m1: Change JJR to RB if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is NNS. score= 1
m1: Change JJS to RBS if preceding tag is VBG. score= 1
m1: Change VBD to JJ if preceding tag is RBS. score= 1
m1: Change JJS to RBS if preceding tag is WP. score= 1
m1: Change JJS to RBS if preceding tag is VBN. score= 1
Final count incorrectly tagged words: 2328 of 79448
Initial error rate: 0.029302185077031518
====September 10, 2018 06:12:37 PM====

>>> 
